/* Copyright 2012 - 2019 by PostFinance Ltd - All rights reserved */
function WebTrends() {
    var that = this;
    this.timezone = 1;
    this.enabled = true;
    this.i18n = false;
    this.fpc = 'WT_FPC';
    this.paidsearchparams = 'gclid';
    this.DCS = {
    };
    this.WT = {
    };
    this.DCSext = {
    };
    this.images = [
    ];
    this.index = 0;
    this.exre = function () {
        return window.RegExp ? new RegExp('dcs(uri)|(ref)|(aut)|(met)|(sta)|(sip)|(pro)|(byt)|(dat)|(p3p)|(cfg)|(redirect)|(cip)', 'i')  : ''
    }();
    this.re = function () {
        return window.RegExp ? that.i18n ? {
                '%25': /\%/g
            }
            : {
                '%09': /  /g,
                '%20': / /g,
                '%23': /\#/g,
                '%26': /\&/g,
                '%2B': /\+/g,
                '%3F': /\?/g,
                '%5C': /\\/g,
                '%22': /\"/g,
                '%7F': /\x7F/g,
                '%A0': /\xA0/g
            }
            : ''
    }()
}
function dcsMultiTrack() {
    if ('undefined' != typeof _tag) return _tag.dcsMultiTrack()
}
function callback(fieldname) {
    re = /[\/|\[|\]]/g;
    var dcsFieldname = new String(fieldname);
    dcsFieldname = dcsFieldname.replace(re, '_');
    dcsMultiTrack('DCS.dcsuri', '/' + dcsFieldname + '.htm', 'WT.si_n', webtrends.meta_si_n, 'WT.si_p', dcsFieldname)
}
function setupWebAppTracking() {
    if ('undefined' != typeof webtrends) if (webtrends.inputfield_tracking_enabled) webtrends.addCallback(callback)
}
function submitenter(myform, e) {
    var keycode,
        ENTER = 13;
    if (window.event) keycode = window.event.keyCode;
    else if (e) keycode = e.which;
    else return true;
    if (keycode == ENTER) {
        jQuery(myform).submit();
        return false
    }
    return true
}
function noenter() {
    var ENTER = 13;
    return !(window.event && window.event.keyCode == ENTER)
}
function findLabelFor(elOrId) {
    var elem = 'string' == typeof elOrId ? document.getElementById(elOrId)  : elOrId;
    if (void 0 === elem || null === elem) return null;
    for (var labels = document.getElementsByTagName('LABEL'), l = 0, len = labels.length; l < len; l++) {
        var label = labels[l];
        if (elem.id == label.htmlFor) return label
    }
    return null
}
function enableFormElement(elOrId) {
    var elem = 'string' == typeof elOrId ? document.getElementById(elOrId)  : elOrId;
    if (void 0 !== elem && null !== elem) {
        var label = findLabelFor(elem);
        if ('string' == typeof elOrId && elOrId.indexOf('calendar') > - 1) {
            var textInput = document.getElementById('text-input-' + elOrId),
                textInputField = document.getElementById(elOrId),
                btn = document.getElementById('fd-but-' + elOrId);
            textInputField.disabled = false;
            btn.disabled = false;
            btn.setAttribute('aria-disabled', 'false');
            textInput.className = 'text_input'
        } else {
            elem.disabled = false;
            var css = elem.className;
            css = css.replace(/disabled/g, '').replace(/^\s*/, '').replace(/\s*$/, '');
            elem.className = css;
            if (void 0 !== label && null !== label) {
                css = label.className;
                css = css.replace(/disabled/g, '').replace(/^\s*/, '').replace(/\s*$/, '');
                label.className = css
            }
        }
    }
}
function disableFormElement(elOrId) {
    var elem = 'string' == typeof elOrId ? document.getElementById(elOrId)  : elOrId;
    if (null !== elem) {
        var label = findLabelFor(elem);
        if ('string' == typeof elOrId && elOrId.indexOf('calendar') > - 1) {
            var textInput = document.getElementById('text-input-' + elOrId),
                textInputField = document.getElementById(elOrId),
                btn = document.getElementById('fd-but-' + elOrId);
            textInputField.disabled = true;
            btn.disabled = true;
            btn.setAttribute('aria-disabled', 'true');
            textInput.className += ' text_input-disabled'
        } else {
            elem.disabled = true;
            elem.className += ' disabled';
            if (null !== label) label.className += ' disabled'
        }
    }
}
function getPageLanugage() {
    return b$.portal.pageLanguage
}
function drucken() {
    if (window.print) window.print();
    else alert('Your browser does not support this function. You can either update your browser or press \'Ctrl\' + \'P\' to print this page.')
}
function trackWebtrends() {
    if (angular.isDefined(window._tag) && 'demo' != b$.portal.securityProfile) window._tag.dcsAdTrack.apply(window._tag, arguments)
}
function setWTCookie(name, value, expires, path, domain, secure) {
    var today = new Date;
    today.setTime(today.getTime());
    if (expires) expires = 1000 * expires * 60 * 60 * 24;
    var expireDate = new Date(today.getTime() + expires);
    document.cookie = name + '=' + window.encodeURIComponent(value) + (expires ? ';expires=' + expireDate.toGMTString()  : '') + (path ? ';path=' + path : '') + (domain ? ';domain=' + domain : '') + (secure ? ';secure' : '')
}
function deactivate_button(buttonId) {
    var button = document.getElementById(buttonId);
    if (button) button.disabled = true
}
function base64_encode(data) {
    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
        o1,
        o2,
        o3,
        h1,
        h2,
        h3,
        h4,
        bits,
        i = 0,
        ac = 0,
        enc,
        tmp_arr = [
        ];
    if (!data) return data;
    do {
        o1 = data.charCodeAt(i++);
        o2 = data.charCodeAt(i++);
        o3 = data.charCodeAt(i++);
        bits = o1 << 16 | o2 << 8 | o3;
        h1 = bits >> 18 & 63;
        h2 = bits >> 12 & 63;
        h3 = bits >> 6 & 63;
        h4 = 63 & bits;
        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4)
    } while (i < data.length);
    enc = tmp_arr.join('');
    var r = data.length % 3;
    return (r ? enc.slice(0, r - 3)  : enc) + '==='.slice(r || 3)
}
function makeHTMLEntities(str) {
    str = str.replace('ä', '---x00E4--');
    str = str.replace('Ä', '---x00C4--');
    str = str.replace('ö', '---x00F6--');
    str = str.replace('Ö', '---x00D6--');
    str = str.replace('ü', '---x00FC--');
    str = str.replace('Ü', '---x00DC--');
    str = window.encodeURIComponent(str).replace(/%(..)/g, '&#x$1;');
    return str.replace('---', '&#').replace('--', ';')
}
function exportPDF() {
    var form = document.getElementById('pdfform');
    if (!form) {
        jQuery('body').append('<form name="pdfform" id="pdfform" action="' + b$.portal.efPrefix + '/appl/download/converter/pdf/e-finance" method="post" target="_blank"><input type="hidden" id="pdflang" name="language" /><input type="hidden" id="pdfcontent" name="content" /><input type="hidden" id="pdftitle" name="title" /><input type="hidden" id="pdfprintmsg" name="printmessage" /></form>');
        form = document.getElementById('pdfform')
    }
    var content = '<div id=\'content\'>' + jQuery('div.detail_page').html() + '</div>';
    if (void 0 !== prepareContentForPDF && 'function' == typeof prepareContentForPDF) content = prepareContentForPDF(content);
    var html = base64_encode(content);
    jQuery('#pdfcontent').val(html);
    jQuery('#pdflang').val(b$.portal.pageLanguage);
    jQuery('#pdftitle').val(makeHTMLEntities(jQuery('head title').html()));
    jQuery('#pdfprintmsg').val(jQuery('div.site_header').data('print_title'));
    form.submit()
}
function isCapslock(event) {
    var code = event.keyCode || event.which,
        shift = event.shiftKey || 16 == code,
        isNoShiftUpper = code >= 65 && code <= 90 && !shift,
        isShiftLower = code >= 97 && code <= 122 && shift;
    return isNoShiftUpper || isShiftLower
}
function toggleLoginMethod(id, text) {
    var selText = $('<p/>').addClass('hidden').text(text),
        t = $('div.widget_tabs-radios');
    t.find('p.hidden').remove();
    var sel = t.find('#u1_' + id);
    sel.parent().append(selText);
    sel.attr('checked', 'true');
    var val = sel.attr('data-value');
    $('form[name="login"] input[name="p_log_ver"]').val(val)
}
function amsBridge(actions) {
    if (window.isMobileApp) {
        var isNewAppVersion = document.cookie.indexOf('apprelease=4.8.') >= 0 || document.cookie.indexOf('apprelease=4.9.') >= 0;
        if (window.isAndroid && !isNewAppVersion);
        else if (window.isAndroid && isNewAppVersion) mapps.onBridgeCall(JSON.stringify(actions));
        else if (window.isIOS && isNewAppVersion) window.webkit.messageHandlers.mapps.postMessage(JSON.stringify(actions));
        else document.location.href = 'ams://amsbridge.ams?actions=' + JSON.stringify(actions)
    } else if (window.isTabletApp) {
        var isStringActions = 'string' === typeof actions || actions instanceof String;
        if (isStringActions) if (window.isAndroid) return 'javascript:console.log(\'ams://amsbridge.ams?actions={"Actions": {' + actions + '}}\');';
        else return 'ams://amsbridge.ams?actions={"Actions": {' + actions + '}}';
        else if (window.isAndroid) return 'javascript:console.log(\'ams://amsbridge.ams?actions=' + JSON.stringify(actions) + '\');';
        else return 'ams://amsbridge.ams?actions=' + JSON.stringify(actions)
    }
}
function setupLogin(isMobile) {
    window.isMobile = isMobile;
    $(function () {
        if (window.isTabletApp) {
            $('a.removeLinkIfApp').attr('href', 'javascript:void(0)');
            $('.hideIfTabletApp').remove();
            $('a.openInOverlay').each(function (id, link) {
                var match = link.href.match(/javascript:openHelpWindow\('(.*)'\);/i);
                if (match) $(link).attr('href', amsBridge('"openExternURL": {"url": "' + match[1] + '", "showHud": true}'));
                else $(link).attr('href', amsBridge('"openURLInExternBrowser": {"url": "' + link.href + '"}'))
            })
        }
        if (window.isMobileApp) {
            $('.hideIfMobileApp').remove();
            $('a.removeLinkIfApp').attr('href', 'javascript:void(0)');
            $('a.openInOverlay').each(function (id, link) {
                var match = link.href.match(/javascript:openHelpWindow\('(.*)'\);/i);
                if (match) $(link).attr('href', amsBridge('"openExternURL": {"url": "' + match[1] + '", "showHud": true}'));
                else if ($(link).is('.externalBrowser')) $(link).attr('href', amsBridge('"openURLInExternBrowser": {"url": "' + link.href + '"}'));
                else if (link.href.indexOf('#') < 0) $(link).remove()
            })
        }
        if (window.isMobile) {
            $('.showIfMobile').show();
            $('.hideIfMobile').remove()
        }
        if (!window.isApp) $('.showIfNotApp').show()
    })
}
function cleanupFipoTextResources() {
    try {
        if (window.sessionStorage) {
            sessionStorage.removeItem('modules');
            sessionStorage.removeItem('tables');
            sessionStorage.removeItem('widgetState')
        }
    } catch (error) {
    }
}
function doesFontExist(fontNames) {
    var canvas = document.createElement('canvas'),
        context = canvas.getContext('2d'),
        text = 'abcdefghijklmnopqrstuvwxyz0123456789',
        baseFonts = [
            'monospace',
            'sans-serif',
            'serif'
        ],
        baselineWidth = {
        },
        baselineHeight = {
        },
        keys = Object.keys(baseFonts),
        len = keys.length,
        index;
    for (index = 0; index < len; ++index) {
        var key = keys[index],
            bf1 = baseFonts[key];
        context.font = '72px ' + bf1;
        baselineWidth[bf1] = context.measureText(text).width;
        baselineHeight[bf1] = context.measureText(text).height
    }
    var fontString = '',
        fontNamesKeys = Object.keys(fontNames),
        flen = fontNamesKeys.length,
        ii;
    for (ii = 0; ii < flen; ++ii) {
        var fontName = fontNamesKeys[ii],
            baseFontsKeys = Object.keys(baseFonts),
            blen = baseFontsKeys.length,
            jj;
        for (jj = 0; jj < blen; ++jj) {
            var i = baseFontsKeys[jj],
                bf2 = baseFonts[i];
            context.font = '72px \'' + fontNames[fontName] + '\', ' + bf2;
            var newWidth = context.measureText(text).width,
                newHeight = context.measureText(text).height;
            if (newWidth != baselineWidth[bf2] || newHeight != baselineHeight[bf2]) {
                fontString += fontNames[fontName];
                break
            }
        }
    }
    delete canvas;
    return fontString
}
function fontDetection() {
    var testFonts = [
        'cursive',
        'monospace',
        'serif',
        'sans-serif',
        'fantasy',
        'default',
        'Arial',
        'Arial Black',
        'Arial Narrow',
        'Arial Rounded MT Bold',
        'Bookman Old Style',
        'Bradley Hand ITC',
        'Century',
        'Century Gothic',
        'Comic Sans MS',
        'Courier',
        'Courier New',
        'Georgia',
        'Gentium',
        'Impact',
        'King',
        'Lucida Console',
        'Lalit',
        'Modena',
        'Monotype Corsiva',
        'Papyrus',
        'Tahoma',
        'TeX',
        'Times',
        'Times New Roman',
        'Trebuchet MS',
        'Verdana',
        'Verona'
    ];
    return doesFontExist(testFonts)
}
function ef001() {
    var ckie = 'EF001Sprache=' + navigator.language;
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Betriebssystem=' + encodeURI(navigator.platform).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Webbrowser=' + encodeURI(navigator.userAgent).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Zeitzone=' + encodeURI((new Date).getTimezoneOffset()).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Bildschirm=' + encodeURI(screen.width + '*' + screen.height).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Hash=' + encodeURI(fontDetection().hashCode()) + ';';
    document.cookie = ckie + ';path=/;secure';
    ckie = 'EF001Plugins=';
    var allplgs = '',
        pl = navigator.plugins.length;
    if (0 === pl) ckie += 'There_are_no_plugins_installed'.hashCode();
    else for (var i = 0; i < pl; i++) allplgs = allplgs + encodeURI(navigator.plugins[i].name) + '_';
    ckie += allplgs.hashCode();
    document.cookie = ckie + ';path=/;secure';
    var ckie = 'EF001Farbtiefe=' + screen.pixelDepth;
    document.cookie = ckie + ';path=/;secure';
    var ckie = 'EF001BFG=' + encodeURI($(window).width() + 'x' + $(window).height()).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    var webGlRenderer,
        webGlVendor;
    try {
        var canvas = document.createElement('canvas'),
            gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
        if (gl) {
            var debugInfo = gl.getExtension('WEBGL_debug_renderer_info');
            webGlVendor = gl.getParameter(debugInfo.UNMASKED_VENDOR_WEBGL);
            webGlRenderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL)
        }
    } catch (e) {
    }
    var ckie = 'EF001WGLR=' + encodeURI(webGlRenderer).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure';
    var ckie = 'EF001WGLV=' + encodeURI(webGlVendor).replace(/;/g, '_').replace(/,/g, '_').replace(/=/g, '_');
    document.cookie = ckie + ';path=/;secure'
}
function openHelpWindow(url) {
    'use strict';
    require(['pf-shared-modules-urls'], function (urls) {
        urls.openHelpUrl(url)
    })
}
function openBillerWindow(url) {
    'use strict';
    require(['pf-shared-modules-urls'], function (urls) {
        urls.openBillerRegistrationUrl(url)
    })
}
function goBackInHistory() {
    'use strict';
    require(['pf-shared-modules-historyservice'], function (historyService) {
        if (historyService.hasHistory()) historyService.getBackFunction()
    })
}
function openDetailpage(action, params) {
    'use strict';
    require(['pf-widget-functions'], function (pfWidgetFunctions) {
        var urlObj = pfWidgetFunctions.getActionUrl('efdeeplink', action, params);
        pfWidgetFunctions.processUrlObject(urlObj)
    })
}
function MessageCounter() {
    function notify() {
        counter++;
        checkAndSignal()
    }
    function register(callback) {
        callbacks.push(callback);
        checkAndSignal()
    }
    function setTarget(newTarget) {
        reset();
        target = newTarget;
        checkAndSignal()
    }
    function checkAndSignal() {
        if (counter >= target) {
            var length = callbacks.length;
            while (length--) {
                var callback = callbacks.pop();
                callback()
            }
        }
    }
    function reset() {
        counter = 0;
        target = 0
    }
    function status() {
        return {
            counter: counter,
            target: target,
            callbacks: callbacks
        }
    }
    var counter,
        target,
        callbacks = [
        ];
    reset();
    return {
        notify: notify,
        register: register,
        setTarget: setTarget,
        checkAndSignal: checkAndSignal,
        status: status
    }
}
function checkWidgetsStatus() {
    'use strict';
    var widgets = [
        ],
        expectedInitializeEvents = 0,
        widgetContainer = b$.getVC(document.querySelector('.pf-tiles-container'));
    if (widgetContainer) {
        widgets = widgetContainer.childNodes;
        expectedInitializeEvents = widgets.length;
        var initProp = pf.globals.initialization.property;
        widgets.forEach(function (widget) {
            if ($(widget.htmlNode).prop(initProp.NAME) === initProp.VALUE) expectedInitializeEvents -= 1
        })
    }
    pf.globals.WIDGET_COUNTER.setTarget(expectedInitializeEvents);
    pf.globals.WIDGET_COUNTER.register(function () {
        gadgets.pubsub.publish(pf.globals.events.WIDGETS_LOADED)
    })
}
function showLiveSupportForm() {
    'use strict';
    trackWebtrends('WT.ac', 'li_EF_Live-Support');
    loadUnbluScript(function () {
        window.nnUnblu.openCobrowsing()
    })
}
function openSupportChat() {
    'use strict';
    loadUnbluScript(function () {
        window.nnUnblu.openLiveChat('pull')
    })
}
function getCookieValue(key) {
    var cookiestring = '; ' + window.document.cookie,
        cookies = cookiestring.split('; ' + key + '=');
    if (2 === cookies.length) return cookies.pop().split(';').shift();
    else return null
}
function openDeeplink(action) {
    document.getElementById('navigationButton').trigger('click');
    window.location.hash = '/widget=efdeeplink&action=' + action
}
function loadUnbluScript(onload) {
    'use strict';
    if (window.nnUnblu) onload();
    else importScript('/etc.clientlibs/pfch/shared/clientlibs/livechat-cs.js', onload)
}
function notInDemo(evt) {
    'use strict';
    function dialog(DialogService) {
        DialogService.notInDemo(event)
    }
    var event = evt || window.event,
        angular = require('angular'),
        ExtensionUtils = require('angular-dynamic-module'),
        dialogService = require('pf-shared-services-dialogservice'),
        pfAngularCommon = require('pf-angular-common'),
        module = angular.module('postfinance.lightbox', [
            pfAngularCommon.moduleName
        ]);
    ExtensionUtils.enableDynamicCreation(module);
    dialogService.register(module);
    dialog.$inject = [
        dialogService.name
    ];
    module.run(dialog);
    angular.bootstrap(angular.element([]), [
        module.name
    ], {
        strictDi: true
    })
}
function openAbsDialog(cancelFn) {
    'use strict';
    function dialog(DialogService) {
        absDialog = DialogService.absDialog(cancelFn)
    }
    var angular = require('angular'),
        ExtensionUtils = require('angular-dynamic-module'),
        dialogService = require('pf-shared-services-dialogservice'),
        pfAngularCommon = require('pf-angular-common'),
        module = angular.module('postfinance.lightbox', [
            pfAngularCommon.moduleName
        ]),
        absDialog;
    ExtensionUtils.enableDynamicCreation(module);
    dialogService.register(module);
    dialog.$inject = [
        dialogService.name
    ];
    module.run(dialog);
    angular.bootstrap(angular.element([]), [
        module.name
    ], {
        strictDi: true
    });
    return absDialog
}
function closeNavigationDropdown() {
    jQuery('.site_header').find('div.dropdown_nav.is-active').removeClass('is-active');
    jQuery('.site_header').find('div.dropdown_nav.is-active .js-dropdown_menu').attr('aria-hidden', 'true')
}
window._ne = function (document, window, _ne) {
    function isObject(value) {
        return null !== value && 'object' === typeof value
    }
    function isFunction(value) {
        return 'function' === typeof value
    }
    var node = Node.prototype,
        nodeList = NodeList.prototype,
        forEach = 'forEach',
        trigger = 'trigger',
        each = [
        ][forEach],
        dummy = document.createElement('i');
    nodeList[forEach] = each;
    var isArray = Array.isArray;
    window.on = node.on = function (event, fn) {
        if (!this.handlers) this.handlers = [
        ];
        this.addEventListener(event, fn, false);
        this.handlers.push({
            handler: fn,
            event: event
        });
        return this
    };
    window.off = node.off = function (event, fn) {
        if (fn) {
            this.removeEventListener(event, fn, false);
            if (this.handlers) this.handlers = this.handlers.filter(function (obj) {
                return obj.event !== event && obj.handler !== fn
            })
        } else {
            this.handlers[forEach](function (obj) {
                this.removeEventListener(event, obj.handler, false)
            }.bind(this));
            this.handlers = [
            ]
        }
        return this
    };
    nodeList.on = function (event, fn) {
        this[forEach](function (el) {
            el.on(event, fn)
        }.bind(this));
        return this
    };
    nodeList.off = function (event, fn) {
        if (fn) each.call(this, function (el) {
            el.off(event, fn)
        });
        else {
            this.handlers[forEach](function (obj) {
                this.off(event, obj.handler, false)
            }.bind(this));
            this.handlers = [
            ]
        }
        return this
    };
    Node.prototype.delegate = function (event, selector, fn) {
        var matches = this.mozMatchesSelector || this.webkitMatchesSelector || this.oMatchesSelector || this.matchesSelector || function (selector) {
            var target = this,
                elements = _ne(selector),
                match = false;
            if (elements instanceof NodeList) elements.forEach(function (el) {
                if (el === target) match = true
            });
            else if (elements === target) match = true;
            return match
        };
        this.on(event, function (e) {
            if (matches.call(e.target, selector)) fn.call(e.target, e)
        });
        return this
    };
    window[trigger] = node[trigger] = function (type, data) {
        var event = document.createEvent('HTMLEvents');
        event.initEvent(type, true, true);
        event.data = data || {
        };
        event.eventName = type;
        event.target = this;
        this.dispatchEvent(event);
        return this
    };
    nodeList[trigger] = function (event) {
        this[forEach](function (el) {
            el[trigger](event)
        });
        return this
    };
    _ne = function (s) {
        if (s === document || s === window) return s;
        var r = document.querySelectorAll(s || '☺'),
            length = r.length;
        return 1 == length ? r[0] : r
    };
    _ne.on = node.on.bind(dummy);
    _ne.off = node.off.bind(dummy);
    _ne[trigger] = node[trigger].bind(dummy);
    _ne.unflatten = function unflatten(data) {
        if (Object(data) !== data || isArray(data)) return data;
        var regex = /\.?([^.\[\]]+)|\[(\d+)\]/g,
            resultholder = {
            };
        for (var p in data) {
            var cur = resultholder,
                prop = '',
                m;
            while (m = regex.exec(p)) {
                cur = cur[prop] || (cur[prop] = m[2] ? [
                ] : {
                });
                prop = m[2] || m[1]
            }
            cur[prop] = data[p]
        }
        return resultholder[''] || resultholder
    };
    _ne.flatten = function flatten(data) {
        function recurse(cur, prop) {
            if (Object(cur) !== cur) result[prop] = cur;
            else if (isArray(cur)) {
                for (var i = 0, l = cur.length; i < l; i++) recurse(cur[i], prop + '[' + i + ']');
                if (0 == l) result[prop] = [
                ]
            } else {
                var isEmpty = true;
                for (var p in cur) {
                    isEmpty = false;
                    recurse(cur[p], prop ? prop + '.' + p : p)
                }
                if (isEmpty && prop) result[prop] = {
                }
            }
        }
        var result = {
        };
        recurse(data, '');
        return result
    };
    _ne.template = function template(s, d) {
        for (var p in d) s = s.replace(new RegExp('{' + p + '}', 'g'), d[p]);
        return s
    };
    _ne.exists = function exists(obj) {
        return 'undefined' !== typeof obj && null !== obj
    };
    return _ne
}(document, this);
!function (exports) {
    function copyOwnFrom(target, source) {
        Object.getOwnPropertyNames(source).forEach(function (propName) {
            Object.defineProperty(target, propName, Object.getOwnPropertyDescriptor(source, propName))
        });
        return target
    }
    function Symbol(name, props) {
        this.name = name;
        if (props) copyOwnFrom(this, props);
        Object.freeze(this)
    }
    var throwsError = function (func) {
            try {
                func();
                return false
            } catch (e) {
                return true
            }
        },
        arePropertyDescriptorsSupported = function () {
            return !throwsError(function () {
                Object.defineProperty({
                }, 'x', {
                })
            })
        },
        supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported(),
        defineProperty = function (object, name, value, force) {
            if (force || !(name in object)) if (supportsDescriptors) Object.defineProperty(object, name, {
                configurable: true,
                enumerable: false,
                writable: true,
                value: value
            });
            else object[name] = value
        },
        Value = {
            preserveToString: function (target, source) {
                defineProperty(target, 'toString', source.toString.bind(source), true)
            }
        },
        overrideNative = function overrideNative(object, property, replacement) {
            var original = object[property];
            defineProperty(object, property, replacement, true);
            Value.preserveToString(object[property], original)
        },
        _toString = Function.call.bind(Object.prototype.toString),
        _concat = Function.call.bind(Array.prototype.concat),
        ES = {
            RequireObjectCoercible: function (x, optMessage) {
                if (null == x) throw new TypeError(optMessage || 'Cannot call method on ' + x)
            },
            ToObject: function (o, optMessage) {
                ES.RequireObjectCoercible(o, optMessage);
                return Object(o)
            }
        };
    if (Object.getOwnPropertyNames) {
        var objectGOPNAcceptsPrimitives = !throwsError(function () {
            Object.getOwnPropertyNames('foo')
        });
        if (!objectGOPNAcceptsPrimitives) {
            var cachedWindowNames = 'object' === typeof window ? Object.getOwnPropertyNames(window)  : [
                ],
                originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;
            overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {
                var val = ES.ToObject(value);
                if ('[object Window]' === _toString(val)) try {
                    return originalObjectGetOwnPropertyNames(val)
                } catch (e) {
                    return _concat([], cachedWindowNames)
                }
                return originalObjectGetOwnPropertyNames(val)
            })
        }
    }
    Symbol.prototype = Object.create(null);
    Symbol.prototype.constructor = Symbol;
    Symbol.prototype.toString = function () {
        return '|' + this.name + '|'
    };
    Object.freeze(Symbol.prototype);
    var Enum = function (obj) {
        if (1 === arguments.length && null !== obj && 'object' === typeof obj) Object.keys(obj).forEach(function (name) {
            this[name] = new Symbol(name, obj[name])
        }, this);
        else Array.prototype.forEach.call(arguments, function (name) {
            this[name] = new Symbol(name)
        }, this);
        Object.freeze(this)
    };
    Enum.prototype.symbols = function () {
        return Object.keys(this).map(function (key) {
            return this[key]
        }, this)
    };
    Enum.prototype.contains = function (sym) {
        if (!sym instanceof Symbol) return false;
        else return this[sym.name] === sym
    };
    Enum.prototype.fromName = function (name) {
        if (!(!name instanceof String)) return this[name]
    };
    exports.Enum = Enum;
    exports.Symbol = Symbol
}('undefined' === typeof exports ? this.enums = {
    }
    : exports);
WebTrends.prototype.dcsGetId = function () {
    if (this.enabled && this.dcsIsWrongCookieValue(this.fpc) && document.cookie.indexOf('WTLOPTOUT=') == - 1) document.write('<script type=\'text/javascript\' src=\'http' + (0 == window.location.protocol.indexOf('https:') ? 's' : '') + '://' + this.domain + '/dcswtid.js\'></script>')
};
WebTrends.prototype.dcsGetCookie = function (name) {
    var cookies = document.cookie.split('; '),
        cmatch = [
        ],
        idx = 0,
        i = 0,
        namelen = name.length,
        clen = cookies.length;
    for (i = 0; i < clen; i++) {
        var c = cookies[i];
        if (c.substring(0, namelen + 1) == name + '=') cmatch[idx++] = c
    }
    var cmatchCount = cmatch.length;
    if (cmatchCount > 0) {
        idx = 0;
        if (cmatchCount > 1 && name == this.fpc) {
            var dLatest = new Date(0);
            for (i = 0; i < cmatchCount; i++) {
                var lv = parseInt(this.dcsGetCrumb(cmatch[i], 'lv')),
                    dLst = new Date(lv);
                if (dLst > dLatest) {
                    dLatest.setTime(dLst.getTime());
                    idx = i
                }
            }
        }
        return unescape(cmatch[idx].substring(namelen + 1))
    } else return null
};
WebTrends.prototype.dcsGetCrumb = function (cval, crumb, sep) {
    for (var aCookie = cval.split(sep || ':'), i = 0; i < aCookie.length; i++) if (0 === aCookie[i].lastIndexOf(crumb + '=')) {
        var aCrumb = aCookie[i].split('=');
        if (crumb == aCrumb[0]) return aCrumb[1]
    }
    return null
};
WebTrends.prototype.dcsGetIdCrumb = function (cval, crumb) {
    for (var id = cval.substring(0, cval.indexOf(':lv=')), aCrumb = id.split('='), i = 0; i < aCrumb.length; i++) if (crumb == aCrumb[0]) return aCrumb[1];
    return null
};
WebTrends.prototype.dcsIsFpcSet = function (name, id, lv, ss) {
    var c = this.dcsGetCookie(name);
    if (c) return id == this.dcsGetIdCrumb(c, 'id') && lv == this.dcsGetCrumb(c, 'lv') && ss == this.dcsGetCrumb(c, 'ss') ? 0 : 3;
    else return 2
};
WebTrends.prototype.dcsFPC = function () {
    if (document.cookie.indexOf('WTLOPTOUT=') == - 1) {
        var WT = this.WT,
            name = this.fpc,
            dCur = new Date,
            adj = 60000 * dCur.getTimezoneOffset() + 3600000 * this.timezone;
        dCur.setTime(dCur.getTime() + adj);
        var dExp = new Date(dCur.getTime() + 315360000000),
            dSes = new Date(dCur.getTime());
        WT.co_f = WT.vtid = WT.vtvs = WT.vt_f = WT.vt_f_a = WT.vt_f_s = WT.vt_f_d = WT.vt_f_tlh = WT.vt_f_tlv = '';
        if (this.dcsIsWrongCookieValue(name)) {
            if ('undefined' != typeof gWtId && '' != gWtId) WT.co_f = gWtId;
            else if ('undefined' != typeof gTempWtId && '' != gTempWtId) {
                WT.co_f = gTempWtId;
                WT.vt_f = '1'
            } else {
                WT.co_f = '2';
                for (var curt = dCur.getTime().toString(), i = 2; i <= 32 - curt.length; i++) WT.co_f += Math.floor(16 * Math.random()).toString(16);
                WT.co_f += curt;
                WT.vt_f = '1'
            }
            if ('undefined' == typeof gWtAccountRollup) WT.vt_f_a = '1';
            WT.vt_f_s = WT.vt_f_d = '1';
            WT.vt_f_tlh = WT.vt_f_tlv = '0'
        } else {
            var c = this.dcsGetCookie(name),
                id = this.dcsGetIdCrumb(c, 'id'),
                lv = parseInt(this.dcsGetCrumb(c, 'lv')),
                ss = parseInt(this.dcsGetCrumb(c, 'ss'));
            if (null == id || 'null' == id || isNaN(lv) || isNaN(ss)) return;
            WT.co_f = id;
            var dLst = new Date(lv);
            WT.vt_f_tlh = Math.floor((dLst.getTime() - adj) / 1000);
            dSes.setTime(ss);
            if (dCur.getTime() > dLst.getTime() + 1800000 || dCur.getTime() > dSes.getTime() + 28800000) {
                WT.vt_f_tlv = Math.floor((dSes.getTime() - adj) / 1000);
                dSes.setTime(dCur.getTime());
                WT.vt_f_s = '1'
            }
            if (dCur.getDay() != dLst.getDay() || dCur.getMonth() != dLst.getMonth() || dCur.getYear() != dLst.getYear()) WT.vt_f_d = '1'
        }
        WT.co_f = escape(WT.co_f);
        WT.vt_sid = WT.co_f + '.' + dSes.getTime();
        WT.vtid = 'undefined' == typeof this.vtid ? WT.co_f : this.vtid || '';
        WT.vtvs = (dSes.getTime() - adj).toString();
        var expiry = '; expires=' + dExp.toGMTString(),
            cur = dCur.getTime().toString(),
            ses = dSes.getTime().toString();
        document.cookie = name + '=id=' + WT.co_f + ':lv=' + cur + ':ss=' + ses + expiry + ';secure;path=/' + ('' != this.fpcdom ? '; domain=' + this.fpcdom : '');
        var rc = this.dcsIsFpcSet(name, WT.co_f, cur, ses);
        if (0 != rc) {
            WT.co_f = WT.vtvs = WT.vt_f_s = WT.vt_f_d = WT.vt_f_tlh = WT.vt_f_tlv = '';
            if ('undefined' == typeof this.vtid) WT.vtid = '';
            WT.vt_f = WT.vt_f_a = rc
        }
    }
};
WebTrends.prototype.dcsMultiTrack = function () {
    for (var $_len = dcsMultiTrack.arguments ? dcsMultiTrack.arguments.length : arguments.length, args = new Array($_len), $_i = 0; $_i < $_len; ++$_i) args[$_i] = dcsMultiTrack.arguments ? dcsMultiTrack.arguments[$_i] : arguments[$_i];
    if (args.length % 2 == 0) {
        this.dcsSetProps(args);
        var dCurrent = new Date;
        this.DCS.dcsdat = dCurrent.getTime();
        this.dcsFPC();
        this.dcsTag()
    }
};
WebTrends.prototype.dcsCleanUp = function () {
    for (var $_len = arguments.length, args = new Array($_len), $_i = 0; $_i < $_len; ++$_i) args[$_i] = arguments[$_i];
    this.DCS = {
    };
    this.WT = {
    };
    this.DCSext = {
    };
    if (args.length % 2 == 0) this.dcsSetProps(args)
};
WebTrends.prototype.dcsSetProps = function (args) {
    for (var i = 0; i < args.length; i += 2) if (0 == args[i].indexOf('WT.')) this.WT[args[i].substring(3)] = args[i + 1];
    else if (0 == args[i].indexOf('DCS.')) this.DCS[args[i].substring(4)] = args[i + 1];
    else if (0 == args[i].indexOf('DCSext.')) this.DCSext[args[i].substring(7)] = args[i + 1]
};
WebTrends.prototype.dcsAdv = function () {
    this.dcsFPC()
};
WebTrends.prototype.dcsVar = function () {
    var dCurrent = new Date,
        WT = this.WT,
        DCS = this.DCS;
    WT.tz = parseInt(dCurrent.getTimezoneOffset() / 60 * - 1) || '0';
    WT.bh = dCurrent.getHours() || '0';
    WT.ul = 'Netscape' == navigator.appName ? navigator.language : navigator.userLanguage;
    if ('object' == typeof screen) {
        WT.cd = 'Netscape' == navigator.appName ? screen.pixelDepth : screen.colorDepth;
        WT.sr = screen.width + 'x' + screen.height
    }
    if ('boolean' == typeof navigator.javaEnabled()) WT.jo = navigator.javaEnabled() ? 'Yes' : 'No';
    if (document.title) if (window.RegExp) {
        var tire = new RegExp('^' + window.location.protocol + '//' + window.location.hostname + '\\s-\\s');
        WT.ti = document.title.replace(tire, '')
    } else WT.ti = document.title;
    WT.js = 'Yes';
    WT.jv = function () {
        var agt = navigator.userAgent.toLowerCase(),
            major = parseInt(navigator.appVersion),
            mac = agt.indexOf('mac') != - 1,
            ff = agt.indexOf('firefox') != - 1,
            ff0 = agt.indexOf('firefox/0.') != - 1,
            ff10 = agt.indexOf('firefox/1.0') != - 1,
            ff15 = agt.indexOf('firefox/1.5') != - 1,
            ff20 = agt.indexOf('firefox/2.0') != - 1,
            ff3up = ff && !ff0 && !ff10 & !ff15 & !ff20,
            nn = !ff && agt.indexOf('mozilla') != - 1 && agt.indexOf('compatible') == - 1,
            nn4 = nn && 4 == major,
            nn6up = nn && major >= 5,
            ie = agt.indexOf('msie') != - 1 && agt.indexOf('opera') == - 1,
            ie4 = ie && 4 == major && agt.indexOf('msie 4') != - 1,
            ie5up = ie && !ie4,
            op = agt.indexOf('opera') != - 1,
            op5 = agt.indexOf('opera 5') != - 1 || agt.indexOf('opera/5') != - 1,
            op6 = agt.indexOf('opera 6') != - 1 || agt.indexOf('opera/6') != - 1,
            op7up = op && !op5 && !op6,
            jv = '1.1';
        if (ff3up) jv = '1.8';
        else if (ff20) jv = '1.7';
        else if (ff15) jv = '1.6';
        else if (ff0 || ff10 || nn6up || op7up) jv = '1.5';
        else if (mac && ie5up || op6) jv = '1.4';
        else if (ie5up || nn4 || op5) jv = '1.3';
        else if (ie4) jv = '1.2';
        return jv
    }();
    WT.ct = 'unknown';
    if (document.body && document.body.addBehavior) try {
        document.body.addBehavior('#default#clientCaps');
        WT.ct = document.body.connectionType || 'unknown';
        document.body.addBehavior('#default#homePage');
        WT.hp = document.body.isHomePage(location.href) ? '1' : '0'
    } catch (e) {
    }
    if (document.all) WT.bs = document.body ? document.body.offsetWidth + 'x' + document.body.offsetHeight : 'unknown';
    else WT.bs = window.innerWidth + 'x' + window.innerHeight;
    if (this.i18n) if ('string' == typeof document.defaultCharset) WT.le = document.defaultCharset;
    else if ('string' == typeof document.characterSet) WT.le = document.characterSet;
    else WT.le = 'unknown';
    WT.tv = '8.6.2';
    WT.dl = '0';
    WT.ssl = 0 == window.location.protocol.indexOf('https:') ? '1' : '0';
    DCS.dcsdat = dCurrent.getTime();
    DCS.dcssip = window.location.hostname;
    DCS.dcsuri = window.location.pathname;
    WT.es = DCS.dcssip + DCS.dcsuri;
    if (window.location.search) DCS.dcsqry = window.location.search;
    if (DCS.dcsqry) for (var dcsqry = DCS.dcsqry.toLowerCase(), params = this.paidsearchparams.length ? this.paidsearchparams.toLowerCase().split(',')  : [
    ], i = 0; i < params.length; i++) if (dcsqry.indexOf(params[i] + '=') != - 1) {
        WT.srch = '1';
        break
    }
    if ('' != window.document.referrer && '-' != window.document.referrer) if (!('Microsoft Internet Explorer' == navigator.appName && parseInt(navigator.appVersion) < 4)) DCS.dcsref = window.document.referrer
};
WebTrends.prototype.dcsEscape = function (S, REL) {
    if ('' != REL) {
        S = S.toString();
        for (var R in REL) if (REL[R] instanceof RegExp) S = S.replace(REL[R], R);
        return S
    } else return escape(S)
};
WebTrends.prototype.dcsA = function (N, V) {
    if (this.i18n && '' != this.exre && !this.exre.test(N)) if ('dcsqry' == N) {
        for (var newV = '', params = V.substring(1).split('&'), i = 0; i < params.length; i++) {
            var pair = params[i],
                pos = pair.indexOf('=');
            if (pos != - 1) {
                var key = pair.substring(0, pos),
                    val = pair.substring(pos + 1);
                if (0 != i) newV += '&';
                newV += key + '=' + this.dcsEncode(val)
            }
        }
        V = V.substring(0, 1) + newV
    } else V = this.dcsEncode(V);
    return '&' + N + '=' + this.dcsEscape(V, this.re)
};
WebTrends.prototype.dcsEncode = function (S) {
    return 'function' == typeof encodeURIComponent ? encodeURIComponent(S)  : escape(S)
};
WebTrends.prototype.dcsCreateImage = function (dcsSrc) {
    if (document.images) {
        this.images[this.index] = new Image;
        this.images[this.index].src = dcsSrc;
        this.index++
    } else document.write('<img alt="" style="border:none;" name="DCSIMG" width="1" height="1" src="' + dcsSrc + '" />')
};
WebTrends.prototype.dcsIsWrongCookieValue = function (fpc_name) {
    if (document.cookie.indexOf(this.fpc + '=') == - 1) return true;
    var re = /\b((((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])))|(((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))))\b/,
        fpc_value = this.dcsGetCookie(fpc_name);
    return !fpc_value.match(re)
};
WebTrends.prototype.dcsMeta = function () {
    var elems;
    if (document.all) elems = document.all.tags('meta');
    else if (document.documentElement) elems = document.getElementsByTagName('meta');
    if ('undefined' != typeof elems) for (var length = elems.length, i = 0; i < length; i++) {
        var name = elems.item(i).name,
            content = elems.item(i).content;
        if (name.length > 0) if (0 == name.toUpperCase().indexOf('WT.')) this.WT[name.substring(3)] = content;
        else if (0 == name.toUpperCase().indexOf('DCSEXT.')) this.DCSext[name.substring(7)] = content;
        else if (0 == name.toUpperCase().indexOf('DCS.')) this.DCS[name.substring(4)] = content;
    }
    if ('undefined' != typeof webtrends) {
        this.WT['si_n'] = webtrends.meta_si_n;
        this.WT['si_p'] = webtrends.meta_si_p;
        for (var multis = webtrends.meta_multi.split(','), x = 0; x < multis.length; x++) for (var metas = multis[x].split('='), y = 0; y < metas.length; y++) this.WT[metas[0].substring(3)] = metas[1]
    }
};
WebTrends.prototype.dcsTag = function () {
    if (document.cookie.indexOf('WTLOPTOUT=') == - 1) {
        var WT = this.WT,
            DCS = this.DCS,
            DCSext = this.DCSext,
            i18n = this.i18n,
            P = 'http' + (0 == window.location.protocol.indexOf('https:') ? 's' : '') + '://' + this.domain + ('' == this.dcsid ? '' : '/' + this.dcsid) + '/dcs.gif?';
        if (i18n) WT.dep = '';
        for (var N in DCS) if (DCS[N] && 'function' != typeof DCS[N]) P += this.dcsA(N, DCS[N]);
        for (var keys = [
            'co_f',
            'vtid',
            'vt_sid',
            'vtvs',
            'vt_f_tlv'
        ], i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (WT[key]) {
                P += this.dcsA('WT.' + key, WT[key]);
                delete WT[key]
            }
        }
        for (N in WT) if (WT[N] && 'function' != typeof WT[N]) P += this.dcsA('WT.' + N, WT[N]);
        for (N in DCSext) if (DCSext[N] && 'function' != typeof DCSext[N]) {
            if (i18n) WT.dep = 0 == WT.dep.length ? N : WT.dep + ';' + N;
            P += this.dcsA(N, DCSext[N])
        }
        if (i18n && WT.dep.length > 0) P += this.dcsA('WT.dep', WT.dep);
        if (P.length > 2048 && navigator.userAgent.indexOf('MSIE') >= 0) P = P.substring(0, 2040) + '&WT.tu=1';
        this.dcsCreateImage(P);
        this.WT.ad = ''
    }
};
WebTrends.prototype.dcsCollect = function () {
    if (this.enabled) {
        this.dcsVar();
        this.dcsMeta();
        this.dcsAdv();
        this.collectTeaserInfo();
        this.collectWtTags();
        this.collectDcsTags();
        this.dcsTag();
        setupWebAppTracking()
    }
};
Function.prototype.wtbind = function (obj) {
    var method = this,
        temp = function () {
            return method.apply(obj, arguments)
        };
    return temp
};
WebTrends.prototype.collectTeaserInfo = function () {
    var value = '';
    if ('undefined' != typeof aWtAdviews) {
        for (var i = 0; i < aWtAdviews.length; i++) {
            if (i > 0) value += ';';
            value += aWtAdviews[i]
        }
        this.WT.ad = value
    }
};
WebTrends.prototype.collectWtTags = function () {
    if ('undefined' != typeof aWtTags) for (var i = 0; i < aWtTags.length; i += 2) this.WT[aWtTags[i].substring(3)] = aWtTags[i + 1]
};
WebTrends.prototype.collectDcsTags = function () {
    if ('undefined' != typeof aDcsTags) for (var i = 0; i < aDcsTags.length; i += 2) this.DCS[aDcsTags[i].substring(4)] = aDcsTags[i + 1]
};
WebTrends.prototype.dcsAdTrack = function () {
    this.dcsFPC();
    this.unic = {
    };
    this.unic.keys = {
    };
    this.unic.WT = {
    };
    this.unic.DCS = {
    };
    this.unic.DCSext = {
    };
    this.unic.DCS.dcsredirect = '126';
    this.unic.DCS.dcstlh = '0';
    this.unic.DCS.dcstlv = '0';
    this.unic.WT.dl = 155;
    this.unic.DCS.dcsuri = '/virtual/default/urinotset/';
    this.unic.keys.WT = [
        'vt_f_tlh',
        'vtid',
        'vt_sid',
        'co_f',
        'vtvs',
        'tz'
    ];
    this.unic.keys.DCS = [
    ];
    this.unic.keys.DCSext = [
    ];
    for (var i = 0; i < this.unic.keys.WT.length; i++) {
        var key = this.unic.keys.WT[i];
        if (this.WT[key]) this.unic.WT[key] = this.WT[key]
    }
    for (var i = 0; i < this.unic.keys.DCS.length; i++) {
        var key = this.unic.keys.DCS[i];
        if (this.DCS[key]) this.unic.DCS[key] = this.DCS[key]
    }
    for (var i = 0; i < this.unic.keys.DCSext.length; i++) {
        var key = this.unic.keys.DCSext[i];
        if (this.DCSext[key]) this.unic.DCSext[key] = this.DCSext[key]
    }
    for (var $_len = arguments.length, args = new Array($_len), $_i = 0; $_i < $_len; ++$_i) args[$_i] = arguments[$_i];
    for (var i = 0; i < args.length; i += 2) if (0 == args[i].indexOf('WT.')) this.unic.WT[args[i].substring(3)] = args[i + 1];
    else if (0 == args[i].indexOf('DCS.')) this.unic.DCS[args[i].substring(4)] = args[i + 1];
    else if (0 == args[i].indexOf('DCSext.')) this.unic.DCSext[args[i].substring(7)] = args[i + 1];
    var i18n = this.i18n,
        P = ('' == this.dcsid ? '' : '/' + this.dcsid) + '/dcs.gif?';
    if (i18n) WT.dep = '';
    var unicDCS = this.unic.DCS;
    for (var N in unicDCS) if (unicDCS[N] && 'function' != typeof unicDCS[N]) P += this.dcsA(N, unicDCS[N]);
    var unicWT = this.unic.WT;
    for (N in unicWT) if (unicWT[N] && 'function' != typeof unicWT[N]) P += this.dcsA('WT.' + N, unicWT[N]);
    var unicDCSext = this.unic.DCSext;
    for (N in unicDCSext) if (unicDCSext[N] && 'function' != typeof unicDCSext[N]) {
        if (i18n) this.WT.dep = 0 == this.WT.dep.length ? N : this.WT.dep + ';' + N;
        P += this.dcsA(N, unicDCSext[N])
    }
    if (i18n && this.WT.dep.length > 0) P += this.dcsA('WT.dep', WT.dep);
    if (P.length > 2048 && navigator.userAgent.indexOf('MSIE') >= 0) P = P.substring(0, 2040) + '&WT.tu=1';
    this.dcsCreateImage(P)
};
!function (jQuery) {
    'use strict';
    var NS = b$.bdom.getNamespace('http://backbase.com/2012/portalView'),
        Container = NS.classes.container;
    NS.registerElement('template-popup', Container.extend(function (bbDocument, namespaceURI, localName, node) {
        Container.call(this, bbDocument, namespaceURI, localName, node);
        this.isPossibleDragTarget = true
    }, {
        readyHTML: function readyHTML() {
            this.container = this.htmlNode;
            if (bd.designMode) this._renderPreview();
            this._bindEvents();
            return Container.prototype.readyHTML.call(this)
        },
        _bindEvents: function _bindEvents() {
            var pageLoaderVisible = false,
                popupContainer = document.getElementById('detaildialog');
            jQuery(document).keydown(function (e) {
                if (e.keyCode == pf.globals.keycodes.ESCAPE) {
                    if (jQuery('.ef_select-open').length > 0) return;
                    if (jQuery('.dropdown_nav.is-active').length > 0) return;
                    if (jQuery('.detail_overlay').length > 0) return;
                    if (jQuery('.is-more_actions-visible').length > 0) return;
                    if (pageLoaderVisible) return;
                    if (!popupContainer.offsetParent) return;
                    gadgets.pubsub.publish(pf.globals.pubsub.CLOSE_DETAIL_PAGE_POPUP, null)
                }
            });
            if (bd.designMode) this.container.delegate('click', pf.globals.selectors.POPUP_CONTAINER_PREVIEW_TRIGGER, function () {
                this._showPopup()
            }.bind(this));
            gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_PAGE_LOADER, function () {
                pageLoaderVisible = true
            });
            gadgets.pubsub.subscribe(pf.globals.pubsub.HIDE_PAGE_LOADER, function () {
                pageLoaderVisible = false
            });
            gadgets.pubsub.subscribe(pf.globals.pubsub.OPEN_POPUP_CONTAINER, function () {
                this._showPopup()
            }.bind(this));
            gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, function () {
                this._hidePopup()
            }.bind(this))
        },
        _renderPreview: function _renderPreview() {
            var previewHtml = '<div class="pf-invisible-item-preview"><button class="pf-invisible-item-button js-preview-popup-container">Open Popup Container</button><span class="pf-invisible-item-info">This item is not visible in the end user portal</span></div>';
            jQuery(this.container).prepend(previewHtml)
        },
        _showPopup: function _showPopup() {
            jQuery(document).trigger(pf.globals.hvevents.DETAIL_WIDGET_OPEN)
        },
        _hidePopup: function _hidePopup() {
            jQuery(document).trigger(pf.globals.hvevents.DETAIL_WIDGET_CLOSE)
        }
    }))
}(jQuery);
!function (jQuery) {
    'use strict';
    var NS = b$.bdom.getNamespace('http://backbase.com/2012/portalView'),
        Container = NS.classes.container;
    NS.registerElement('template-tiles', Container.extend(function (bbDocument, namespaceURI, localName, node) {
        Container.call(this, bbDocument, namespaceURI, localName, node);
        this.isPossibleDragTarget = true
    }, {
        buildHTML: function buildHTML(elm) {
            return Container.prototype.buildHTML.call(this, elm)
        },
        readyHTML: function readyHTML() {
            var model = this.model,
                minOrderValue = 0,
                maxOrderValue = 0;
            if (model.childNodes && model.childNodes.length) {
                var firstWidget = model.childNodes[0],
                    lastWidget = model.childNodes[model.childNodes.length - 1];
                minOrderValue = firstWidget.getPreference('order');
                maxOrderValue = lastWidget.getPreference('order')
            }
            var dependencies = [
                'lodash',
                'pf-shared-modules-util',
                'pf-shared-modules-fipowidgetshopservice'
            ];
            require(dependencies, function (_, util, fipoWidgetShowService) {
                fipoWidgetShowService.setMaxOrder(maxOrderValue);
                fipoWidgetShowService.setMinOrder(minOrderValue);
                var portalModelOrder = {
                };
                _.forEach(model.childNodes, function (modelItem) {
                    portalModelOrder[modelItem.name] = modelItem.getPreference('order')
                });
                var previousDOMOrder = util.getWidgetOrder();
                gadgets.pubsub.subscribe(pf.globals.pubsub.CUSTOMIZE_MODE_WIDGETS_CHANGED, function (item) {
                    if (item) portalModelOrder[item.itemName] = item.properties.order;
                    previousDOMOrder = util.getWidgetOrder()
                });
                jQuery('body').on(pf.globals.hvevents.SORT_CHANGE, function () {
                    for (var newDOMOrder = util.getWidgetOrder(), changedWidgets = [
                    ], i = 0; i < previousDOMOrder.length; i++) {
                        var prev = previousDOMOrder[i],
                            curr = newDOMOrder[i];
                        if (prev.itemName !== curr.itemName) changedWidgets.push(curr)
                    }
                    var keys = _.orderBy(_.map(changedWidgets, function (item) {
                        return portalModelOrder[item.itemName]
                    }));
                    _.forEach(changedWidgets, function (item, index) {
                        item.properties.order = keys[index];
                        fipoWidgetShowService.updateWidgetOrder(item);
                        portalModelOrder[item.itemName] = item.properties.order
                    });
                    previousDOMOrder = util.getWidgetOrder()
                })
            });
            return Container.prototype.readyHTML.call(this)
        }
    }))
}(jQuery);
window.pf = window.pf || {
};
pf.globals = pf.globals || {
    pubsub: {
        OPEN_POPUP_CONTAINER: 'fipo:openPopup',
        CLOSE_POPUP_CONTAINER: 'fipo:closePopup',
        CLOSE_OVERLAY_CONTAINER: 'fipo:closeOverlay',
        OVERLAY_CONTAINER_ON_CLOSE: 'fipo:overlayContainerOnClose',
        SHOW_DETAIL_PAGE: 'fipo:showDetailPage',
        SHOW_DETAIL_PAGE_IN_POPUP: 'fipo:showDetailPageInPopup',
        SHOW_DETAIL_PAGE_IN_OVERLAY: 'fipo:showDetailPageInOverlay',
        SHOW_DETAIL_PAGE_FROM_PFJSON: 'fipo:showDetailPageFromPfJson',
        RELOAD_WIDGETS: 'fipo:reloadWidgets',
        SHOW_PAGE_LOADER: 'fipo:showPageLoader',
        HIDE_PAGE_LOADER: 'fipo:hidePageLoader',
        SHOW_WIDGET_LOADING: 'fipo:showWidgetLoading',
        HIDE_WIDGET_LOADING: 'fipo:hideWidgetLoading',
        TRADING_NAVIGATION: 'fipo:tradingNavigation',
        TRADING_NAVIGATION_READY: 'fipo:tradingNavigationReady',
        UPDATE_MESSAGE_COUNTER: 'fipo:updateMessageCounter',
        HIDE_DIALOG: 'fipo:hideDialog',
        CLOSED_DIALOG: 'fipo:closedDialog',
        CLOSED_ABS_DIALOG: 'fipo:closedAbsDialog',
        LOAD_FILE_INTO_LIGHTBOX: 'fipo:loadFileInfoLightobx',
        LOAD_URL_CONTENT_INTO_OVERLAY: 'fipo:loadUrlContentInfoOverlay',
        CLOSE_DETAIL_PAGE: 'fipo:closeDetailPage',
        CLOSE_DETAIL_PAGE_POPUP: 'fipo:closeDetailPagePopup',
        RELOAD_UISETTINGS: 'fipo:reloadUiSettings',
        AMS_OPEN_URL: 'fipo:ams:openUrl',
        AMS_SHOW_SCANNER: 'fipo:ams:showScanner',
        NOT_IN_DEMO: 'fipo:notInDemo',
        CUSTOMIZE_MODE_ADJUSTMENT: 'fipo:customizeMode:adjustment',
        CUSTOMIZE_MODE_FINISHED: 'fipo:customizeMode:finished',
        CUSTOMIZE_MODE_WIDGETS_CHANGED: 'fipo:customizeMode:widgetsChanged',
        EBILL_DATA_LOADED: 'fipo:detail:ebill:dataLoaded',
        DETAILPAGE_DATA_LOADED: 'fipo:detail:dataLoaded',
        OVERLAY_CALLBACK: 'fipo:overlayCallback',
        READY_OVERLAY: 'fipo:readyOverlay',
        READY_POPUP: 'fipo:readyPopup',
        TNB_LINK_CLICKED: 'fipo:tnbLinkClicked'
    },
    events: {
        POPUP_WIDGET_DETAIL_INITIALIZED: 'fipo:widget:detail:initialised',
        DETAIL_STATE_CHANGE_REJECTED: 'fipo:detail:statechange:rejected',
        CHANGE_DETAIL_PAGE_TAB: 'fipo:changeDetailPageTab',
        WIDGET_SETTINGS_OPEN: 'fipo:widget:settings:open',
        WIDGET_SETTINGS_SAVE: 'fipo:widget:settings:save',
        WIDGET_SETTINGS_CANCEL: 'fipo:widget:settings:cancel',
        ELEMENT_INITIALIZED: 'fipo:element:initialized',
        GO_TO_DETAIL_PAGE: 'fipo:widget:goToDetailPage',
        WIDGETS_LOADED: 'fipo:widgets:loaded',
        ONE_SECOND: 1000,
        REFLOW_HIGHCHARTS: 'fipo:highcharts:reflow',
        RESET_UI_STATE: 'fipo:reset:uistate',
        FORMLY_VALIDATE_MOBILE: 'fipo:formly:validatemobilenumber',
        FORM_BEFORE_SAVE: 'fipo:forms:formBeforeSave',
        FORM_SAVED: 'fipo:forms:formSaved',
        FORM_FIELD_REMOVED: 'fipo:forms:formFieldRemoved',
        HASH_CHANGE: 'hashchange',
        SET_SELECTED_TAB: 'fipo:tabs:setSelectedTab'
    },
    hvevents: {
        DETAIL_WIDGET_OPEN: 'pf:detail:open',
        DETAIL_WIDGET_CLOSE: 'pf:detail:close',
        WIDGET_CLOSE: 'pf:widget:close',
        WIDGET_OPEN: 'pf:widget:open',
        SORT_CHANGE: 'pf:widget:sortchange'
    },
    ngevents: {
        SEND_DATA_TO_CONTROLLER: 'ngfipo:sendDataToController',
        CLOSE_DETAIL_PAGE: 'ngfipo:closeDetailPage',
        DETAIL_PAGE_INITIALIZED: 'ngfipo:detailPageInitialized',
        DETAIL_CHANGE_PAGE_TITLE: 'ngfipo:changeDetailPageTitle',
        DETAIL_CHANGE_PAGE_RIGHT_LINK: 'ngfipo:changeDetailPageRightLink',
        DETAIL_CHANGE_PAGE_HELP: 'fipo:changeDetailPageHelp',
        DETAIL_CONFIGURE_PAGE_TABS: 'ngfipo:changeDetailPageTabs',
        DETAIL_BACKBUTTON_SHOW: 'fipo:detail:backbutton:show',
        DETAIL_BACKBUTTON_HIDE: 'fipo:detail:backbutton:hide',
        DETAIL_CLOSEBUTTON_HIDE: 'fipo:detail:closebutton:hide',
        DETAIL_BACKBUTTON_TRIGGER: 'fipo:detail:backbutton:trigger'
    },
    mobile: {
        SCAN_AND_PAY_CODE: 'pf:mobile:code'
    },
    classes: {
        HIDDEN: 'hidden',
        POPUP_CONTAINER_OPEN: 'pf-popup-container-open',
        NATIVE_VIEWER: 'openInNativeViewer',
        EXTERNAL_BROWSER: 'openInExternalBrowser',
        VISUALLY_HIDDEN: 'is-visuallyhidden',
        PF_FORM__HORIZONTAL: 'pf-form_horizontal',
        PF_FORM__ROW: 'pf-form_row',
        AS_NARROW: 'as-narrow'
    },
    selectors: {
        POPUP_CONTAINER_PREVIEW_TRIGGER: '.js-preview-popup-container',
        POPUP_CONTAINER_MAIN_AREA: '.js-pf-popup-container-area',
        WIDGET_SETTINGS_OPEN_BUTTON: '.js-widget--opensettings',
        WIDGET_SETTINGS_CLOSE_BUTTON: '.js-widget--closesettings',
        WIDGET_HELP_OPEN_BUTTON: '.js-widget--openhelp'
    },
    actions: {
        ACCOUNT_DETAIL: 'AccountDetail',
        ACCOUNT_EMONEY_BOX: 'AccountEMoneyBox',
        ACCOUNT_NOTIFICATIONS: 'AccountNotifications',
        ACCOUNT_NOTIFICATION_ACTIVATE: 'AccountNotificationActivate',
        ACCOUNT_NOTIFICATION_DEACTIVATE: 'AccountNotificationDeactivate',
        ACCOUNT_NOTIFICATION_DELETE: 'AccountNotificationDelete',
        ACCOUNT_NOTIFICATION_EDIT: 'AccountNotificationEdit',
        ACCOUNT_SETTINGS: 'AccountSettings',
        ACCOUNT_TERMINATION_NOTICES: 'AccountTerminationNotices',
        ACCOUNT_TRANSFER: 'AccountTransfer',
        ACCOUNT_TRANSFER_SAVINGS: 'AccountTransferSavings',
        ACCOUNT_WITHDRAWAL_NOTICE_SEARCH: 'AccountWithdrawalNoticeSearch',
        APPLY: 'Apply',
        APPLY_DOMESTIC: 'ApplyDomestic',
        APPLY_FOREIGN: 'ApplyForeign',
        APPROVE_EZ: 'ApproveEz',
        BALANCE_HISTORY: 'BalanceHistory',
        CONTACT_DATA_DELETE: 'ContactDataDelete',
        CONTACT_DATA_EDIT: 'ContactDataEdit',
        CREDIT_CARD_BLOCK: 'CreditCardBlock',
        CREDIT_CARD_DETAIL: 'CreditCardDetail',
        CREDIT_CARD_LOAD: 'CreditCardLoad',
        CREDIT_CARD_NOTIFICATIONS: 'CreditCardNotifications',
        CREDIT_CARD_ORDER_PIN: 'CreditCardOrderPin',
        CREDIT_CARD_REPLACE: 'CreditCardReplace',
        CREDIT_CARD_SETTINGS: 'CreditCardSettings',
        CREDIT_CARD_UNBLOCK: 'CreditCardUnblock',
        CUSTODY_ACCOUNT_BALANCE: 'CustodyAccountBalance',
        CUSTODY_ACCOUNT_DETAIL: 'CustodyAccountDetail',
        CUSTODY_ACCOUNT_SETTINGS: 'CustodyAccountSettings',
        CUSTOMER_BASE_FEE_DETAIL: 'CustomerBaseFeeDetail',
        DEBIT_CARD_BLOCK: 'DebitCardBlock',
        DEBIT_CARD_DETAIL: 'DebitCardDetail',
        DEBIT_CARD_REPLACE: 'DebitCardReplace',
        DEBIT_CARD_UNBLOCK: 'DebitCardUnblock',
        DELETE: 'Delete',
        DELETE_EZ: 'DeleteEz',
        DETAIL: 'Detail',
        DETAIL_3A: 'Detail3A',
        DETAIL_VESTED_BENEFITS: 'DetailVestedBenefits',
        DIRECT_DEBIT_NOTIFICATIONS: 'DirectDebitNotifications',
        DOMESTIC_PAYMENT: 'DomesticPayment',
        EDIT: 'Edit',
        EDIT_DOMESTIC: 'EditDomestic',
        EDIT_FOREIGN: 'EditForeign',
        EMONEY_BOX_DELETE: 'EMoneyBoxDelete',
        EMONEY_BOX_DETAILS: 'EMoneyBoxDetails',
        EMONEY_BOX_EDIT: 'EMoneyBoxEdit',
        ETRADING_CHANGE_DEFAULT_PORTFOLIO: 'ETradingChangeDefaultPortfolio',
        FIXED_TERM_DEPOSIT: 'FixedTermDeposit',
        FOREIGN_PAYMENT: 'ForeignPayment',
        FUND_ORDER_3A: 'FundOrder3A',
        FUND_TRANSACTIONS: 'FundTransactions',
        GO_TO_SQ_ETRADING: 'GoToSqEtrading',
        INPAYMENT_3A: 'Inpayment3A',
        LIFE_INSURANCE_DETAIL: 'LifeInsuranceDetail',
        MEDIUM_TERM_NOTES: 'MediumTermNotes',
        MOVEMENTS: 'Movements',
        MOVEMENT_DETAIL: 'MovementDetail',
        PAYMENT_ETRADING: 'PaymentEtrading',
        SUBSCRIBE_FUNDS: 'SubscribeFunds',
        WITHDRAWALS: 'Withdrawals',
        PORTFOLIO_ORDER_DETAIL: 'DetailOrder',
        PORTFOLIO_ORDER_DELETE: 'DeleteOrder'
    },
    settings: {
        HTTP_TIMEOUT: 60000,
        OVERVIEW_RELOAD_DELAY: 30000,
        AMS_BRIDGE_DELAY: 250,
        PHONE_NUMBER_LENGTH: 7,
        PHONE_VALIDATION_LENGTH: 6,
        POPUP_WINDOW_PARAMS: 'width=900,height=630,scrollbars=yes,resizable=yes,status=no,toolbar=no,menubar=no',
        OVERLAY_OPEN_DELAY: 500,
        DOUBLE_CLICK_DELAY: 500,
        FILE_DOWNLOAD_REFRESH_DELAY: 2000,
        FLASH_MESSAGES_DISPLAY_TIME: 3000,
        ELEMENT_HIGHLIGHTING_DELAY: 2000,
        ELEMENT_HIGHLIGHTING_DURATION: 4000
    },
    uiSettings: {
        PREFIX_WIDGETS: 'widgets',
        PREFIX_DETAILPAGES: 'detailpages'
    },
    urlprefix: {
        BUNDLE: b$.portal.staticResourcesPath + '/static/fipo',
        LANGUAGE_PARAM: '[lang]',
        PAGE_NUMBER: '[pagenumber]',
        PAGE_ID: '[pageid]',
        PAGE_NUMBER_OFFSET: 1,
        PORTAL_TYPE: '[portalType]',
        PORTAL_TYPE_HTML: 'html',
        PORTAL_TYPE_MOBILE: 'mobile',
        WCMS_TYPE: '[wcmsType]',
        WCMS_TYPE_DESKTOP: 'desktop',
        WCMS_TYPE_MOBILE: 'mobile',
        UI_MARKET_SEGMENT: '[uiMarketSegment]',
        NOT_IN_DEMO: 'notInDemo',
        STATIC_CONTENT: '[staticContent]'
    },
    parameters: {
        CLEAR_URL_MAPPING_CACHE: 'clearUrlMappingCache',
        CLEAR_TEASER_DATA_CACHE: 'clearTeaserDataCache',
        CLEAR_USER_DATA_CACHE: 'clearUserDataCache',
        PORTAL_PAGE_ERROR: 'code=412',
        LINK_NOT_IN_DEMO: 'javascript:notInDemo();',
        pageDisable: {
            WELCOME_PAGE_DESKTOP: 'welcome_page_desktop',
            WELCOME_PAGE_MOBILE: 'welcome_page_mobile',
            RELEASE_NOTES_DESKTOP: 'release_notes_desktop',
            RELEASE_NOTES_MOBILE: 'release_notes_mobile',
            TR_WELCOME_PAGE: 'tr_welcome_page',
            NEWSLETTER: 'newsletter_page',
            PAS_OPT_IN_PAGE: 'pas_opt_in_page',
            BASIC_AGREEMENT_PAGE: 'basic_agreement_page'
        },
        hash: {
            WELCOME_PAGE: 'welcomepage',
            GUIDED_TOUR: 'guidedtour',
            RELEASE_NOTES: 'releasenotes',
            TRADING_GUIDED_TOUR: 'trading=guidedTour',
            NEWSLETTER: 'newsletter',
            PAS_OPTIN_PAGE: 'pasoptinpage'
        }
    },
    cookies: {
        LOAD_GUIDED_TOUR: 'loadGuidedTour',
        APP_DEVICE: 'appdevice',
        APP_OS: 'appos',
        APP_RELEASE: 'apprelease',
        APP_VERSION: 'appversion',
        EF002: 'EF002',
        SESSION: 'session'
    },
    cookieValues: {
        APP_DEVICE_TABLET: 'tablet',
        APP_DEVICE_HANDHELD: 'handheld',
        APP_OS_IOS: 'ios',
        APP_OS_ANDROID: 'android',
        TIMEOUT: 'timeout'
    },
    keys: {
        WIDGET_STATE: 'widgetState',
        OPEN_MESSAGES: 'openMessages'
    },
    formats: {
        moment: {
            ISO_DATE: 'YYYY-MM-DD',
            ISO_MONTH: 'YYYY-MM',
            LOCALIZED_DATE: 'DD.MM.YYYY',
            LOCALIZED_DATE_TIME: 'DD.MM.YYYY HH:mm'
        },
        js: {
            ISO_DATE: 'yyyy-MM-dd',
            LOCALIZED_DATE: 'dd.MM.yyyy'
        }
    },
    types: {
        account: {
            KONTO: 0,
            DEPOT: 1,
            ASR: 3,
            ESR: 7,
            MONEY: 9,
            MORTGAGE: 11,
            MEDIUM_TERM_NOTE: 13,
            LIFE_INSURANCE: 14,
            RETIRE_SAVINGS: 17,
            VESTED_BENEFIT: 21,
            CREDIT_CARD: 22,
            CH_DD: 23,
            SEPA_DD: 24,
            ETRADING_SQ: 25,
            ES_CUSTOMER_AGREEMENT: 42,
            LIFE_INSURANCE_V2: 47
        },
        traccount: {
            EF: 0,
            TR: 1
        },
        creditcard: {
            VISA: [
                'P0043-0002',
                'P0043-0003',
                'P0043-0005',
                'P0043-0006',
                'P0044-0001'
            ],
            MASTERCARD: [
                'P0005-0001',
                'P0005-0003',
                'P0043-0001',
                'P0043-0004'
            ]
        },
        payment: {
            GIRO_BANK_NOT_PF: 1000,
            ESR: 1001,
            CASH_INTERNATIONAL: 1004,
            GIRO_INTERNATIONAL: 1005,
            GIRO_BANK_INCL_PF: 1006,
            GIRO_INTERNATIONAL_URGENT: 1009,
            GIRO_INTERNATIONAL_SEPA: 9991
        },
        paymentOrderProduct: {
            STANDING_ORDER: 1002,
            SINGLE_PAYMENT: 1004
        },
        order: {
            SINGLE: 0,
            STANDING: 1,
            PAYMENT_LIST: 2
        },
        balanceArt: {
            BOOK: 2,
            VALUTA: 4
        },
        addressPostalType: {
            ADDRESS: 1,
            POBOX: 2
        },
        addressType: {
            DOMICILE: 0,
            CORRESPONDENCE: 1
        },
        addressElectronicalType: {
            LANDLINE: 0,
            MOBILE: 1,
            FAX: 2,
            EMAIL: 3,
            URL: 4
        },
        allocation: {
            PRIVAT: 0,
            BUSINESS: 1,
            PRIVATANDBUSINESS: 2,
            CENTRAL: 3
        },
        country: {
            SWITZERLAND: 756,
            LIECHTENSTEIN: 438,
            ITALY: 380
        },
        marketSegment: {
            BANK: 2,
            OFFICE: 3
        },
        currency: {
            CHF: 756,
            EUR: 978,
            USD: 840
        },
        uiNzeView: {
            NO_SMARTBAR: 0,
            SMARTBAR: 1,
            SMARTBAR_WITH_WIDGET_SHOP: 2
        }
    },
    countryType: {
        DOMICILE: 'domicile',
        PAYMENT: 'payment'
    },
    subTypes: {
        account: {
            PAYMENTACCOUNT: [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            SAVINGSACCOUNT: [
                6,
                7,
                13
            ],
            ESAVINGSACCOUNT: [
                9,
                12
            ]
        },
        portfolio: {
            EXO: 2,
            BASIC: 3,
            PREMIUM: 4,
            DWM: 5
        }
    },
    pageTypes: {
        EXTERNAL: 'EXTERNAL',
        INTERNAL: 'INTERNAL',
        PORTAL: 'PORTAL'
    },
    config: {
        detailWidgetInitialised: false
    },
    errors: {
        ERROR_RE_MAINTENANCE: '<meta name="SORRYPAGE" content="RE_MAINTENANCE" />',
        ERROR_MAINTENANCE: '<meta name="SORRYPAGE" content="MAINTENANCE" />',
        ERROR_LOGINPAGE: '<meta name="LOGINPAGE" content="LOGIN" />',
        ERROR_ERROR: '<meta name="SORRYPAGE" content="ERROR" />',
        ERROR_PORTAL_PAGE: '<meta name="PORTALPAGE" content="PORTAL" />',
        ERROR_404: '_error_404'
    },
    statuscode: {
        OK: 200,
        NOT_FOUND: 404,
        NO_CONTENT: 204
    },
    keycodes: {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        ESCAPE: 27,
        SPACE: 32,
        END: 35,
        HOME: 36,
        LEFT_ARROW: 37,
        UP_ARROW: 38,
        RIGHT_ARROW: 39,
        DOWN_ARROW: 40,
        DELETE: 46,
        NUMBER_0: 48,
        NUMBER_9: 57,
        A: 65,
        H: 72,
        NUMPAD_0: 96,
        NUMPAD_9: 105
    },
    icons: {
        HINT: 'icon-please_activate',
        NO_OFFER: 'icon-no_offer_40px'
    },
    states: {
        cockpit: {
            simple: {
                name: 'simple',
                key: 'Simple'
            },
            graphic: {
                name: 'graphic',
                key: 'Graphic'
            },
            list: {
                name: 'list',
                key: 'List'
            },
            settings: {
                name: 'settings',
                key: 'Settings'
            },
            savingstargets: {
                name: 'savingstargets',
                key: 'Savingstargets'
            }
        },
        efpayment: {
            callFrom: {
                SEARCH_SINGLE_ORDER: 0,
                APPROVE_RESULT: 1,
                SEARCH_STANDING_ORDER: 2,
                APPROVE_STANDING_ORDER: 3
            }
        },
        pfchonlinemortgage: {
            checkStatus: 'checkstatus',
            quickCheck: 'quickcheck'
        },
        widget: {
            ready: 'ready',
            empty: 'empty',
            error: 'error',
            info: 'info',
            notice: 'notice',
            initial: 'initial'
        },
        detailpage: {
            error: 'detailpageerror',
            initial: 'detailpageinitial',
            loading: 'detailpageloading',
            empty: 'detailpageempty'
        }
    },
    chartColors: {
        labels: {
            pie: '#606060'
        },
        column: {
            positive: '#FFCC00',
            negative: '#C00600',
            grid: '#CCC'
        },
        line: {
            border: '#806F60',
            grid: '#BCB1A3',
            positive: '#806F60',
            negative: '#A51728'
        },
        bar: {
            positive: '#359A2B',
            negative: '#C00600',
            remaining: '#F5F1E8'
        },
        categories: {
            primary: [
                '#E9B832',
                '#C6AB31',
                '#A29E30',
                '#7F912F',
                '#407347',
                '#00545E',
                '#2B4352',
                '#553145',
                '#DB8F33',
                '#CC6633',
                '#802039',
                '#A64336'
            ],
            secondary: {
                other: '#584125',
                uncategorized: '#806F60'
            }
        }
    },
    widgets: {
        eforderoverview: {
            SETTINGS_DAYS_MIN: 1,
            SETTINGS_DAYS_MAX: 90
        },
        efgenericupload: {
            MAX_FILENAME_OUTPUT_LENGTH: 35
        },
        trcontent: {
            HEADER_HEIGTH: 140,
            FOOTER_HEIGTH: 65
        }
    },
    detailpages: {
        efbalancehistory: {
            MIN_DATE_MONTHS: 15
        },
        efapproveebills: {
            done: {
                MIN_DATE_DAYS: 120
            }
        },
        efchangeaddress: {
            CALL_CITIES_SERVICE_CHAR_AMOUNT: 3
        },
        efcurrencydetail: {
            DEFAULT_PERIOD: 1
        },
        efcurrencies: {
            DEFAULT_LIMIT: 1,
            DEFAULT_RATE: 1,
            DECIMALS_IN_TABLE: 4
        },
        efmovements: {
            NUM_MONTHS: 15,
            actions: {
                DETAIL: 'MovementDetail',
                COLLECTIVE_DETAIL: 'MovementDetailOther'
            },
            transactionType: {
                ALL: 0
            },
            movementUiType: {
                SIMPLE: 0,
                PAYMENT: 1,
                OTHER: 2
            }
        },
        efnewsletterpage: {
            emailStates: {
                NOT_REGISTERED: 1,
                REGISTERED: 2,
                VALID: 3,
                INVALID: 4,
                CONFIRMED: 5,
                CANCELED: 6,
                UNSUBSCRIBED: 7,
                REVOKED: 8
            }
        },
        efretirementfundorder: {
            orderTypes: {
                SINGLE_ORDER: 0,
                STANDING_ORDER: 1,
                CREATE_STANDING_ORDER: 1,
                DELETE_STANDING_ORDER: 2,
                WITHDRAWAL: 3
            }
        },
        pfchkusocampaign: {
            FILE_TYPES: [
                'image/png',
                'image/jpeg',
                'image/gif',
                'image/tiff',
                'application/pdf'
            ],
            FILE_ENDINGS: [
                'png',
                'jpeg',
                'jpg',
                'gif',
                'tiff',
                'pdf'
            ]
        },
        efuisettings: {
            DOCUMENTS_MONTHS_IN_PAST: 24
        },
        efmailbox: {
            FILE_TYPES: [
                'text/plain',
                'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
                'application/msword',
                'application/pdf',
                'image/gif',
                'image/jpeg',
                'image/png',
                'image/bmp',
                'text/xml',
                'text/csv'
            ],
            FILE_ENDINGS: [
                'txt',
                'docx',
                'doc',
                'pdf',
                'gif',
                'jpg',
                'jpeg',
                'png',
                'bmp',
                'xml',
                'csv'
            ],
            folder: {
                INBOX: 0,
                SENT: 1,
                NEW: 2
            }
        }
    },
    initialization: {
        property: {
            NAME: 'data-initialized',
            VALUE: true
        }
    },
    overlay: {
        overlayType: {
            CONTENT_OVERLAY: 'content_overlay',
            DIALOG: 'dialog'
        }
    },
    uimarketsegment: {
        PRIVATE_CUSTOMER: 0,
        BUSINESS_CUSTOMER: 1
    },
    regexp: {
        EMAIL_PATTERN: /^[a-zA-Z0-9\.!#$%&'\*\+\/=\?\^_`{\|}~\-]{0,63}[a-zA-Z0-9!#$%&'\*\+\/=\?\^_`{\|}~\-]@(?:[^\.\s@]{1,63}\.)+(?:[^\.\s@]{2,63})+$/gi,
        PHONE_NUMBER_WITHOUT_PREFIX: '([0-9]{3}\\s?[0-9]{2}\\s?[0-9]{2})',
        PHONE_NUMBER_PLUSFORTYONE_PREFIX: '^(\\+|00)\\d{2}\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$'
    },
    form: {
        validations: {
            CHALLENGE: 'challenge',
            AMOUNT_RANGE_MIN: 'amountRangeMin',
            AMOUNT_RANGE_MAX: 'amountRangeMax'
        }
    },
    windows: {
        HELP: 'help',
        BILLER_REGISTRATION: 'billerRegistration'
    },
    threeDSecureStates: {
        FIDO: 0,
        OTP: 1,
        STATIC: 2,
        NOT_REGISTERED: 3
    },
    logging: {
        levels: {
            DEBUG: {
                name: 'debug',
                ordinal: 1
            },
            INFO: {
                name: 'info',
                ordinal: 2
            },
            WARN: {
                name: 'warn',
                ordinal: 3
            },
            ERROR: {
                name: 'error',
                ordinal: 4
            },
            OFF: {
                name: 'off',
                ordinal: 99
            }
        }
    }
};
window.isApp = document.cookie.indexOf('appdevice') >= 0;
window.isTouch = 'ontouchstart' in window;
if (window.isApp) {
    window.isIOS = document.cookie.indexOf('appos=ios') >= 0;
    window.isAndroid = document.cookie.indexOf('appos=android') >= 0
}
window.isTabletApp = document.cookie.indexOf('appdevice=tablet') >= 0;
window.isMobileApp = document.cookie.indexOf('appdevice=handheld') >= 0;
String.prototype.hashCode = function hashCode() {
    var hash = 0,
        i,
        chr,
        len;
    if (0 === this.length) return hash;
    for (i = 0, len = this.length; i < len; i++) {
        chr = this.charCodeAt(i);
        hash = (hash << 5) - hash + chr;
        hash |= 0
    }
    return hash
};
var pf = window.pf || {
};
pf.globals = pf.globals || {
};
pf.globals.WIDGET_COUNTER = new MessageCounter;
checkWidgetsStatus();
var importScript = function (head) {
    'use strict';
    return function (source, onload) {
        var importedScript = document.createElement('script');
        importedScript.type = 'text/javascript';
        if (onload) importedScript.onload = onload;
        head.appendChild(importedScript);
        importedScript.src = source
    }
}(document.head || document.getElementsByTagName('head') [0]);
window.addEventListener('unhandledrejection', function (e) {
    e.preventDefault();
    throw e.detail.reason
});
define('text', [
    'module'
], function (e) {
    'use strict';
    function g(e, n) {
        return void 0 === e || '' === e ? n : e
    }
    var l,
        o,
        a,
        s,
        u,
        r = [
            'Msxml2.XMLHTTP',
            'Microsoft.XMLHTTP',
            'Msxml2.XMLHTTP.4.0'
        ],
        t = /^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,
        i = /<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,
        c = 'undefined' != typeof location && location.href,
        f = c && location.protocol && location.protocol.replace(/\:/, ''),
        p = c && location.hostname,
        d = c && (location.port || void 0),
        m = {
        },
        v = e.config && e.config() || {
        };
    return l = {
        version: '2.0.15',
        strip: function (e) {
            if (e) {
                var n = (e = e.replace(t, '')).match(i);
                n && (e = n[1])
            } else e = '';
            return e
        },
        jsEscape: function (e) {
            return e.replace(/(['\\])/g, '\\$1').replace(/[\f]/g, '\\f').replace(/[\b]/g, '\\b').replace(/[\n]/g, '\\n').replace(/[\t]/g, '\\t').replace(/[\r]/g, '\\r').replace(/[\u2028]/g, '\\u2028').replace(/[\u2029]/g, '\\u2029')
        },
        createXhr: v.createXhr || function () {
            var e,
                n,
                t;
            if ('undefined' != typeof XMLHttpRequest) return new XMLHttpRequest;
            if ('undefined' != typeof ActiveXObject) for (n = 0; n < 3; n += 1) {
                t = r[n];
                try {
                    e = new ActiveXObject(t)
                } catch (e) {
                }
                if (e) {
                    r = [
                        t
                    ];
                    break
                }
            }
            return e
        },
        parseName: function (e) {
            var n,
                t,
                r,
                o = !1,
                i = e.lastIndexOf('.'),
                a = 0 === e.indexOf('./') || 0 === e.indexOf('../');
            return - 1 !== i && (!a || 1 < i) ? (n = e.substring(0, i), t = e.substring(i + 1))  : n = e,
            - 1 !== (i = (r = t || n).indexOf('!')) && (o = 'strip' === r.substring(i + 1), r = r.substring(0, i), t ? t = r : n = r),
                {
                    moduleName: n,
                    ext: t,
                    strip: o
                }
        },
        xdRegExp: /^((\w+)\:)?\/\/([^\/\\]+)/,
        useXhr: function (e, n, t, r) {
            var o,
                i,
                a,
                s = l.xdRegExp.exec(e);
            return !s || (o = s[2], a = (i = (i = s[3]).split(':')) [1], i = i[0], (!o || o === n) && (!i || i.toLowerCase() === t.toLowerCase()) && (!a && !i || function (e, n, t, r) {
                if (n === r) return !0;
                if (e === t) {
                    if ('http' === e) return g(n, '80') === g(r, '80');
                    if ('https' === e) return g(n, '443') === g(r, '443')
                }
                return !1
            }(o, a, n, r)))
        },
        finishLoad: function (e, n, t, r) {
            t = n ? l.strip(t)  : t,
            v.isBuild && (m[e] = t),
                r(t)
        },
        load: function (n, e, t, r) {
            if (r && r.isBuild && !r.inlineText) t();
            else {
                v.isBuild = r && r.isBuild;
                var o = l.parseName(n),
                    i = o.moduleName + (o.ext ? '.' + o.ext : ''),
                    a = e.toUrl(i),
                    s = v.useXhr || l.useXhr;
                0 !== a.indexOf('empty:') ? !c || s(a, f, p, d) ? l.get(a, function (e) {
                    l.finishLoad(n, o.strip, e, t)
                }, function (e) {
                    t.error && t.error(e)
                })  : e([i], function (e) {
                    l.finishLoad(o.moduleName + '.' + o.ext, o.strip, e, t)
                })  : t()
            }
        },
        write: function (e, n, t, r) {
            if (m.hasOwnProperty(n)) {
                var o = l.jsEscape(m[n]);
                t.asModule(e + '!' + n, 'define(function () { return \'' + o + '\';});\n')
            }
        },
        writeFile: function (t, e, n, r, o) {
            var i = l.parseName(e),
                a = i.ext ? '.' + i.ext : '',
                s = i.moduleName + a,
                u = n.toUrl(i.moduleName + a) + '.js';
            l.load(s, n, function (e) {
                var n = function (e) {
                    return r(u, e)
                };
                n.asModule = function (e, n) {
                    return r.asModule(e, u, n)
                },
                    l.write(t, s, n, o)
            }, o)
        }
    },
        'node' === v.env || !v.env && 'undefined' != typeof process && process.versions && process.versions.node && !process.versions['node-webkit'] && !process.versions['atom-shell'] ? (o = require.nodeRequire('fs'), l.get = function (e, n, t) {
            try {
                var r = o.readFileSync(e, 'utf8');
                '﻿' === r[0] && (r = r.substring(1)),
                    n(r)
            } catch (e) {
                t && t(e)
            }
        })  : 'xhr' === v.env || !v.env && l.createXhr() ? l.get = function (r, o, i, e) {
                var n,
                    a = l.createXhr();
                if (a.open('GET', r, !0), e) for (n in e) e.hasOwnProperty(n) && a.setRequestHeader(n.toLowerCase(), e[n]);
                v.onXhr && v.onXhr(a, r),
                    a.onreadystatechange = function (e) {
                        var n,
                            t;
                        4 === a.readyState && (399 < (n = a.status || 0) && n < 600 ? ((t = new Error(r + ' HTTP status: ' + n)).xhr = a, i && i(t))  : o(a.responseText), v.onXhrComplete && v.onXhrComplete(a, r))
                    },
                    a.send(null)
            }
            : 'rhino' === v.env || !v.env && 'undefined' != typeof Packages && 'undefined' != typeof java ? l.get = function (e, n) {
                    var t,
                        r,
                        o = new java.io.File(e),
                        i = java.lang.System.getProperty('line.separator'),
                        a = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(o), 'utf-8')),
                        s = '';
                    try {
                        for (t = new java.lang.StringBuffer, (r = a.readLine()) && r.length() && 65279 === r.charAt(0) && (r = r.substring(1)), null !== r && t.append(r); null !== (r = a.readLine()); ) t.append(i),
                            t.append(r);
                        s = String(t.toString())
                    } finally {
                        a.close()
                    }
                    n(s)
                }
                : ('xpconnect' === v.env || !v.env && 'undefined' != typeof Components && Components.classes && Components.interfaces) && (a = Components.classes, s = Components.interfaces, Components.utils.import('resource://gre/modules/FileUtils.jsm'), u = '@mozilla.org/windows-registry-key;1' in a, l.get = function (e, n) {
                var t,
                    r,
                    o,
                    i = {
                    };
                u && (e = e.replace(/\//g, '\\')),
                    o = new FileUtils.File(e);
                try {
                    (t = a['@mozilla.org/network/file-input-stream;1'].createInstance(s.nsIFileInputStream)).init(o, 1, 0, !1),
                        (r = a['@mozilla.org/intl/converter-input-stream;1'].createInstance(s.nsIConverterInputStream)).init(t, 'utf-8', t.available(), s.nsIConverterInputStream.DEFAULT_REPLACEMENT_CHARACTER),
                        r.readString(t.available(), i),
                        r.close(),
                        t.close(),
                        n(i.value)
                } catch (e) {
                    throw new Error((o && o.path || '') + ': ' + e)
                }
            }),
        l
});
define('domReady', [
], function () {
    'use strict';
    function e(e) {
        var t;
        for (t = 0; e.length > t; t += 1) e[t](h)
    }
    function t() {
        var t = c;
        l && t.length && (c = [
        ], e(t))
    }
    function i() {
        l || (l = !0, o && clearInterval(o), t())
    }
    function n(e) {
        return l ? e(h)  : c.push(e),
            n
    }
    var r,
        s,
        o,
        a = 'undefined' != typeof window && window.document,
        l = !a,
        h = a ? document : null,
        c = [
        ];
    if (a) {
        if (document.addEventListener) document.addEventListener('DOMContentLoaded', i, !1),
            window.addEventListener('load', i, !1);
        else if (window.attachEvent) {
            window.attachEvent('onload', i),
                s = document.createElement('div');
            try {
                r = null === window.frameElement
            } catch (u) {
            }
            s.doScroll && r && window.external && (o = setInterval(function () {
                try {
                    s.doScroll(),
                        i()
                } catch (e) {
                }
            }, 30))
        }
        'complete' === document.readyState && i()
    }
    return n.version = '2.0.1',
        n.load = function (e, t, i, r) {
            r.isBuild ? i(null)  : n(i)
        },
        n
});
!function (e, t) {
    'object' == typeof exports && 'undefined' != typeof module ? module.exports = t()  : 'function' == typeof define && define.amd ? define('moment', t)  : e.moment = t()
}(this, function () {
    'use strict';
    function c() {
        return e.apply(null, arguments)
    }
    function o(e) {
        return e instanceof Array || '[object Array]' === Object.prototype.toString.call(e)
    }
    function u(e) {
        return null != e && '[object Object]' === Object.prototype.toString.call(e)
    }
    function l(e) {
        return void 0 === e
    }
    function h(e) {
        return 'number' == typeof e || '[object Number]' === Object.prototype.toString.call(e)
    }
    function d(e) {
        return e instanceof Date || '[object Date]' === Object.prototype.toString.call(e)
    }
    function f(e, t) {
        var n,
            s = [
            ];
        for (n = 0; n < e.length; ++n) s.push(t(e[n], n));
        return s
    }
    function m(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    function _(e, t) {
        for (var n in t) m(t, n) && (e[n] = t[n]);
        return m(t, 'toString') && (e.toString = t.toString),
        m(t, 'valueOf') && (e.valueOf = t.valueOf),
            e
    }
    function y(e, t, n, s) {
        return Tt(e, t, n, s, !0).utc()
    }
    function g(e) {
        return null == e._pf && (e._pf = {
            empty: !1,
            unusedTokens: [
            ],
            unusedInput: [
            ],
            overflow: - 2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
            parsedDateParts: [
            ],
            meridiem: null,
            rfc2822: !1,
            weekdayMismatch: !1
        }),
            e._pf
    }
    function v(e) {
        if (null == e._isValid) {
            var t = g(e),
                n = i.call(t.parsedDateParts, function (e) {
                    return null != e
                }),
                s = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && n);
            if (e._strict && (s = s && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour), null != Object.isFrozen && Object.isFrozen(e)) return s;
            e._isValid = s
        }
        return e._isValid
    }
    function p(e) {
        var t = y(NaN);
        return null != e ? _(g(t), e)  : g(t).userInvalidated = !0,
            t
    }
    function w(e, t) {
        var n,
            s,
            i;
        if (l(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), l(t._i) || (e._i = t._i), l(t._f) || (e._f = t._f), l(t._l) || (e._l = t._l), l(t._strict) || (e._strict = t._strict), l(t._tzm) || (e._tzm = t._tzm), l(t._isUTC) || (e._isUTC = t._isUTC), l(t._offset) || (e._offset = t._offset), l(t._pf) || (e._pf = g(t)), l(t._locale) || (e._locale = t._locale), 0 < r.length) for (n = 0; n < r.length; n++) l(i = t[s = r[n]]) || (e[s] = i);
        return e
    }
    function M(e) {
        w(this, e),
            this._d = new Date(null != e._d ? e._d.getTime()  : NaN),
        this.isValid() || (this._d = new Date(NaN)),
        !1 === t && (t = !0, c.updateOffset(this), t = !1)
    }
    function k(e) {
        return e instanceof M || null != e && null != e._isAMomentObject
    }
    function S(e) {
        return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
    }
    function D(e) {
        var t = + e,
            n = 0;
        return 0 !== t && isFinite(t) && (n = S(t)),
            n
    }
    function a(e, t, n) {
        var s,
            i = Math.min(e.length, t.length),
            r = Math.abs(e.length - t.length),
            a = 0;
        for (s = 0; s < i; s++) (n && e[s] !== t[s] || !n && D(e[s]) !== D(t[s])) && a++;
        return a + r
    }
    function Y(e) {
        !1 === c.suppressDeprecationWarnings && 'undefined' != typeof console && console.warn && void 0
    }
    function n(i, r) {
        var a = !0;
        return _(function () {
            if (null != c.deprecationHandler && c.deprecationHandler(null, i), a) {
                for (var e, t = [
                ], n = 0; n < arguments.length; n++) {
                    if (e = '', 'object' == typeof arguments[n]) {
                        for (var s in e += '\n[' + n + '] ', arguments[0]) e += s + ': ' + arguments[0][s] + ', ';
                        e = e.slice(0, - 2)
                    } else e = arguments[n];
                    t.push(e)
                }
                Y(i + '\nArguments: ' + Array.prototype.slice.call(t).join('') + '\n' + (new Error).stack),
                    a = !1
            }
            return r.apply(this, arguments)
        }, r)
    }
    function T(e, t) {
        null != c.deprecationHandler && c.deprecationHandler(e, t),
        O[e] || (Y(t), O[e] = !0)
    }
    function b(e) {
        return e instanceof Function || '[object Function]' === Object.prototype.toString.call(e)
    }
    function x(e, t) {
        var n,
            s = _({
            }, e);
        for (n in t) m(t, n) && (u(e[n]) && u(t[n]) ? (s[n] = {
        }, _(s[n], e[n]), _(s[n], t[n]))  : null != t[n] ? s[n] = t[n] : delete s[n]);
        for (n in e) m(e, n) && !m(t, n) && u(e[n]) && (s[n] = _({
        }, s[n]));
        return s
    }
    function P(e) {
        null != e && this.set(e)
    }
    function C(e, t) {
        var n = e.toLowerCase();
        W[n] = W[n + 's'] = W[t] = e
    }
    function H(e) {
        return 'string' == typeof e ? W[e] || W[e.toLowerCase()] : void 0
    }
    function R(e) {
        var t,
            n,
            s = {
            };
        for (n in e) m(e, n) && (t = H(n)) && (s[t] = e[n]);
        return s
    }
    function F(e, t) {
        U[e] = t
    }
    function L(e, t, n) {
        var s = '' + Math.abs(e),
            i = t - s.length;
        return (0 <= e ? n ? '+' : '' : '-') + Math.pow(10, Math.max(0, i)).toString().substr(1) + s
    }
    function I(e, t, n, s) {
        var i = s;
        'string' == typeof s && (i = function () {
            return this[s]()
        }),
        e && (E[e] = i),
        t && (E[t[0]] = function () {
            return L(i.apply(this, arguments), t[1], t[2])
        }),
        n && (E[n] = function () {
            return this.localeData().ordinal(i.apply(this, arguments), e)
        })
    }
    function A(e, t) {
        return e.isValid() ? (t = j(t, e.localeData()), V[t] = V[t] || function (s) {
            var e,
                i,
                t,
                r = s.match(N);
            for (e = 0, i = r.length; e < i; e++) E[r[e]] ? r[e] = E[r[e]] : r[e] = (t = r[e]).match(/\[[\s\S]/) ? t.replace(/^\[|\]$/g, '')  : t.replace(/\\/g, '');
            return function (e) {
                var t,
                    n = '';
                for (t = 0; t < i; t++) n += b(r[t]) ? r[t].call(e, s)  : r[t];
                return n
            }
        }(t), V[t](e))  : e.localeData().invalidDate()
    }
    function j(e, t) {
        function s(e) {
            return t.longDateFormat(e) || e
        }
        var n = 5;
        for (G.lastIndex = 0; 0 <= n && G.test(e); ) e = e.replace(G, s),
            G.lastIndex = 0,
            n -= 1;
        return e
    }
    function ue(e, n, s) {
        oe[e] = b(n) ? n : function (e, t) {
            return e && s ? s : n
        }
    }
    function le(e, t) {
        return m(oe, e) ? oe[e](t._strict, t._locale)  : new RegExp(he(e.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (e, t, n, s, i) {
            return t || n || s || i
        })))
    }
    function he(e) {
        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
    }
    function ce(e, n) {
        var t,
            s = n;
        for ('string' == typeof e && (e = [
            e
        ]), h(n) && (s = function (e, t) {
            t[n] = D(e)
        }), t = 0; t < e.length; t++) de[e[t]] = s
    }
    function fe(e, i) {
        ce(e, function (e, t, n, s) {
            n._w = n._w || {
            },
                i(e, n._w, n, s)
        })
    }
    function Se(e) {
        return De(e) ? 366 : 365
    }
    function De(e) {
        return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
    }
    function Te(t, n) {
        return function (e) {
            return null != e ? (xe(this, t, e), c.updateOffset(this, n), this)  : be(this, t)
        }
    }
    function be(e, t) {
        return e.isValid() ? e._d['get' + (e._isUTC ? 'UTC' : '') + t]()  : NaN
    }
    function xe(e, t, n) {
        e.isValid() && !isNaN(n) && ('FullYear' === t && De(e.year()) && 1 === e.month() && 29 === e.date() ? e._d['set' + (e._isUTC ? 'UTC' : '') + t](n, e.month(), Pe(n, e.month()))  : e._d['set' + (e._isUTC ? 'UTC' : '') + t](n))
    }
    function Pe(e, t) {
        if (isNaN(e) || isNaN(t)) return NaN;
        var n,
            s = (t % (n = 12) + n) % n;
        return e += (t - s) / 12,
            1 === s ? De(e) ? 29 : 28 : 31 - s % 7 % 2
    }
    function Re(e, t) {
        var n;
        if (!e.isValid()) return e;
        if ('string' == typeof t) if (/^\d+$/.test(t)) t = D(t);
        else if (!h(t = e.localeData().monthsParse(t))) return e;
        return n = Math.min(e.date(), Pe(e.year(), t)),
            e._d['set' + (e._isUTC ? 'UTC' : '') + 'Month'](t, n),
            e
    }
    function Ue(e) {
        return null != e ? (Re(this, e), c.updateOffset(this, !0), this)  : be(this, 'Month')
    }
    function Ne() {
        function e(e, t) {
            return t.length - e.length
        }
        var t,
            n,
            s = [
            ],
            i = [
            ],
            r = [
            ];
        for (t = 0; t < 12; t++) n = y([2000,
            t]),
            s.push(this.monthsShort(n, '')),
            i.push(this.months(n, '')),
            r.push(this.months(n, '')),
            r.push(this.monthsShort(n, ''));
        for (s.sort(e), i.sort(e), r.sort(e), t = 0; t < 12; t++) s[t] = he(s[t]),
            i[t] = he(i[t]);
        for (t = 0; t < 24; t++) r[t] = he(r[t]);
        this._monthsRegex = new RegExp('^(' + r.join('|') + ')', 'i'),
            this._monthsShortRegex = this._monthsRegex,
            this._monthsStrictRegex = new RegExp('^(' + i.join('|') + ')', 'i'),
            this._monthsShortStrictRegex = new RegExp('^(' + s.join('|') + ')', 'i')
    }
    function Ge(e) {
        var t;
        if (e < 100 && 0 <= e) {
            var n = Array.prototype.slice.call(arguments);
            n[0] = e + 400,
                t = new Date(Date.UTC.apply(null, n)),
            isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)
        } else t = new Date(Date.UTC.apply(null, arguments));
        return t
    }
    function Ve(e, t, n) {
        var s = 7 + t - n;
        return - ((7 + Ge(e, 0, s).getUTCDay() - t) % 7) + s - 1
    }
    function Ee(e, t, n, s, i) {
        var r,
            a,
            o = 1 + 7 * (t - 1) + (7 + n - s) % 7 + Ve(e, s, i);
        return a = o <= 0 ? Se(r = e - 1) + o : o > Se(e) ? (r = e + 1, o - Se(e))  : (r = e, o),
            {
                year: r,
                dayOfYear: a
            }
    }
    function Ie(e, t, n) {
        var s,
            i,
            r = Ve(e.year(), t, n),
            a = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
        return a < 1 ? s = a + Ae(i = e.year() - 1, t, n)  : a > Ae(e.year(), t, n) ? (s = a - Ae(e.year(), t, n), i = e.year() + 1)  : (i = e.year(), s = a),
            {
                week: s,
                year: i
            }
    }
    function Ae(e, t, n) {
        var s = Ve(e, t, n),
            i = Ve(e + 1, t, n);
        return (Se(e) - s + i) / 7
    }
    function je(e, t) {
        return e.slice(t, 7).concat(e.slice(0, t))
    }
    function Qe() {
        function e(e, t) {
            return t.length - e.length
        }
        var t,
            n,
            s,
            i,
            r,
            a = [
            ],
            o = [
            ],
            u = [
            ],
            l = [
            ];
        for (t = 0; t < 7; t++) n = y([2000,
            1]).day(t),
            s = this.weekdaysMin(n, ''),
            i = this.weekdaysShort(n, ''),
            r = this.weekdays(n, ''),
            a.push(s),
            o.push(i),
            u.push(r),
            l.push(s),
            l.push(i),
            l.push(r);
        for (a.sort(e), o.sort(e), u.sort(e), l.sort(e), t = 0; t < 7; t++) o[t] = he(o[t]),
            u[t] = he(u[t]),
            l[t] = he(l[t]);
        this._weekdaysRegex = new RegExp('^(' + l.join('|') + ')', 'i'),
            this._weekdaysShortRegex = this._weekdaysRegex,
            this._weekdaysMinRegex = this._weekdaysRegex,
            this._weekdaysStrictRegex = new RegExp('^(' + u.join('|') + ')', 'i'),
            this._weekdaysShortStrictRegex = new RegExp('^(' + o.join('|') + ')', 'i'),
            this._weekdaysMinStrictRegex = new RegExp('^(' + a.join('|') + ')', 'i')
    }
    function Xe() {
        return this.hours() % 12 || 12
    }
    function Ke(e, t) {
        I(e, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), t)
        })
    }
    function et(e, t) {
        return t._meridiemParse
    }
    function at(e) {
        return e ? e.toLowerCase().replace('_', '-')  : e
    }
    function ot(e) {
        var t = null;
        if (!it[e] && 'undefined' != typeof module && module && module.exports) try {
            t = tt._abbr,
                require('./locale/' + e),
                ut(t)
        } catch (e) {
        }
        return it[e]
    }
    function ut(e, t) {
        var n;
        return e && ((n = l(t) ? ht(e)  : lt(e, t)) ? tt = n : 'undefined' != typeof console && console.warn && void 0),
            tt._abbr
    }
    function lt(e, t) {
        if (null === t) return delete it[e],
            null;
        var n,
            s = st;
        if (t.abbr = e, null != it[e]) T('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'),
            s = it[e]._config;
        else if (null != t.parentLocale) if (null != it[t.parentLocale]) s = it[t.parentLocale]._config;
        else {
            if (null == (n = ot(t.parentLocale))) return rt[t.parentLocale] || (rt[t.parentLocale] = [
            ]),
                rt[t.parentLocale].push({
                    name: e,
                    config: t
                }),
                null;
            s = n._config
        }
        return it[e] = new P(x(s, t)),
        rt[e] && rt[e].forEach(function (e) {
            lt(e.name, e.config)
        }),
            ut(e),
            it[e]
    }
    function ht(e) {
        var t;
        if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return tt;
        if (!o(e)) {
            if (t = ot(e)) return t;
            e = [
                e
            ]
        }
        return function (e) {
            for (var t, n, s, i, r = 0; r < e.length; ) {
                for (t = (i = at(e[r]).split('-')).length, n = (n = at(e[r + 1])) ? n.split('-')  : null; 0 < t; ) {
                    if (s = ot(i.slice(0, t).join('-'))) return s;
                    if (n && n.length >= t && a(i, n, !0) >= t - 1) break;
                    t--
                }
                r++
            }
            return tt
        }(e)
    }
    function dt(e) {
        var t,
            n = e._a;
        return n && - 2 === g(e).overflow && (t = n[_e] < 0 || 11 < n[_e] ? _e : n[ye] < 1 || n[ye] > Pe(n[me], n[_e]) ? ye : n[ge] < 0 || 24 < n[ge] || 24 === n[ge] && (0 !== n[ve] || 0 !== n[pe] || 0 !== n[we]) ? ge : n[ve] < 0 || 59 < n[ve] ? ve : n[pe] < 0 || 59 < n[pe] ? pe : n[we] < 0 || 999 < n[we] ? we : - 1, g(e)._overflowDayOfYear && (t < me || ye < t) && (t = ye), g(e)._overflowWeeks && - 1 === t && (t = Me), g(e)._overflowWeekday && - 1 === t && (t = ke), g(e).overflow = t),
            e
    }
    function ct(e, t, n) {
        return null != e ? e : null != t ? t : n
    }
    function ft(e) {
        var t,
            n,
            s,
            i,
            r,
            a = [
            ];
        if (!e._d) {
            var o,
                u;
            for (o = e, u = new Date(c.now()), s = o._useUTC ? [
                u.getUTCFullYear(),
                u.getUTCMonth(),
                u.getUTCDate()
            ] : [
                u.getFullYear(),
                u.getMonth(),
                u.getDate()
            ], e._w && null == e._a[ye] && null == e._a[_e] && function (e) {
                var t,
                    n,
                    s,
                    i,
                    r,
                    a,
                    o,
                    u;
                if (null != (t = e._w).GG || null != t.W || null != t.E) r = 1,
                    a = 4,
                    n = ct(t.GG, e._a[me], Ie(bt(), 1, 4).year),
                    s = ct(t.W, 1),
                ((i = ct(t.E, 1)) < 1 || 7 < i) && (u = !0);
                else {
                    r = e._locale._week.dow,
                        a = e._locale._week.doy;
                    var l = Ie(bt(), r, a);
                    n = ct(t.gg, e._a[me], l.year),
                        s = ct(t.w, l.week),
                        null != t.d ? ((i = t.d) < 0 || 6 < i) && (u = !0)  : null != t.e ? (i = t.e + r, (t.e < 0 || 6 < t.e) && (u = !0))  : i = r
                }
                s < 1 || s > Ae(n, r, a) ? g(e)._overflowWeeks = !0 : null != u ? g(e)._overflowWeekday = !0 : (o = Ee(n, s, i, r, a), e._a[me] = o.year, e._dayOfYear = o.dayOfYear)
            }(e), null != e._dayOfYear && (r = ct(e._a[me], s[me]), (e._dayOfYear > Se(r) || 0 === e._dayOfYear) && (g(e)._overflowDayOfYear = !0), n = Ge(r, 0, e._dayOfYear), e._a[_e] = n.getUTCMonth(), e._a[ye] = n.getUTCDate()), t = 0; t < 3 && null == e._a[t]; ++t) e._a[t] = a[t] = s[t];
            for (; t < 7; t++) e._a[t] = a[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
            24 === e._a[ge] && 0 === e._a[ve] && 0 === e._a[pe] && 0 === e._a[we] && (e._nextDay = !0, e._a[ge] = 0),
                e._d = (e._useUTC ? Ge : function (e, t, n, s, i, r, a) {
                    var o;
                    return e < 100 && 0 <= e ? (o = new Date(e + 400, t, n, s, i, r, a), isFinite(o.getFullYear()) && o.setFullYear(e))  : o = new Date(e, t, n, s, i, r, a),
                        o
                }).apply(null, a),
                i = e._useUTC ? e._d.getUTCDay()  : e._d.getDay(),
            null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            e._nextDay && (e._a[ge] = 24),
            e._w && void 0 !== e._w.d && e._w.d !== i && (g(e).weekdayMismatch = !0)
        }
    }
    function wt(e) {
        var t,
            n,
            s,
            i,
            r,
            a,
            o = e._i,
            u = mt.exec(o) || _t.exec(o);
        if (u) {
            for (g(e).iso = !0, t = 0, n = gt.length; t < n; t++) if (gt[t][1].exec(u[1])) {
                i = gt[t][0],
                    s = !1 !== gt[t][2];
                break
            }
            if (null == i) return void (e._isValid = !1);
            if (u[3]) {
                for (t = 0, n = vt.length; t < n; t++) if (vt[t][1].exec(u[3])) {
                    r = (u[2] || ' ') + vt[t][0];
                    break
                }
                if (null == r) return void (e._isValid = !1)
            }
            if (!s && null != r) return void (e._isValid = !1);
            if (u[4]) {
                if (!yt.exec(u[4])) return void (e._isValid = !1);
                a = 'Z'
            }
            e._f = i + (r || '') + (a || ''),
                Yt(e)
        } else e._isValid = !1
    }
    function kt(e, t, n, s, i, r) {
        var a = [
            function (e) {
                var t = parseInt(e, 10);
                if (t <= 49) return 2000 + t;
                if (t <= 999) return 1900 + t;
                else return t
            }(e),
            He.indexOf(t),
            parseInt(n, 10),
            parseInt(s, 10),
            parseInt(i, 10)
        ];
        return r && a.push(parseInt(r, 10)),
            a
    }
    function Dt(e) {
        var t,
            n,
            s,
            i = Mt.exec(e._i.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, ''));
        if (i) {
            var r = kt(i[4], i[3], i[2], i[5], i[6], i[7]);
            if (t = i[1], n = r, s = e, t && ze.indexOf(t) !== new Date(n[0], n[1], n[2]).getDay() && (g(s).weekdayMismatch = !0, !(s._isValid = !1))) return;
            e._a = r,
                e._tzm = function (e, t, n) {
                    if (e) return St[e];
                    if (t) return 0;
                    var s = parseInt(n, 10),
                        i = s % 100;
                    return (s - i) / 100 * 60 + i
                }(i[8], i[9], i[10]),
                e._d = Ge.apply(null, e._a),
                e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                g(e).rfc2822 = !0
        } else e._isValid = !1
    }
    function Yt(e) {
        if (e._f !== c.ISO_8601) if (e._f !== c.RFC_2822) {
            e._a = [
            ],
                g(e).empty = !0;
            var t,
                n,
                s,
                i,
                r,
                a,
                o,
                u,
                l = '' + e._i,
                h = l.length,
                d = 0;
            for (s = j(e._f, e._locale).match(N) || [
            ], t = 0; t < s.length; t++) i = s[t],
            (n = (l.match(le(i, e)) || [
            ]) [0]) && (0 < (r = l.substr(0, l.indexOf(n))).length && g(e).unusedInput.push(r), l = l.slice(l.indexOf(n) + n.length), d += n.length),
                E[i] ? (n ? g(e).empty = !1 : g(e).unusedTokens.push(i), a = i, u = e, null != (o = n) && m(de, a) && de[a](o, u._a, u, a))  : e._strict && !n && g(e).unusedTokens.push(i);
            g(e).charsLeftOver = h - d,
            0 < l.length && g(e).unusedInput.push(l),
            e._a[ge] <= 12 && !0 === g(e).bigHour && 0 < e._a[ge] && (g(e).bigHour = void 0),
                g(e).parsedDateParts = e._a.slice(0),
                g(e).meridiem = e._meridiem,
                e._a[ge] = function (e, t, n) {
                    var s;
                    if (null == n) return t;
                    else return null != e.meridiemHour ? e.meridiemHour(t, n)  : (null != e.isPM && ((s = e.isPM(n)) && t < 12 && (t += 12), s || 12 !== t || (t = 0)), t)
                }(e._locale, e._a[ge], e._meridiem),
                ft(e),
                dt(e)
        } else Dt(e);
        else wt(e)
    }
    function Ot(e) {
        var t,
            n,
            s,
            i,
            r = e._i,
            a = e._f;
        return e._locale = e._locale || ht(e._l),
            null === r || void 0 === a && '' === r ? p({
                nullInput: !0
            })  : ('string' == typeof r && (e._i = r = e._locale.preparse(r)), k(r) ? new M(dt(r))  : (d(r) ? e._d = r : o(a) ? function (e) {
                var t,
                    n,
                    s,
                    i,
                    r;
                if (0 === e._f.length) return g(e).invalidFormat = !0,
                    e._d = new Date(NaN);
                for (i = 0; i < e._f.length; i++) r = 0,
                    t = w({
                    }, e),
                null != e._useUTC && (t._useUTC = e._useUTC),
                    t._f = e._f[i],
                    Yt(t),
                v(t) && (r += g(t).charsLeftOver, r += 10 * g(t).unusedTokens.length, g(t).score = r, (null == s || r < s) && (s = r, n = t));
                _(e, n || t)
            }(e)  : a ? Yt(e)  : l(n = (t = e)._i) ? t._d = new Date(c.now())  : d(n) ? t._d = new Date(n.valueOf())  : 'string' == typeof n ? (s = t, null === (i = pt.exec(s._i)) ? (wt(s), !1 === s._isValid && (delete s._isValid, Dt(s), !1 === s._isValid && (delete s._isValid, c.createFromInputFallback(s))))  : s._d = new Date( + i[1]))  : o(n) ? (t._a = f(n.slice(0), function (e) {
                return parseInt(e, 10)
            }), ft(t))  : u(n) ? function (e) {
                if (!e._d) {
                    var t = R(e._i);
                    e._a = f([t.year,
                        t.month,
                        t.day || t.date,
                        t.hour,
                        t.minute,
                        t.second,
                        t.millisecond], function (e) {
                        return e && parseInt(e, 10)
                    }),
                        ft(e)
                }
            }(t)  : h(n) ? t._d = new Date(n)  : c.createFromInputFallback(t), v(e) || (e._d = null), e))
    }
    function Tt(e, t, n, s, i) {
        var r,
            a = {
            };
        return !0 !== n && !1 !== n || (s = n, n = void 0),
        (u(e) && function (e) {
            if (Object.getOwnPropertyNames) return 0 === Object.getOwnPropertyNames(e).length;
            var t;
            for (t in e) if (e.hasOwnProperty(t)) return !1;
            return !0
        }(e) || o(e) && 0 === e.length) && (e = void 0),
            a._isAMomentObject = !0,
            a._useUTC = a._isUTC = i,
            a._l = n,
            a._i = e,
            a._f = t,
            a._strict = s,
        (r = new M(dt(Ot(a))))._nextDay && (r.add(1, 'd'), r._nextDay = void 0),
            r
    }
    function bt(e, t, n, s) {
        return Tt(e, t, n, s, !1)
    }
    function Wt(e, t) {
        var n,
            s;
        if (1 === t.length && o(t[0]) && (t = t[0]), !t.length) return bt();
        for (n = t[0], s = 1; s < t.length; ++s) t[s].isValid() && !t[s][e](n) || (n = t[s]);
        return n
    }
    function Ht(e) {
        var t = R(e),
            n = t.year || 0,
            s = t.quarter || 0,
            i = t.month || 0,
            r = t.week || t.isoWeek || 0,
            a = t.day || 0,
            o = t.hour || 0,
            u = t.minute || 0,
            l = t.second || 0,
            h = t.millisecond || 0;
        this._isValid = function (e) {
            for (var t in e) if ( - 1 === Ye.call(Ct, t) || null != e[t] && isNaN(e[t])) return !1;
            for (var n = !1, s = 0; s < Ct.length; ++s) if (e[Ct[s]]) {
                if (n) return !1;
                parseFloat(e[Ct[s]]) !== D(e[Ct[s]]) && (n = !0)
            }
            return !0
        }(t),
            this._milliseconds = + h + 1000 * l + 60000 * u + 1000 * o * 60 * 60,
            this._days = + a + 7 * r,
            this._months = + i + 3 * s + 12 * n,
            this._data = {
            },
            this._locale = ht(),
            this._bubble()
    }
    function Rt(e) {
        return e instanceof Ht
    }
    function Ut(e) {
        return e < 0 ? - 1 * Math.round( - 1 * e)  : Math.round(e)
    }
    function Ft(e, n) {
        I(e, 0, 0, function () {
            var e = this.utcOffset(),
                t = '+';
            return e < 0 && (e = - e, t = '-'),
            t + L(~~(e / 60), 2) + n + L(~~e % 60, 2)
        })
    }
    function Nt(e, t) {
        var n = (t || '').match(e);
        if (null === n) return null;
        var s = ((n[n.length - 1] || [
            ]) + '').match(Lt) || [
                '-',
                0,
                0
            ],
            i = 60 * s[1] + D(s[2]);
        return 0 === i ? 0 : '+' === s[0] ? i : - i
    }
    function Gt(e, t) {
        var n,
            s;
        return t._isUTC ? (n = t.clone(), s = (k(e) || d(e) ? e.valueOf()  : bt(e).valueOf()) - n.valueOf(), n._d.setTime(n._d.valueOf() + s), c.updateOffset(n, !1), n)  : bt(e).local()
    }
    function Vt(e) {
        return 15 * - Math.round(e._d.getTimezoneOffset() / 15)
    }
    function Et() {
        return !!this.isValid() && this._isUTC && 0 === this._offset
    }
    function jt(e, t) {
        var n,
            s,
            i,
            r = e,
            a = null;
        return Rt(e) ? r = {
                ms: e._milliseconds,
                d: e._days,
                M: e._months
            }
            : h(e) ? (r = {
            }, t ? r[t] = e : r.milliseconds = e)  : (a = It.exec(e)) ? (n = '-' === a[1] ? - 1 : 1, r = {
                y: 0,
                d: D(a[ye]) * n,
                h: D(a[ge]) * n,
                m: D(a[ve]) * n,
                s: D(a[pe]) * n,
                ms: D(Ut(1000 * a[we])) * n
            })  : (a = At.exec(e)) ? (n = '-' === a[1] ? - 1 : 1, r = {
                y: Zt(a[2], n),
                M: Zt(a[3], n),
                w: Zt(a[4], n),
                d: Zt(a[5], n),
                h: Zt(a[6], n),
                m: Zt(a[7], n),
                s: Zt(a[8], n)
            })  : null == r ? r = {
                }
                : 'object' == typeof r && ('from' in r || 'to' in r) && (i = function (e, t) {
                var n;
                if (!e.isValid() || !t.isValid()) return {
                    milliseconds: 0,
                    months: 0
                };
                t = Gt(t, e),
                    e.isBefore(t) ? n = zt(e, t)  : ((n = zt(t, e)).milliseconds = - n.milliseconds, n.months = - n.months);
                return n
            }(bt(r.from), bt(r.to)), (r = {
            }).ms = i.milliseconds, r.M = i.months),
            s = new Ht(r),
        Rt(e) && m(e, '_locale') && (s._locale = e._locale),
            s
    }
    function Zt(e, t) {
        var n = e && parseFloat(e.replace(',', '.'));
        return (isNaN(n) ? 0 : n) * t
    }
    function zt(e, t) {
        var n = {
        };
        return n.months = t.month() - e.month() + 12 * (t.year() - e.year()),
        e.clone().add(n.months, 'M').isAfter(t) && --n.months,
            n.milliseconds = + t - + e.clone().add(n.months, 'M'),
            n
    }
    function $t(s, i) {
        return function (e, t) {
            var n;
            return null === t || isNaN( + t) || (T(i, 'moment().' + i + '(period, number) is deprecated. Please use moment().' + i + '(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'), n = e, e = t, t = n),
                qt(this, jt(e = 'string' == typeof e ? + e : e, t), s),
                this
        }
    }
    function qt(e, t, n, s) {
        var i = t._milliseconds,
            r = Ut(t._days),
            a = Ut(t._months);
        e.isValid() && (s = null == s || s, a && Re(e, be(e, 'Month') + a * n), r && xe(e, 'Date', be(e, 'Date') + r * n), i && e._d.setTime(e._d.valueOf() + i * n), s && c.updateOffset(e, r || a))
    }
    function Qt(e, t) {
        var n = 12 * (t.year() - e.year()) + (t.month() - e.month()),
            s = e.clone().add(n, 'months');
        return - (n + (t - s < 0 ? (t - s) / (s - e.clone().add(n - 1, 'months'))  : (t - s) / (e.clone().add(n + 1, 'months') - s))) || 0
    }
    function Xt(e) {
        var t;
        return void 0 === e ? this._locale._abbr : (null != (t = ht(e)) && (this._locale = t), this)
    }
    function en() {
        return this._locale
    }
    function nn(e, t) {
        return (e % t + t) % t
    }
    function sn(e, t, n) {
        return e < 100 && 0 <= e ? new Date(e + 400, t, n) - tn : new Date(e, t, n).valueOf()
    }
    function rn(e, t, n) {
        return e < 100 && 0 <= e ? Date.UTC(e + 400, t, n) - tn : Date.UTC(e, t, n)
    }
    function an(e, t) {
        I(0, [
            e,
            e.length
        ], 0, t)
    }
    function on(e, t, n, s, i) {
        var r;
        return null == e ? Ie(this, s, i).year : ((r = Ae(e, s, i)) < t && (t = r), function (e, t, n, s, i) {
            var r = Ee(e, t, n, s, i),
                a = Ge(r.year, 0, r.dayOfYear);
            return this.year(a.getUTCFullYear()),
                this.month(a.getUTCMonth()),
                this.date(a.getUTCDate()),
                this
        }.call(this, e, t, n, s, i))
    }
    function cn(e, t) {
        t[we] = D(1000 * ('0.' + e))
    }
    function _n(e) {
        return e
    }
    function gn(e, t, n, s) {
        var i = ht(),
            r = y().set(s, t);
        return i[n](r, e)
    }
    function vn(e, t, n) {
        if (h(e) && (t = e, e = void 0), e = e || '', null != t) return gn(e, t, n, 'month');
        var s,
            i = [
            ];
        for (s = 0; s < 12; s++) i[s] = gn(e, s, n, 'month');
        return i
    }
    function pn(e, t, n, s) {
        t = ('boolean' == typeof e ? h(t) && (n = t, t = void 0)  : (t = e, e = !1, h(n = t) && (n = t, t = void 0)), t || '');
        var i,
            r = ht(),
            a = e ? r._week.dow : 0;
        if (null != n) return gn(t, (n + a) % 7, s, 'day');
        var o = [
        ];
        for (i = 0; i < 7; i++) o[i] = gn(t, (i + a) % 7, s, 'day');
        return o
    }
    function Mn(e, t, n, s) {
        var i = jt(t, n);
        return e._milliseconds += s * i._milliseconds,
            e._days += s * i._days,
            e._months += s * i._months,
            e._bubble()
    }
    function kn(e) {
        return e < 0 ? Math.floor(e)  : Math.ceil(e)
    }
    function Sn(e) {
        return 4800 * e / 146097
    }
    function Dn(e) {
        return 146097 * e / 4800
    }
    function Yn(e) {
        return function () {
            return this.as(e)
        }
    }
    function Un(e) {
        return function () {
            return this.isValid() ? this._data[e] : NaN
        }
    }
    function zn(e) {
        return (0 < e) - (e < 0) || + e
    }
    function $n() {
        if (!this.isValid()) return this.localeData().invalidDate();
        var e,
            t,
            n = Zn(this._milliseconds) / 1000,
            s = Zn(this._days),
            i = Zn(this._months);
        t = S((e = S(n / 60)) / 60),
            n %= 60,
            e %= 60;
        var r = S(i / 12),
            a = i %= 12,
            o = s,
            u = t,
            l = e,
            h = n ? n.toFixed(3).replace(/\.?0+$/, '')  : '',
            d = this.asSeconds();
        if (!d) return 'P0D';
        var c = d < 0 ? '-' : '',
            f = zn(this._months) !== zn(d) ? '-' : '',
            m = zn(this._days) !== zn(d) ? '-' : '',
            _ = zn(this._milliseconds) !== zn(d) ? '-' : '';
        return c + 'P' + (r ? f + r + 'Y' : '') + (a ? f + a + 'M' : '') + (o ? m + o + 'D' : '') + (u || l || h ? 'T' : '') + (u ? _ + u + 'H' : '') + (l ? _ + l + 'M' : '') + (h ? _ + h + 'S' : '')
    }
    var e,
        i;
    i = Array.prototype.some ? Array.prototype.some : function (e) {
        for (var t = Object(this), n = t.length >>> 0, s = 0; s < n; s++) if (s in t && e.call(this, t[s], s, t)) return !0;
        return !1
    };
    var r = c.momentProperties = [
        ],
        t = !1,
        s,
        O = {
        };
    c.suppressDeprecationWarnings = !1,
        c.deprecationHandler = null,
        s = Object.keys ? Object.keys : function (e) {
            var t,
                n = [
                ];
            for (t in e) m(e, t) && n.push(t);
            return n
        };
    var W = {
        },
        U = {
        },
        N = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        G = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        V = {
        },
        E = {
        },
        Z = /\d/,
        z = /\d\d/,
        $ = /\d{3}/,
        q = /\d{4}/,
        J = /[+-]?\d{6}/,
        B = /\d\d?/,
        Q = /\d\d\d\d?/,
        X = /\d\d\d\d\d\d?/,
        K = /\d{1,3}/,
        ee = /\d{1,4}/,
        te = /[+-]?\d{1,6}/,
        ne = /\d+/,
        se = /[+-]?\d+/,
        ie = /Z|[+-]\d\d:?\d\d/gi,
        re = /Z|[+-]\d\d(?::?\d\d)?/gi,
        ae = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        oe = {
        },
        de = {
        },
        me = 0,
        _e = 1,
        ye = 2,
        ge = 3,
        ve = 4,
        pe = 5,
        we = 6,
        Me = 7,
        ke = 8;
    I('Y', 0, 0, function () {
        var e = this.year();
        return e <= 9999 ? '' + e : '+' + e
    }),
        I(0, [
            'YY',
            2
        ], 0, function () {
            return this.year() % 100
        }),
        I(0, [
            'YYYY',
            4
        ], 0, 'year'),
        I(0, [
            'YYYYY',
            5
        ], 0, 'year'),
        I(0, [
            'YYYYYY',
            6,
            !0
        ], 0, 'year'),
        C('year', 'y'),
        F('year', 1),
        ue('Y', se),
        ue('YY', B, z),
        ue('YYYY', ee, q),
        ue('YYYYY', te, J),
        ue('YYYYYY', te, J),
        ce(['YYYYY',
            'YYYYYY'], me),
        ce('YYYY', function (e, t) {
            t[me] = 2 === e.length ? c.parseTwoDigitYear(e)  : D(e)
        }),
        ce('YY', function (e, t) {
            t[me] = c.parseTwoDigitYear(e)
        }),
        ce('Y', function (e, t) {
            t[me] = parseInt(e, 10)
        }),
        c.parseTwoDigitYear = function (e) {
            return D(e) + (68 < D(e) ? 1900 : 2000)
        };
    var Ye,
        Oe = Te('FullYear', !0);
    Ye = Array.prototype.indexOf ? Array.prototype.indexOf : function (e) {
        var t;
        for (t = 0; t < this.length; ++t) if (this[t] === e) return t;
        return - 1
    },
        I('M', [
            'MM',
            2
        ], 'Mo', function () {
            return this.month() + 1
        }),
        I('MMM', 0, 0, function (e) {
            return this.localeData().monthsShort(this, e)
        }),
        I('MMMM', 0, 0, function (e) {
            return this.localeData().months(this, e)
        }),
        C('month', 'M'),
        F('month', 8),
        ue('M', B),
        ue('MM', B, z),
        ue('MMM', function (e, t) {
            return t.monthsShortRegex(e)
        }),
        ue('MMMM', function (e, t) {
            return t.monthsRegex(e)
        }),
        ce(['M',
            'MM'], function (e, t) {
            t[_e] = D(e) - 1
        }),
        ce(['MMM',
            'MMMM'], function (e, t, n, s) {
            var i = n._locale.monthsParse(e, s, n._strict);
            null != i ? t[_e] = i : g(n).invalidMonth = e
        });
    var We = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        Ce = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        He = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        Fe = ae,
        Le = ae;
    I('w', [
        'ww',
        2
    ], 'wo', 'week'),
        I('W', [
            'WW',
            2
        ], 'Wo', 'isoWeek'),
        C('week', 'w'),
        C('isoWeek', 'W'),
        F('week', 5),
        F('isoWeek', 5),
        ue('w', B),
        ue('ww', B, z),
        ue('W', B),
        ue('WW', B, z),
        fe(['w',
            'ww',
            'W',
            'WW'], function (e, t, n, s) {
            t[s.substr(0, 1)] = D(e)
        });
    I('d', 0, 'do', 'day'),
        I('dd', 0, 0, function (e) {
            return this.localeData().weekdaysMin(this, e)
        }),
        I('ddd', 0, 0, function (e) {
            return this.localeData().weekdaysShort(this, e)
        }),
        I('dddd', 0, 0, function (e) {
            return this.localeData().weekdays(this, e)
        }),
        I('e', 0, 0, 'weekday'),
        I('E', 0, 0, 'isoWeekday'),
        C('day', 'd'),
        C('weekday', 'e'),
        C('isoWeekday', 'E'),
        F('day', 11),
        F('weekday', 11),
        F('isoWeekday', 11),
        ue('d', B),
        ue('e', B),
        ue('E', B),
        ue('dd', function (e, t) {
            return t.weekdaysMinRegex(e)
        }),
        ue('ddd', function (e, t) {
            return t.weekdaysShortRegex(e)
        }),
        ue('dddd', function (e, t) {
            return t.weekdaysRegex(e)
        }),
        fe(['dd',
            'ddd',
            'dddd'], function (e, t, n, s) {
            var i = n._locale.weekdaysParse(e, s, n._strict);
            null != i ? t.d = i : g(n).invalidWeekday = e
        }),
        fe(['d',
            'e',
            'E'], function (e, t, n, s) {
            t[s] = D(e)
        });
    var Ze = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        ze = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        $e = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        qe = ae,
        Je = ae,
        Be = ae;
    I('H', [
        'HH',
        2
    ], 0, 'hour'),
        I('h', [
            'hh',
            2
        ], 0, Xe),
        I('k', [
            'kk',
            2
        ], 0, function () {
            return this.hours() || 24
        }),
        I('hmm', 0, 0, function () {
            return '' + Xe.apply(this) + L(this.minutes(), 2)
        }),
        I('hmmss', 0, 0, function () {
            return '' + Xe.apply(this) + L(this.minutes(), 2) + L(this.seconds(), 2)
        }),
        I('Hmm', 0, 0, function () {
            return '' + this.hours() + L(this.minutes(), 2)
        }),
        I('Hmmss', 0, 0, function () {
            return '' + this.hours() + L(this.minutes(), 2) + L(this.seconds(), 2)
        }),
        Ke('a', !0),
        Ke('A', !1),
        C('hour', 'h'),
        F('hour', 13),
        ue('a', et),
        ue('A', et),
        ue('H', B),
        ue('h', B),
        ue('k', B),
        ue('HH', B, z),
        ue('hh', B, z),
        ue('kk', B, z),
        ue('hmm', Q),
        ue('hmmss', X),
        ue('Hmm', Q),
        ue('Hmmss', X),
        ce(['H',
            'HH'], ge),
        ce(['k',
            'kk'], function (e, t, n) {
            var s = D(e);
            t[ge] = 24 === s ? 0 : s
        }),
        ce(['a',
            'A'], function (e, t, n) {
            n._isPm = n._locale.isPM(e),
                n._meridiem = e
        }),
        ce(['h',
            'hh'], function (e, t, n) {
            t[ge] = D(e),
                g(n).bigHour = !0
        }),
        ce('hmm', function (e, t, n) {
            var s = e.length - 2;
            t[ge] = D(e.substr(0, s)),
                t[ve] = D(e.substr(s)),
                g(n).bigHour = !0
        }),
        ce('hmmss', function (e, t, n) {
            var s = e.length - 4,
                i = e.length - 2;
            t[ge] = D(e.substr(0, s)),
                t[ve] = D(e.substr(s, 2)),
                t[pe] = D(e.substr(i)),
                g(n).bigHour = !0
        }),
        ce('Hmm', function (e, t, n) {
            var s = e.length - 2;
            t[ge] = D(e.substr(0, s)),
                t[ve] = D(e.substr(s))
        }),
        ce('Hmmss', function (e, t, n) {
            var s = e.length - 4,
                i = e.length - 2;
            t[ge] = D(e.substr(0, s)),
                t[ve] = D(e.substr(s, 2)),
                t[pe] = D(e.substr(i))
        });
    var tt,
        nt = Te('Hours', !0),
        st = {
            calendar: {
                sameDay: '[Today at] LT',
                nextDay: '[Tomorrow at] LT',
                nextWeek: 'dddd [at] LT',
                lastDay: '[Yesterday at] LT',
                lastWeek: '[Last] dddd [at] LT',
                sameElse: 'L'
            },
            longDateFormat: {
                LTS: 'h:mm:ss A',
                LT: 'h:mm A',
                L: 'MM/DD/YYYY',
                LL: 'MMMM D, YYYY',
                LLL: 'MMMM D, YYYY h:mm A',
                LLLL: 'dddd, MMMM D, YYYY h:mm A'
            },
            invalidDate: 'Invalid date',
            ordinal: '%d',
            dayOfMonthOrdinalParse: /\d{1,2}/,
            relativeTime: {
                future: 'in %s',
                past: '%s ago',
                s: 'a few seconds',
                ss: '%d seconds',
                m: 'a minute',
                mm: '%d minutes',
                h: 'an hour',
                hh: '%d hours',
                d: 'a day',
                dd: '%d days',
                M: 'a month',
                MM: '%d months',
                y: 'a year',
                yy: '%d years'
            },
            months: Ce,
            monthsShort: He,
            week: {
                dow: 0,
                doy: 6
            },
            weekdays: Ze,
            weekdaysMin: $e,
            weekdaysShort: ze,
            meridiemParse: /[ap]\.?m?\.?/i
        },
        it = {
        },
        rt = {
        },
        mt = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        _t = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        yt = /Z|[+-]\d\d(?::?\d\d)?/,
        gt = [
            ['YYYYYY-MM-DD',
                /[+-]\d{6}-\d\d-\d\d/],
            [
                'YYYY-MM-DD',
                /\d{4}-\d\d-\d\d/
            ],
            [
                'GGGG-[W]WW-E',
                /\d{4}-W\d\d-\d/
            ],
            [
                'GGGG-[W]WW',
                /\d{4}-W\d\d/,
                !1
            ],
            [
                'YYYY-DDD',
                /\d{4}-\d{3}/
            ],
            [
                'YYYY-MM',
                /\d{4}-\d\d/,
                !1
            ],
            [
                'YYYYYYMMDD',
                /[+-]\d{10}/
            ],
            [
                'YYYYMMDD',
                /\d{8}/
            ],
            [
                'GGGG[W]WWE',
                /\d{4}W\d{3}/
            ],
            [
                'GGGG[W]WW',
                /\d{4}W\d{2}/,
                !1
            ],
            [
                'YYYYDDD',
                /\d{7}/
            ]
        ],
        vt = [
            ['HH:mm:ss.SSSS',
                /\d\d:\d\d:\d\d\.\d+/],
            [
                'HH:mm:ss,SSSS',
                /\d\d:\d\d:\d\d,\d+/
            ],
            [
                'HH:mm:ss',
                /\d\d:\d\d:\d\d/
            ],
            [
                'HH:mm',
                /\d\d:\d\d/
            ],
            [
                'HHmmss.SSSS',
                /\d\d\d\d\d\d\.\d+/
            ],
            [
                'HHmmss,SSSS',
                /\d\d\d\d\d\d,\d+/
            ],
            [
                'HHmmss',
                /\d\d\d\d\d\d/
            ],
            [
                'HHmm',
                /\d\d\d\d/
            ],
            [
                'HH',
                /\d\d/
            ]
        ],
        pt = /^\/?Date\((\-?\d+)/i,
        Mt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        St = {
            UT: 0,
            GMT: 0,
            EDT: - 240,
            EST: - 300,
            CDT: - 300,
            CST: - 360,
            MDT: - 360,
            MST: - 420,
            PDT: - 420,
            PST: - 480
        };
    c.createFromInputFallback = n('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (e) {
        e._d = new Date(e._i + (e._useUTC ? ' UTC' : ''))
    }),
        c.ISO_8601 = function () {
        },
        c.RFC_2822 = function () {
        };
    var xt = n('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var e = bt.apply(null, arguments);
            return this.isValid() && e.isValid() ? e < this ? this : e : p()
        }),
        Pt = n('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {
            var e = bt.apply(null, arguments);
            return this.isValid() && e.isValid() ? this < e ? this : e : p()
        }),
        Ct = [
            'year',
            'quarter',
            'month',
            'week',
            'day',
            'hour',
            'minute',
            'second',
            'millisecond'
        ];
    Ft('Z', ':'),
        Ft('ZZ', ''),
        ue('Z', re),
        ue('ZZ', re),
        ce(['Z',
            'ZZ'], function (e, t, n) {
            n._useUTC = !0,
                n._tzm = Nt(re, e)
        });
    var Lt = /([\+\-]|\d\d)/gi;
    c.updateOffset = function () {
    };
    var It = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,
        At = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    jt.fn = Ht.prototype,
        jt.invalid = function () {
            return jt(NaN)
        };
    var Jt = $t(1, 'add'),
        Bt = $t( - 1, 'subtract');
    c.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ',
        c.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';
    var Kt = n('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (e) {
            return void 0 === e ? this.localeData()  : this.locale(e)
        }),
        tn = 12622780800000;
    I(0, [
        'gg',
        2
    ], 0, function () {
        return this.weekYear() % 100
    }),
        I(0, [
            'GG',
            2
        ], 0, function () {
            return this.isoWeekYear() % 100
        }),
        an('gggg', 'weekYear'),
        an('ggggg', 'weekYear'),
        an('GGGG', 'isoWeekYear'),
        an('GGGGG', 'isoWeekYear'),
        C('weekYear', 'gg'),
        C('isoWeekYear', 'GG'),
        F('weekYear', 1),
        F('isoWeekYear', 1),
        ue('G', se),
        ue('g', se),
        ue('GG', B, z),
        ue('gg', B, z),
        ue('GGGG', ee, q),
        ue('gggg', ee, q),
        ue('GGGGG', te, J),
        ue('ggggg', te, J),
        fe(['gggg',
            'ggggg',
            'GGGG',
            'GGGGG'], function (e, t, n, s) {
            t[s.substr(0, 2)] = D(e)
        }),
        fe(['gg',
            'GG'], function (e, t, n, s) {
            t[s] = c.parseTwoDigitYear(e)
        }),
        I('Q', 0, 'Qo', 'quarter'),
        C('quarter', 'Q'),
        F('quarter', 7),
        ue('Q', Z),
        ce('Q', function (e, t) {
            t[_e] = 3 * (D(e) - 1)
        }),
        I('D', [
            'DD',
            2
        ], 'Do', 'date'),
        C('date', 'D'),
        F('date', 9),
        ue('D', B),
        ue('DD', B, z),
        ue('Do', function (e, t) {
            return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient
        }),
        ce(['D',
            'DD'], ye),
        ce('Do', function (e, t) {
            t[ye] = D(e.match(B) [0])
        });
    var un = Te('Date', !0);
    I('DDD', [
        'DDDD',
        3
    ], 'DDDo', 'dayOfYear'),
        C('dayOfYear', 'DDD'),
        F('dayOfYear', 4),
        ue('DDD', K),
        ue('DDDD', $),
        ce(['DDD',
            'DDDD'], function (e, t, n) {
            n._dayOfYear = D(e)
        }),
        I('m', [
            'mm',
            2
        ], 0, 'minute'),
        C('minute', 'm'),
        F('minute', 14),
        ue('m', B),
        ue('mm', B, z),
        ce(['m',
            'mm'], ve);
    var ln = Te('Minutes', !1);
    I('s', [
        'ss',
        2
    ], 0, 'second'),
        C('second', 's'),
        F('second', 15),
        ue('s', B),
        ue('ss', B, z),
        ce(['s',
            'ss'], pe);
    var hn,
        dn = Te('Seconds', !1);
    for (I('S', 0, 0, function () {
        return ~~(this.millisecond() / 100)
    }), I(0, [
        'SS',
        2
    ], 0, function () {
        return ~~(this.millisecond() / 10)
    }), I(0, [
        'SSS',
        3
    ], 0, 'millisecond'), I(0, [
        'SSSS',
        4
    ], 0, function () {
        return 10 * this.millisecond()
    }), I(0, [
        'SSSSS',
        5
    ], 0, function () {
        return 100 * this.millisecond()
    }), I(0, [
        'SSSSSS',
        6
    ], 0, function () {
        return 1000 * this.millisecond()
    }), I(0, [
        'SSSSSSS',
        7
    ], 0, function () {
        return 10000 * this.millisecond()
    }), I(0, [
        'SSSSSSSS',
        8
    ], 0, function () {
        return 100000 * this.millisecond()
    }), I(0, [
        'SSSSSSSSS',
        9
    ], 0, function () {
        return 1000000 * this.millisecond()
    }), C('millisecond', 'ms'), F('millisecond', 16), ue('S', K, Z), ue('SS', K, z), ue('SSS', K, $), hn = 'SSSS'; hn.length <= 9; hn += 'S') ue(hn, ne);
    for (hn = 'S'; hn.length <= 9; hn += 'S') ce(hn, cn);
    var fn = Te('Milliseconds', !1);
    I('z', 0, 0, 'zoneAbbr'),
        I('zz', 0, 0, 'zoneName');
    var mn = M.prototype;
    mn.add = Jt,
        mn.calendar = function (e, t) {
            var n = e || bt(),
                s = Gt(n, this).startOf('day'),
                i = c.calendarFormat(this, s) || 'sameElse',
                r = t && (b(t[i]) ? t[i].call(this, n)  : t[i]);
            return this.format(r || this.localeData().calendar(i, this, bt(n)))
        },
        mn.clone = function () {
            return new M(this)
        },
        mn.diff = function (e, t, n) {
            var s,
                i,
                r;
            if (!this.isValid()) return NaN;
            if (!(s = Gt(e, this)).isValid()) return NaN;
            switch (i = 60000 * (s.utcOffset() - this.utcOffset()), t = H(t)) {
                case 'year':
                    r = Qt(this, s) / 12;
                    break;
                case 'month':
                    r = Qt(this, s);
                    break;
                case 'quarter':
                    r = Qt(this, s) / 3;
                    break;
                case 'second':
                    r = (this - s) / 1000;
                    break;
                case 'minute':
                    r = (this - s) / 60000;
                    break;
                case 'hour':
                    r = (this - s) / 3600000;
                    break;
                case 'day':
                    r = (this - s - i) / 86400000;
                    break;
                case 'week':
                    r = (this - s - i) / 604800000;
                    break;
                default:
                    r = this - s
            }
            return n ? r : S(r)
        },
        mn.endOf = function (e) {
            var t;
            if (void 0 === (e = H(e)) || 'millisecond' === e || !this.isValid()) return this;
            var n = this._isUTC ? rn : sn;
            switch (e) {
                case 'year':
                    t = n(this.year() + 1, 0, 1) - 1;
                    break;
                case 'quarter':
                    t = n(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                    break;
                case 'month':
                    t = n(this.year(), this.month() + 1, 1) - 1;
                    break;
                case 'week':
                    t = n(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                    break;
                case 'isoWeek':
                    t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                    break;
                case 'day':
                case 'date':
                    t = n(this.year(), this.month(), this.date() + 1) - 1;
                    break;
                case 'hour':
                    t = this._d.valueOf(),
                        t += 3600000 - nn(t + (this._isUTC ? 0 : 60000 * this.utcOffset()), 3600000) - 1;
                    break;
                case 'minute':
                    t = this._d.valueOf(),
                        t += 60000 - nn(t, 60000) - 1;
                    break;
                case 'second':
                    t = this._d.valueOf(),
                        t += 1000 - nn(t, 1000) - 1
            }
            return this._d.setTime(t),
                c.updateOffset(this, !0),
                this
        },
        mn.format = function (e) {
            e || (e = this.isUtc() ? c.defaultFormatUtc : c.defaultFormat);
            var t = A(this, e);
            return this.localeData().postformat(t)
        },
        mn.from = function (e, t) {
            return this.isValid() && (k(e) && e.isValid() || bt(e).isValid()) ? jt({
                to: this,
                from: e
            }).locale(this.locale()).humanize(!t)  : this.localeData().invalidDate()
        },
        mn.fromNow = function (e) {
            return this.from(bt(), e)
        },
        mn.to = function (e, t) {
            return this.isValid() && (k(e) && e.isValid() || bt(e).isValid()) ? jt({
                from: this,
                to: e
            }).locale(this.locale()).humanize(!t)  : this.localeData().invalidDate()
        },
        mn.toNow = function (e) {
            return this.to(bt(), e)
        },
        mn.get = function (e) {
            return b(this[e = H(e)]) ? this[e]()  : this
        },
        mn.invalidAt = function () {
            return g(this).overflow
        },
        mn.isAfter = function (e, t) {
            var n = k(e) ? e : bt(e);
            return !(!this.isValid() || !n.isValid()) && ('millisecond' === (t = H(t) || 'millisecond') ? this.valueOf() > n.valueOf()  : n.valueOf() < this.clone().startOf(t).valueOf())
        },
        mn.isBefore = function (e, t) {
            var n = k(e) ? e : bt(e);
            return !(!this.isValid() || !n.isValid()) && ('millisecond' === (t = H(t) || 'millisecond') ? this.valueOf() < n.valueOf()  : this.clone().endOf(t).valueOf() < n.valueOf())
        },
        mn.isBetween = function (e, t, n, s) {
            var i = k(e) ? e : bt(e),
                r = k(t) ? t : bt(t);
            return !!(this.isValid() && i.isValid() && r.isValid()) && ('(' === (s = s || '()') [0] ? this.isAfter(i, n)  : !this.isBefore(i, n)) && (')' === s[1] ? this.isBefore(r, n)  : !this.isAfter(r, n))
        },
        mn.isSame = function (e, t) {
            var n,
                s = k(e) ? e : bt(e);
            return !(!this.isValid() || !s.isValid()) && ('millisecond' === (t = H(t) || 'millisecond') ? this.valueOf() === s.valueOf()  : (n = s.valueOf(), this.clone().startOf(t).valueOf() <= n && n <= this.clone().endOf(t).valueOf()))
        },
        mn.isSameOrAfter = function (e, t) {
            return this.isSame(e, t) || this.isAfter(e, t)
        },
        mn.isSameOrBefore = function (e, t) {
            return this.isSame(e, t) || this.isBefore(e, t)
        },
        mn.isValid = function () {
            return v(this)
        },
        mn.lang = Kt,
        mn.locale = Xt,
        mn.localeData = en,
        mn.max = Pt,
        mn.min = xt,
        mn.parsingFlags = function () {
            return _({
            }, g(this))
        },
        mn.set = function (e, t) {
            if ('object' == typeof e) for (var n = function (e) {
                var t = [
                ];
                for (var n in e) t.push({
                    unit: n,
                    priority: U[n]
                });
                return t.sort(function (e, t) {
                    return e.priority - t.priority
                }),
                    t
            }(e = R(e)), s = 0; s < n.length; s++) this[n[s].unit](e[n[s].unit]);
            else if (b(this[e = H(e)])) return this[e](t);
            return this
        },
        mn.startOf = function (e) {
            var t;
            if (void 0 === (e = H(e)) || 'millisecond' === e || !this.isValid()) return this;
            var n = this._isUTC ? rn : sn;
            switch (e) {
                case 'year':
                    t = n(this.year(), 0, 1);
                    break;
                case 'quarter':
                    t = n(this.year(), this.month() - this.month() % 3, 1);
                    break;
                case 'month':
                    t = n(this.year(), this.month(), 1);
                    break;
                case 'week':
                    t = n(this.year(), this.month(), this.date() - this.weekday());
                    break;
                case 'isoWeek':
                    t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                    break;
                case 'day':
                case 'date':
                    t = n(this.year(), this.month(), this.date());
                    break;
                case 'hour':
                    t = this._d.valueOf(),
                        t -= nn(t + (this._isUTC ? 0 : 60000 * this.utcOffset()), 3600000);
                    break;
                case 'minute':
                    t = this._d.valueOf(),
                        t -= nn(t, 60000);
                    break;
                case 'second':
                    t = this._d.valueOf(),
                        t -= nn(t, 1000)
            }
            return this._d.setTime(t),
                c.updateOffset(this, !0),
                this
        },
        mn.subtract = Bt,
        mn.toArray = function () {
            var e = this;
            return [e.year(),
                e.month(),
                e.date(),
                e.hour(),
                e.minute(),
                e.second(),
                e.millisecond()]
        },
        mn.toObject = function () {
            var e = this;
            return {
                years: e.year(),
                months: e.month(),
                date: e.date(),
                hours: e.hours(),
                minutes: e.minutes(),
                seconds: e.seconds(),
                milliseconds: e.milliseconds()
            }
        },
        mn.toDate = function () {
            return new Date(this.valueOf())
        },
        mn.toISOString = function (e) {
            if (!this.isValid()) return null;
            var t = !0 !== e,
                n = t ? this.clone().utc()  : this;
            return n.year() < 0 || 9999 < n.year() ? A(n, t ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ')  : b(Date.prototype.toISOString) ? t ? this.toDate().toISOString()  : new Date(this.valueOf() + 60 * this.utcOffset() * 1000).toISOString().replace('Z', A(n, 'Z'))  : A(n, t ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ')
        },
        mn.inspect = function () {
            if (!this.isValid()) return 'moment.invalid(/* ' + this._i + ' */)';
            var e = 'moment',
                t = '';
            this.isLocal() || (e = 0 === this.utcOffset() ? 'moment.utc' : 'moment.parseZone', t = 'Z');
            var n = '[' + e + '("]',
                s = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY',
                i = t + '[")]';
            return this.format(n + s + '-MM-DD[T]HH:mm:ss.SSS' + i)
        },
        mn.toJSON = function () {
            return this.isValid() ? this.toISOString()  : null
        },
        mn.toString = function () {
            return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')
        },
        mn.unix = function () {
            return Math.floor(this.valueOf() / 1000)
        },
        mn.valueOf = function () {
            return this._d.valueOf() - 60000 * (this._offset || 0)
        },
        mn.creationData = function () {
            return {
                input: this._i,
                format: this._f,
                locale: this._locale,
                isUTC: this._isUTC,
                strict: this._strict
            }
        },
        mn.year = Oe,
        mn.isLeapYear = function () {
            return De(this.year())
        },
        mn.weekYear = function (e) {
            return on.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
        },
        mn.isoWeekYear = function (e) {
            return on.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
        },
        mn.quarter = mn.quarters = function (e) {
            return null == e ? Math.ceil((this.month() + 1) / 3)  : this.month(3 * (e - 1) + this.month() % 3)
        },
        mn.month = Ue,
        mn.daysInMonth = function () {
            return Pe(this.year(), this.month())
        },
        mn.week = mn.weeks = function (e) {
            var t = this.localeData().week(this);
            return null == e ? t : this.add(7 * (e - t), 'd')
        },
        mn.isoWeek = mn.isoWeeks = function (e) {
            var t = Ie(this, 1, 4).week;
            return null == e ? t : this.add(7 * (e - t), 'd')
        },
        mn.weeksInYear = function () {
            var e = this.localeData()._week;
            return Ae(this.year(), e.dow, e.doy)
        },
        mn.isoWeeksInYear = function () {
            return Ae(this.year(), 1, 4)
        },
        mn.date = un,
        mn.day = mn.days = function (e) {
            if (!this.isValid()) return null != e ? this : NaN;
            var t,
                n,
                s = this._isUTC ? this._d.getUTCDay()  : this._d.getDay();
            return null != e ? (t = e, n = this.localeData(), e = 'string' != typeof t ? t : isNaN(t) ? 'number' == typeof (t = n.weekdaysParse(t)) ? t : null : parseInt(t, 10), this.add(e - s, 'd'))  : s
        },
        mn.weekday = function (e) {
            if (!this.isValid()) return null != e ? this : NaN;
            var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return null == e ? t : this.add(e - t, 'd')
        },
        mn.isoWeekday = function (e) {
            if (!this.isValid()) return null != e ? this : NaN;
            if (null == e) return this.day() || 7;
            var t,
                n,
                s = (t = e, n = this.localeData(), 'string' == typeof t ? n.weekdaysParse(t) % 7 || 7 : isNaN(t) ? null : t);
            return this.day(this.day() % 7 ? s : s - 7)
        },
        mn.dayOfYear = function (e) {
            var t = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 86400000) + 1;
            return null == e ? t : this.add(e - t, 'd')
        },
        mn.hour = mn.hours = nt,
        mn.minute = mn.minutes = ln,
        mn.second = mn.seconds = dn,
        mn.millisecond = mn.milliseconds = fn,
        mn.utcOffset = function (e, t, n) {
            var s,
                i = this._offset || 0;
            if (!this.isValid()) return null != e ? this : NaN;
            if (null == e) return this._isUTC ? i : Vt(this);
            if ('string' == typeof e) {
                if (null === (e = Nt(re, e))) return this
            } else Math.abs(e) < 16 && !n && (e *= 60);
            return !this._isUTC && t && (s = Vt(this)),
                this._offset = e,
                this._isUTC = !0,
            null != s && this.add(s, 'm'),
            i !== e && (!t || this._changeInProgress ? qt(this, jt(e - i, 'm'), 1, !1)  : this._changeInProgress || (this._changeInProgress = !0, c.updateOffset(this, !0), this._changeInProgress = null)),
                this
        },
        mn.utc = function (e) {
            return this.utcOffset(0, e)
        },
        mn.local = function (e) {
            return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(Vt(this), 'm')),
                this
        },
        mn.parseZone = function () {
            if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
            else if ('string' == typeof this._i) {
                var e = Nt(ie, this._i);
                null != e ? this.utcOffset(e)  : this.utcOffset(0, !0)
            }
            return this
        },
        mn.hasAlignedHourOffset = function (e) {
            return !!this.isValid() && (e = e ? bt(e).utcOffset()  : 0, (this.utcOffset() - e) % 60 == 0)
        },
        mn.isDST = function () {
            return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
        },
        mn.isLocal = function () {
            return !!this.isValid() && !this._isUTC
        },
        mn.isUtcOffset = function () {
            return !!this.isValid() && this._isUTC
        },
        mn.isUtc = Et,
        mn.isUTC = Et,
        mn.zoneAbbr = function () {
            return this._isUTC ? 'UTC' : ''
        },
        mn.zoneName = function () {
            return this._isUTC ? 'Coordinated Universal Time' : ''
        },
        mn.dates = n('dates accessor is deprecated. Use date instead.', un),
        mn.months = n('months accessor is deprecated. Use month instead', Ue),
        mn.years = n('years accessor is deprecated. Use year instead', Oe),
        mn.zone = n('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', function (e, t) {
            return null != e ? ('string' != typeof e && (e = - e), this.utcOffset(e, t), this)  : - this.utcOffset()
        }),
        mn.isDSTShifted = n('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', function () {
            if (!l(this._isDSTShifted)) return this._isDSTShifted;
            var e = {
            };
            if (w(e, this), (e = Ot(e))._a) {
                var t = e._isUTC ? y(e._a)  : bt(e._a);
                this._isDSTShifted = this.isValid() && 0 < a(e._a, t.toArray())
            } else this._isDSTShifted = !1;
            return this._isDSTShifted
        });
    var yn = P.prototype;
    yn.calendar = function (e, t, n) {
        var s = this._calendar[e] || this._calendar.sameElse;
        return b(s) ? s.call(t, n)  : s
    },
        yn.longDateFormat = function (e) {
            var t = this._longDateFormat[e],
                n = this._longDateFormat[e.toUpperCase()];
            return t || !n ? t : (this._longDateFormat[e] = n.replace(/MMMM|MM|DD|dddd/g, function (e) {
                return e.slice(1)
            }), this._longDateFormat[e])
        },
        yn.invalidDate = function () {
            return this._invalidDate
        },
        yn.ordinal = function (e) {
            return this._ordinal.replace('%d', e)
        },
        yn.preparse = _n,
        yn.postformat = _n,
        yn.relativeTime = function (e, t, n, s) {
            var i = this._relativeTime[n];
            return b(i) ? i(e, t, n, s)  : i.replace(/%d/i, e)
        },
        yn.pastFuture = function (e, t) {
            var n = this._relativeTime[0 < e ? 'future' : 'past'];
            return b(n) ? n(t)  : n.replace(/%s/i, t)
        },
        yn.set = function (e) {
            var t,
                n;
            for (n in e) b(t = e[n]) ? this[n] = t : this['_' + n] = t;
            this._config = e,
                this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\d{1,2}/.source)
        },
        yn.months = function (e, t) {
            return e ? o(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || We).test(t) ? 'format' : 'standalone'][e.month()] : o(this._months) ? this._months : this._months.standalone
        },
        yn.monthsShort = function (e, t) {
            return e ? o(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[We.test(t) ? 'format' : 'standalone'][e.month()] : o(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
        },
        yn.monthsParse = function (e, t, n) {
            var s,
                i,
                r;
            if (this._monthsParseExact) return function (e, t, n) {
                var s,
                    i,
                    r,
                    a = e.toLocaleLowerCase();
                if (!this._monthsParse) for (this._monthsParse = [
                ], this._longMonthsParse = [
                ], this._shortMonthsParse = [
                ], s = 0; s < 12; ++s) r = y([2000,
                    s]),
                    this._shortMonthsParse[s] = this.monthsShort(r, '').toLocaleLowerCase(),
                    this._longMonthsParse[s] = this.months(r, '').toLocaleLowerCase();
                return n ? 'MMM' === t ? - 1 !== (i = Ye.call(this._shortMonthsParse, a)) ? i : null : - 1 !== (i = Ye.call(this._longMonthsParse, a)) ? i : null : 'MMM' === t ? - 1 !== (i = Ye.call(this._shortMonthsParse, a)) ? i : - 1 !== (i = Ye.call(this._longMonthsParse, a)) ? i : null : - 1 !== (i = Ye.call(this._longMonthsParse, a)) ? i : - 1 !== (i = Ye.call(this._shortMonthsParse, a)) ? i : null
            }.call(this, e, t, n);
            for (this._monthsParse || (this._monthsParse = [
            ], this._longMonthsParse = [
            ], this._shortMonthsParse = [
            ]), s = 0; s < 12; s++) {
                if (i = y([2000,
                    s]), n && !this._longMonthsParse[s] && (this._longMonthsParse[s] = new RegExp('^' + this.months(i, '').replace('.', '') + '$', 'i'), this._shortMonthsParse[s] = new RegExp('^' + this.monthsShort(i, '').replace('.', '') + '$', 'i')), n || this._monthsParse[s] || (r = '^' + this.months(i, '') + '|^' + this.monthsShort(i, ''), this._monthsParse[s] = new RegExp(r.replace('.', ''), 'i')), n && 'MMMM' === t && this._longMonthsParse[s].test(e)) return s;
                if (n && 'MMM' === t && this._shortMonthsParse[s].test(e)) return s;
                if (!n && this._monthsParse[s].test(e)) return s
            }
        },
        yn.monthsRegex = function (e) {
            return this._monthsParseExact ? (m(this, '_monthsRegex') || Ne.call(this), e ? this._monthsStrictRegex : this._monthsRegex)  : (m(this, '_monthsRegex') || (this._monthsRegex = Le), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
        },
        yn.monthsShortRegex = function (e) {
            return this._monthsParseExact ? (m(this, '_monthsRegex') || Ne.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex)  : (m(this, '_monthsShortRegex') || (this._monthsShortRegex = Fe), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
        },
        yn.week = function (e) {
            return Ie(e, this._week.dow, this._week.doy).week
        },
        yn.firstDayOfYear = function () {
            return this._week.doy
        },
        yn.firstDayOfWeek = function () {
            return this._week.dow
        },
        yn.weekdays = function (e, t) {
            var n = o(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? 'format' : 'standalone'];
            return !0 === e ? je(n, this._week.dow)  : e ? n[e.day()] : n
        },
        yn.weekdaysMin = function (e) {
            return !0 === e ? je(this._weekdaysMin, this._week.dow)  : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
        },
        yn.weekdaysShort = function (e) {
            return !0 === e ? je(this._weekdaysShort, this._week.dow)  : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
        },
        yn.weekdaysParse = function (e, t, n) {
            var s,
                i,
                r;
            if (this._weekdaysParseExact) return function (e, t, n) {
                var s,
                    i,
                    r,
                    a = e.toLocaleLowerCase();
                if (!this._weekdaysParse) for (this._weekdaysParse = [
                ], this._shortWeekdaysParse = [
                ], this._minWeekdaysParse = [
                ], s = 0; s < 7; ++s) r = y([2000,
                    1]).day(s),
                    this._minWeekdaysParse[s] = this.weekdaysMin(r, '').toLocaleLowerCase(),
                    this._shortWeekdaysParse[s] = this.weekdaysShort(r, '').toLocaleLowerCase(),
                    this._weekdaysParse[s] = this.weekdays(r, '').toLocaleLowerCase();
                return n ? 'dddd' === t ? - 1 !== (i = Ye.call(this._weekdaysParse, a)) ? i : null : 'ddd' === t ? - 1 !== (i = Ye.call(this._shortWeekdaysParse, a)) ? i : null : - 1 !== (i = Ye.call(this._minWeekdaysParse, a)) ? i : null : 'dddd' === t ? - 1 !== (i = Ye.call(this._weekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._shortWeekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._minWeekdaysParse, a)) ? i : null : 'ddd' === t ? - 1 !== (i = Ye.call(this._shortWeekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._weekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._minWeekdaysParse, a)) ? i : null : - 1 !== (i = Ye.call(this._minWeekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._weekdaysParse, a)) ? i : - 1 !== (i = Ye.call(this._shortWeekdaysParse, a)) ? i : null
            }.call(this, e, t, n);
            for (this._weekdaysParse || (this._weekdaysParse = [
            ], this._minWeekdaysParse = [
            ], this._shortWeekdaysParse = [
            ], this._fullWeekdaysParse = [
            ]), s = 0; s < 7; s++) {
                if (i = y([2000,
                    1]).day(s), n && !this._fullWeekdaysParse[s] && (this._fullWeekdaysParse[s] = new RegExp('^' + this.weekdays(i, '').replace('.', '\\.?') + '$', 'i'), this._shortWeekdaysParse[s] = new RegExp('^' + this.weekdaysShort(i, '').replace('.', '\\.?') + '$', 'i'), this._minWeekdaysParse[s] = new RegExp('^' + this.weekdaysMin(i, '').replace('.', '\\.?') + '$', 'i')), this._weekdaysParse[s] || (r = '^' + this.weekdays(i, '') + '|^' + this.weekdaysShort(i, '') + '|^' + this.weekdaysMin(i, ''), this._weekdaysParse[s] = new RegExp(r.replace('.', ''), 'i')), n && 'dddd' === t && this._fullWeekdaysParse[s].test(e)) return s;
                if (n && 'ddd' === t && this._shortWeekdaysParse[s].test(e)) return s;
                if (n && 'dd' === t && this._minWeekdaysParse[s].test(e)) return s;
                if (!n && this._weekdaysParse[s].test(e)) return s
            }
        },
        yn.weekdaysRegex = function (e) {
            return this._weekdaysParseExact ? (m(this, '_weekdaysRegex') || Qe.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex)  : (m(this, '_weekdaysRegex') || (this._weekdaysRegex = qe), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
        },
        yn.weekdaysShortRegex = function (e) {
            return this._weekdaysParseExact ? (m(this, '_weekdaysRegex') || Qe.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)  : (m(this, '_weekdaysShortRegex') || (this._weekdaysShortRegex = Je), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
        },
        yn.weekdaysMinRegex = function (e) {
            return this._weekdaysParseExact ? (m(this, '_weekdaysRegex') || Qe.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)  : (m(this, '_weekdaysMinRegex') || (this._weekdaysMinRegex = Be), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
        },
        yn.isPM = function (e) {
            return 'p' === (e + '').toLowerCase().charAt(0)
        },
        yn.meridiem = function (e, t, n) {
            return 11 < e ? n ? 'pm' : 'PM' : n ? 'am' : 'AM'
        },
        ut('en', {
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (e) {
                var t = e % 10;
                return e + (1 === D(e % 100 / 10) ? 'th' : 1 === t ? 'st' : 2 === t ? 'nd' : 3 === t ? 'rd' : 'th')
            }
        }),
        c.lang = n('moment.lang is deprecated. Use moment.locale instead.', ut),
        c.langData = n('moment.langData is deprecated. Use moment.localeData instead.', ht);
    var wn = Math.abs,
        On = Yn('ms'),
        Tn = Yn('s'),
        bn = Yn('m'),
        xn = Yn('h'),
        Pn = Yn('d'),
        Wn = Yn('w'),
        Cn = Yn('M'),
        Hn = Yn('Q'),
        Rn = Yn('y'),
        Fn = Un('milliseconds'),
        Ln = Un('seconds'),
        Nn = Un('minutes'),
        Gn = Un('hours'),
        Vn = Un('days'),
        En = Un('months'),
        In = Un('years'),
        An = Math.round,
        jn = {
            ss: 44,
            s: 45,
            m: 45,
            h: 22,
            d: 26,
            M: 11
        },
        Zn = Math.abs,
        qn = Ht.prototype;
    return qn.isValid = function () {
        return this._isValid
    },
        qn.abs = function () {
            var e = this._data;
            return this._milliseconds = wn(this._milliseconds),
                this._days = wn(this._days),
                this._months = wn(this._months),
                e.milliseconds = wn(e.milliseconds),
                e.seconds = wn(e.seconds),
                e.minutes = wn(e.minutes),
                e.hours = wn(e.hours),
                e.months = wn(e.months),
                e.years = wn(e.years),
                this
        },
        qn.add = function (e, t) {
            return Mn(this, e, t, 1)
        },
        qn.subtract = function (e, t) {
            return Mn(this, e, t, - 1)
        },
        qn.as = function (e) {
            if (!this.isValid()) return NaN;
            var t,
                n,
                s = this._milliseconds;
            if ('month' === (e = H(e)) || 'quarter' === e || 'year' === e) switch (t = this._days + s / 86400000, n = this._months + Sn(t), e) {
                case 'month':
                    return n;
                case 'quarter':
                    return n / 3;
                case 'year':
                    return n / 12
            } else switch (t = this._days + Math.round(Dn(this._months)), e) {
                case 'week':
                    return t / 7 + s / 604800000;
                case 'day':
                    return t + s / 86400000;
                case 'hour':
                    return 24 * t + s / 3600000;
                case 'minute':
                    return 1440 * t + s / 60000;
                case 'second':
                    return 86400 * t + s / 1000;
                case 'millisecond':
                    return Math.floor(86400000 * t) + s;
                default:
                    throw new Error('Unknown unit ' + e)
            }
        },
        qn.asMilliseconds = On,
        qn.asSeconds = Tn,
        qn.asMinutes = bn,
        qn.asHours = xn,
        qn.asDays = Pn,
        qn.asWeeks = Wn,
        qn.asMonths = Cn,
        qn.asQuarters = Hn,
        qn.asYears = Rn,
        qn.valueOf = function () {
            return this.isValid() ? this._milliseconds + 86400000 * this._days + this._months % 12 * 2592000000 + 31536000000 * D(this._months / 12)  : NaN
        },
        qn._bubble = function () {
            var e,
                t,
                n,
                s,
                i,
                r = this._milliseconds,
                a = this._days,
                o = this._months,
                u = this._data;
            return 0 <= r && 0 <= a && 0 <= o || r <= 0 && a <= 0 && o <= 0 || (r += 86400000 * kn(Dn(o) + a), o = a = 0),
                u.milliseconds = r % 1000,
                e = S(r / 1000),
                u.seconds = e % 60,
                t = S(e / 60),
                u.minutes = t % 60,
                n = S(t / 60),
                u.hours = n % 24,
                o += i = S(Sn(a += S(n / 24))),
                a -= kn(Dn(i)),
                s = S(o / 12),
                o %= 12,
                u.days = a,
                u.months = o,
                u.years = s,
                this
        },
        qn.clone = function () {
            return jt(this)
        },
        qn.get = function (e) {
            return e = H(e),
                this.isValid() ? this[e + 's']()  : NaN
        },
        qn.milliseconds = Fn,
        qn.seconds = Ln,
        qn.minutes = Nn,
        qn.hours = Gn,
        qn.days = Vn,
        qn.weeks = function () {
            return S(this.days() / 7)
        },
        qn.months = En,
        qn.years = In,
        qn.humanize = function (e) {
            if (!this.isValid()) return this.localeData().invalidDate();
            var t,
                n,
                s,
                i,
                r,
                a,
                o,
                u,
                l,
                h,
                d,
                c = this.localeData(),
                f = (n = !e, s = c, i = jt(t = this).abs(), r = An(i.as('s')), a = An(i.as('m')), o = An(i.as('h')), u = An(i.as('d')), l = An(i.as('M')), h = An(i.as('y')), (d = r <= jn.ss && [
                    's',
                    r
                ] || r < jn.s && [
                    'ss',
                    r
                ] || a <= 1 && [
                    'm'
                ] || a < jn.m && [
                    'mm',
                    a
                ] || o <= 1 && [
                    'h'
                ] || o < jn.h && [
                    'hh',
                    o
                ] || u <= 1 && [
                    'd'
                ] || u < jn.d && [
                    'dd',
                    u
                ] || l <= 1 && [
                    'M'
                ] || l < jn.M && [
                    'MM',
                    l
                ] || h <= 1 && [
                    'y'
                ] || [
                    'yy',
                    h
                ]) [2] = n, d[3] = 0 < + t, d[4] = s, function (e, t, n, s, i) {
                    return i.relativeTime(t || 1, !!n, e, s)
                }.apply(null, d));
            return e && (f = c.pastFuture( + this, f)),
                c.postformat(f)
        },
        qn.toISOString = $n,
        qn.toString = $n,
        qn.toJSON = $n,
        qn.locale = Xt,
        qn.localeData = en,
        qn.toIsoString = n('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', $n),
        qn.lang = Kt,
        I('X', 0, 0, 'unix'),
        I('x', 0, 0, 'valueOf'),
        ue('x', se),
        ue('X', /[+-]?\d+(\.\d{1,3})?/),
        ce('X', function (e, t, n) {
            n._d = new Date(1000 * parseFloat(e, 10))
        }),
        ce('x', function (e, t, n) {
            n._d = new Date(D(e))
        }),
        c.version = '2.24.0',
        e = bt,
        c.fn = mn,
        c.min = function () {
            return Wt('isBefore', [
            ].slice.call(arguments, 0))
        },
        c.max = function () {
            return Wt('isAfter', [
            ].slice.call(arguments, 0))
        },
        c.now = function () {
            return Date.now ? Date.now()  : + new Date
        },
        c.utc = y,
        c.unix = function (e) {
            return bt(1000 * e)
        },
        c.months = function (e, t) {
            return vn(e, t, 'months')
        },
        c.isDate = d,
        c.locale = ut,
        c.invalid = p,
        c.duration = jt,
        c.isMoment = k,
        c.weekdays = function (e, t, n) {
            return pn(e, t, n, 'weekdays')
        },
        c.parseZone = function () {
            return bt.apply(null, arguments).parseZone()
        },
        c.localeData = ht,
        c.isDuration = Rt,
        c.monthsShort = function (e, t) {
            return vn(e, t, 'monthsShort')
        },
        c.weekdaysMin = function (e, t, n) {
            return pn(e, t, n, 'weekdaysMin')
        },
        c.defineLocale = lt,
        c.updateLocale = function (e, t) {
            if (null != t) {
                var n,
                    s,
                    i = st;
                null != (s = ot(e)) && (i = s._config),
                    (n = new P(t = x(i, t))).parentLocale = it[e],
                    it[e] = n,
                    ut(e)
            } else null != it[e] && (null != it[e].parentLocale ? it[e] = it[e].parentLocale : null != it[e] && delete it[e]);
            return it[e]
        },
        c.locales = function () {
            return s(it)
        },
        c.weekdaysShort = function (e, t, n) {
            return pn(e, t, n, 'weekdaysShort')
        },
        c.normalizeUnits = H,
        c.relativeTimeRounding = function (e) {
            return void 0 === e ? An : 'function' == typeof e && (An = e, !0)
        },
        c.relativeTimeThreshold = function (e, t) {
            return void 0 !== jn[e] && (void 0 === t ? jn[e] : (jn[e] = t, 's' === e && (jn.ss = t - 1), !0))
        },
        c.calendarFormat = function (e, t) {
            var n = e.diff(t, 'days', !0);
            return n < - 6 ? 'sameElse' : n < - 1 ? 'lastWeek' : n < 0 ? 'lastDay' : n < 1 ? 'sameDay' : n < 2 ? 'nextDay' : n < 7 ? 'nextWeek' : 'sameElse'
        },
        c.prototype = mn,
        c.HTML5_FMT = {
            DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',
            DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',
            DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',
            DATE: 'YYYY-MM-DD',
            TIME: 'HH:mm',
            TIME_SECONDS: 'HH:mm:ss',
            TIME_MS: 'HH:mm:ss.SSS',
            WEEK: 'GGGG-[W]WW',
            MONTH: 'YYYY-MM'
        },
        c
});
!function (C) {
    'use strict';
    function re(a) {
        if (D(a)) w(a.objectMaxDepth) && (Wb.objectMaxDepth = Xb(a.objectMaxDepth) ? a.objectMaxDepth : NaN),
        w(a.urlErrorParamsEnabled) && Ga(a.urlErrorParamsEnabled) && (Wb.urlErrorParamsEnabled = a.urlErrorParamsEnabled);
        else return Wb
    }
    function Xb(a) {
        return W(a) && 0 < a
    }
    function F(a, b) {
        b = b || Error;
        return function () {
            var d = arguments[0],
                c;
            c = '[' + (a ? a + ':' : '') + d + '] http://errors.angularjs.org/1.7.8/' + (a ? a + '/' : '') + d;
            for (d = 1; d < arguments.length; d++) {
                c = c + (1 == d ? '?' : '&') + 'p' + (d - 1) + '=';
                var e = encodeURIComponent,
                    f;
                f = arguments[d];
                f = 'function' == typeof f ? f.toString().replace(/ \{[\s\S]*$/, '')  : 'undefined' == typeof f ? 'undefined' : 'string' != typeof f ? JSON.stringify(f)  : f;
                c += e(f)
            }
            return new b(c)
        }
    }
    function ya(a) {
        if (null == a || $a(a)) return !1;
        if (H(a) || A(a) || x && a instanceof x) return !0;
        var b = 'length' in Object(a) && a.length;
        return W(b) && (0 <= b && b - 1 in a || 'function' === typeof a.item)
    }
    function r(a, b, d) {
        var c,
            e;
        if (a) if (B(a)) for (c in a) 'prototype' !== c && 'length' !== c && 'name' !== c && a.hasOwnProperty(c) && b.call(d, a[c], c, a);
        else if (H(a) || ya(a)) {
            var f = 'object' !== typeof a;
            c = 0;
            for (e = a.length; c < e; c++) (f || c in a) && b.call(d, a[c], c, a)
        } else if (a.forEach && a.forEach !== r) a.forEach(b, d, a);
        else if (Nc(a)) for (c in a) b.call(d, a[c], c, a);
        else if ('function' === typeof a.hasOwnProperty) for (c in a) a.hasOwnProperty(c) && b.call(d, a[c], c, a);
        else for (c in a) ta.call(a, c) && b.call(d, a[c], c, a);
        return a
    }
    function Oc(a, b, d) {
        for (var c = Object.keys(a).sort(), e = 0; e < c.length; e++) b.call(d, a[c[e]], c[e]);
        return c
    }
    function Yb(a) {
        return function (b, d) {
            a(d, b)
        }
    }
    function se() {
        return ++pb
    }
    function Zb(a, b, d) {
        for (var c = a.$$hashKey, e = 0, f = b.length; e < f; ++e) {
            var g = b[e];
            if (D(g) || B(g)) for (var k = Object.keys(g), h = 0, l = k.length; h < l; h++) {
                var m = k[h],
                    p = g[m];
                d && D(p) ? ha(p) ? a[m] = new Date(p.valueOf())  : ab(p) ? a[m] = new RegExp(p)  : p.nodeName ? a[m] = p.cloneNode(!0)  : $b(p) ? a[m] = p.clone()  : (D(a[m]) || (a[m] = H(p) ? [
                ] : {
                }), Zb(a[m], [
                    p
                ], !0))  : a[m] = p
            }
        }
        c ? a.$$hashKey = c : delete a.$$hashKey;
        return a
    }
    function S(a) {
        return Zb(a, Ha.call(arguments, 1), !1)
    }
    function te(a) {
        return Zb(a, Ha.call(arguments, 1), !0)
    }
    function fa(a) {
        return parseInt(a, 10)
    }
    function ac(a, b) {
        return S(Object.create(a), b)
    }
    function E() {
    }
    function Ta(a) {
        return a
    }
    function ia(a) {
        return function () {
            return a
        }
    }
    function bc(a) {
        return B(a.toString) && a.toString !== la
    }
    function z(a) {
        return 'undefined' === typeof a
    }
    function w(a) {
        return 'undefined' !== typeof a
    }
    function D(a) {
        return null !== a && 'object' === typeof a
    }
    function Nc(a) {
        return null !== a && 'object' === typeof a && !Pc(a)
    }
    function A(a) {
        return 'string' === typeof a
    }
    function W(a) {
        return 'number' === typeof a
    }
    function ha(a) {
        return '[object Date]' === la.call(a)
    }
    function H(a) {
        return Array.isArray(a) || a instanceof Array
    }
    function cc(a) {
        switch (la.call(a)) {
            case '[object Error]':
                return !0;
            case '[object Exception]':
                return !0;
            case '[object DOMException]':
                return !0;
            default:
                return a instanceof Error
        }
    }
    function B(a) {
        return 'function' === typeof a
    }
    function ab(a) {
        return '[object RegExp]' === la.call(a)
    }
    function $a(a) {
        return a && a.window === a
    }
    function bb(a) {
        return a && a.$evalAsync && a.$watch
    }
    function Ga(a) {
        return 'boolean' === typeof a
    }
    function ue(a) {
        return a && W(a.length) && ve.test(la.call(a))
    }
    function $b(a) {
        return !(!a || !(a.nodeName || a.prop && a.attr && a.find))
    }
    function we(a) {
        var b = {
        };
        a = a.split(',');
        var d;
        for (d = 0; d < a.length; d++) b[a[d]] = !0;
        return b
    }
    function ua(a) {
        return K(a.nodeName || a[0] && a[0].nodeName)
    }
    function cb(a, b) {
        var d = a.indexOf(b);
        0 <= d && a.splice(d, 1);
        return d
    }
    function Ia(a, b, d) {
        function c(a, b, c) {
            c--;
            if (0 > c) return '...';
            var d = b.$$hashKey,
                f;
            if (H(a)) {
                f = 0;
                for (var g = a.length; f < g; f++) b.push(e(a[f], c))
            } else if (Nc(a)) for (f in a) b[f] = e(a[f], c);
            else if (a && 'function' === typeof a.hasOwnProperty) for (f in a) a.hasOwnProperty(f) && (b[f] = e(a[f], c));
            else for (f in a) ta.call(a, f) && (b[f] = e(a[f], c));
            d ? b.$$hashKey = d : delete b.$$hashKey;
            return b
        }
        function e(a, b) {
            if (!D(a)) return a;
            var d = g.indexOf(a);
            if ( - 1 !== d) return k[d];
            if ($a(a) || bb(a)) throw pa('cpws');
            var d = !1,
                e = f(a);
            void 0 === e && (e = H(a) ? [
            ] : Object.create(Pc(a)), d = !0);
            g.push(a);
            k.push(e);
            return d ? c(a, e, b)  : e
        }
        function f(a) {
            switch (la.call(a)) {
                case '[object Int8Array]':
                case '[object Int16Array]':
                case '[object Int32Array]':
                case '[object Float32Array]':
                case '[object Float64Array]':
                case '[object Uint8Array]':
                case '[object Uint8ClampedArray]':
                case '[object Uint16Array]':
                case '[object Uint32Array]':
                    return new a.constructor(e(a.buffer), a.byteOffset, a.length);
                case '[object ArrayBuffer]':
                    if (!a.slice) {
                        var b = new ArrayBuffer(a.byteLength);
                        new Uint8Array(b).set(new Uint8Array(a));
                        return b
                    }
                    return a.slice(0);
                case '[object Boolean]':
                case '[object Number]':
                case '[object String]':
                case '[object Date]':
                    return new a.constructor(a.valueOf());
                case '[object RegExp]':
                    return b = new RegExp(a.source, a.toString().match(/[^\/]*$/) [0]),
                        b.lastIndex = a.lastIndex,
                        b;
                case '[object Blob]':
                    return new a.constructor([a], {
                        type: a.type
                    })
            }
            if (B(a.cloneNode)) return a.cloneNode(!0)
        }
        var g = [
            ],
            k = [
            ];
        d = Xb(d) ? d : NaN;
        if (b) {
            if (ue(b) || '[object ArrayBuffer]' === la.call(b)) throw pa('cpta');
            if (a === b) throw pa('cpi');
            H(b) ? b.length = 0 : r(b, function (a, c) {
                '$$hashKey' !== c && delete b[c]
            });
            g.push(a);
            k.push(b);
            return c(a, b, d)
        }
        return e(a, d)
    }
    function dc(a, b) {
        return a === b || a !== a && b !== b
    }
    function va(a, b) {
        if (a === b) return !0;
        if (null === a || null === b) return !1;
        if (a !== a && b !== b) return !0;
        var d = typeof a,
            c;
        if (d === typeof b && 'object' === d) if (H(a)) {
            if (!H(b)) return !1;
            if ((d = a.length) === b.length) {
                for (c = 0; c < d; c++) if (!va(a[c], b[c])) return !1;
                return !0
            }
        } else {
            if (ha(a)) return ha(b) ? dc(a.getTime(), b.getTime())  : !1;
            if (ab(a)) return ab(b) ? a.toString() === b.toString()  : !1;
            if (bb(a) || bb(b) || $a(a) || $a(b) || H(b) || ha(b) || ab(b)) return !1;
            d = T();
            for (c in a) if ('$' !== c.charAt(0) && !B(a[c])) {
                if (!va(a[c], b[c])) return !1;
                d[c] = !0
            }
            for (c in b) if (!(c in d) && '$' !== c.charAt(0) && w(b[c]) && !B(b[c])) return !1;
            return !0
        }
        return !1
    }
    function db(a, b, d) {
        return a.concat(Ha.call(b, d))
    }
    function Va(a, b) {
        var d = 2 < arguments.length ? Ha.call(arguments, 2)  : [
        ];
        return !B(b) || b instanceof RegExp ? b : d.length ? function () {
                return arguments.length ? b.apply(a, db(d, arguments, 0))  : b.apply(a, d)
            }
            : function () {
                return arguments.length ? b.apply(a, arguments)  : b.call(a)
            }
    }
    function Qc(a, b) {
        var d = b;
        'string' === typeof a && '$' === a.charAt(0) && '$' === a.charAt(1) ? d = void 0 : $a(b) ? d = '$WINDOW' : b && C.document === b ? d = '$DOCUMENT' : bb(b) && (d = '$SCOPE');
        return d
    }
    function eb(a, b) {
        if (!z(a)) return W(b) || (b = b ? 2 : null),
            JSON.stringify(a, Qc, b)
    }
    function Rc(a) {
        return A(a) ? JSON.parse(a)  : a
    }
    function ec(a, b) {
        a = a.replace(xe, '');
        var d = Date.parse('Jan 01, 1970 00:00:00 ' + a) / 60000;
        return X(d) ? b : d
    }
    function Sc(a, b) {
        a = new Date(a.getTime());
        a.setMinutes(a.getMinutes() + b);
        return a
    }
    function fc(a, b, d) {
        d = d ? - 1 : 1;
        var c = a.getTimezoneOffset();
        b = ec(b, c);
        return Sc(a, d * (b - c))
    }
    function za(a) {
        a = x(a).clone().empty();
        var b = x('<div></div>').append(a).html();
        try {
            return a[0].nodeType === Pa ? K(b)  : b.match(/^(<[^>]+>)/) [1].replace(/^<([\w-]+)/, function (a, b) {
                return '<' + K(b)
            })
        } catch (d) {
            return K(b)
        }
    }
    function Tc(a) {
        try {
            return decodeURIComponent(a)
        } catch (b) {
        }
    }
    function gc(a) {
        var b = {
        };
        r((a || '').split('&'), function (a) {
            var c,
                e,
                f;
            a && (e = a = a.replace(/\+/g, '%20'), c = a.indexOf('='), - 1 !== c && (e = a.substring(0, c), f = a.substring(c + 1)), e = Tc(e), w(e) && (f = w(f) ? Tc(f)  : !0, ta.call(b, e) ? H(b[e]) ? b[e].push(f)  : b[e] = [
                b[e],
                f
            ] : b[e] = f))
        });
        return b
    }
    function ye(a) {
        var b = [
        ];
        r(a, function (a, c) {
            H(a) ? r(a, function (a) {
                b.push(ba(c, !0) + (!0 === a ? '' : '=' + ba(a, !0)))
            })  : b.push(ba(c, !0) + (!0 === a ? '' : '=' + ba(a, !0)))
        });
        return b.length ? b.join('&')  : ''
    }
    function hc(a) {
        return ba(a, !0).replace(/%26/gi, '&').replace(/%3D/gi, '=').replace(/%2B/gi, '+')
    }
    function ba(a, b) {
        return encodeURIComponent(a).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%3B/gi, ';').replace(/%20/g, b ? '%20' : '+')
    }
    function ze(a, b) {
        var d,
            c,
            e = Qa.length;
        for (c = 0; c < e; ++c) if (d = Qa[c] + b, A(d = a.getAttribute(d))) return d;
        return null
    }
    function Ae(a, b) {
        var d,
            c,
            e = {
            };
        r(Qa, function (b) {
            b += 'app';
            !d && a.hasAttribute && a.hasAttribute(b) && (d = a, c = a.getAttribute(b))
        });
        r(Qa, function (b) {
            b += 'app';
            var e;
            !d && (e = a.querySelector('[' + b.replace(':', '\\:') + ']')) && (d = e, c = e.getAttribute(b))
        });
        d && (Be ? (e.strictDi = null !== ze(d, 'strict-di'), b(d, c ? [
            c
        ] : [
        ], e))  : C.console.error('AngularJS: disabling automatic bootstrap. <script> protocol indicates an extension, document.location.href does not match.'))
    }
    function Uc(a, b, d) {
        D(d) || (d = {
        });
        d = S({
            strictDi: !1
        }, d);
        var c = function () {
                a = x(a);
                if (a.injector()) {
                    var c = a[0] === C.document ? 'document' : za(a);
                    throw pa('btstrpd', c.replace(/</, '&lt;').replace(/>/, '&gt;'))
                }
                b = b || [
                ];
                b.unshift(['$provide',
                    function (b) {
                        b.value('$rootElement', a)
                    }
                ]);
                d.debugInfoEnabled && b.push(['$compileProvider',
                    function (a) {
                        a.debugInfoEnabled(!0)
                    }
                ]);
                b.unshift('ng');
                c = fb(b, d.strictDi);
                c.invoke(['$rootScope',
                    '$rootElement',
                    '$compile',
                    '$injector',
                    function (a, b, c, d) {
                        a.$apply(function () {
                            b.data('$injector', d);
                            c(b) (a)
                        })
                    }
                ]);
                return c
            },
            e = /^NG_ENABLE_DEBUG_INFO!/,
            f = /^NG_DEFER_BOOTSTRAP!/;
        C && e.test(C.name) && (d.debugInfoEnabled = !0, C.name = C.name.replace(e, ''));
        if (C && !f.test(C.name)) return c();
        C.name = C.name.replace(f, '');
        ca.resumeBootstrap = function (a) {
            r(a, function (a) {
                b.push(a)
            });
            return c()
        };
        B(ca.resumeDeferredBootstrap) && ca.resumeDeferredBootstrap()
    }
    function Ce() {
        C.name = 'NG_ENABLE_DEBUG_INFO!' + C.name;
        C.location.reload()
    }
    function De(a) {
        a = ca.element(a).injector();
        if (!a) throw pa('test');
        return a.get('$$testability')
    }
    function Vc(a, b) {
        b = b || '_';
        return a.replace(Ee, function (a, c) {
            return (c ? b : '') + a.toLowerCase()
        })
    }
    function Fe() {
        var a;
        if (!Wc) {
            var b = qb();
            (rb = z(b) ? C.jQuery : b ? C[b] : void 0) && rb.fn.on ? (x = rb, S(rb.fn, {
                scope: Wa.scope,
                isolateScope: Wa.isolateScope,
                controller: Wa.controller,
                injector: Wa.injector,
                inheritedData: Wa.inheritedData
            }))  : x = Y;
            a = x.cleanData;
            x.cleanData = function (b) {
                for (var c, e = 0, f; null != (f = b[e]); e++) (c = (x._data(f) || {
                }).events) && c.$destroy && x(f).triggerHandler('$destroy');
                a(b)
            };
            ca.element = x;
            Wc = !0
        }
    }
    function gb(a, b, d) {
        if (!a) throw pa('areq', b || '?', d || 'required');
        return a
    }
    function sb(a, b, d) {
        d && H(a) && (a = a[a.length - 1]);
        gb(B(a), b, 'not a function, got ' + (a && 'object' === typeof a ? a.constructor.name || 'Object' : typeof a));
        return a
    }
    function Ja(a, b) {
        if ('hasOwnProperty' === a) throw pa('badname', b)
    }
    function Ge(a, b, d) {
        if (!b) return a;
        b = b.split('.');
        for (var c, e = a, f = b.length, g = 0; g < f; g++) c = b[g],
        a && (a = (e = a) [c]);
        return !d && B(a) ? Va(e, a)  : a
    }
    function tb(a) {
        for (var b = a[0], d = a[a.length - 1], c, e = 1; b !== d && (b = b.nextSibling); e++) if (c || a[e] !== b) c || (c = x(Ha.call(a, 0, e))),
            c.push(b);
        return c || a
    }
    function T() {
        return Object.create(null)
    }
    function ic(a) {
        if (null == a) return '';
        switch (typeof a) {
            case 'string':
                break;
            case 'number':
                a = '' + a;
                break;
            default:
                a = !bc(a) || H(a) || ha(a) ? eb(a)  : a.toString()
        }
        return a
    }
    function He(a) {
        function b(a, b, c) {
            return a[b] || (a[b] = c())
        }
        var d = F('$injector'),
            c = F('ng');
        a = b(a, 'angular', Object);
        a.$$minErr = a.$$minErr || F;
        return b(a, 'module', function () {
            var a = {
            };
            return function (f, g, k) {
                var h = {
                };
                if ('hasOwnProperty' === f) throw c('badname', 'module');
                g && a.hasOwnProperty(f) && (a[f] = null);
                return b(a, f, function () {
                    function a(b, c, d, f) {
                        f || (f = e);
                        return function () {
                            f[d || 'push']([b,
                                c,
                                arguments]);
                            return t
                        }
                    }
                    function b(a, c, d) {
                        d || (d = e);
                        return function (b, e) {
                            e && B(e) && (e.$$moduleName = f);
                            d.push([a,
                                c,
                                arguments]);
                            return t
                        }
                    }
                    if (!g) throw d('nomod', f);
                    var e = [
                        ],
                        n = [
                        ],
                        s = [
                        ],
                        G = a('$injector', 'invoke', 'push', n),
                        t = {
                            _invokeQueue: e,
                            _configBlocks: n,
                            _runBlocks: s,
                            info: function (a) {
                                if (w(a)) {
                                    if (!D(a)) throw c('aobj', 'value');
                                    h = a;
                                    return this
                                }
                                return h
                            },
                            requires: g,
                            name: f,
                            provider: b('$provide', 'provider'),
                            factory: b('$provide', 'factory'),
                            service: b('$provide', 'service'),
                            value: a('$provide', 'value'),
                            constant: a('$provide', 'constant', 'unshift'),
                            decorator: b('$provide', 'decorator', n),
                            animation: b('$animateProvider', 'register'),
                            filter: b('$filterProvider', 'register'),
                            controller: b('$controllerProvider', 'register'),
                            directive: b('$compileProvider', 'directive'),
                            component: b('$compileProvider', 'component'),
                            config: G,
                            run: function (a) {
                                s.push(a);
                                return this
                            }
                        };
                    k && G(k);
                    return t
                })
            }
        })
    }
    function ja(a, b) {
        if (H(a)) {
            b = b || [
            ];
            for (var d = 0, c = a.length; d < c; d++) b[d] = a[d]
        } else if (D(a)) for (d in b = b || {
        }, a) if ('$' !== d.charAt(0) || '$' !== d.charAt(1)) b[d] = a[d];
        return b || a
    }
    function Ie(a, b) {
        var d = [
        ];
        Xb(b) && (a = ca.copy(a, null, b));
        return JSON.stringify(a, function (a, b) {
            b = Qc(a, b);
            if (D(b)) {
                if (0 <= d.indexOf(b)) return '...';
                d.push(b)
            }
            return b
        })
    }
    function Je(a) {
        S(a, {
            errorHandlingConfig: re,
            bootstrap: Uc,
            copy: Ia,
            extend: S,
            merge: te,
            equals: va,
            element: x,
            forEach: r,
            injector: fb,
            noop: E,
            bind: Va,
            toJson: eb,
            fromJson: Rc,
            identity: Ta,
            isUndefined: z,
            isDefined: w,
            isString: A,
            isFunction: B,
            isObject: D,
            isNumber: W,
            isElement: $b,
            isArray: H,
            version: Ke,
            isDate: ha,
            callbacks: {
                $$counter: 0
            },
            getTestability: De,
            reloadWithDebugInfo: Ce,
            $$minErr: F,
            $$csp: Aa,
            $$encodeUriSegment: hc,
            $$encodeUriQuery: ba,
            $$lowercase: K,
            $$stringify: ic,
            $$uppercase: ub
        });
        kc = He(C);
        kc('ng', [
            'ngLocale'
        ], [
            '$provide',
            function (a) {
                a.provider({
                    $$sanitizeUri: Le
                });
                a.provider('$compile', Xc).directive({
                    a: Me,
                    input: Yc,
                    textarea: Yc,
                    form: Ne,
                    script: Oe,
                    select: Pe,
                    option: Qe,
                    ngBind: Re,
                    ngBindHtml: Se,
                    ngBindTemplate: Te,
                    ngClass: Ue,
                    ngClassEven: Ve,
                    ngClassOdd: We,
                    ngCloak: Xe,
                    ngController: Ye,
                    ngForm: Ze,
                    ngHide: $e,
                    ngIf: af,
                    ngInclude: bf,
                    ngInit: cf,
                    ngNonBindable: df,
                    ngPluralize: ef,
                    ngRef: ff,
                    ngRepeat: gf,
                    ngShow: hf,
                    ngStyle: jf,
                    ngSwitch: kf,
                    ngSwitchWhen: lf,
                    ngSwitchDefault: mf,
                    ngOptions: nf,
                    ngTransclude: of,
                    ngModel: pf,
                    ngList: qf,
                    ngChange: rf,
                    pattern: Zc,
                    ngPattern: Zc,
                    required: $c,
                    ngRequired: $c,
                    minlength: ad,
                    ngMinlength: ad,
                    maxlength: bd,
                    ngMaxlength: bd,
                    ngValue: sf,
                    ngModelOptions: tf
                }).directive({
                    ngInclude: uf,
                    input: vf
                }).directive(vb).directive(cd);
                a.provider({
                    $anchorScroll: wf,
                    $animate: xf,
                    $animateCss: yf,
                    $$animateJs: zf,
                    $$animateQueue: Af,
                    $$AnimateRunner: Bf,
                    $$animateAsyncRun: Cf,
                    $browser: Df,
                    $cacheFactory: Ef,
                    $controller: Ff,
                    $document: Gf,
                    $$isDocumentHidden: Hf,
                    $exceptionHandler: If,
                    $filter: dd,
                    $$forceReflow: Jf,
                    $interpolate: Kf,
                    $interval: Lf,
                    $$intervalFactory: Mf,
                    $http: Nf,
                    $httpParamSerializer: Of,
                    $httpParamSerializerJQLike: Pf,
                    $httpBackend: Qf,
                    $xhrFactory: Rf,
                    $jsonpCallbacks: Sf,
                    $location: Tf,
                    $log: Uf,
                    $parse: Vf,
                    $rootScope: Wf,
                    $q: Xf,
                    $$q: Yf,
                    $sce: Zf,
                    $sceDelegate: $f,
                    $sniffer: ag,
                    $$taskTrackerFactory: bg,
                    $templateCache: cg,
                    $templateRequest: dg,
                    $$testability: eg,
                    $timeout: fg,
                    $window: gg,
                    $$rAF: hg,
                    $$jqLite: ig,
                    $$Map: jg,
                    $$cookieReader: kg
                })
            }
        ]).info({
            angularVersion: '1.7.8'
        })
    }
    function wb(a, b) {
        return b.toUpperCase()
    }
    function xb(a) {
        return a.replace(lg, wb)
    }
    function lc(a) {
        a = a.nodeType;
        return 1 === a || !a || 9 === a
    }
    function ed(a, b) {
        var d,
            c,
            e = b.createDocumentFragment(),
            f = [
            ];
        if (mc.test(a)) {
            d = e.appendChild(b.createElement('div'));
            c = (mg.exec(a) || [
                '',
                ''
            ]) [1].toLowerCase();
            c = oa[c] || oa._default;
            d.innerHTML = c[1] + a.replace(ng, '<$1></$2>') + c[2];
            for (c = c[0]; c--; ) d = d.lastChild;
            f = db(f, d.childNodes);
            d = e.firstChild;
            d.textContent = ''
        } else f.push(b.createTextNode(a));
        e.textContent = '';
        e.innerHTML = '';
        r(f, function (a) {
            e.appendChild(a)
        });
        return e
    }
    function Y(a) {
        if (a instanceof Y) return a;
        var b;
        A(a) && (a = U(a), b = !0);
        if (!(this instanceof Y)) {
            if (b && '<' !== a.charAt(0)) throw nc('nosel');
            return new Y(a)
        }
        if (b) {
            b = C.document;
            var d;
            a = (d = og.exec(a)) ? [
                b.createElement(d[1])
            ] : (d = ed(a, b)) ? d.childNodes : [
            ];
            oc(this, a)
        } else B(a) ? fd(a)  : oc(this, a)
    }
    function pc(a) {
        return a.cloneNode(!0)
    }
    function yb(a, b) {
        !b && lc(a) && x.cleanData([a]);
        a.querySelectorAll && x.cleanData(a.querySelectorAll('*'))
    }
    function gd(a) {
        for (var b in a) return !1;
        return !0
    }
    function hd(a) {
        var b = a.ng339,
            d = b && Ka[b],
            c = d && d.events,
            d = d && d.data;
        d && !gd(d) || c && !gd(c) || (delete Ka[b], a.ng339 = void 0)
    }
    function id(a, b, d, c) {
        if (w(c)) throw nc('offargs');
        var e = (c = zb(a)) && c.events,
            f = c && c.handle;
        if (f) {
            if (b) {
                var g = function (b) {
                    var c = e[b];
                    w(d) && cb(c || [
                    ], d);
                    w(d) && c && 0 < c.length || (a.removeEventListener(b, f), delete e[b])
                };
                r(b.split(' '), function (a) {
                    g(a);
                    Ab[a] && g(Ab[a])
                })
            } else for (b in e) '$destroy' !== b && a.removeEventListener(b, f),
                delete e[b];
            hd(a)
        }
    }
    function qc(a, b) {
        var d = a.ng339;
        if (d = d && Ka[d]) b ? delete d.data[b] : d.data = {
        },
            hd(a)
    }
    function zb(a, b) {
        var d = a.ng339,
            d = d && Ka[d];
        b && !d && (a.ng339 = d = ++pg, d = Ka[d] = {
            events: {
            },
            data: {
            },
            handle: void 0
        });
        return d
    }
    function rc(a, b, d) {
        if (lc(a)) {
            var c,
                e = w(d),
                f = !e && b && !D(b),
                g = !b;
            a = (a = zb(a, !f)) && a.data;
            if (e) a[xb(b)] = d;
            else {
                if (g) return a;
                if (f) return a && a[xb(b)];
                for (c in b) a[xb(c)] = b[c]
            }
        }
    }
    function Bb(a, b) {
        return a.getAttribute ? - 1 < (' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' ').indexOf(' ' + b + ' ')  : !1
    }
    function Cb(a, b) {
        if (b && a.setAttribute) {
            var d = (' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' '),
                c = d;
            r(b.split(' '), function (a) {
                a = U(a);
                c = c.replace(' ' + a + ' ', ' ')
            });
            c !== d && a.setAttribute('class', U(c))
        }
    }
    function Db(a, b) {
        if (b && a.setAttribute) {
            var d = (' ' + (a.getAttribute('class') || '') + ' ').replace(/[\n\t]/g, ' '),
                c = d;
            r(b.split(' '), function (a) {
                a = U(a);
                - 1 === c.indexOf(' ' + a + ' ') && (c += a + ' ')
            });
            c !== d && a.setAttribute('class', U(c))
        }
    }
    function oc(a, b) {
        if (b) if (b.nodeType) a[a.length++] = b;
        else {
            var d = b.length;
            if ('number' === typeof d && b.window !== b) {
                if (d) for (var c = 0; c < d; c++) a[a.length++] = b[c]
            } else a[a.length++] = b
        }
    }
    function jd(a, b) {
        return Eb(a, '$' + (b || 'ngController') + 'Controller')
    }
    function Eb(a, b, d) {
        9 === a.nodeType && (a = a.documentElement);
        for (b = H(b) ? b : [
            b
        ]; a; ) {
            for (var c = 0, e = b.length; c < e; c++) if (w(d = x.data(a, b[c]))) return d;
            a = a.parentNode || 11 === a.nodeType && a.host
        }
    }
    function kd(a) {
        for (yb(a, !0); a.firstChild; ) a.removeChild(a.firstChild)
    }
    function Fb(a, b) {
        b || yb(a);
        var d = a.parentNode;
        d && d.removeChild(a)
    }
    function qg(a, b) {
        b = b || C;
        if ('complete' === b.document.readyState) b.setTimeout(a);
        else x(b).on('load', a)
    }
    function fd(a) {
        function b() {
            C.document.removeEventListener('DOMContentLoaded', b);
            C.removeEventListener('load', b);
            a()
        }
        'complete' === C.document.readyState ? C.setTimeout(a)  : (C.document.addEventListener('DOMContentLoaded', b), C.addEventListener('load', b))
    }
    function ld(a, b) {
        var d = Gb[b.toLowerCase()];
        return d && md[ua(a)] && d
    }
    function rg(a, b) {
        var d = function (c, d) {
            c.isDefaultPrevented = function () {
                return c.defaultPrevented
            };
            var f = b[d || c.type],
                g = f ? f.length : 0;
            if (g) {
                if (z(c.immediatePropagationStopped)) {
                    var k = c.stopImmediatePropagation;
                    c.stopImmediatePropagation = function () {
                        c.immediatePropagationStopped = !0;
                        c.stopPropagation && c.stopPropagation();
                        k && k.call(c)
                    }
                }
                c.isImmediatePropagationStopped = function () {
                    return !0 === c.immediatePropagationStopped
                };
                var h = f.specialHandlerWrapper || sg;
                1 < g && (f = ja(f));
                for (var l = 0; l < g; l++) c.isImmediatePropagationStopped() || h(a, c, f[l])
            }
        };
        d.elem = a;
        return d
    }
    function sg(a, b, d) {
        d.call(a, b)
    }
    function tg(a, b, d) {
        var c = b.relatedTarget;
        c && (c === a || ug.call(a, c)) || d.call(a, b)
    }
    function ig() {
        this.$get = function () {
            return S(Y, {
                hasClass: function (a, b) {
                    a.attr && (a = a[0]);
                    return Bb(a, b)
                },
                addClass: function (a, b) {
                    a.attr && (a = a[0]);
                    return Db(a, b)
                },
                removeClass: function (a, b) {
                    a.attr && (a = a[0]);
                    return Cb(a, b)
                }
            })
        }
    }
    function La(a, b) {
        var d = a && a.$$hashKey;
        if (d) return 'function' === typeof d && (d = a.$$hashKey()),
            d;
        d = typeof a;
        return d = 'function' === d || 'object' === d && null !== a ? a.$$hashKey = d + ':' + (b || se) ()  : d + ':' + a
    }
    function nd() {
        this._keys = [
        ];
        this._values = [
        ];
        this._lastKey = NaN;
        this._lastIndex = - 1
    }
    function od(a) {
        a = Function.prototype.toString.call(a).replace(vg, '');
        return a.match(wg) || a.match(xg)
    }
    function yg(a) {
        return (a = od(a)) ? 'function(' + (a[1] || '').replace(/[\s\r\n]+/, ' ') + ')' : 'fn'
    }
    function fb(a, b) {
        function d(a) {
            return function (b, c) {
                if (D(b)) r(b, Yb(a));
                else return a(b, c)
            }
        }
        function c(a, b) {
            Ja(a, 'service');
            if (B(b) || H(b)) b = n.instantiate(b);
            if (!b.$get) throw Ba('pget', a);
            return p[a + 'Provider'] = b
        }
        function e(a, b) {
            return function () {
                var c = t.invoke(b, this);
                if (z(c)) throw Ba('undef', a);
                return c
            }
        }
        function f(a, b, d) {
            return c(a, {
                $get: !1 !== d ? e(a, b)  : b
            })
        }
        function g(a) {
            gb(z(a) || H(a), 'modulesToLoad', 'not an array');
            var b = [
                ],
                c;
            r(a, function (a) {
                function d(a) {
                    var b,
                        c;
                    b = 0;
                    for (c = a.length; b < c; b++) {
                        var e = a[b],
                            f = n.get(e[0]);
                        f[e[1]].apply(f, e[2])
                    }
                }
                if (!m.get(a)) {
                    m.set(a, !0);
                    try {
                        A(a) ? (c = kc(a), t.modules[a] = c, b = b.concat(g(c.requires)).concat(c._runBlocks), d(c._invokeQueue), d(c._configBlocks))  : B(a) ? b.push(n.invoke(a))  : H(a) ? b.push(n.invoke(a))  : sb(a, 'module')
                    } catch (e) {
                        throw H(a) && (a = a[a.length - 1]),
                        e.message && e.stack && - 1 === e.stack.indexOf(e.message) && (e = e.message + '\n' + e.stack),
                            Ba('modulerr', a, e.stack || e.message || e)
                    }
                }
            });
            return b
        }
        function k(a, c) {
            function d(b, e) {
                if (a.hasOwnProperty(b)) {
                    if (a[b] === h) throw Ba('cdep', b + ' <- ' + l.join(' <- '));
                    return a[b]
                }
                try {
                    return l.unshift(b),
                        a[b] = h,
                        a[b] = c(b, e),
                        a[b]
                } catch (f) {
                    throw a[b] === h && delete a[b],
                        f
                } finally {
                    l.shift()
                }
            }
            function e(a, c, f) {
                var g = [
                ];
                a = fb.$$annotate(a, b, f);
                for (var h = 0, k = a.length; h < k; h++) {
                    var l = a[h];
                    if ('string' !== typeof l) throw Ba('itkn', l);
                    g.push(c && c.hasOwnProperty(l) ? c[l] : d(l, f))
                }
                return g
            }
            return {
                invoke: function (a, b, c, d) {
                    'string' === typeof c && (d = c, c = null);
                    c = e(a, c, d);
                    H(a) && (a = a[a.length - 1]);
                    d = a;
                    if (Ca || 'function' !== typeof d) d = !1;
                    else {
                        var f = d.$$ngIsClass;
                        Ga(f) || (f = d.$$ngIsClass = /^class\b/.test(Function.prototype.toString.call(d)));
                        d = f
                    }
                    return d ? (c.unshift(null), new (Function.prototype.bind.apply(a, c)))  : a.apply(b, c)
                },
                instantiate: function (a, b, c) {
                    var d = H(a) ? a[a.length - 1] : a;
                    a = e(a, b, c);
                    a.unshift(null);
                    return new (Function.prototype.bind.apply(d, a))
                },
                get: d,
                annotate: fb.$$annotate,
                has: function (b) {
                    return p.hasOwnProperty(b + 'Provider') || a.hasOwnProperty(b)
                }
            }
        }
        b = !0 === b;
        var h = {
            },
            l = [
            ],
            m = new Hb,
            p = {
                $provide: {
                    provider: d(c),
                    factory: d(f),
                    service: d(function (a, b) {
                        return f(a, [
                            '$injector',
                            function (a) {
                                return a.instantiate(b)
                            }
                        ])
                    }),
                    value: d(function (a, b) {
                        return f(a, ia(b), !1)
                    }),
                    constant: d(function (a, b) {
                        Ja(a, 'constant');
                        p[a] = b;
                        s[a] = b
                    }),
                    decorator: function (a, b) {
                        var c = n.get(a + 'Provider'),
                            d = c.$get;
                        c.$get = function () {
                            var a = t.invoke(d, c);
                            return t.invoke(b, null, {
                                $delegate: a
                            })
                        }
                    }
                }
            },
            n = p.$injector = k(p, function (a, b) {
                ca.isString(b) && l.push(b);
                throw Ba('unpr', l.join(' <- '))
            }),
            s = {
            },
            G = k(s, function (a, b) {
                var c = n.get(a + 'Provider', b);
                return t.invoke(c.$get, c, void 0, a)
            }),
            t = G;
        p.$injectorProvider = {
            $get: ia(G)
        };
        t.modules = n.modules = T();
        var N = g(a),
            t = G.get('$injector');
        t.strictDi = b;
        r(N, function (a) {
            a && t.invoke(a)
        });
        t.loadNewModules = function (a) {
            r(g(a), function (a) {
                a && t.invoke(a)
            })
        };
        return t
    }
    function wf() {
        var a = !0;
        this.disableAutoScrolling = function () {
            a = !1
        };
        this.$get = [
            '$window',
            '$location',
            '$rootScope',
            function (b, d, c) {
                function e(a) {
                    var b = null;
                    Array.prototype.some.call(a, function (a) {
                        if ('a' === ua(a)) return b = a,
                            !0
                    });
                    return b
                }
                function f(a) {
                    if (a) {
                        a.scrollIntoView();
                        var c;
                        c = g.yOffset;
                        B(c) ? c = c()  : $b(c) ? (c = c[0], c = 'fixed' !== b.getComputedStyle(c).position ? 0 : c.getBoundingClientRect().bottom)  : W(c) || (c = 0);
                        c && (a = a.getBoundingClientRect().top, b.scrollBy(0, a - c))
                    } else b.scrollTo(0, 0)
                }
                function g(a) {
                    a = A(a) ? a : W(a) ? a.toString()  : d.hash();
                    var b;
                    a ? (b = k.getElementById(a)) ? f(b)  : (b = e(k.getElementsByName(a))) ? f(b)  : 'top' === a && f(null)  : f(null)
                }
                var k = b.document;
                a && c.$watch(function () {
                    return d.hash()
                }, function (a, b) {
                    a === b && '' === a || qg(function () {
                        c.$evalAsync(g)
                    })
                });
                return g
            }
        ]
    }
    function hb(a, b) {
        if (!a && !b) return '';
        if (!a) return b;
        if (!b) return a;
        H(a) && (a = a.join(' '));
        H(b) && (b = b.join(' '));
        return a + ' ' + b
    }
    function zg(a) {
        A(a) && (a = a.split(' '));
        var b = T();
        r(a, function (a) {
            a.length && (b[a] = !0)
        });
        return b
    }
    function ra(a) {
        return D(a) ? a : {
        }
    }
    function Ag(a, b, d, c, e) {
        function f() {
            qa = null;
            k()
        }
        function g() {
            t = y();
            t = z(t) ? null : t;
            va(t, P) && (t = P);
            N = P = t
        }
        function k() {
            var a = N;
            g();
            if (v !== h.url() || a !== t) v = h.url(),
                N = t,
                r(J, function (a) {
                    a(h.url(), t)
                })
        }
        var h = this,
            l = a.location,
            m = a.history,
            p = a.setTimeout,
            n = a.clearTimeout,
            s = {
            },
            G = e(d);
        h.isMock = !1;
        h.$$completeOutstandingRequest = G.completeTask;
        h.$$incOutstandingRequestCount = G.incTaskCount;
        h.notifyWhenNoOutstandingRequests = G.notifyWhenNoPendingTasks;
        var t,
            N,
            v = l.href,
            jc = b.find('base'),
            qa = null,
            y = c.history ? function () {
                    try {
                        return m.state
                    } catch (a) {
                    }
                }
                : E;
        g();
        h.url = function (b, d, e) {
            z(e) && (e = null);
            l !== a.location && (l = a.location);
            m !== a.history && (m = a.history);
            if (b) {
                var f = N === e;
                b = ga(b).href;
                if (v === b && (!c.history || f)) return h;
                var k = v && Da(v) === Da(b);
                v = b;
                N = e;
                !c.history || k && f ? (k || (qa = b), d ? l.replace(b)  : k ? (d = l, e = b, f = e.indexOf('#'), e = - 1 === f ? '' : e.substr(f), d.hash = e)  : l.href = b, l.href !== b && (qa = b))  : (m[d ? 'replaceState' : 'pushState'](e, '', b), g());
                qa && (qa = b);
                return h
            }
            return (qa || l.href).replace(/#$/, '')
        };
        h.state = function () {
            return t
        };
        var J = [
            ],
            I = !1,
            P = null;
        h.onUrlChange = function (b) {
            if (!I) {
                if (c.history) x(a).on('popstate', f);
                x(a).on('hashchange', f);
                I = !0
            }
            J.push(b);
            return b
        };
        h.$$applicationDestroyed = function () {
            x(a).off('hashchange popstate', f)
        };
        h.$$checkUrlChange = k;
        h.baseHref = function () {
            var a = jc.attr('href');
            return a ? a.replace(/^(https?:)?\/\/[^\/]*/, '')  : ''
        };
        h.defer = function (a, b, c) {
            var d;
            b = b || 0;
            c = c || G.DEFAULT_TASK_TYPE;
            G.incTaskCount(c);
            d = p(function () {
                delete s[d];
                G.completeTask(a, c)
            }, b);
            s[d] = c;
            return d
        };
        h.defer.cancel = function (a) {
            if (s.hasOwnProperty(a)) {
                var b = s[a];
                delete s[a];
                n(a);
                G.completeTask(E, b);
                return !0
            }
            return !1
        }
    }
    function Df() {
        this.$get = [
            '$window',
            '$log',
            '$sniffer',
            '$document',
            '$$taskTrackerFactory',
            function (a, b, d, c, e) {
                return new Ag(a, c, b, d, e)
            }
        ]
    }
    function Ef() {
        this.$get = function () {
            function a(a, c) {
                function e(a) {
                    a !== p && (n ? n === a && (n = a.n)  : n = a, f(a.n, a.p), f(a, p), p = a, p.n = null)
                }
                function f(a, b) {
                    a !== b && (a && (a.p = b), b && (b.n = a))
                }
                if (a in b) throw F('$cacheFactory') ('iid', a);
                var g = 0,
                    k = S({
                    }, c, {
                        id: a
                    }),
                    h = T(),
                    l = c && c.capacity || Number.MAX_VALUE,
                    m = T(),
                    p = null,
                    n = null;
                return b[a] = {
                    put: function (a, b) {
                        if (!z(b)) {
                            if (l < Number.MAX_VALUE) {
                                var c = m[a] || (m[a] = {
                                    key: a
                                });
                                e(c)
                            }
                            a in h || g++;
                            h[a] = b;
                            g > l && this.remove(n.key);
                            return b
                        }
                    },
                    get: function (a) {
                        if (l < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            e(b)
                        }
                        return h[a]
                    },
                    remove: function (a) {
                        if (l < Number.MAX_VALUE) {
                            var b = m[a];
                            if (!b) return;
                            b === p && (p = b.p);
                            b === n && (n = b.n);
                            f(b.n, b.p);
                            delete m[a]
                        }
                        a in h && (delete h[a], g--)
                    },
                    removeAll: function () {
                        h = T();
                        g = 0;
                        m = T();
                        p = n = null
                    },
                    destroy: function () {
                        m = k = h = null;
                        delete b[a]
                    },
                    info: function () {
                        return S({
                        }, k, {
                            size: g
                        })
                    }
                }
            }
            var b = {
            };
            a.info = function () {
                var a = {
                };
                r(b, function (b, e) {
                    a[e] = b.info()
                });
                return a
            };
            a.get = function (a) {
                return b[a]
            };
            return a
        }
    }
    function cg() {
        this.$get = [
            '$cacheFactory',
            function (a) {
                return a('templates')
            }
        ]
    }
    function Xc(a, b) {
        function d(a, b, c) {
            var d = /^([@&]|[=<](\*?))(\??)\s*([\w$]*)$/,
                e = T();
            r(a, function (a, f) {
                a = a.trim();
                if (a in p) e[f] = p[a];
                else {
                    var g = a.match(d);
                    if (!g) throw $('iscp', b, f, a, c ? 'controller bindings definition' : 'isolate scope definition');
                    e[f] = {
                        mode: g[1][0],
                        collection: '*' === g[2],
                        optional: '?' === g[3],
                        attrName: g[4] || f
                    };
                    g[4] && (p[a] = e[f])
                }
            });
            return e
        }
        function c(a) {
            var b = a.charAt(0);
            if (!b || b !== K(b)) throw $('baddir', a);
            if (a !== a.trim()) throw $('baddir', a)
        }
        function e(a) {
            var b = a.require || a.controller && a.name;
            !H(b) && D(b) && r(b, function (a, c) {
                var d = a.match(l);
                a.substring(d[0].length) || (b[c] = d[0] + c)
            });
            return b
        }
        var f = {
            },
            g = /^\s*directive:\s*([\w-]+)\s+(.*)$/,
            k = /(([\w-]+)(?::([^;]+))?;?)/,
            h = we('ngSrc,ngSrcset,src,srcset'),
            l = /^(?:(\^\^?)?(\?)?(\^\^?)?)?/,
            m = /^(on[a-z]+|formaction)$/,
            p = T();
        this.directive = function qa(b, d) {
            gb(b, 'name');
            Ja(b, 'directive');
            A(b) ? (c(b), gb(d, 'directiveFactory'), f.hasOwnProperty(b) || (f[b] = [
            ], a.factory(b + 'Directive', [
                '$injector',
                '$exceptionHandler',
                function (a, c) {
                    var d = [
                    ];
                    r(f[b], function (f, g) {
                        try {
                            var h = a.invoke(f);
                            B(h) ? h = {
                                    compile: ia(h)
                                }
                                : !h.compile && h.link && (h.compile = ia(h.link));
                            h.priority = h.priority || 0;
                            h.index = g;
                            h.name = h.name || b;
                            h.require = e(h);
                            var k = h,
                                l = h.restrict;
                            if (l && (!A(l) || !/[EACM]/.test(l))) throw $('badrestrict', l, b);
                            k.restrict = l || 'EA';
                            h.$$moduleName = f.$$moduleName;
                            d.push(h)
                        } catch (m) {
                            c(m)
                        }
                    });
                    return d
                }
            ])), f[b].push(d))  : r(b, Yb(qa));
            return this
        };
        this.component = function y(a, b) {
            function c(a) {
                function e(b) {
                    return B(b) || H(b) ? function (c, d) {
                            return a.invoke(b, this, {
                                $element: c,
                                $attrs: d
                            })
                        }
                        : b
                }
                var f = b.template || b.templateUrl ? b.template : '',
                    g = {
                        controller: d,
                        controllerAs: Bg(b.controller) || b.controllerAs || '$ctrl',
                        template: e(f),
                        templateUrl: e(b.templateUrl),
                        transclude: b.transclude,
                        scope: {
                        },
                        bindToController: b.bindings || {
                        },
                        restrict: 'E',
                        require: b.require
                    };
                r(b, function (a, b) {
                    '$' === b.charAt(0) && (g[b] = a)
                });
                return g
            }
            if (!A(a)) return r(a, Yb(Va(this, y))),
                this;
            var d = b.controller || function () {
            };
            r(b, function (a, b) {
                '$' === b.charAt(0) && (c[b] = a, B(d) && (d[b] = a))
            });
            c.$inject = [
                '$injector'
            ];
            return this.directive(a, c)
        };
        this.aHrefSanitizationWhitelist = function (a) {
            return w(a) ? (b.aHrefSanitizationWhitelist(a), this)  : b.aHrefSanitizationWhitelist()
        };
        this.imgSrcSanitizationWhitelist = function (a) {
            return w(a) ? (b.imgSrcSanitizationWhitelist(a), this)  : b.imgSrcSanitizationWhitelist()
        };
        var n = !0;
        this.debugInfoEnabled = function (a) {
            return w(a) ? (n = a, this)  : n
        };
        var s = !1;
        this.strictComponentBindingsEnabled = function (a) {
            return w(a) ? (s = a, this)  : s
        };
        var G = 10;
        this.onChangesTtl = function (a) {
            return arguments.length ? (G = a, this)  : G
        };
        var t = !0;
        this.commentDirectivesEnabled = function (a) {
            return arguments.length ? (t = a, this)  : t
        };
        var N = !0;
        this.cssClassDirectivesEnabled = function (a) {
            return arguments.length ? (N = a, this)  : N
        };
        var v = T();
        this.addPropertySecurityContext = function (a, b, c) {
            var d = a.toLowerCase() + '|' + b.toLowerCase();
            if (d in v && v[d] !== c) throw $('ctxoverride', a, b, v[d], c);
            v[d] = c;
            return this
        };
        !function () {
            function a(b, c) {
                r(c, function (a) {
                    v[a.toLowerCase()] = b
                })
            }
            a(V.HTML, [
                'iframe|srcdoc',
                '*|innerHTML',
                '*|outerHTML'
            ]);
            a(V.CSS, [
                '*|style'
            ]);
            a(V.URL, 'area|href area|ping a|href a|ping blockquote|cite body|background del|cite input|src ins|cite q|cite'.split(' '));
            a(V.MEDIA_URL, 'audio|src img|src img|srcset source|src source|srcset track|src video|src video|poster'.split(' '));
            a(V.RESOURCE_URL, '*|formAction applet|code applet|codebase base|href embed|src frame|src form|action head|profile html|manifest iframe|src link|href media|src object|codebase object|data script|src'.split(' '))
        }();
        this.$get = [
            '$injector',
            '$interpolate',
            '$exceptionHandler',
            '$templateRequest',
            '$parse',
            '$controller',
            '$rootScope',
            '$sce',
            '$animate',
            function (a, b, c, e, p, M, L, u, R) {
                function q() {
                    try {
                        if (!--Ja) throw Ua = void 0,
                            $('infchng', G);
                        L.$apply(function () {
                            for (var a = 0, b = Ua.length; a < b; ++a) try {
                                Ua[a]()
                            } catch (d) {
                                c(d)
                            }
                            Ua = void 0
                        })
                    } finally {
                        Ja++
                    }
                }
                function ma(a, b) {
                    if (!a) return a;
                    if (!A(a)) throw $('srcset', b, a.toString());
                    for (var c = '', d = U(a), e = /(\s+\d+x\s*,|\s+\d+w\s*,|\s+,|,\s+)/, e = /\s/.test(d) ? e : /(,)/, d = d.split(e), e = Math.floor(d.length / 2), f = 0; f < e; f++) var g = 2 * f,
                        c = c + u.getTrustedMediaUrl(U(d[g])),
                        c = c + (' ' + U(d[g + 1]));
                    d = U(d[2 * f]).split(/\s/);
                    c += u.getTrustedMediaUrl(U(d[0]));
                    2 === d.length && (c += ' ' + U(d[1]));
                    return c
                }
                function w(a, b) {
                    if (b) {
                        var c = Object.keys(b),
                            d,
                            e,
                            f;
                        d = 0;
                        for (e = c.length; d < e; d++) f = c[d],
                            this[f] = b[f]
                    } else this.$attr = {
                    };
                    this.$$element = a
                }
                function O(a, b, c) {
                    Fa.innerHTML = '<span ' + b + '>';
                    b = Fa.firstChild.attributes;
                    var d = b[0];
                    b.removeNamedItem(d.name);
                    d.value = c;
                    a.attributes.setNamedItem(d)
                }
                function sa(a, b) {
                    try {
                        a.addClass(b)
                    } catch (c) {
                    }
                }
                function da(a, b, c, d, e) {
                    a instanceof x || (a = x(a));
                    var f = Xa(a, b, a, c, d, e);
                    da.$$addScopeClass(a);
                    var g = null;
                    return function (b, c, d) {
                        if (!a) throw $('multilink');
                        gb(b, 'scope');
                        e && e.needsNewScope && (b = b.$parent.$new());
                        d = d || {
                        };
                        var h = d.parentBoundTranscludeFn,
                            k = d.transcludeControllers;
                        d = d.futureParentElement;
                        h && h.$$boundTransclude && (h = h.$$boundTransclude);
                        g || (g = (d = d && d[0]) ? 'foreignobject' !== ua(d) && la.call(d).match(/SVG/) ? 'svg' : 'html' : 'html');
                        d = 'html' !== g ? x(ja(g, x('<div></div>').append(a).html()))  : c ? Wa.clone.call(a)  : a;
                        if (k) for (var l in k) d.data('$' + l + 'Controller', k[l].instance);
                        da.$$addScopeInfo(d, b);
                        c && c(d, b);
                        f && f(b, d, d, h);
                        c || (a = f = null);
                        return d
                    }
                }
                function Xa(a, b, c, d, e, f) {
                    function g(a, c, d, e) {
                        var f,
                            k,
                            l,
                            m,
                            p,
                            I,
                            t;
                        if (n) for (t = Array(c.length), m = 0; m < h.length; m += 3) f = h[m],
                            t[f] = c[f];
                        else t = c;
                        m = 0;
                        for (p = h.length; m < p; ) k = t[h[m++]],
                            c = h[m++],
                            f = h[m++],
                            c ? (c.scope ? (l = a.$new(), da.$$addScopeInfo(x(k), l))  : l = a, I = c.transcludeOnThisElement ? ka(a, c.transclude, e)  : !c.templateOnThisElement && e ? e : !e && b ? ka(a, b)  : null, c(f, l, k, d, I))  : f && f(a, k.childNodes, void 0, e)
                    }
                    for (var h = [
                    ], k = H(a) || a instanceof x, l, m, p, I, n, t = 0; t < a.length; t++) {
                        l = new w;
                        11 === Ca && ib(a, t, k);
                        m = sc(a[t], [
                        ], l, 0 === t ? d : void 0, e);
                        (f = m.length ? aa(m, a[t], l, b, c, null, [
                        ], [
                        ], f)  : null) && f.scope && da.$$addScopeClass(l.$$element);
                        l = f && f.terminal || !(p = a[t].childNodes) || !p.length ? null : Xa(p, f ? (f.transcludeOnThisElement || !f.templateOnThisElement) && f.transclude : b);
                        if (f || l) h.push(t, f, l),
                            I = !0,
                            n = n || f;
                        f = null
                    }
                    return I ? g : null
                }
                function ib(a, b, c) {
                    var d = a[b],
                        e = d.parentNode,
                        f;
                    if (d.nodeType === Pa) for (; ; ) {
                        f = e ? d.nextSibling : a[b + 1];
                        if (!f || f.nodeType !== Pa) break;
                        d.nodeValue += f.nodeValue;
                        f.parentNode && f.parentNode.removeChild(f);
                        c && f === a[b + 1] && a.splice(b + 1, 1)
                    }
                }
                function ka(a, b, c) {
                    function d(e, f, g, h, k) {
                        e || (e = a.$new(!1, k), e.$$transcluded = !0);
                        return b(e, f, {
                            parentBoundTranscludeFn: c,
                            transcludeControllers: g,
                            futureParentElement: h
                        })
                    }
                    var e = d.$$slots = T(),
                        f;
                    for (f in b.$$slots) e[f] = b.$$slots[f] ? ka(a, b.$$slots[f], c)  : null;
                    return d
                }
                function sc(a, b, d, e, f) {
                    var g = d.$attr,
                        h;
                    switch (a.nodeType) {
                        case 1:
                            h = ua(a);
                            X(b, wa(h), 'E', e, f);
                            for (var l, m, n, t, J, s = a.attributes, v = 0, G = s && s.length; v < G; v++) {
                                var P = !1,
                                    N = !1,
                                    r = !1,
                                    y = !1,
                                    u = !1,
                                    M;
                                l = s[v];
                                m = l.name;
                                t = l.value;
                                n = wa(m.toLowerCase());
                                (J = n.match(Ra)) ? (r = 'Attr' === J[1], y = 'Prop' === J[1], u = 'On' === J[1], m = m.replace(pd, '').toLowerCase().substr(4 + J[1].length).replace(/_(.)/g, function (a, b) {
                                    return b.toUpperCase()
                                }))  : (M = n.match(Sa)) && ca(M[1]) && (P = m, N = m.substr(0, m.length - 5) + 'end', m = m.substr(0, m.length - 6));
                                if (y || u) d[n] = t,
                                    g[n] = l.name,
                                    y ? Ea(a, b, n, m)  : b.push(qd(p, L, c, n, m, !1));
                                else {
                                    n = wa(m.toLowerCase());
                                    g[n] = m;
                                    if (r || !d.hasOwnProperty(n)) d[n] = t,
                                    ld(a, n) && (d[n] = !0);
                                    Ia(a, b, t, n, r);
                                    X(b, n, 'A', e, f, P, N)
                                }
                            }
                            'input' === h && 'hidden' === a.getAttribute('type') && a.setAttribute('autocomplete', 'off');
                            if (!Qa) break;
                            g = a.className;
                            D(g) && (g = g.animVal);
                            if (A(g) && '' !== g) for (; a = k.exec(g); ) n = wa(a[2]),
                            X(b, n, 'C', e, f) && (d[n] = U(a[3])),
                                g = g.substr(a.index + a[0].length);
                            break;
                        case Pa:
                            na(b, a.nodeValue);
                            break;
                        case 8:
                            if (!Oa) break;
                            F(a, b, d, e, f)
                    }
                    b.sort(ia);
                    return b
                }
                function F(a, b, c, d, e) {
                    try {
                        var f = g.exec(a.nodeValue);
                        if (f) {
                            var h = wa(f[1]);
                            X(b, h, 'M', d, e) && (c[h] = U(f[2]))
                        }
                    } catch (k) {
                    }
                }
                function V(a, b, c) {
                    var d = [
                        ],
                        e = 0;
                    if (b && a.hasAttribute && a.hasAttribute(b)) {
                        do {
                            if (!a) throw $('uterdir', b, c);
                            1 === a.nodeType && (a.hasAttribute(b) && e++, a.hasAttribute(c) && e--);
                            d.push(a);
                            a = a.nextSibling
                        } while (0 < e)
                    } else d.push(a);
                    return x(d)
                }
                function Y(a, b, c) {
                    return function (d, e, f, g, h) {
                        e = V(e[0], b, c);
                        return a(d, e, f, g, h)
                    }
                }
                function Z(a, b, c, d, e, f) {
                    var g;
                    return a ? da(b, c, d, e, f)  : function () {
                        g || (g = da(b, c, d, e, f), b = c = f = null);
                        return g.apply(this, arguments)
                    }
                }
                function aa(a, b, d, e, f, g, h, k, l) {
                    function m(a, b, c, d) {
                        if (a) {
                            c && (a = Y(a, c, d));
                            a.require = u.require;
                            a.directiveName = Q;
                            if (s === u || u.$$isolateScope) a = Aa(a, {
                                isolateScope: !0
                            });
                            h.push(a)
                        }
                        if (b) {
                            c && (b = Y(b, c, d));
                            b.require = u.require;
                            b.directiveName = Q;
                            if (s === u || u.$$isolateScope) b = Aa(b, {
                                isolateScope: !0
                            });
                            k.push(b)
                        }
                    }
                    function p(a, e, f, g, l) {
                        function m(a, b, c, d) {
                            var e;
                            bb(a) || (d = c, c = b, b = a, a = void 0);
                            N && (e = P);
                            c || (c = N ? Q.parent()  : Q);
                            if (d) {
                                var f = l.$$slots[d];
                                if (f) return f(a, b, e, c, R);
                                if (z(f)) throw $('noslot', d, za(Q))
                            } else return l(a, b, e, c, R)
                        }
                        var n,
                            u,
                            L,
                            y,
                            G,
                            P,
                            M,
                            Q;
                        b === f ? (g = d, Q = d.$$element)  : (Q = x(f), g = new w(Q, d));
                        G = e;
                        s ? y = e.$new(!0)  : t && (G = e.$parent);
                        l && (M = m, M.$$boundTransclude = l, M.isSlotFilled = function (a) {
                            return !!l.$$slots[a]
                        });
                        J && (P = ea(Q, g, M, J, y, e, s));
                        s && (da.$$addScopeInfo(Q, y, !0, !(v && (v === s || v === s.$$originalDirective))), da.$$addScopeClass(Q, !0), y.$$isolateBindings = s.$$isolateBindings, u = Da(e, g, y, y.$$isolateBindings, s), u.removeWatches && y.$on('$destroy', u.removeWatches));
                        for (n in P) {
                            u = J[n];
                            L = P[n];
                            var Cg = u.$$bindings.bindToController;
                            L.instance = L();
                            Q.data('$' + u.name + 'Controller', L.instance);
                            L.bindingInfo = Da(G, g, L.instance, Cg, u)
                        }
                        r(J, function (a, b) {
                            var c = a.require;
                            a.bindToController && !H(c) && D(c) && S(P[b].instance, W(b, c, Q, P))
                        });
                        r(P, function (a) {
                            var b = a.instance;
                            if (B(b.$onChanges)) try {
                                b.$onChanges(a.bindingInfo.initialChanges)
                            } catch (d) {
                                c(d)
                            }
                            if (B(b.$onInit)) try {
                                b.$onInit()
                            } catch (e) {
                                c(e)
                            }
                            B(b.$doCheck) && (G.$watch(function () {
                                b.$doCheck()
                            }), b.$doCheck());
                            B(b.$onDestroy) && G.$on('$destroy', function () {
                                b.$onDestroy()
                            })
                        });
                        n = 0;
                        for (u = h.length; n < u; n++) L = h[n],
                            Ba(L, L.isolateScope ? y : e, Q, g, L.require && W(L.directiveName, L.require, Q, P), M);
                        var R = e;
                        s && (s.template || null === s.templateUrl) && (R = y);
                        a && a(R, f.childNodes, void 0, l);
                        for (n = k.length - 1; 0 <= n; n--) L = k[n],
                            Ba(L, L.isolateScope ? y : e, Q, g, L.require && W(L.directiveName, L.require, Q, P), M);
                        r(P, function (a) {
                            a = a.instance;
                            B(a.$postLink) && a.$postLink()
                        })
                    }
                    l = l || {
                    };
                    for (var n = - Number.MAX_VALUE, t = l.newScopeDirective, J = l.controllerDirectives, s = l.newIsolateScopeDirective, v = l.templateDirective, L = l.nonTlbTranscludeDirective, G = !1, P = !1, N = l.hasElementTranscludeDirective, y = d.$$element = x(b), u, Q, M, R = e, q, ma = !1, Ib = !1, O, sa = 0, A = a.length; sa < A; sa++) {
                        u = a[sa];
                        var E = u.$$start,
                            ib = u.$$end;
                        E && (y = V(b, E, ib));
                        M = void 0;
                        if (n > u.priority) break;
                        if (O = u.scope) u.templateUrl || (D(O) ? (ba('new/isolated scope', s || t, u, y), s = u)  : ba('new/isolated scope', s, u, y)),
                            t = t || u;
                        Q = u.name;
                        if (!ma && (u.replace && (u.templateUrl || u.template) || u.transclude && !u.$$tlb)) {
                            for (O = sa + 1; ma = a[O++]; ) if (ma.transclude && !ma.$$tlb || ma.replace && (ma.templateUrl || ma.template)) {
                                Ib = !0;
                                break
                            }
                            ma = !0
                        }
                        !u.templateUrl && u.controller && (J = J || T(), ba('\'' + Q + '\' controller', J[Q], u, y), J[Q] = u);
                        if (O = u.transclude) if (G = !0, u.$$tlb || (ba('transclusion', L, u, y), L = u), 'element' === O) N = !0,
                            n = u.priority,
                            M = y,
                            y = d.$$element = x(da.$$createComment(Q, d[Q])),
                            b = y[0],
                            pa(f, Ha.call(M, 0), b),
                            R = Z(Ib, M, e, n, g && g.name, {
                                nonTlbTranscludeDirective: L
                            });
                        else {
                            var ka = T();
                            if (D(O)) {
                                M = C.document.createDocumentFragment();
                                var Xa = T(),
                                    F = T();
                                r(O, function (a, b) {
                                    var c = '?' === a.charAt(0);
                                    a = c ? a.substring(1)  : a;
                                    Xa[a] = b;
                                    ka[b] = null;
                                    F[b] = c
                                });
                                r(y.contents(), function (a) {
                                    var b = Xa[wa(ua(a))];
                                    b ? (F[b] = !0, ka[b] = ka[b] || C.document.createDocumentFragment(), ka[b].appendChild(a))  : M.appendChild(a)
                                });
                                r(F, function (a, b) {
                                    if (!a) throw $('reqslot', b)
                                });
                                for (var K in ka) ka[K] && (R = x(ka[K].childNodes), ka[K] = Z(Ib, R, e));
                                M = x(M.childNodes)
                            } else M = x(pc(b)).contents();
                            y.empty();
                            R = Z(Ib, M, e, void 0, void 0, {
                                needsNewScope: u.$$isolateScope || u.$$newScope
                            });
                            R.$$slots = ka
                        }
                        if (u.template) if (P = !0, ba('template', v, u, y), v = u, O = B(u.template) ? u.template(y, d)  : u.template, O = Na(O), u.replace) {
                            g = u;
                            M = mc.test(O) ? rd(ja(u.templateNamespace, U(O)))  : [
                            ];
                            b = M[0];
                            if (1 !== M.length || 1 !== b.nodeType) throw $('tplrt', Q, '');
                            pa(f, y, b);
                            A = {
                                $attr: {
                                }
                            };
                            O = sc(b, [
                            ], A);
                            var Dg = a.splice(sa + 1, a.length - (sa + 1));
                            (s || t) && fa(O, s, t);
                            a = a.concat(O).concat(Dg);
                            ga(d, A);
                            A = a.length
                        } else y.html(O);
                        if (u.templateUrl) P = !0,
                            ba('template', v, u, y),
                            v = u,
                        u.replace && (g = u),
                            p = ha(a.splice(sa, a.length - sa), y, d, f, G && R, h, k, {
                                controllerDirectives: J,
                                newScopeDirective: t !== u && t,
                                newIsolateScopeDirective: s,
                                templateDirective: v,
                                nonTlbTranscludeDirective: L
                            }),
                            A = a.length;
                        else if (u.compile) try {
                            q = u.compile(y, d, R);
                            var X = u.$$originalDirective || u;
                            B(q) ? m(null, Va(X, q), E, ib)  : q && m(Va(X, q.pre), Va(X, q.post), E, ib)
                        } catch (ca) {
                            c(ca, za(y))
                        }
                        u.terminal && (p.terminal = !0, n = Math.max(n, u.priority))
                    }
                    p.scope = t && !0 === t.scope;
                    p.transcludeOnThisElement = G;
                    p.templateOnThisElement = P;
                    p.transclude = R;
                    l.hasElementTranscludeDirective = N;
                    return p
                }
                function W(a, b, c, d) {
                    var e;
                    if (A(b)) {
                        var f = b.match(l);
                        b = b.substring(f[0].length);
                        var g = f[1] || f[3],
                            f = '?' === f[2];
                        '^^' === g ? c = c.parent()  : e = (e = d && d[b]) && e.instance;
                        if (!e) {
                            var h = '$' + b + 'Controller';
                            e = '^^' === g && c[0] && 9 === c[0].nodeType ? null : g ? c.inheritedData(h)  : c.data(h)
                        }
                        if (!e && !f) throw $('ctreq', b, a)
                    } else if (H(b)) for (e = [
                    ], g = 0, f = b.length; g < f; g++) e[g] = W(a, b[g], c, d);
                    else D(b) && (e = {
                        }, r(b, function (b, f) {
                            e[f] = W(a, b, c, d)
                        }));
                    return e || null
                }
                function ea(a, b, c, d, e, f, g) {
                    var h = T(),
                        k;
                    for (k in d) {
                        var l = d[k],
                            m = {
                                $scope: l === g || l.$$isolateScope ? e : f,
                                $element: a,
                                $attrs: b,
                                $transclude: c
                            },
                            p = l.controller;
                        '@' === p && (p = b[l.name]);
                        m = M(p, m, !0, l.controllerAs);
                        h[l.name] = m;
                        a.data('$' + l.name + 'Controller', m.instance)
                    }
                    return h
                }
                function fa(a, b, c) {
                    for (var d = 0, e = a.length; d < e; d++) a[d] = ac(a[d], {
                        $$isolateScope: b,
                        $$newScope: c
                    })
                }
                function X(b, c, e, g, h, k, l) {
                    if (c === h) return null;
                    var m = null;
                    if (f.hasOwnProperty(c)) {
                        h = a.get(c + 'Directive');
                        for (var p = 0, n = h.length; p < n; p++) if (c = h[p], (z(g) || g > c.priority) && - 1 !== c.restrict.indexOf(e)) {
                            k && (c = ac(c, {
                                $$start: k,
                                $$end: l
                            }));
                            if (!c.$$bindings) {
                                var I = m = c,
                                    t = c.name,
                                    u = {
                                        isolateScope: null,
                                        bindToController: null
                                    };
                                D(I.scope) && (!0 === I.bindToController ? (u.bindToController = d(I.scope, t, !0), u.isolateScope = {
                                })  : u.isolateScope = d(I.scope, t, !1));
                                D(I.bindToController) && (u.bindToController = d(I.bindToController, t, !0));
                                if (u.bindToController && !I.controller) throw $('noctrl', t);
                                m = m.$$bindings = u;
                                D(m.isolateScope) && (c.$$isolateBindings = m.isolateScope)
                            }
                            b.push(c);
                            m = c
                        }
                    }
                    return m
                }
                function ca(b) {
                    if (f.hasOwnProperty(b)) for (var c = a.get(b + 'Directive'), d = 0, e = c.length; d < e; d++) if (b = c[d], b.multiElement) return !0;
                    return !1
                }
                function ga(a, b) {
                    var c = b.$attr,
                        d = a.$attr;
                    r(a, function (d, e) {
                        '$' !== e.charAt(0) && (b[e] && b[e] !== d && (d = d.length ? d + (('style' === e ? ';' : ' ') + b[e])  : b[e]), a.$set(e, d, !0, c[e]))
                    });
                    r(b, function (b, e) {
                        a.hasOwnProperty(e) || '$' === e.charAt(0) || (a[e] = b, 'class' !== e && 'style' !== e && (d[e] = c[e]))
                    })
                }
                function ha(a, b, d, f, g, h, k, l) {
                    var m = [
                        ],
                        p,
                        n,
                        t = b[0],
                        u = a.shift(),
                        J = ac(u, {
                            templateUrl: null,
                            transclude: null,
                            replace: null,
                            $$originalDirective: u
                        }),
                        s = B(u.templateUrl) ? u.templateUrl(b, d)  : u.templateUrl,
                        L = u.templateNamespace;
                    b.empty();
                    e(s).then(function (c) {
                        var e,
                            I;
                        c = Na(c);
                        if (u.replace) {
                            c = mc.test(c) ? rd(ja(L, U(c)))  : [
                            ];
                            e = c[0];
                            if (1 !== c.length || 1 !== e.nodeType) throw $('tplrt', u.name, s);
                            c = {
                                $attr: {
                                }
                            };
                            pa(f, b, e);
                            var v = sc(e, [
                            ], c);
                            D(u.scope) && fa(v, !0);
                            a = v.concat(a);
                            ga(d, c)
                        } else e = t,
                            b.html(c);
                        a.unshift(J);
                        p = aa(a, e, d, g, b, u, h, k, l);
                        r(f, function (a, c) {
                            a === e && (f[c] = b[0])
                        });
                        for (n = Xa(b[0].childNodes, g); m.length; ) {
                            c = m.shift();
                            I = m.shift();
                            var y = m.shift(),
                                P = m.shift(),
                                v = b[0];
                            if (!c.$$destroyed) {
                                if (I !== t) {
                                    var G = I.className;
                                    l.hasElementTranscludeDirective && u.replace || (v = pc(e));
                                    pa(y, x(I), v);
                                    sa(x(v), G)
                                }
                                I = p.transcludeOnThisElement ? ka(c, p.transclude, P)  : P;
                                p(n, c, v, f, I)
                            }
                        }
                        m = null
                    }).catch (function (a) {
                        cc(a) && c(a)
                    });
                    return function (a, b, c, d, e) {
                        a = e;
                        b.$$destroyed || (m ? m.push(b, c, d, a)  : (p.transcludeOnThisElement && (a = ka(b, p.transclude, e)), p(n, b, c, d, a)))
                    }
                }
                function ia(a, b) {
                    var c = b.priority - a.priority;
                    return 0 !== c ? c : a.name !== b.name ? a.name < b.name ? - 1 : 1 : a.index - b.index
                }
                function ba(a, b, c, d) {
                    function e(a) {
                        return a ? ' (module: ' + a + ')' : ''
                    }
                    if (b) throw $('multidir', b.name, e(b.$$moduleName), c.name, e(c.$$moduleName), a, za(d))
                }
                function na(a, c) {
                    var d = b(c, !0);
                    d && a.push({
                        priority: 0,
                        compile: function (a) {
                            a = a.parent();
                            var b = !!a.length;
                            b && da.$$addBindingClass(a);
                            return function (a, c) {
                                var e = c.parent();
                                b || da.$$addBindingClass(e);
                                da.$$addBindingInfo(e, d.expressions);
                                a.$watch(d, function (a) {
                                    c[0].nodeValue = a
                                })
                            }
                        }
                    })
                }
                function ja(a, b) {
                    a = K(a || 'html');
                    switch (a) {
                        case 'svg':
                        case 'math':
                            var c = C.document.createElement('div');
                            c.innerHTML = '<' + a + '>' + b + '</' + a + '>';
                            return c.childNodes[0].childNodes;
                        default:
                            return b
                    }
                }
                function oa(a, b) {
                    if ('srcdoc' === b) return u.HTML;
                    if ('src' === b || 'ngSrc' === b) return - 1 === ['img',
                        'video',
                        'audio',
                        'source',
                        'track'].indexOf(a) ? u.RESOURCE_URL : u.MEDIA_URL;
                    if ('xlinkHref' === b) return 'image' === a ? u.MEDIA_URL : 'a' === a ? u.URL : u.RESOURCE_URL;
                    if ('form' === a && 'action' === b || 'base' === a && 'href' === b || 'link' === a && 'href' === b) return u.RESOURCE_URL;
                    if ('a' === a && ('href' === b || 'ngHref' === b)) return u.URL;
                    else ;
                }
                function xa(a, b) {
                    var c = b.toLowerCase();
                    return v[a + '|' + c] || v['*|' + c]
                }
                function ya(a) {
                    return ma(u.valueOf(a), 'ng-prop-srcset')
                }
                function Ea(a, b, c, d) {
                    if (m.test(d)) throw $('nodomevents');
                    a = ua(a);
                    var e = xa(a, d),
                        f = Ta;
                    'srcset' !== d || 'img' !== a && 'source' !== a ? e && (f = u.getTrusted.bind(u, e))  : f = ya;
                    b.push({
                        priority: 100,
                        compile: function (a, b) {
                            var e = p(b[c]),
                                g = p(b[c], function (a) {
                                    return u.valueOf(a)
                                });
                            return {
                                pre: function (a, b) {
                                    function c() {
                                        var g = e(a);
                                        b[0][d] = f(g)
                                    }
                                    c();
                                    a.$watch(g, c)
                                }
                            }
                        }
                    })
                }
                function Ia(a, c, d, e, f) {
                    var g = ua(a),
                        k = oa(g, e),
                        l = h[e] || f,
                        p = b(d, !f, k, l);
                    if (p) {
                        if ('multiple' === e && 'select' === g) throw $('selmulti', za(a));
                        if (m.test(e)) throw $('nodomevents');
                        c.push({
                            priority: 100,
                            compile: function () {
                                return {
                                    pre: function (a, c, f) {
                                        c = f.$$observers || (f.$$observers = T());
                                        var g = f[e];
                                        g !== d && (p = g && b(g, !0, k, l), d = g);
                                        p && (f[e] = p(a), (c[e] || (c[e] = [
                                        ])).$$inter = !0, (f.$$observers && f.$$observers[e].$$scope || a).$watch(p, function (a, b) {
                                            'class' === e && a !== b ? f.$updateClass(a, b)  : f.$set(e, a)
                                        }))
                                    }
                                }
                            }
                        })
                    }
                }
                function pa(a, b, c) {
                    var d = b[0],
                        e = b.length,
                        f = d.parentNode,
                        g,
                        h;
                    if (a) for (g = 0, h = a.length; g < h; g++) if (a[g] === d) {
                        a[g++] = c;
                        h = g + e - 1;
                        for (var k = a.length; g < k; g++, h++) h < k ? a[g] = a[h] : delete a[g];
                        a.length -= e - 1;
                        a.context === d && (a.context = c);
                        break
                    }
                    f && f.replaceChild(c, d);
                    a = C.document.createDocumentFragment();
                    for (g = 0; g < e; g++) a.appendChild(b[g]);
                    x.hasData(d) && (x.data(c, x.data(d)), x(d).off('$destroy'));
                    x.cleanData(a.querySelectorAll('*'));
                    for (g = 1; g < e; g++) delete b[g];
                    b[0] = c;
                    b.length = 1
                }
                function Aa(a, b) {
                    return S(function () {
                        return a.apply(null, arguments)
                    }, a, b)
                }
                function Ba(a, b, d, e, f, g) {
                    try {
                        a(b, d, e, f, g)
                    } catch (h) {
                        c(h, za(d))
                    }
                }
                function ra(a, b) {
                    if (s) throw $('missingattr', a, b)
                }
                function Da(a, c, d, e, f) {
                    function g(b, c, e) {
                        B(d.$onChanges) && !dc(c, e) && (Ua || (a.$$postDigest(q), Ua = [
                        ]), m || (m = {
                        }, Ua.push(h)), m[b] && (e = m[b].previousValue), m[b] = new Jb(e, c))
                    }
                    function h() {
                        d.$onChanges(m);
                        m = void 0
                    }
                    var k = [
                        ],
                        l = {
                        },
                        m;
                    r(e, function (e, h) {
                        var m = e.attrName,
                            n = e.optional,
                            I,
                            t,
                            u,
                            s;
                        switch (e.mode) {
                            case '@':
                                n || ta.call(c, m) || (ra(m, f.name), d[h] = c[m] = void 0);
                                n = c.$observe(m, function (a) {
                                    if (A(a) || Ga(a)) g(h, a, d[h]),
                                        d[h] = a
                                });
                                c.$$observers[m].$$scope = a;
                                I = c[m];
                                A(I) ? d[h] = b(I) (a)  : Ga(I) && (d[h] = I);
                                l[h] = new Jb(tc, d[h]);
                                k.push(n);
                                break;
                            case '=':
                                if (!ta.call(c, m)) {
                                    if (n) break;
                                    ra(m, f.name);
                                    c[m] = void 0
                                }
                                if (n && !c[m]) break;
                                t = p(c[m]);
                                s = t.literal ? va : dc;
                                u = t.assign || function () {
                                    I = d[h] = t(a);
                                    throw $('nonassign', c[m], m, f.name)
                                };
                                I = d[h] = t(a);
                                n = function (b) {
                                    s(b, d[h]) || (s(b, I) ? u(a, b = d[h])  : d[h] = b);
                                    return I = b
                                };
                                n.$stateful = !0;
                                n = e.collection ? a.$watchCollection(c[m], n)  : a.$watch(p(c[m], n), null, t.literal);
                                k.push(n);
                                break;
                            case '<':
                                if (!ta.call(c, m)) {
                                    if (n) break;
                                    ra(m, f.name);
                                    c[m] = void 0
                                }
                                if (n && !c[m]) break;
                                t = p(c[m]);
                                var v = t.literal,
                                    L = d[h] = t(a);
                                l[h] = new Jb(tc, d[h]);
                                n = a[e.collection ? '$watchCollection' : '$watch'](t, function (a, b) {
                                    if (b === a) {
                                        if (b === L || v && va(b, L)) return;
                                        b = L
                                    }
                                    g(h, a, b);
                                    d[h] = a
                                });
                                k.push(n);
                                break;
                            case '&':
                                n || ta.call(c, m) || ra(m, f.name);
                                t = c.hasOwnProperty(m) ? p(c[m])  : E;
                                if (t === E && n) break;
                                d[h] = function (b) {
                                    return t(a, b)
                                }
                        }
                    }); return {
                        initialChanges: l,
                        removeWatches: k.length && function () {
                            for (var a = 0, b = k.length; a < b; ++a) k[a]()
                        }
                    }
                }
                var Ma = /^\w/,
                    Fa = C.document.createElement('div'),
                    Oa = t,
                    Qa = N,
                    Ja = G,
                    Ua;
                w.prototype = {
                    $normalize: wa,
                    $addClass: function (a) {
                        a && 0 < a.length && R.addClass(this.$$element, a)
                    },
                    $removeClass: function (a) {
                        a && 0 < a.length && R.removeClass(this.$$element, a)
                    },
                    $updateClass: function (a, b) {
                        var c = sd(a, b);
                        c && c.length && R.addClass(this.$$element, c);
                        (c = sd(b, a)) && c.length && R.removeClass(this.$$element, c)
                    },
                    $set: function (a, b, d, e) {
                        var f = ld(this.$$element[0], a),
                            g = td[a],
                            h = a;
                        f ? (this.$$element.prop(a, b), e = f)  : g && (this[g] = b, h = g);
                        this[a] = b;
                        e ? this.$attr[a] = e : (e = this.$attr[a]) || (this.$attr[a] = e = Vc(a, '-'));
                        'img' === ua(this.$$element) && 'srcset' === a && (this[a] = b = ma(b, '$set(\'srcset\', value)'));
                        !1 !== d && (null === b || z(b) ? this.$$element.removeAttr(e)  : Ma.test(e) ? f && !1 === b ? this.$$element.removeAttr(e)  : this.$$element.attr(e, b)  : O(this.$$element[0], e, b));
                        (a = this.$$observers) && r(a[h], function (a) {
                            try {
                                a(b)
                            } catch (d) {
                                c(d)
                            }
                        })
                    },
                    $observe: function (a, b) {
                        var c = this,
                            d = c.$$observers || (c.$$observers = T()),
                            e = d[a] || (d[a] = [
                            ]);
                        e.push(b);
                        L.$evalAsync(function () {
                            e.$$inter || !c.hasOwnProperty(a) || z(c[a]) || b(c[a])
                        });
                        return function () {
                            cb(e, b)
                        }
                    }
                };
                var Ka = b.startSymbol(),
                    La = b.endSymbol(),
                    Na = '{{' === Ka && '}}' === La ? Ta : function (a) {
                        return a.replace(/\{\{/g, Ka).replace(/}}/g, La)
                    },
                    Ra = /^ng(Attr|Prop|On)([A-Z].*)$/,
                    Sa = /^(.+)Start$/;
                da.$$addBindingInfo = n ? function (a, b) {
                        var c = a.data('$binding') || [
                        ];
                        H(b) ? c = c.concat(b)  : c.push(b);
                        a.data('$binding', c)
                    }
                    : E;
                da.$$addBindingClass = n ? function (a) {
                        sa(a, 'ng-binding')
                    }
                    : E;
                da.$$addScopeInfo = n ? function (a, b, c, d) {
                        a.data(c ? d ? '$isolateScopeNoTemplate' : '$isolateScope' : '$scope', b)
                    }
                    : E;
                da.$$addScopeClass = n ? function (a, b) {
                        sa(a, b ? 'ng-isolate-scope' : 'ng-scope')
                    }
                    : E;
                da.$$createComment = function (a, b) {
                    var c = '';
                    n && (c = ' ' + (a || '') + ': ', b && (c += b + ' '));
                    return C.document.createComment(c)
                };
                return da
            }
        ]
    }
    function Jb(a, b) {
        this.previousValue = a;
        this.currentValue = b
    }
    function wa(a) {
        return a.replace(pd, '').replace(Eg, function (a, d, c) {
            return c ? d.toUpperCase()  : d
        })
    }
    function sd(a, b) {
        var d = '',
            c = a.split(/\s+/),
            e = b.split(/\s+/),
            f = 0;
        a: for (; f < c.length; f++) {
            for (var g = c[f], k = 0; k < e.length; k++) if (g === e[k]) continue a;
            d += (0 < d.length ? ' ' : '') + g
        }
        return d
    }
    function rd(a) {
        a = x(a);
        var b = a.length;
        if (1 >= b) return a;
        for (; b--; ) {
            var d = a[b];
            (8 === d.nodeType || d.nodeType === Pa && '' === d.nodeValue.trim()) && Fg.call(a, b, 1)
        }
        return a
    }
    function Bg(a, b) {
        if (b && A(b)) return b;
        if (A(a)) {
            var d = ud.exec(a);
            if (d) return d[3]
        }
    }
    function Ff() {
        var a = {
        };
        this.has = function (b) {
            return a.hasOwnProperty(b);
        };
        this.register = function (b, d) {
            Ja(b, 'controller');
            D(b) ? S(a, b)  : a[b] = d
        };
        this.$get = [
            '$injector',
            function (b) {
                function d(a, b, d, g) {
                    if (!a || !D(a.$scope)) throw F('$controller') ('noscp', g, b);
                    a.$scope[b] = d
                }
                return function (c, e, f, g) {
                    var k,
                        h,
                        l;
                    f = !0 === f;
                    g && A(g) && (l = g);
                    if (A(c)) {
                        g = c.match(ud);
                        if (!g) throw vd('ctrlfmt', c);
                        h = g[1];
                        l = l || g[3];
                        c = a.hasOwnProperty(h) ? a[h] : Ge(e.$scope, h, !0);
                        if (!c) throw vd('ctrlreg', h);
                        sb(c, h, !0)
                    }
                    if (f) return f = (H(c) ? c[c.length - 1] : c).prototype,
                        k = Object.create(f || null),
                    l && d(e, l, k, h || c.name),
                        S(function () {
                            var a = b.invoke(c, k, e, h);
                            a !== k && (D(a) || B(a)) && (k = a, l && d(e, l, k, h || c.name));
                            return k
                        }, {
                            instance: k,
                            identifier: l
                        });
                    k = b.instantiate(c, e, h);
                    l && d(e, l, k, h || c.name);
                    return k
                }
            }
        ]
    }
    function Gf() {
        this.$get = [
            '$window',
            function (a) {
                return x(a.document)
            }
        ]
    }
    function Hf() {
        this.$get = [
            '$document',
            '$rootScope',
            function (a, b) {
                function d() {
                    e = c.hidden
                }
                var c = a[0],
                    e = c && c.hidden;
                a.on('visibilitychange', d);
                b.$on('$destroy', function () {
                    a.off('visibilitychange', d)
                });
                return function () {
                    return e
                }
            }
        ]
    }
    function If() {
        this.$get = [
            '$log',
            function (a) {
                return function (b, d) {
                    a.error.apply(a, arguments)
                }
            }
        ]
    }
    function uc(a) {
        return D(a) ? ha(a) ? a.toISOString()  : eb(a)  : a
    }
    function Of() {
        this.$get = function () {
            return function (a) {
                if (!a) return '';
                var b = [
                ];
                Oc(a, function (a, c) {
                    null === a || z(a) || B(a) || (H(a) ? r(a, function (a) {
                        b.push(ba(c) + '=' + ba(uc(a)))
                    })  : b.push(ba(c) + '=' + ba(uc(a))))
                });
                return b.join('&')
            }
        }
    }
    function Pf() {
        this.$get = function () {
            return function (a) {
                function b(a, e, f) {
                    H(a) ? r(a, function (a, c) {
                        b(a, e + '[' + (D(a) ? c : '') + ']')
                    })  : D(a) && !ha(a) ? Oc(a, function (a, c) {
                        b(a, e + (f ? '' : '[') + c + (f ? '' : ']'))
                    })  : (B(a) && (a = a()), d.push(ba(e) + '=' + (null == a ? '' : ba(uc(a)))))
                }
                if (!a) return '';
                var d = [
                ];
                b(a, '', !0);
                return d.join('&')
            }
        }
    }
    function vc(a, b) {
        if (A(a)) {
            var d = a.replace(Gg, '').trim();
            if (d) {
                var c = b('Content-Type'),
                    c = c && 0 === c.indexOf(wd),
                    e;
                (e = c) || (e = (e = d.match(Hg)) && Ig[e[0]].test(d));
                if (e) try {
                    a = Rc(d)
                } catch (f) {
                    if (!c) return a;
                    throw Kb('baddata', a, f)
                }
            }
        }
        return a
    }
    function xd(a) {
        var b = T(),
            d;
        A(a) ? r(a.split('\n'), function (a) {
            d = a.indexOf(':');
            var e = K(U(a.substr(0, d)));
            a = U(a.substr(d + 1));
            e && (b[e] = b[e] ? b[e] + ', ' + a : a)
        })  : D(a) && r(a, function (a, d) {
            var f = K(d),
                g = U(a);
            f && (b[f] = b[f] ? b[f] + ', ' + g : g)
        });
        return b
    }
    function yd(a) {
        var b;
        return function (d) {
            b || (b = xd(a));
            return d ? (d = b[K(d)], void 0 === d && (d = null), d)  : b
        }
    }
    function zd(a, b, d, c) {
        if (B(c)) return c(a, b, d);
        r(c, function (c) {
            a = c(a, b, d)
        });
        return a
    }
    function Nf() {
        var a = this.defaults = {
                transformResponse: [
                    vc
                ],
                transformRequest: [
                    function (a) {
                        return D(a) && '[object File]' !== la.call(a) && '[object Blob]' !== la.call(a) && '[object FormData]' !== la.call(a) ? eb(a)  : a
                    }
                ],
                headers: {
                    common: {
                        Accept: 'application/json, text/plain, */*'
                    },
                    post: ja(wc),
                    put: ja(wc),
                    patch: ja(wc)
                },
                xsrfCookieName: 'XSRF-TOKEN',
                xsrfHeaderName: 'X-XSRF-TOKEN',
                paramSerializer: '$httpParamSerializer',
                jsonpCallbackParam: 'callback'
            },
            b = !1;
        this.useApplyAsync = function (a) {
            return w(a) ? (b = !!a, this)  : b
        };
        var d = this.interceptors = [
            ],
            c = this.xsrfWhitelistedOrigins = [
            ];
        this.$get = [
            '$browser',
            '$httpBackend',
            '$$cookieReader',
            '$cacheFactory',
            '$rootScope',
            '$q',
            '$injector',
            '$sce',
            function (e, f, g, k, h, l, m, p) {
                function n(b) {
                    function c(a, b) {
                        for (var d = 0, e = b.length; d < e; ) {
                            var f = b[d++],
                                g = b[d++];
                            a = a.then(f, g)
                        }
                        b.length = 0;
                        return a
                    }
                    function d(a, b) {
                        var c,
                            e = {
                            };
                        r(a, function (a, d) {
                            B(a) ? (c = a(b), null != c && (e[d] = c))  : e[d] = a
                        });
                        return e
                    }
                    function f(a) {
                        var b = S({
                        }, a);
                        b.data = zd(a.data, a.headers, a.status, g.transformResponse);
                        a = a.status;
                        return 200 <= a && 300 > a ? b : l.reject(b)
                    }
                    if (!D(b)) throw F('$http') ('badreq', b);
                    if (!A(p.valueOf(b.url))) throw F('$http') ('badreq', b.url);
                    var g = S({
                        method: 'get',
                        transformRequest: a.transformRequest,
                        transformResponse: a.transformResponse,
                        paramSerializer: a.paramSerializer,
                        jsonpCallbackParam: a.jsonpCallbackParam
                    }, b);
                    g.headers = function (b) {
                        var c = a.headers,
                            e = S({
                            }, b.headers),
                            f,
                            g,
                            h,
                            c = S({
                            }, c.common, c[K(b.method)]);
                        a: for (f in c) {
                            g = K(f);
                            for (h in e) if (K(h) === g) continue a;
                            e[f] = c[f]
                        }
                        return d(e, ja(b))
                    }(b);
                    g.method = ub(g.method);
                    g.paramSerializer = A(g.paramSerializer) ? m.get(g.paramSerializer)  : g.paramSerializer;
                    e.$$incOutstandingRequestCount('$http');
                    var h = [
                        ],
                        k = [
                        ];
                    b = l.resolve(g);
                    r(v, function (a) {
                        (a.request || a.requestError) && h.unshift(a.request, a.requestError);
                        (a.response || a.responseError) && k.push(a.response, a.responseError)
                    });
                    b = c(b, h);
                    b = b.then(function (b) {
                        var c = b.headers,
                            d = zd(b.data, yd(c), void 0, b.transformRequest);
                        z(d) && r(c, function (a, b) {
                            'content-type' === K(b) && delete c[b]
                        });
                        z(b.withCredentials) && !z(a.withCredentials) && (b.withCredentials = a.withCredentials);
                        return s(b, d).then(f, f)
                    });
                    b = c(b, k);
                    return b = b.finally (function () {
                        e.$$completeOutstandingRequest(E, '$http')
                    })
                }
                function s(c, d) {
                    function e(a) {
                        if (a) {
                            var c = {
                            };
                            r(a, function (a, d) {
                                c[d] = function (c) {
                                    function d() {
                                        a(c)
                                    }
                                    b ? h.$applyAsync(d)  : h.$$phase ? d()  : h.$apply(d)
                                }
                            });
                            return c
                        }
                    }
                    function k(a, c, d, e, f) {
                        function g() {
                            m(c, a, d, e, f)
                        }
                        R && (200 <= a && 300 > a ? R.put(O, [
                            a,
                            c,
                            xd(d),
                            e,
                            f
                        ])  : R.remove(O));
                        b ? h.$applyAsync(g)  : (g(), h.$$phase || h.$apply())
                    }
                    function m(a, b, d, e, f) {
                        b = - 1 <= b ? b : 0;
                        (200 <= b && 300 > b ? L.resolve : L.reject) ({
                            data: a,
                            status: b,
                            headers: yd(d),
                            config: c,
                            statusText: e,
                            xhrStatus: f
                        })
                    }
                    function s(a) {
                        m(a.data, a.status, ja(a.headers()), a.statusText, a.xhrStatus)
                    }
                    function v() {
                        var a = n.pendingRequests.indexOf(c);
                        - 1 !== a && n.pendingRequests.splice(a, 1)
                    }
                    var L = l.defer(),
                        u = L.promise,
                        R,
                        q,
                        ma = c.headers,
                        x = 'jsonp' === K(c.method),
                        O = c.url;
                    x ? O = p.getTrustedResourceUrl(O)  : A(O) || (O = p.valueOf(O));
                    O = G(O, c.paramSerializer(c.params));
                    x && (O = t(O, c.jsonpCallbackParam));
                    n.pendingRequests.push(c);
                    u.then(v, v);
                    !c.cache && !a.cache || !1 === c.cache || 'GET' !== c.method && 'JSONP' !== c.method || (R = D(c.cache) ? c.cache : D(a.cache) ? a.cache : N);
                    R && (q = R.get(O), w(q) ? q && B(q.then) ? q.then(s, s)  : H(q) ? m(q[1], q[0], ja(q[2]), q[3], q[4])  : m(q, 200, {
                    }, 'OK', 'complete')  : R.put(O, u));
                    z(q) && ((q = jc(c.url) ? g() [c.xsrfCookieName || a.xsrfCookieName] : void 0) && (ma[c.xsrfHeaderName || a.xsrfHeaderName] = q), f(c.method, O, d, k, ma, c.timeout, c.withCredentials, c.responseType, e(c.eventHandlers), e(c.uploadEventHandlers)));
                    return u
                }
                function G(a, b) {
                    0 < b.length && (a += ( - 1 === a.indexOf('?') ? '?' : '&') + b);
                    return a
                }
                function t(a, b) {
                    var c = a.split('?');
                    if (2 < c.length) throw Kb('badjsonp', a);
                    c = gc(c[1]);
                    r(c, function (c, d) {
                        if ('JSON_CALLBACK' === c) throw Kb('badjsonp', a);
                        if (d === b) throw Kb('badjsonp', b, a)
                    });
                    return a += ( - 1 === a.indexOf('?') ? '?' : '&') + b + '=JSON_CALLBACK'
                }
                var N = k('$http');
                a.paramSerializer = A(a.paramSerializer) ? m.get(a.paramSerializer)  : a.paramSerializer;
                var v = [
                ];
                r(d, function (a) {
                    v.unshift(A(a) ? m.get(a)  : m.invoke(a))
                });
                var jc = Jg(c);
                n.pendingRequests = [
                ];
                !function (a) {
                    r(arguments, function (a) {
                        n[a] = function (b, c) {
                            return n(S({
                            }, c || {
                            }, {
                                method: a,
                                url: b
                            }))
                        }
                    })
                }('get', 'delete', 'head', 'jsonp');
                !function (a) {
                    r(arguments, function (a) {
                        n[a] = function (b, c, d) {
                            return n(S({
                            }, d || {
                            }, {
                                method: a,
                                url: b,
                                data: c
                            }))
                        }
                    })
                }('post', 'put', 'patch');
                n.defaults = a;
                return n
            }
        ]
    }
    function Rf() {
        this.$get = function () {
            return function () {
                return new C.XMLHttpRequest
            }
        }
    }
    function Qf() {
        this.$get = [
            '$browser',
            '$jsonpCallbacks',
            '$document',
            '$xhrFactory',
            function (a, b, d, c) {
                return Kg(a, c, a.defer, b, d[0])
            }
        ]
    }
    function Kg(a, b, d, c, e) {
        function f(a, b, d) {
            a = a.replace('JSON_CALLBACK', b);
            var f = e.createElement('script'),
                m = null;
            f.type = 'text/javascript';
            f.src = a;
            f.async = !0;
            m = function (a) {
                f.removeEventListener('load', m);
                f.removeEventListener('error', m);
                e.body.removeChild(f);
                f = null;
                var g = - 1,
                    s = 'unknown';
                a && ('load' !== a.type || c.wasCalled(b) || (a = {
                    type: 'error'
                }), s = a.type, g = 'error' === a.type ? 404 : 200);
                d && d(g, s)
            };
            f.addEventListener('load', m);
            f.addEventListener('error', m);
            e.body.appendChild(f);
            return m
        }
        return function (e, k, h, l, m, p, n, s, G, t) {
            function N(a) {
                J = 'timeout' === a;
                qa && qa();
                y && y.abort()
            }
            function v(a, b, c, e, f, g) {
                w(P) && d.cancel(P);
                qa = y = null;
                a(b, c, e, f, g)
            }
            k = k || a.url();
            if ('jsonp' === K(e)) var q = c.createCallback(k),
                qa = f(k, q, function (a, b) {
                    var d = 200 === a && c.getResponse(q);
                    v(l, a, d, '', b, 'complete');
                    c.removeCallback(q)
                });
            else {
                var y = b(e, k),
                    J = !1;
                y.open(e, k, !0);
                r(m, function (a, b) {
                    w(a) && y.setRequestHeader(b, a)
                });
                y.onload = function () {
                    var a = y.statusText || '',
                        b = 'response' in y ? y.response : y.responseText,
                        c = 1223 === y.status ? 204 : y.status;
                    0 === c && (c = b ? 200 : 'file' === ga(k).protocol ? 404 : 0);
                    v(l, c, b, y.getAllResponseHeaders(), a, 'complete')
                };
                y.onerror = function () {
                    v(l, - 1, null, null, '', 'error')
                };
                y.ontimeout = function () {
                    v(l, - 1, null, null, '', 'timeout')
                };
                y.onabort = function () {
                    v(l, - 1, null, null, '', J ? 'timeout' : 'abort')
                };
                r(G, function (a, b) {
                    y.addEventListener(b, a)
                });
                r(t, function (a, b) {
                    y.upload.addEventListener(b, a)
                });
                n && (y.withCredentials = !0);
                if (s) try {
                    y.responseType = s
                } catch (I) {
                    if ('json' !== s) throw I
                }
                y.send(z(h) ? null : h)
            }
            if (0 < p) var P = d(function () {
                N('timeout')
            }, p);
            else p && B(p.then) && p.then(function () {
                N(w(p.$$timeoutId) ? 'timeout' : 'abort')
            })
        }
    }
    function Kf() {
        var a = '{{',
            b = '}}';
        this.startSymbol = function (b) {
            return b ? (a = b, this)  : a
        };
        this.endSymbol = function (a) {
            return a ? (b = a, this)  : b
        };
        this.$get = [
            '$parse',
            '$exceptionHandler',
            '$sce',
            function (d, c, e) {
                function f(a) {
                    return '\\\\\\' + a
                }
                function g(c) {
                    return c.replace(p, a).replace(n, b)
                }
                function k(a, b, c, d) {
                    var e = a.$watch(function (a) {
                        e();
                        return d(a)
                    }, b, c);
                    return e
                }
                function h(f, h, n, p) {
                    function v(a) {
                        try {
                            return a = n && !r ? e.getTrusted(n, a)  : e.valueOf(a),
                                p && !w(a) ? a : ic(a)
                        } catch (b) {
                            c(Ma.interr(f, b))
                        }
                    }
                    var r = n === e.URL || n === e.MEDIA_URL;
                    if (!f.length || - 1 === f.indexOf(a)) {
                        if (h) return;
                        h = g(f);
                        r && (h = e.getTrusted(n, h));
                        h = ia(h);
                        h.exp = f;
                        h.expressions = [
                        ];
                        h.$$watchDelegate = k;
                        return h
                    }
                    p = !!p;
                    for (var q, y, J = 0, I = [
                    ], P, Q = f.length, M = [
                    ], L = [
                    ], u; J < Q; ) if ( - 1 !== (q = f.indexOf(a, J)) && - 1 !== (y = f.indexOf(b, q + l))) J !== q && M.push(g(f.substring(J, q))),
                        J = f.substring(q + l, y),
                        I.push(J),
                        J = y + m,
                        L.push(M.length),
                        M.push('');
                    else {
                        J !== Q && M.push(g(f.substring(J)));
                        break
                    }
                    u = 1 === M.length && 1 === L.length;
                    var R = r && u ? void 0 : v;
                    P = I.map(function (a) {
                        return d(a, R)
                    });
                    if (!h || I.length) {
                        var x = function (a) {
                            for (var b = 0, c = I.length; b < c; b++) {
                                if (p && z(a[b])) return;
                                M[L[b]] = a[b]
                            }
                            if (r) return e.getTrusted(n, u ? M[0] : M.join(''));
                            n && 1 < M.length && Ma.throwNoconcat(f);
                            return M.join('')
                        };
                        return S(function (a) {
                            var b = 0,
                                d = I.length,
                                e = Array(d);
                            try {
                                for (; b < d; b++) e[b] = P[b](a);
                                return x(e)
                            } catch (g) {
                                c(Ma.interr(f, g))
                            }
                        }, {
                            exp: f,
                            expressions: I,
                            $$watchDelegate: function (a, b) {
                                var c;
                                return a.$watchGroup(P, function (d, e) {
                                    var f = x(d);
                                    b.call(this, f, d !== e ? c : f, a);
                                    c = f
                                })
                            }
                        })
                    }
                }
                var l = a.length,
                    m = b.length,
                    p = new RegExp(a.replace(/./g, f), 'g'),
                    n = new RegExp(b.replace(/./g, f), 'g');
                h.startSymbol = function () {
                    return a
                };
                h.endSymbol = function () {
                    return b
                };
                return h
            }
        ]
    }
    function Lf() {
        this.$get = [
            '$$intervalFactory',
            '$window',
            function (a, b) {
                var d = {
                    },
                    c = function (a) {
                        b.clearInterval(a);
                        delete d[a]
                    },
                    e = a(function (a, c, e) {
                        a = b.setInterval(a, c);
                        d[a] = e;
                        return a
                    }, c);
                e.cancel = function (a) {
                    if (!a) return !1;
                    if (!a.hasOwnProperty('$$intervalId')) throw Lg('badprom');
                    if (!d.hasOwnProperty(a.$$intervalId)) return !1;
                    a = a.$$intervalId;
                    var b = d[a],
                        e = b.promise;
                    e.$$state && (e.$$state.pur = !0);
                    b.reject('canceled');
                    c(a);
                    return !0
                };
                return e
            }
        ]
    }
    function Mf() {
        this.$get = [
            '$browser',
            '$q',
            '$$q',
            '$rootScope',
            function (a, b, d, c) {
                return function (e, f) {
                    return function (g, k, h, l) {
                        function m() {
                            p ? g.apply(null, n)  : g(s)
                        }
                        var p = 4 < arguments.length,
                            n = p ? Ha.call(arguments, 4)  : [
                            ],
                            s = 0,
                            G = w(l) && !l,
                            t = (G ? d : b).defer(),
                            r = t.promise;
                        h = w(h) ? h : 0;
                        r.$$intervalId = e(function () {
                            G ? a.defer(m)  : c.$evalAsync(m);
                            t.notify(s++);
                            0 < h && s >= h && (t.resolve(s), f(r.$$intervalId));
                            G || c.$apply()
                        }, k, t, G);
                        return r
                    }
                }
            }
        ]
    }
    function Ad(a, b) {
        var d = ga(a);
        b.$$protocol = d.protocol;
        b.$$host = d.hostname;
        b.$$port = fa(d.port) || Mg[d.protocol] || null
    }
    function Bd(a, b, d) {
        if (Ng.test(a)) throw jb('badpath', a);
        var c = '/' !== a.charAt(0);
        c && (a = '/' + a);
        a = ga(a);
        for (var c = (c && '/' === a.pathname.charAt(0) ? a.pathname.substring(1)  : a.pathname).split('/'), e = c.length; e--; ) c[e] = decodeURIComponent(c[e]),
        d && (c[e] = c[e].replace(/\//g, '%2F'));
        d = c.join('/');
        b.$$path = d;
        b.$$search = gc(a.search);
        b.$$hash = decodeURIComponent(a.hash);
        b.$$path && '/' !== b.$$path.charAt(0) && (b.$$path = '/' + b.$$path)
    }
    function xc(a, b) {
        return a.slice(0, b.length) === b
    }
    function xa(a, b) {
        if (xc(b, a)) return b.substr(a.length)
    }
    function Da(a) {
        var b = a.indexOf('#');
        return - 1 === b ? a : a.substr(0, b)
    }
    function yc(a, b, d) {
        this.$$html5 = !0;
        d = d || '';
        Ad(a, this);
        this.$$parse = function (a) {
            var d = xa(b, a);
            if (!A(d)) throw jb('ipthprfx', a, b);
            Bd(d, this, !0);
            this.$$path || (this.$$path = '/');
            this.$$compose()
        };
        this.$$normalizeUrl = function (a) {
            return b + a.substr(1)
        };
        this.$$parseLinkUrl = function (c, e) {
            if (e && '#' === e[0]) return this.hash(e.slice(1)),
                !0;
            var f,
                g;
            w(f = xa(a, c)) ? (g = f, g = d && w(f = xa(d, f)) ? b + (xa('/', f) || f)  : a + g)  : w(f = xa(b, c)) ? g = b + f : b === c + '/' && (g = b);
            g && this.$$parse(g);
            return !!g
        }
    }
    function zc(a, b, d) {
        Ad(a, this);
        this.$$parse = function (c) {
            var e = xa(a, c) || xa(b, c),
                f;
            z(e) || '#' !== e.charAt(0) ? this.$$html5 ? f = e : (f = '', z(e) && (a = c, this.replace()))  : (f = xa(d, e), z(f) && (f = e));
            Bd(f, this, !1);
            c = this.$$path;
            var e = a,
                g = /^\/[A-Z]:(\/.*)/;
            xc(f, e) && (f = f.replace(e, ''));
            g.exec(f) || (c = (f = g.exec(c)) ? f[1] : c);
            this.$$path = c;
            this.$$compose()
        };
        this.$$normalizeUrl = function (b) {
            return a + (b ? d + b : '')
        };
        this.$$parseLinkUrl = function (b, d) {
            return Da(a) === Da(b) ? (this.$$parse(b), !0)  : !1
        }
    }
    function Cd(a, b, d) {
        this.$$html5 = !0;
        zc.apply(this, arguments);
        this.$$parseLinkUrl = function (c, e) {
            if (e && '#' === e[0]) return this.hash(e.slice(1)),
                !0;
            var f,
                g;
            a === Da(c) ? f = c : (g = xa(b, c)) ? f = a + d + g : b === c + '/' && (f = b);
            f && this.$$parse(f);
            return !!f
        };
        this.$$normalizeUrl = function (b) {
            return a + d + b
        }
    }
    function Lb(a) {
        return function () {
            return this[a]
        }
    }
    function Dd(a, b) {
        return function (d) {
            if (z(d)) return this[a];
            this[a] = b(d);
            this.$$compose();
            return this
        }
    }
    function Tf() {
        var a = '!',
            b = {
                enabled: !1,
                requireBase: !0,
                rewriteLinks: !0
            };
        this.hashPrefix = function (b) {
            return w(b) ? (a = b, this)  : a
        };
        this.html5Mode = function (a) {
            if (Ga(a)) return b.enabled = a,
                this;
            if (D(a)) {
                Ga(a.enabled) && (b.enabled = a.enabled);
                Ga(a.requireBase) && (b.requireBase = a.requireBase);
                if (Ga(a.rewriteLinks) || A(a.rewriteLinks)) b.rewriteLinks = a.rewriteLinks;
                return this
            }
            return b
        };
        this.$get = [
            '$rootScope',
            '$browser',
            '$sniffer',
            '$rootElement',
            '$window',
            function (d, c, e, f, g) {
                function k(a, b) {
                    return a === b || ga(a).href === ga(b).href
                }
                function h(a, b, d) {
                    var e = m.url(),
                        f = m.$$state;
                    try {
                        c.url(a, b, d),
                            m.$$state = c.state()
                    } catch (g) {
                        throw m.url(e),
                            m.$$state = f,
                            g
                    }
                }
                function l(a, b) {
                    d.$broadcast('$locationChangeSuccess', m.absUrl(), a, m.$$state, b)
                }
                var m,
                    p;
                p = c.baseHref();
                var n = c.url(),
                    s;
                if (b.enabled) {
                    if (!p && b.requireBase) throw jb('nobase');
                    s = n.substring(0, n.indexOf('/', n.indexOf('//') + 2)) + (p || '/');
                    p = e.history ? yc : Cd
                } else s = Da(n),
                    p = zc;
                var r = s.substr(0, Da(s).lastIndexOf('/') + 1);
                m = new p(s, r, '#' + a);
                m.$$parseLinkUrl(n, n);
                m.$$state = c.state();
                var t = /^\s*(javascript|mailto):/i;
                f.on('click', function (a) {
                    var e = b.rewriteLinks;
                    if (e && !a.ctrlKey && !a.metaKey && !a.shiftKey && 2 !== a.which && 2 !== a.button) {
                        for (var g = x(a.target); 'a' !== ua(g[0]); ) if (g[0] === f[0] || !(g = g.parent()) [0]) return;
                        if (!A(e) || !z(g.attr(e))) {
                            var e = g.prop('href'),
                                h = g.attr('href') || g.attr('xlink:href');
                            D(e) && '[object SVGAnimatedString]' === e.toString() && (e = ga(e.animVal).href);
                            t.test(e) || !e || g.attr('target') || a.isDefaultPrevented() || !m.$$parseLinkUrl(e, h) || (a.preventDefault(), m.absUrl() !== c.url() && d.$apply())
                        }
                    }
                });
                m.absUrl() !== n && c.url(m.absUrl(), !0);
                var N = !0;
                c.onUrlChange(function (a, b) {
                    xc(a, r) ? (d.$evalAsync(function () {
                        var c = m.absUrl(),
                            e = m.$$state,
                            f;
                        m.$$parse(a);
                        m.$$state = b;
                        f = d.$broadcast('$locationChangeStart', a, c, b, e).defaultPrevented;
                        m.absUrl() === a && (f ? (m.$$parse(c), m.$$state = e, h(c, !1, e))  : (N = !1, l(c, e)))
                    }), d.$$phase || d.$digest())  : g.location.href = a
                });
                d.$watch(function () {
                    if (N || m.$$urlUpdatedByLocation) {
                        m.$$urlUpdatedByLocation = !1;
                        var a = c.url(),
                            b = m.absUrl(),
                            f = c.state(),
                            g = m.$$replace,
                            n = !k(a, b) || m.$$html5 && e.history && f !== m.$$state;
                        if (N || n) N = !1,
                            d.$evalAsync(function () {
                                var b = m.absUrl(),
                                    c = d.$broadcast('$locationChangeStart', b, a, m.$$state, f).defaultPrevented;
                                m.absUrl() === b && (c ? (m.$$parse(a), m.$$state = f)  : (n && h(b, g, f === m.$$state ? null : m.$$state), l(a, f)))
                            })
                    }
                    m.$$replace = !1
                });
                return m
            }
        ]
    }
    function Uf() {
        var a = !0,
            b = this;
        this.debugEnabled = function (b) {
            return w(b) ? (a = b, this)  : a
        };
        this.$get = [
            '$window',
            function (d) {
                function c(a) {
                    cc(a) && (a.stack && f ? a = a.message && - 1 === a.stack.indexOf(a.message) ? 'Error: ' + a.message + '\n' + a.stack : a.stack : a.sourceURL && (a = a.message + '\n' + a.sourceURL + ':' + a.line));
                    return a
                }
                function e(a) {
                    var b = d.console || {
                        },
                        e = b[a] || b.log || E;
                    return function () {
                        var a = [
                        ];
                        r(arguments, function (b) {
                            a.push(c(b))
                        });
                        return Function.prototype.apply.call(e, b, a)
                    }
                }
                var f = Ca || /\bEdge\//.test(d.navigator && d.navigator.userAgent);
                return {
                    log: e('log'),
                    info: e('info'),
                    warn: e('warn'),
                    error: e('error'),
                    debug: function () {
                        var c = e('debug');
                        return function () {
                            a && c.apply(b, arguments)
                        }
                    }()
                }
            }
        ]
    }
    function Og(a) {
        return a + ''
    }
    function Pg(a, b) {
        return 'undefined' !== typeof a ? a : b
    }
    function Ed(a, b) {
        return 'undefined' === typeof a ? b : 'undefined' === typeof b ? a : a + b
    }
    function Qg(a, b) {
        switch (a.type) {
            case q.MemberExpression:
                if (a.computed) return !1;
                break;
            case q.UnaryExpression:
                return 1;
            case q.BinaryExpression:
                return '+' !== a.operator ? 1 : !1;
            case q.CallExpression:
                return !1
        }
        return void 0 === b ? Fd : b
    }
    function Z(a, b, d) {
        var c,
            e,
            f = a.isPure = Qg(a, d);
        switch (a.type) {
            case q.Program:
                c = !0;
                r(a.body, function (a) {
                    Z(a.expression, b, f);
                    c = c && a.expression.constant
                });
                a.constant = c;
                break;
            case q.Literal:
                a.constant = !0;
                a.toWatch = [
                ];
                break;
            case q.UnaryExpression:
                Z(a.argument, b, f);
                a.constant = a.argument.constant;
                a.toWatch = a.argument.toWatch;
                break;
            case q.BinaryExpression:
                Z(a.left, b, f);
                Z(a.right, b, f);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.left.toWatch.concat(a.right.toWatch);
                break;
            case q.LogicalExpression:
                Z(a.left, b, f);
                Z(a.right, b, f);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = a.constant ? [
                ] : [
                    a
                ];
                break;
            case q.ConditionalExpression:
                Z(a.test, b, f);
                Z(a.alternate, b, f);
                Z(a.consequent, b, f);
                a.constant = a.test.constant && a.alternate.constant && a.consequent.constant;
                a.toWatch = a.constant ? [
                ] : [
                    a
                ];
                break;
            case q.Identifier:
                a.constant = !1;
                a.toWatch = [
                    a
                ];
                break;
            case q.MemberExpression:
                Z(a.object, b, f);
                a.computed && Z(a.property, b, f);
                a.constant = a.object.constant && (!a.computed || a.property.constant);
                a.toWatch = a.constant ? [
                ] : [
                    a
                ];
                break;
            case q.CallExpression:
                c = d = a.filter ? !b(a.callee.name).$stateful : !1;
                e = [
                ];
                r(a.arguments, function (a) {
                    Z(a, b, f);
                    c = c && a.constant;
                    e.push.apply(e, a.toWatch)
                });
                a.constant = c;
                a.toWatch = d ? e : [
                    a
                ];
                break;
            case q.AssignmentExpression:
                Z(a.left, b, f);
                Z(a.right, b, f);
                a.constant = a.left.constant && a.right.constant;
                a.toWatch = [
                    a
                ];
                break;
            case q.ArrayExpression:
                c = !0;
                e = [
                ];
                r(a.elements, function (a) {
                    Z(a, b, f);
                    c = c && a.constant;
                    e.push.apply(e, a.toWatch)
                });
                a.constant = c;
                a.toWatch = e;
                break;
            case q.ObjectExpression:
                c = !0;
                e = [
                ];
                r(a.properties, function (a) {
                    Z(a.value, b, f);
                    c = c && a.value.constant;
                    e.push.apply(e, a.value.toWatch);
                    a.computed && (Z(a.key, b, !1), c = c && a.key.constant, e.push.apply(e, a.key.toWatch))
                });
                a.constant = c;
                a.toWatch = e;
                break;
            case q.ThisExpression:
                a.constant = !1;
                a.toWatch = [
                ];
                break;
            case q.LocalsExpression:
                a.constant = !1,
                    a.toWatch = [
                    ]
        }
    }
    function Gd(a) {
        if (1 === a.length) {
            a = a[0].expression;
            var b = a.toWatch;
            return 1 !== b.length ? b : b[0] !== a ? b : void 0
        }
    }
    function Hd(a) {
        return a.type === q.Identifier || a.type === q.MemberExpression
    }
    function Id(a) {
        if (1 === a.body.length && Hd(a.body[0].expression)) return {
            type: q.AssignmentExpression,
            left: a.body[0].expression,
            right: {
                type: q.NGValueParameter
            },
            operator: '='
        }
    }
    function Jd(a) {
        this.$filter = a
    }
    function Kd(a) {
        this.$filter = a
    }
    function Mb(a, b, d) {
        this.ast = new q(a, d);
        this.astCompiler = d.csp ? new Kd(b)  : new Jd(b)
    }
    function Ac(a) {
        return B(a.valueOf) ? a.valueOf()  : Rg.call(a)
    }
    function Vf() {
        var a = T(),
            b = {
                true: !0,
                false: !1,
                null: null,
                undefined: void 0
            },
            d,
            c;
        this.addLiteral = function (a, c) {
            b[a] = c
        };
        this.setIdentifierFns = function (a, b) {
            d = a;
            c = b;
            return this
        };
        this.$get = [
            '$filter',
            function (e) {
                function f(b, c) {
                    var d,
                        f;
                    switch (typeof b) {
                        case 'string':
                            return f = b = b.trim(),
                                d = a[f],
                            d || (d = new Nb(G), d = new Mb(d, e, G).parse(b), a[f] = p(d)),
                                s(d, c);
                        case 'function':
                            return s(b, c);
                        default:
                            return s(E, c)
                    }
                }
                function g(a, b, c) {
                    return null == a || null == b ? a === b : 'object' !== typeof a || (a = Ac(a), 'object' !== typeof a || c) ? a === b || a !== a && b !== b : !1
                }
                function k(a, b, c, d, e) {
                    var f = d.inputs,
                        h;
                    if (1 === f.length) {
                        var k = g,
                            f = f[0];
                        return a.$watch(function (a) {
                            var b = f(a);
                            g(b, k, f.isPure) || (h = d(a, void 0, void 0, [
                                b
                            ]), k = b && Ac(b));
                            return h
                        }, b, c, e)
                    }
                    for (var l = [
                    ], m = [
                    ], n = 0, p = f.length; n < p; n++) l[n] = g,
                        m[n] = null;
                    return a.$watch(function (a) {
                        for (var b = !1, c = 0, e = f.length; c < e; c++) {
                            var k = f[c](a);
                            if (b || (b = !g(k, l[c], f[c].isPure))) m[c] = k,
                                l[c] = k && Ac(k)
                        }
                        b && (h = d(a, void 0, void 0, m));
                        return h
                    }, b, c, e)
                }
                function h(a, b, c, d, e) {
                    function f() {
                        h(m) && k()
                    }
                    function g(a, b, c, d) {
                        m = u && d ? d[0] : n(a, b, c, d);
                        h(m) && a.$$postDigest(f);
                        return s(m)
                    }
                    var h = d.literal ? l : w,
                        k,
                        m,
                        n = d.$$intercepted || d,
                        s = d.$$interceptor || Ta,
                        u = d.inputs && !n.inputs;
                    g.literal = d.literal;
                    g.constant = d.constant;
                    g.inputs = d.inputs;
                    p(g);
                    return k = a.$watch(g, b, c, e)
                }
                function l(a) {
                    var b = !0;
                    r(a, function (a) {
                        w(a) || (b = !1)
                    });
                    return b
                }
                function m(a, b, c, d) {
                    var e = a.$watch(function (a) {
                        e();
                        return d(a)
                    }, b, c);
                    return e
                }
                function p(a) {
                    a.constant ? a.$$watchDelegate = m : a.oneTime ? a.$$watchDelegate = h : a.inputs && (a.$$watchDelegate = k);
                    return a
                }
                function n(a, b) {
                    function c(d) {
                        return b(a(d))
                    }
                    c.$stateful = a.$stateful || b.$stateful;
                    c.$$pure = a.$$pure && b.$$pure;
                    return c
                }
                function s(a, b) {
                    if (!b) return a;
                    a.$$interceptor && (b = n(a.$$interceptor, b), a = a.$$intercepted);
                    var c = !1,
                        d = function (d, e, f, g) {
                            d = c && g ? g[0] : a(d, e, f, g);
                            return b(d)
                        };
                    d.$$intercepted = a;
                    d.$$interceptor = b;
                    d.literal = a.literal;
                    d.oneTime = a.oneTime;
                    d.constant = a.constant;
                    b.$stateful || (c = !a.inputs, d.inputs = a.inputs ? a.inputs : [
                        a
                    ], b.$$pure || (d.inputs = d.inputs.map(function (a) {
                        return a.isPure === Fd ? function (b) {
                                return a(b)
                            }
                            : a
                    })));
                    return p(d)
                }
                var G = {
                    csp: Aa().noUnsafeEval,
                    literals: Ia(b),
                    isIdentifierStart: B(d) && d,
                    isIdentifierContinue: B(c) && c
                };
                f.$$getAst = function (a) {
                    var b = new Nb(G);
                    return new Mb(b, e, G).getAst(a).ast
                };
                return f
            }
        ]
    }
    function Xf() {
        var a = !0;
        this.$get = [
            '$rootScope',
            '$exceptionHandler',
            function (b, d) {
                return Ld(function (a) {
                    b.$evalAsync(a)
                }, d, a)
            }
        ];
        this.errorOnUnhandledRejections = function (b) {
            return w(b) ? (a = b, this)  : a
        }
    }
    function Yf() {
        var a = !0;
        this.$get = [
            '$browser',
            '$exceptionHandler',
            function (b, d) {
                return Ld(function (a) {
                    b.defer(a)
                }, d, a)
            }
        ];
        this.errorOnUnhandledRejections = function (b) {
            return w(b) ? (a = b, this)  : a
        }
    }
    function Ld(a, b, d) {
        function c() {
            return new e
        }
        function e() {
            var a = this.promise = new f;
            this.resolve = function (b) {
                h(a, b)
            };
            this.reject = function (b) {
                m(a, b)
            };
            this.notify = function (b) {
                n(a, b)
            }
        }
        function f() {
            this.$$state = {
                status: 0
            }
        }
        function g() {
            for (; !w && x.length; ) {
                var a = x.shift();
                if (!a.pur) {
                    a.pur = !0;
                    var c = a.value,
                        c = 'Possibly unhandled rejection: ' + ('function' === typeof c ? c.toString().replace(/ \{[\s\S]*$/, '')  : z(c) ? 'undefined' : 'string' !== typeof c ? Ie(c, void 0)  : c);
                    cc(a.value) ? b(a.value, c)  : b(c)
                }
            }
        }
        function k(c) {
            !d || c.pending || 2 !== c.status || c.pur || (0 === w && 0 === x.length && a(g), x.push(c));
            !c.processScheduled && c.pending && (c.processScheduled = !0, ++w, a(function () {
                var e,
                    f,
                    k;
                k = c.pending;
                c.processScheduled = !1;
                c.pending = void 0;
                try {
                    for (var l = 0, n = k.length; l < n; ++l) {
                        c.pur = !0;
                        f = k[l][0];
                        e = k[l][c.status];
                        try {
                            B(e) ? h(f, e(c.value))  : 1 === c.status ? h(f, c.value)  : m(f, c.value)
                        } catch (p) {
                            m(f, p),
                            p && !0 === p.$$passToExceptionHandler && b(p)
                        }
                    }
                } finally {
                    --w,
                    d && 0 === w && a(g)
                }
            }))
        }
        function h(a, b) {
            a.$$state.status || (b === a ? p(a, v('qcycle', b))  : l(a, b))
        }
        function l(a, b) {
            function c(b) {
                g || (g = !0, l(a, b))
            }
            function d(b) {
                g || (g = !0, p(a, b))
            }
            function e(b) {
                n(a, b)
            }
            var f,
                g = !1;
            try {
                if (D(b) || B(b)) f = b.then;
                B(f) ? (a.$$state.status = - 1, f.call(b, c, d, e))  : (a.$$state.value = b, a.$$state.status = 1, k(a.$$state))
            } catch (h) {
                d(h)
            }
        }
        function m(a, b) {
            a.$$state.status || p(a, b)
        }
        function p(a, b) {
            a.$$state.value = b;
            a.$$state.status = 2;
            k(a.$$state)
        }
        function n(c, d) {
            var e = c.$$state.pending;
            0 >= c.$$state.status && e && e.length && a(function () {
                for (var a, c, f = 0, g = e.length; f < g; f++) {
                    c = e[f][0];
                    a = e[f][3];
                    try {
                        n(c, B(a) ? a(d)  : d)
                    } catch (h) {
                        b(h)
                    }
                }
            })
        }
        function s(a) {
            var b = new f;
            m(b, a);
            return b
        }
        function G(a, b, c) {
            var d = null;
            try {
                B(c) && (d = c())
            } catch (e) {
                return s(e)
            }
            return d && B(d.then) ? d.then(function () {
                return b(a)
            }, s)  : b(a)
        }
        function t(a, b, c, d) {
            var e = new f;
            h(e, a);
            return e.then(b, c, d)
        }
        function q(a) {
            if (!B(a)) throw v('norslvr', a);
            var b = new f;
            a(function (a) {
                h(b, a)
            }, function (a) {
                m(b, a)
            });
            return b
        }
        var v = F('$q', TypeError),
            w = 0,
            x = [
            ];
        S(f.prototype, {
            then: function (a, b, c) {
                if (z(a) && z(b) && z(c)) return this;
                var d = new f;
                this.$$state.pending = this.$$state.pending || [
                ];
                this.$$state.pending.push([d,
                    a,
                    b,
                    c]);
                0 < this.$$state.status && k(this.$$state);
                return d
            },
            catch : function (a) {
                return this.then(null, a)
            },
            finally : function (a, b) {
                return this.then(function (b) {
                    return G(b, y, a)
                }, function (b) {
                    return G(b, s, a)
                }, b)
            }
        });
        var y = t;
        q.prototype = f.prototype;
        q.defer = c;
        q.reject = s;
        q.when = t;
        q.resolve = y;
        q.all = function (a) {
            var b = new f,
                c = 0,
                d = H(a) ? [
                ] : {
                };
            r(a, function (a, e) {
                c++;
                t(a).then(function (a) {
                    d[e] = a;
                    --c || h(b, d)
                }, function (a) {
                    m(b, a)
                })
            });
            0 === c && h(b, d);
            return b
        };
        q.race = function (a) {
            var b = c();
            r(a, function (a) {
                t(a).then(b.resolve, b.reject)
            });
            return b.promise
        };
        return q
    }
    function hg() {
        this.$get = [
            '$window',
            '$timeout',
            function (a, b) {
                var d = a.requestAnimationFrame || a.webkitRequestAnimationFrame,
                    c = a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.webkitCancelRequestAnimationFrame,
                    e = !!d,
                    f = e ? function (a) {
                            var b = d(a);
                            return function () {
                                c(b)
                            }
                        }
                        : function (a) {
                            var c = b(a, 16.66, !1);
                            return function () {
                                b.cancel(c)
                            }
                        };
                f.supported = e;
                return f
            }
        ]
    }
    function Wf() {
        function a(a) {
            function b() {
                this.$$watchers = this.$$nextSibling = this.$$childHead = this.$$childTail = null;
                this.$$listeners = {
                };
                this.$$listenerCount = {
                };
                this.$$watchersCount = 0;
                this.$id = ++pb;
                this.$$ChildScope = null;
                this.$$suspended = !1
            }
            b.prototype = a;
            return b
        }
        var b = 10,
            d = F('$rootScope'),
            c = null,
            e = null;
        this.digestTtl = function (a) {
            arguments.length && (b = a);
            return b
        };
        this.$get = [
            '$exceptionHandler',
            '$parse',
            '$browser',
            function (f, g, k) {
                function h(a) {
                    a.currentScope.$$destroyed = !0
                }
                function l(a) {
                    9 === Ca && (a.$$childHead && l(a.$$childHead), a.$$nextSibling && l(a.$$nextSibling));
                    a.$parent = a.$$nextSibling = a.$$prevSibling = a.$$childHead = a.$$childTail = a.$root = a.$$watchers = null
                }
                function m() {
                    this.$id = ++pb;
                    this.$$phase = this.$parent = this.$$watchers = this.$$nextSibling = this.$$prevSibling = this.$$childHead = this.$$childTail = null;
                    this.$root = this;
                    this.$$suspended = this.$$destroyed = !1;
                    this.$$listeners = {
                    };
                    this.$$listenerCount = {
                    };
                    this.$$watchersCount = 0;
                    this.$$isolateBindings = null
                }
                function p(a) {
                    if (v.$$phase) throw d('inprog', v.$$phase);
                    v.$$phase = a
                }
                function n(a, b) {
                    do a.$$watchersCount += b;
                    while (a = a.$parent)
                }
                function s(a, b, c) {
                    do a.$$listenerCount[c] -= b,
                    0 === a.$$listenerCount[c] && delete a.$$listenerCount[c];
                    while (a = a.$parent)
                }
                function G() {
                }
                function t() {
                    for (; y.length; ) try {
                        y.shift() ()
                    } catch (a) {
                        f(a)
                    }
                    e = null
                }
                function q() {
                    null === e && (e = k.defer(function () {
                        v.$apply(t)
                    }, null, '$applyAsync'))
                }
                m.prototype = {
                    constructor: m,
                    $new: function (b, c) {
                        var d;
                        c = c || this;
                        b ? (d = new m, d.$root = this.$root)  : (this.$$ChildScope || (this.$$ChildScope = a(this)), d = new this.$$ChildScope);
                        d.$parent = c;
                        d.$$prevSibling = c.$$childTail;
                        c.$$childHead ? (c.$$childTail.$$nextSibling = d, c.$$childTail = d)  : c.$$childHead = c.$$childTail = d;
                        (b || c !== this) && d.$on('$destroy', h);
                        return d
                    },
                    $watch: function (a, b, d, e) {
                        var f = g(a);
                        b = B(b) ? b : E;
                        if (f.$$watchDelegate) return f.$$watchDelegate(this, b, d, f, a);
                        var h = this,
                            k = h.$$watchers,
                            l = {
                                fn: b,
                                last: G,
                                get: f,
                                exp: e || a,
                                eq: !!d
                            };
                        c = null;
                        k || (k = h.$$watchers = [
                        ], k.$$digestWatchIndex = - 1);
                        k.unshift(l);
                        k.$$digestWatchIndex++;
                        n(this, 1);
                        return function () {
                            var a = cb(k, l);
                            0 <= a && (n(h, - 1), a < k.$$digestWatchIndex && k.$$digestWatchIndex--);
                            c = null
                        }
                    },
                    $watchGroup: function (a, b) {
                        function c() {
                            h = !1;
                            try {
                                k ? (k = !1, b(e, e, g))  : b(e, d, g)
                            } finally {
                                for (var f = 0; f < a.length; f++) d[f] = e[f]
                            }
                        }
                        var d = Array(a.length),
                            e = Array(a.length),
                            f = [
                            ],
                            g = this,
                            h = !1,
                            k = !0;
                        if (!a.length) {
                            var l = !0;
                            g.$evalAsync(function () {
                                l && b(e, e, g)
                            });
                            return function () {
                                l = !1
                            }
                        }
                        if (1 === a.length) return this.$watch(a[0], function (a, c, f) {
                            e[0] = a;
                            d[0] = c;
                            b(e, a === c ? e : d, f)
                        });
                        r(a, function (a, b) {
                            var d = g.$watch(a, function (a) {
                                e[b] = a;
                                h || (h = !0, g.$evalAsync(c))
                            });
                            f.push(d)
                        });
                        return function () {
                            for (; f.length; ) f.shift() ()
                        }
                    },
                    $watchCollection: function (a, b) {
                        function c(a) {
                            e = a;
                            var b,
                                d,
                                g,
                                h;
                            if (!z(e)) {
                                if (D(e)) if (ya(e)) for (f !== n && (f = n, t = f.length = 0, l++), a = e.length, t !== a && (l++, f.length = t = a), b = 0; b < a; b++) h = f[b],
                                    g = e[b],
                                    d = h !== h && g !== g,
                                d || h === g || (l++, f[b] = g);
                                else {
                                    f !== p && (f = p = {
                                    }, t = 0, l++);
                                    a = 0;
                                    for (b in e) ta.call(e, b) && (a++, g = e[b], h = f[b], b in f ? (d = h !== h && g !== g, d || h === g || (l++, f[b] = g))  : (t++, f[b] = g, l++));
                                    if (t > a) for (b in l++, f) ta.call(e, b) || (t--, delete f[b])
                                } else f !== e && (f = e, l++);
                                return l
                            }
                        }
                        c.$$pure = g(a).literal;
                        c.$stateful = !c.$$pure;
                        var d = this,
                            e,
                            f,
                            h,
                            k = 1 < b.length,
                            l = 0,
                            m = g(a, c),
                            n = [
                            ],
                            p = {
                            },
                            s = !0,
                            t = 0;
                        return this.$watch(m, function () {
                            s ? (s = !1, b(e, e, d))  : b(e, h, d);
                            if (k) if (D(e)) if (ya(e)) {
                                h = Array(e.length);
                                for (var a = 0; a < e.length; a++) h[a] = e[a]
                            } else for (a in h = {
                            }, e) ta.call(e, a) && (h[a] = e[a]);
                            else h = e
                        })
                    },
                    $digest: function () {
                        var a,
                            g,
                            h,
                            l,
                            m,
                            n,
                            s,
                            r = b,
                            q,
                            y = w.length ? v : this,
                            N = [
                            ],
                            z,
                            A;
                        p('$digest');
                        k.$$checkUrlChange();
                        this === v && null !== e && (k.defer.cancel(e), t());
                        c = null;
                        do {
                            s = !1;
                            q = y;
                            for (n = 0; n < w.length; n++) {
                                try {
                                    A = w[n],
                                        l = A.fn,
                                        l(A.scope, A.locals)
                                } catch (C) {
                                    f(C)
                                }
                                c = null
                            }
                            w.length = 0;
                            a: do {
                                if (n = !q.$$suspended && q.$$watchers) for (n.$$digestWatchIndex = n.length; n.$$digestWatchIndex--; ) try {
                                    if (a = n[n.$$digestWatchIndex]) if (m = a.get, (g = m(q)) !== (h = a.last) && !(a.eq ? va(g, h)  : X(g) && X(h))) s = !0,
                                        c = a,
                                        a.last = a.eq ? Ia(g, null)  : g,
                                        l = a.fn,
                                        l(g, h === G ? g : h, q),
                                    5 > r && (z = 4 - r, N[z] || (N[z] = [
                                    ]), N[z].push({
                                        msg: B(a.exp) ? 'fn: ' + (a.exp.name || a.exp.toString())  : a.exp,
                                        newVal: g,
                                        oldVal: h
                                    }));
                                    else if (a === c) {
                                        s = !1;
                                        break a
                                    }
                                } catch (E) {
                                    f(E)
                                }
                                if (!(n = !q.$$suspended && q.$$watchersCount && q.$$childHead || q !== y && q.$$nextSibling)) for (; q !== y && !(n = q.$$nextSibling); ) q = q.$parent
                            } while (q = n);
                            if ((s || w.length) && !r--) throw v.$$phase = null,
                                d('infdig', b, N)
                        } while (s || w.length);
                        for (v.$$phase = null; J < x.length; ) try {
                            x[J++]()
                        } catch (D) {
                            f(D)
                        }
                        x.length = J = 0;
                        k.$$checkUrlChange()
                    },
                    $suspend: function () {
                        this.$$suspended = !0
                    },
                    $isSuspended: function () {
                        return this.$$suspended
                    },
                    $resume: function () {
                        this.$$suspended = !1
                    },
                    $destroy: function () {
                        if (!this.$$destroyed) {
                            var a = this.$parent;
                            this.$broadcast('$destroy');
                            this.$$destroyed = !0;
                            this === v && k.$$applicationDestroyed();
                            n(this, - this.$$watchersCount);
                            for (var b in this.$$listenerCount) s(this, this.$$listenerCount[b], b);
                            a && a.$$childHead === this && (a.$$childHead = this.$$nextSibling);
                            a && a.$$childTail === this && (a.$$childTail = this.$$prevSibling);
                            this.$$prevSibling && (this.$$prevSibling.$$nextSibling = this.$$nextSibling);
                            this.$$nextSibling && (this.$$nextSibling.$$prevSibling = this.$$prevSibling);
                            this.$destroy = this.$digest = this.$apply = this.$evalAsync = this.$applyAsync = E;
                            this.$on = this.$watch = this.$watchGroup = function () {
                                return E
                            };
                            this.$$listeners = {
                            };
                            this.$$nextSibling = null;
                            l(this)
                        }
                    },
                    $eval: function (a, b) {
                        return g(a) (this, b)
                    },
                    $evalAsync: function (a, b) {
                        v.$$phase || w.length || k.defer(function () {
                            w.length && v.$digest()
                        }, null, '$evalAsync');
                        w.push({
                            scope: this,
                            fn: g(a),
                            locals: b
                        })
                    },
                    $$postDigest: function (a) {
                        x.push(a)
                    },
                    $apply: function (a) {
                        try {
                            p('$apply');
                            try {
                                return this.$eval(a)
                            } finally {
                                v.$$phase = null
                            }
                        } catch (b) {
                            f(b)
                        } finally {
                            try {
                                v.$digest()
                            } catch (c) {
                                throw f(c),
                                    c
                            }
                        }
                    },
                    $applyAsync: function (a) {
                        function b() {
                            c.$eval(a)
                        }
                        var c = this;
                        a && y.push(b);
                        a = g(a);
                        q()
                    },
                    $on: function (a, b) {
                        var c = this.$$listeners[a];
                        c || (this.$$listeners[a] = c = [
                        ]);
                        c.push(b);
                        var d = this;
                        do d.$$listenerCount[a] || (d.$$listenerCount[a] = 0),
                            d.$$listenerCount[a]++;
                        while (d = d.$parent);
                        var e = this;
                        return function () {
                            var d = c.indexOf(b);
                            - 1 !== d && (delete c[d], s(e, 1, a))
                        }
                    },
                    $emit: function (a, b) {
                        var c = [
                            ],
                            d,
                            e = this,
                            g = !1,
                            h = {
                                name: a,
                                targetScope: e,
                                stopPropagation: function () {
                                    g = !0
                                },
                                preventDefault: function () {
                                    h.defaultPrevented = !0
                                },
                                defaultPrevented: !1
                            },
                            k = db([h], arguments, 1),
                            l,
                            m;
                        do {
                            d = e.$$listeners[a] || c;
                            h.currentScope = e;
                            l = 0;
                            for (m = d.length; l < m; l++) if (d[l]) try {
                                d[l].apply(null, k)
                            } catch (n) {
                                f(n)
                            } else d.splice(l, 1),
                                l--,
                                m--;
                            if (g) break;
                            e = e.$parent
                        } while (e);
                        h.currentScope = null;
                        return h
                    },
                    $broadcast: function (a, b) {
                        var c = this,
                            d = this,
                            e = {
                                name: a,
                                targetScope: this,
                                preventDefault: function () {
                                    e.defaultPrevented = !0
                                },
                                defaultPrevented: !1
                            };
                        if (!this.$$listenerCount[a]) return e;
                        for (var g = db([e], arguments, 1), h, k; c = d; ) {
                            e.currentScope = c;
                            d = c.$$listeners[a] || [
                            ];
                            h = 0;
                            for (k = d.length; h < k; h++) if (d[h]) try {
                                d[h].apply(null, g)
                            } catch (l) {
                                f(l)
                            } else d.splice(h, 1),
                                h--,
                                k--;
                            if (!(d = c.$$listenerCount[a] && c.$$childHead || c !== this && c.$$nextSibling)) for (; c !== this && !(d = c.$$nextSibling); ) c = c.$parent
                        }
                        e.currentScope = null;
                        return e
                    }
                };
                var v = new m,
                    w = v.$$asyncQueue = [
                    ],
                    x = v.$$postDigestQueue = [
                    ],
                    y = v.$$applyAsyncQueue = [
                    ],
                    J = 0;
                return v
            }
        ]
    }
    function Le() {
        var a = /^\s*(https?|s?ftp|mailto|tel|file):/,
            b = /^\s*((https?|ftp|file|blob):|data:image\/)/;
        this.aHrefSanitizationWhitelist = function (b) {
            return w(b) ? (a = b, this)  : a
        };
        this.imgSrcSanitizationWhitelist = function (a) {
            return w(a) ? (b = a, this)  : b
        };
        this.$get = function () {
            return function (d, c) {
                var e = c ? b : a,
                    f = ga(d && d.trim()).href;
                return '' === f || f.match(e) ? d : 'unsafe:' + f
            }
        }
    }
    function Sg(a) {
        if ('self' === a) return a;
        if (A(a)) {
            if ( - 1 < a.indexOf('***')) throw Ea('iwcard', a);
            a = Md(a).replace(/\\\*\\\*/g, '.*').replace(/\\\*/g, '[^:/.?&;]*');
            return new RegExp('^' + a + '$')
        }
        if (ab(a)) return new RegExp('^' + a.source + '$');
        throw Ea('imatcher')
    }
    function Nd(a) {
        var b = [
        ];
        w(a) && r(a, function (a) {
            b.push(Sg(a))
        });
        return b
    }
    function $f() {
        this.SCE_CONTEXTS = V;
        var a = [
                'self'
            ],
            b = [
            ];
        this.resourceUrlWhitelist = function (b) {
            arguments.length && (a = Nd(b));
            return a
        };
        this.resourceUrlBlacklist = function (a) {
            arguments.length && (b = Nd(a));
            return b
        };
        this.$get = [
            '$injector',
            '$$sanitizeUri',
            function (d, c) {
                function e(a, b) {
                    var c;
                    'self' === a ? (c = Bc(b, Od)) || (C.document.baseURI ? c = C.document.baseURI : (Na || (Na = C.document.createElement('a'), Na.href = '.', Na = Na.cloneNode(!1)), c = Na.href), c = Bc(b, c))  : c = !!a.exec(b.href);
                    return c
                }
                function f(a) {
                    var b = function (a) {
                        this.$$unwrapTrustedValue = function () {
                            return a
                        }
                    };
                    a && (b.prototype = new a);
                    b.prototype.valueOf = function () {
                        return this.$$unwrapTrustedValue()
                    };
                    b.prototype.toString = function () {
                        return this.$$unwrapTrustedValue().toString()
                    };
                    return b
                }
                var g = function (a) {
                    throw Ea('unsafe')
                };
                d.has('$sanitize') && (g = d.get('$sanitize'));
                var k = f(),
                    h = {
                    };
                h[V.HTML] = f(k);
                h[V.CSS] = f(k);
                h[V.MEDIA_URL] = f(k);
                h[V.URL] = f(h[V.MEDIA_URL]);
                h[V.JS] = f(k);
                h[V.RESOURCE_URL] = f(h[V.URL]);
                return {
                    trustAs: function (a, b) {
                        var c = h.hasOwnProperty(a) ? h[a] : null;
                        if (!c) throw Ea('icontext', a, b);
                        if (null === b || z(b) || '' === b) return b;
                        if ('string' !== typeof b) throw Ea('itype', a);
                        return new c(b)
                    },
                    getTrusted: function (d, f) {
                        if (null === f || z(f) || '' === f) return f;
                        var k = h.hasOwnProperty(d) ? h[d] : null;
                        if (k && f instanceof k) return f.$$unwrapTrustedValue();
                        B(f.$$unwrapTrustedValue) && (f = f.$$unwrapTrustedValue());
                        if (d === V.MEDIA_URL || d === V.URL) return c(f.toString(), d === V.MEDIA_URL);
                        if (d === V.RESOURCE_URL) {
                            var k = ga(f.toString()),
                                n,
                                s,
                                r = !1;
                            n = 0;
                            for (s = a.length; n < s; n++) if (e(a[n], k)) {
                                r = !0;
                                break
                            }
                            if (r) for (n = 0, s = b.length; n < s; n++) if (e(b[n], k)) {
                                r = !1;
                                break
                            }
                            if (r) return f;
                            throw Ea('insecurl', f.toString())
                        }
                        if (d === V.HTML) return g(f);
                        throw Ea('unsafe')
                    },
                    valueOf: function (a) {
                        return a instanceof k ? a.$$unwrapTrustedValue()  : a
                    }
                }
            }
        ]
    }
    function Zf() {
        var a = !0;
        this.enabled = function (b) {
            arguments.length && (a = !!b);
            return a
        };
        this.$get = [
            '$parse',
            '$sceDelegate',
            function (b, d) {
                if (a && 8 > Ca) throw Ea('iequirks');
                var c = ja(V);
                c.isEnabled = function () {
                    return a
                };
                c.trustAs = d.trustAs;
                c.getTrusted = d.getTrusted;
                c.valueOf = d.valueOf;
                a || (c.trustAs = c.getTrusted = function (a, b) {
                    return b
                }, c.valueOf = Ta);
                c.parseAs = function (a, d) {
                    var e = b(d);
                    return e.literal && e.constant ? e : b(d, function (b) {
                        return c.getTrusted(a, b)
                    })
                };
                var e = c.parseAs,
                    f = c.getTrusted,
                    g = c.trustAs;
                r(V, function (a, b) {
                    var d = K(b);
                    c[('parse_as_' + d).replace(Cc, wb)] = function (b) {
                        return e(a, b)
                    };
                    c[('get_trusted_' + d).replace(Cc, wb)] = function (b) {
                        return f(a, b)
                    };
                    c[('trust_as_' + d).replace(Cc, wb)] = function (b) {
                        return g(a, b)
                    }
                });
                return c
            }
        ]
    }
    function ag() {
        this.$get = [
            '$window',
            '$document',
            function (a, b) {
                var d = {
                    },
                    c = !((!a.nw || !a.nw.process) && a.chrome && (a.chrome.app && a.chrome.app.runtime || !a.chrome.app && a.chrome.runtime && a.chrome.runtime.id)) && a.history && a.history.pushState,
                    e = fa((/android (\d+)/.exec(K((a.navigator || {
                    }).userAgent)) || [
                    ]) [1]),
                    f = /Boxee/i.test((a.navigator || {
                    }).userAgent),
                    g = b[0] || {
                    },
                    k = g.body && g.body.style,
                    h = !1,
                    l = !1;
                k && (h = !!('transition' in k || 'webkitTransition' in k), l = !!('animation' in k || 'webkitAnimation' in k));
                return {
                    history: !(!c || 4 > e || f),
                    hasEvent: function (a) {
                        if ('input' === a && Ca) return !1;
                        if (z(d[a])) {
                            var b = g.createElement('div');
                            d[a] = 'on' + a in b
                        }
                        return d[a]
                    },
                    csp: Aa(),
                    transitions: h,
                    animations: l,
                    android: e
                }
            }
        ]
    }
    function bg() {
        this.$get = ia(function (a) {
            return new Tg(a)
        })
    }
    function Tg(a) {
        function b() {
            var a = e.pop();
            return a && a.cb
        }
        function d(a) {
            for (var b = e.length - 1; 0 <= b; --b) {
                var c = e[b];
                if (c.type === a) return e.splice(b, 1),
                    c.cb
            }
        }
        var c = {
            },
            e = [
            ],
            f = this.ALL_TASKS_TYPE = '$$all$$',
            g = this.DEFAULT_TASK_TYPE = '$$default$$';
        this.completeTask = function (e, h) {
            h = h || g;
            try {
                e()
            } finally {
                var l;
                l = h || g;
                c[l] && (c[l]--, c[f]--);
                l = c[h];
                var m = c[f];
                if (!m || !l) for (l = m ? d : b; m = l(h); ) try {
                    m()
                } catch (p) {
                    a.error(p)
                }
            }
        };
        this.incTaskCount = function (a) {
            a = a || g;
            c[a] = (c[a] || 0) + 1;
            c[f] = (c[f] || 0) + 1
        };
        this.notifyWhenNoPendingTasks = function (a, b) {
            b = b || f;
            c[b] ? e.push({
                type: b,
                cb: a
            })  : a()
        }
    }
    function dg() {
        var a;
        this.httpOptions = function (b) {
            return b ? (a = b, this)  : a
        };
        this.$get = [
            '$exceptionHandler',
            '$templateCache',
            '$http',
            '$q',
            '$sce',
            function (b, d, c, e, f) {
                function g(k, h) {
                    g.totalPendingRequests++;
                    if (!A(k) || z(d.get(k))) k = f.getTrustedResourceUrl(k);
                    var l = c.defaults && c.defaults.transformResponse;
                    H(l) ? l = l.filter(function (a) {
                        return a !== vc
                    })  : l === vc && (l = null);
                    return c.get(k, S({
                        cache: d,
                        transformResponse: l
                    }, a)).finally (function () {
                        g.totalPendingRequests--
                    }).then(function (a) {
                        return d.put(k, a.data)
                    }, function (a) {
                        h || (a = Ug('tpload', k, a.status, a.statusText), b(a));
                        return e.reject(a)
                    })
                }
                g.totalPendingRequests = 0;
                return g
            }
        ]
    }
    function eg() {
        this.$get = [
            '$rootScope',
            '$browser',
            '$location',
            function (a, b, d) {
                return {
                    findBindings: function (a, b, d) {
                        a = a.getElementsByClassName('ng-binding');
                        var g = [
                        ];
                        r(a, function (a) {
                            var c = ca.element(a).data('$binding');
                            c && r(c, function (c) {
                                d ? new RegExp('(^|\\s)' + Md(b) + '(\\s|\\||$)').test(c) && g.push(a)  : - 1 !== c.indexOf(b) && g.push(a)
                            })
                        });
                        return g
                    },
                    findModels: function (a, b, d) {
                        for (var g = [
                            'ng-',
                            'data-ng-',
                            'ng\\:'
                        ], k = 0; k < g.length; ++k) {
                            var h = a.querySelectorAll('[' + g[k] + 'model' + (d ? '=' : '*=') + '"' + b + '"]');
                            if (h.length) return h
                        }
                    },
                    getLocation: function () {
                        return d.url()
                    },
                    setLocation: function (b) {
                        b !== d.url() && (d.url(b), a.$digest())
                    },
                    whenStable: function (a) {
                        b.notifyWhenNoOutstandingRequests(a)
                    }
                }
            }
        ]
    }
    function fg() {
        this.$get = [
            '$rootScope',
            '$browser',
            '$q',
            '$$q',
            '$exceptionHandler',
            function (a, b, d, c, e) {
                function f(f, h, l) {
                    B(f) || (l = h, h = f, f = E);
                    var m = Ha.call(arguments, 3),
                        p = w(l) && !l,
                        n = (p ? c : d).defer(),
                        s = n.promise,
                        r;
                    r = b.defer(function () {
                        try {
                            n.resolve(f.apply(null, m))
                        } catch (b) {
                            n.reject(b),
                                e(b)
                        } finally {
                            delete g[s.$$timeoutId]
                        }
                        p || a.$apply()
                    }, h, '$timeout');
                    s.$$timeoutId = r;
                    g[r] = n;
                    return s
                }
                var g = {
                };
                f.cancel = function (a) {
                    if (!a) return !1;
                    if (!a.hasOwnProperty('$$timeoutId')) throw Vg('badprom');
                    if (!g.hasOwnProperty(a.$$timeoutId)) return !1;
                    a = a.$$timeoutId;
                    var c = g[a],
                        d = c.promise;
                    d.$$state && (d.$$state.pur = !0);
                    c.reject('canceled');
                    delete g[a];
                    return b.defer.cancel(a)
                };
                return f
            }
        ]
    }
    function ga(a) {
        if (!A(a)) return a;
        Ca && (aa.setAttribute('href', a), a = aa.href);
        aa.setAttribute('href', a);
        a = aa.hostname;
        !Wg && - 1 < a.indexOf(':') && (a = '[' + a + ']');
        return {
            href: aa.href,
            protocol: aa.protocol ? aa.protocol.replace(/:$/, '')  : '',
            host: aa.host,
            search: aa.search ? aa.search.replace(/^\?/, '')  : '',
            hash: aa.hash ? aa.hash.replace(/^#/, '')  : '',
            hostname: a,
            port: aa.port,
            pathname: '/' === aa.pathname.charAt(0) ? aa.pathname : '/' + aa.pathname
        }
    }
    function Jg(a) {
        var b = [
            Od
        ].concat(a.map(ga));
        return function (a) {
            a = ga(a);
            return b.some(Bc.bind(null, a))
        }
    }
    function Bc(a, b) {
        a = ga(a);
        b = ga(b);
        return a.protocol === b.protocol && a.host === b.host
    }
    function gg() {
        this.$get = ia(C)
    }
    function Pd(a) {
        function b(a) {
            try {
                return decodeURIComponent(a)
            } catch (b) {
                return a
            }
        }
        var d = a[0] || {
            },
            c = {
            },
            e = '';
        return function () {
            var a,
                g,
                k,
                h,
                l;
            try {
                a = d.cookie || ''
            } catch (m) {
                a = ''
            }
            if (a !== e) for (e = a, a = e.split('; '), c = {
            }, k = 0; k < a.length; k++) g = a[k],
                h = g.indexOf('='),
            0 < h && (l = b(g.substring(0, h)), z(c[l]) && (c[l] = b(g.substring(h + 1))));
            return c
        }
    }
    function kg() {
        this.$get = Pd
    }
    function dd(a) {
        function b(d, c) {
            if (D(d)) {
                var e = {
                };
                r(d, function (a, c) {
                    e[c] = b(c, a)
                });
                return e
            }
            return a.factory(d + 'Filter', c)
        }
        this.register = b;
        this.$get = [
            '$injector',
            function (a) {
                return function (b) {
                    return a.get(b + 'Filter')
                }
            }
        ];
        b('currency', Qd);
        b('date', Rd);
        b('filter', Xg);
        b('json', Yg);
        b('limitTo', Zg);
        b('lowercase', $g);
        b('number', Sd);
        b('orderBy', Td);
        b('uppercase', ah)
    }
    function Xg() {
        return function (a, b, d, c) {
            if (!ya(a)) {
                if (null == a) return a;
                throw F('filter') ('notarray', a)
            }
            c = c || '$';
            var e;
            switch (Dc(b)) {
                case 'function':
                    break;
                case 'boolean':
                case 'null':
                case 'number':
                case 'string':
                    e = !0;
                case 'object':
                    b = bh(b, d, c, e);
                    break;
                default:
                    return a
            }
            return Array.prototype.filter.call(a, b)
        }
    }
    function bh(a, b, d, c) {
        var e = D(a) && d in a;
        !0 === b ? b = va : B(b) || (b = function (a, b) {
            if (z(a)) return !1;
            if (null === a || null === b) return a === b;
            if (D(b) || D(a) && !bc(a)) return !1;
            a = K('' + a);
            b = K('' + b);
            return - 1 !== a.indexOf(b)
        });
        return function (f) {
            return e && !D(f) ? Fa(f, a[d], b, d, !1)  : Fa(f, a, b, d, c)
        }
    }
    function Fa(a, b, d, c, e, f) {
        var g = Dc(a),
            k = Dc(b);
        if ('string' === k && '!' === b.charAt(0)) return !Fa(a, b.substring(1), d, c, e);
        if (H(a)) return a.some(function (a) {
            return Fa(a, b, d, c, e)
        });
        switch (g) {
            case 'object':
                var h;
                if (e) {
                    for (h in a) if (h.charAt && '$' !== h.charAt(0) && Fa(a[h], b, d, c, !0)) return !0;
                    return f ? !1 : Fa(a, b, d, c, !1)
                }
                if ('object' === k) {
                    for (h in b) if (f = b[h], !B(f) && !z(f) && (g = h === c, !Fa(g ? a : a[h], f, d, c, g, g))) return !1;
                    return !0
                }
                return d(a, b);
            case 'function':
                return !1;
            default:
                return d(a, b)
        }
    }
    function Dc(a) {
        return null === a ? 'null' : typeof a
    }
    function Qd(a) {
        var b = a.NUMBER_FORMATS;
        return function (a, c, e) {
            z(c) && (c = b.CURRENCY_SYM);
            z(e) && (e = b.PATTERNS[1].maxFrac);
            var f = c ? /\u00A4/g : /\s*\u00A4\s*/g;
            return null == a ? a : Ud(a, b.PATTERNS[1], b.GROUP_SEP, b.DECIMAL_SEP, e).replace(f, c)
        }
    }
    function Sd(a) {
        var b = a.NUMBER_FORMATS;
        return function (a, c) {
            return null == a ? a : Ud(a, b.PATTERNS[0], b.GROUP_SEP, b.DECIMAL_SEP, c)
        }
    }
    function ch(a) {
        var b = 0,
            d,
            c,
            e,
            f,
            g;
        - 1 < (c = a.indexOf(Vd)) && (a = a.replace(Vd, ''));
        0 < (e = a.search(/e/i)) ? (0 > c && (c = e), c += + a.slice(e + 1), a = a.substring(0, e))  : 0 > c && (c = a.length);
        for (e = 0; a.charAt(e) === Ec; e++);
        if (e === (g = a.length)) d = [
            0
        ],
            c = 1;
        else {
            for (g--; a.charAt(g) === Ec; ) g--;
            c -= e;
            d = [
            ];
            for (f = 0; e <= g; e++, f++) d[f] = + a.charAt(e)
        }
        c > Wd && (d = d.splice(0, Wd - 1), b = c - 1, c = 1);
        return {
            d: d,
            e: b,
            i: c
        }
    }
    function dh(a, b, d, c) {
        var e = a.d,
            f = e.length - a.i;
        b = z(b) ? Math.min(Math.max(d, f), c)  : + b;
        d = b + a.i;
        c = e[d];
        if (0 < d) {
            e.splice(Math.max(a.i, d));
            for (var g = d; g < e.length; g++) e[g] = 0
        } else for (f = Math.max(0, f), a.i = 1, e.length = Math.max(1, d = b + 1), e[0] = 0, g = 1; g < d; g++) e[g] = 0;
        if (5 <= c) if (0 > d - 1) {
            for (c = 0; c > d; c--) e.unshift(0),
                a.i++;
            e.unshift(1);
            a.i++
        } else e[d - 1]++;
        for (; f < Math.max(0, b); f++) e.push(0);
        if (b = e.reduceRight(function (a, b, c, d) {
            b += a;
            d[c] = b % 10;
            return Math.floor(b / 10)
        }, 0)) e.unshift(b),
            a.i++
    }
    function Ud(a, b, d, c, e) {
        if (!A(a) && !W(a) || isNaN(a)) return '';
        var f = !isFinite(a),
            g = !1,
            k = Math.abs(a) + '',
            h = '';
        if (f) h = '∞';
        else {
            g = ch(k);
            dh(g, e, b.minFrac, b.maxFrac);
            h = g.d;
            k = g.i;
            e = g.e;
            f = [
            ];
            for (g = h.reduce(function (a, b) {
                return a && !b
            }, !0); 0 > k; ) h.unshift(0),
                k++;
            0 < k ? f = h.splice(k, h.length)  : (f = h, h = [
                0
            ]);
            k = [
            ];
            for (h.length >= b.lgSize && k.unshift(h.splice( - b.lgSize, h.length).join('')); h.length > b.gSize; ) k.unshift(h.splice( - b.gSize, h.length).join(''));
            h.length && k.unshift(h.join(''));
            h = k.join(d);
            f.length && (h += c + f.join(''));
            e && (h += 'e+' + e)
        }
        return 0 > a && !g ? b.negPre + h + b.negSuf : b.posPre + h + b.posSuf
    }
    function Ob(a, b, d, c) {
        var e = '';
        if (0 > a || c && 0 >= a) c ? a = - a + 1 : (a = - a, e = '-');
        for (a = '' + a; a.length < b; ) a = Ec + a;
        d && (a = a.substr(a.length - b));
        return e + a
    }
    function ea(a, b, d, c, e) {
        d = d || 0;
        return function (f) {
            f = f['get' + a]();
            if (0 < d || f > - d) f += d;
            0 === f && - 12 === d && (f = 12);
            return Ob(f, b, c, e)
        }
    }
    function kb(a, b, d) {
        return function (c, e) {
            var f = c['get' + a](),
                g = ub((d ? 'STANDALONE' : '') + (b ? 'SHORT' : '') + a);
            return e[g][f]
        }
    }
    function Xd(a) {
        var b = new Date(a, 0, 1).getDay();
        return new Date(a, 0, (4 >= b ? 5 : 12) - b)
    }
    function Yd(a) {
        return function (b) {
            var d = Xd(b.getFullYear());
            b = + new Date(b.getFullYear(), b.getMonth(), b.getDate() + (4 - b.getDay())) - + d;
            b = 1 + Math.round(b / 604800000);
            return Ob(b, a)
        }
    }
    function Fc(a, b) {
        return 0 >= a.getFullYear() ? b.ERAS[0] : b.ERAS[1]
    }
    function Rd(a) {
        function b(a) {
            var b;
            if (b = a.match(d)) {
                a = new Date(0);
                var f = 0,
                    g = 0,
                    k = b[8] ? a.setUTCFullYear : a.setFullYear,
                    h = b[8] ? a.setUTCHours : a.setHours;
                b[9] && (f = fa(b[9] + b[10]), g = fa(b[9] + b[11]));
                k.call(a, fa(b[1]), fa(b[2]) - 1, fa(b[3]));
                f = fa(b[4] || 0) - f;
                g = fa(b[5] || 0) - g;
                k = fa(b[6] || 0);
                b = Math.round(1000 * parseFloat('0.' + (b[7] || 0)));
                h.call(a, f, g, k, b)
            }
            return a
        }
        var d = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
        return function (c, d, f) {
            var g = '',
                k = [
                ],
                h,
                l;
            d = d || 'mediumDate';
            d = a.DATETIME_FORMATS[d] || d;
            A(c) && (c = eh.test(c) ? fa(c)  : b(c));
            W(c) && (c = new Date(c));
            if (!ha(c) || !isFinite(c.getTime())) return c;
            for (; d; ) (l = fh.exec(d)) ? (k = db(k, l, 1), d = k.pop())  : (k.push(d), d = null);
            var m = c.getTimezoneOffset();
            f && (m = ec(f, m), c = fc(c, f, !0));
            r(k, function (b) {
                h = gh[b];
                g += h ? h(c, a.DATETIME_FORMATS, m)  : '\'\'' === b ? '\'' : b.replace(/(^'|'$)/g, '').replace(/''/g, '\'')
            });
            return g
        }
    }
    function Yg() {
        return function (a, b) {
            z(b) && (b = 2);
            return eb(a, b)
        }
    }
    function Zg() {
        return function (a, b, d) {
            b = 1 / 0 === Math.abs(Number(b)) ? Number(b)  : fa(b);
            if (X(b)) return a;
            W(a) && (a = a.toString());
            if (!ya(a)) return a;
            d = !d || isNaN(d) ? 0 : fa(d);
            d = 0 > d ? Math.max(0, a.length + d)  : d;
            return 0 <= b ? Gc(a, d, d + b)  : 0 === d ? Gc(a, b, a.length)  : Gc(a, Math.max(0, d + b), d)
        }
    }
    function Gc(a, b, d) {
        return A(a) ? a.slice(b, d)  : Ha.call(a, b, d)
    }
    function Td(a) {
        function b(b) {
            return b.map(function (b) {
                var c = 1,
                    d = Ta;
                if (B(b)) d = b;
                else if (A(b)) {
                    if ('+' === b.charAt(0) || '-' === b.charAt(0)) c = '-' === b.charAt(0) ? - 1 : 1,
                        b = b.substring(1);
                    if ('' !== b && (d = a(b), d.constant)) var e = d(),
                        d = function (a) {
                            return a[e]
                        }
                }
                return {
                    get: d,
                    descending: c
                }
            })
        }
        function d(a) {
            switch (typeof a) {
                case 'number':
                case 'boolean':
                case 'string':
                    return !0;
                default:
                    return !1
            }
        }
        function c(a, b) {
            var c = 0,
                d = a.type,
                h = b.type;
            if (d === h) {
                var h = a.value,
                    l = b.value;
                'string' === d ? (h = h.toLowerCase(), l = l.toLowerCase())  : 'object' === d && (D(h) && (h = a.index), D(l) && (l = b.index));
                h !== l && (c = h < l ? - 1 : 1)
            } else c = 'undefined' === d ? 1 : 'undefined' === h ? - 1 : 'null' === d ? 1 : 'null' === h ? - 1 : d < h ? - 1 : 1;
            return c
        }
        return function (a, f, g, k) {
            if (null == a) return a;
            if (!ya(a)) throw F('orderBy') ('notarray', a);
            H(f) || (f = [
                f
            ]);
            0 === f.length && (f = [
                '+'
            ]);
            var h = b(f),
                l = g ? - 1 : 1,
                m = B(k) ? k : c;
            a = Array.prototype.map.call(a, function (a, b) {
                return {
                    value: a,
                    tieBreaker: {
                        value: b,
                        type: 'number',
                        index: b
                    },
                    predicateValues: h.map(function (c) {
                        var e = c.get(a);
                        c = typeof e;
                        if (null === e) c = 'null';
                        else if ('object' === c) if (!B(e.valueOf) || (e = e.valueOf(), !d(e))) bc(e) && (e = e.toString(), d(e));
                        else ;
                        return {
                            value: e,
                            type: c,
                            index: b
                        }
                    })
                }
            });
            a.sort(function (a, b) {
                for (var d = 0, e = h.length; d < e; d++) {
                    var f = m(a.predicateValues[d], b.predicateValues[d]);
                    if (f) return f * h[d].descending * l
                }
                return (m(a.tieBreaker, b.tieBreaker) || c(a.tieBreaker, b.tieBreaker)) * l
            });
            return a = a.map(function (a) {
                return a.value
            })
        }
    }
    function Ra(a) {
        B(a) && (a = {
            link: a
        });
        a.restrict = a.restrict || 'AC';
        return ia(a)
    }
    function Pb(a, b, d, c, e) {
        this.$$controls = [
        ];
        this.$error = {
        };
        this.$$success = {
        };
        this.$pending = void 0;
        this.$name = e(b.name || b.ngForm || '') (d);
        this.$dirty = !1;
        this.$valid = this.$pristine = !0;
        this.$submitted = this.$invalid = !1;
        this.$$parentForm = lb;
        this.$$element = a;
        this.$$animate = c;
        Zd(this)
    }
    function Zd(a) {
        a.$$classCache = {
        };
        a.$$classCache[$d] = !(a.$$classCache[mb] = a.$$element.hasClass(mb))
    }
    function ae(a) {
        function b(a, b, c) {
            c && !a.$$classCache[b] ? (a.$$animate.addClass(a.$$element, b), a.$$classCache[b] = !0)  : !c && a.$$classCache[b] && (a.$$animate.removeClass(a.$$element, b), a.$$classCache[b] = !1)
        }
        function d(a, c, d) {
            c = c ? '-' + Vc(c, '-')  : '';
            b(a, mb + c, !0 === d);
            b(a, $d + c, !1 === d)
        }
        var c = a.set,
            e = a.unset;
        a.clazz.prototype.$setValidity = function (a, g, k) {
            z(g) ? (this.$pending || (this.$pending = {
            }), c(this.$pending, a, k))  : (this.$pending && e(this.$pending, a, k), be(this.$pending) && (this.$pending = void 0));
            Ga(g) ? g ? (e(this.$error, a, k), c(this.$$success, a, k))  : (c(this.$error, a, k), e(this.$$success, a, k))  : (e(this.$error, a, k), e(this.$$success, a, k));
            this.$pending ? (b(this, 'ng-pending', !0), this.$valid = this.$invalid = void 0, d(this, '', null))  : (b(this, 'ng-pending', !1), this.$valid = be(this.$error), this.$invalid = !this.$valid, d(this, '', this.$valid));
            g = this.$pending && this.$pending[a] ? void 0 : this.$error[a] ? !1 : this.$$success[a] ? !0 : null;
            d(this, a, g);
            this.$$parentForm.$setValidity(a, g, this)
        }
    }
    function be(a) {
        if (a) for (var b in a) if (a.hasOwnProperty(b)) return !1;
        return !0
    }
    function Hc(a) {
        a.$formatters.push(function (b) {
            return a.$isEmpty(b) ? b : b.toString()
        })
    }
    function Sa(a, b, d, c, e, f) {
        var g = K(b[0].type);
        if (!e.android) {
            var k = !1;
            b.on('compositionstart', function () {
                k = !0
            });
            b.on('compositionupdate', function (a) {
                if (z(a.data) || '' === a.data) k = !1
            });
            b.on('compositionend', function () {
                k = !1;
                l()
            })
        }
        var h,
            l = function (a) {
                h && (f.defer.cancel(h), h = null);
                if (!k) {
                    var e = b.val();
                    a = a && a.type;
                    'password' === g || d.ngTrim && 'false' === d.ngTrim || (e = U(e));
                    (c.$viewValue !== e || '' === e && c.$$hasNativeValidators) && c.$setViewValue(e, a)
                }
            };
        if (e.hasEvent('input')) b.on('input', l);
        else {
            var m = function (a, b, c) {
                h || (h = f.defer(function () {
                    h = null;
                    b && b.value === c || l(a)
                }))
            };
            b.on('keydown', function (a) {
                var b = a.keyCode;
                91 === b || 15 < b && 19 > b || 37 <= b && 40 >= b || m(a, this, this.value)
            });
            if (e.hasEvent('paste')) b.on('paste cut drop', m)
        }
        b.on('change', l);
        if (ce[g] && c.$$hasNativeValidators && g === d.type) b.on('keydown wheel mousedown', function (a) {
            if (!h) {
                var b = this.validity,
                    c = b.badInput,
                    d = b.typeMismatch;
                h = f.defer(function () {
                    h = null;
                    b.badInput === c && b.typeMismatch === d || l(a)
                })
            }
        });
        c.$render = function () {
            var a = c.$isEmpty(c.$viewValue) ? '' : c.$viewValue;
            b.val() !== a && b.val(a)
        }
    }
    function Qb(a, b) {
        return function (d, c) {
            var e,
                f;
            if (ha(d)) return d;
            if (A(d)) {
                '"' === d.charAt(0) && '"' === d.charAt(d.length - 1) && (d = d.substring(1, d.length - 1));
                if (hh.test(d)) return new Date(d);
                a.lastIndex = 0;
                if (e = a.exec(d)) return e.shift(),
                    f = c ? {
                            yyyy: c.getFullYear(),
                            MM: c.getMonth() + 1,
                            dd: c.getDate(),
                            HH: c.getHours(),
                            mm: c.getMinutes(),
                            ss: c.getSeconds(),
                            sss: c.getMilliseconds() / 1000
                        }
                        : {
                            yyyy: 1970,
                            MM: 1,
                            dd: 1,
                            HH: 0,
                            mm: 0,
                            ss: 0,
                            sss: 0
                        },
                    r(e, function (a, c) {
                        c < b.length && (f[b[c]] = + a)
                    }),
                    e = new Date(f.yyyy, f.MM - 1, f.dd, f.HH, f.mm, f.ss || 0, 1000 * f.sss || 0),
                100 > f.yyyy && e.setFullYear(f.yyyy),
                    e
            }
            return NaN
        }
    }
    function nb(a, b, d, c) {
        return function (e, f, g, k, h, l, m, p) {
            function n(a) {
                return a && !(a.getTime && a.getTime() !== a.getTime())
            }
            function s(a) {
                return w(a) && !ha(a) ? r(a) || void 0 : a
            }
            function r(a, b) {
                var c = k.$options.getOption('timezone');
                v && v !== c && (b = Sc(b, ec(v)));
                var e = d(a, b);
                !isNaN(e) && c && (e = fc(e, c));
                return e
            }
            Ic(e, f, g, k, a);
            Sa(e, f, g, k, h, l);
            var t = 'time' === a || 'datetimelocal' === a,
                q,
                v;
            k.$parsers.push(function (c) {
                if (k.$isEmpty(c)) return null;
                if (b.test(c)) return r(c, q);
                k.$$parserName = a
            });
            k.$formatters.push(function (a) {
                if (a && !ha(a)) throw ob('datefmt', a);
                if (n(a)) {
                    q = a;
                    var b = k.$options.getOption('timezone');
                    b && (v = b, q = fc(q, b, !0));
                    var d = c;
                    t && A(k.$options.getOption('timeSecondsFormat')) && (d = c.replace('ss.sss', k.$options.getOption('timeSecondsFormat')).replace(/:$/, ''));
                    a = m('date') (a, d, b);
                    t && k.$options.getOption('timeStripZeroSeconds') && (a = a.replace(/(?::00)?(?:\.000)?$/, ''));
                    return a
                }
                v = q = null;
                return ''
            });
            if (w(g.min) || g.ngMin) {
                var x = g.min || p(g.ngMin) (e),
                    B = s(x);
                k.$validators.min = function (a) {
                    return !n(a) || z(B) || d(a) >= B
                };
                g.$observe('min', function (a) {
                    a !== x && (B = s(a), x = a, k.$validate())
                })
            }
            if (w(g.max) || g.ngMax) {
                var y = g.max || p(g.ngMax) (e),
                    J = s(y);
                k.$validators.max = function (a) {
                    return !n(a) || z(J) || d(a) <= J
                };
                g.$observe('max', function (a) {
                    a !== y && (J = s(a), y = a, k.$validate())
                })
            }
        }
    }
    function Ic(a, b, d, c, e) {
        (c.$$hasNativeValidators = D(b[0].validity)) && c.$parsers.push(function (a) {
            var d = b.prop('validity') || {
            };
            if (d.badInput || d.typeMismatch) c.$$parserName = e;
            else return a
        })
    }
    function de(a) {
        a.$parsers.push(function (b) {
            if (a.$isEmpty(b)) return null;
            if (ih.test(b)) return parseFloat(b);
            a.$$parserName = 'number'
        });
        a.$formatters.push(function (b) {
            if (!a.$isEmpty(b)) {
                if (!W(b)) throw ob('numfmt', b);
                b = b.toString()
            }
            return b
        })
    }
    function na(a) {
        w(a) && !W(a) && (a = parseFloat(a));
        return X(a) ? void 0 : a
    }
    function Jc(a) {
        var b = a.toString(),
            d = b.indexOf('.');
        return - 1 === d ? - 1 < a && 1 > a && (a = /e-(\d+)$/.exec(b)) ? Number(a[1])  : 0 : b.length - d - 1
    }
    function ee(a, b, d) {
        a = Number(a);
        var c = (0 | a) !== a,
            e = (0 | b) !== b,
            f = (0 | d) !== d;
        if (c || e || f) {
            var g = c ? Jc(a)  : 0,
                k = e ? Jc(b)  : 0,
                h = f ? Jc(d)  : 0,
                g = Math.max(g, k, h),
                g = Math.pow(10, g);
            a *= g;
            b *= g;
            d *= g;
            c && (a = Math.round(a));
            e && (b = Math.round(b));
            f && (d = Math.round(d))
        }
        return 0 === (a - b) % d
    }
    function fe(a, b, d, c, e) {
        if (w(c)) {
            a = a(c);
            if (!a.constant) throw ob('constexpr', d, c);
            return a(b)
        }
        return e
    }
    function Kc(a, b) {
        function d(a, b) {
            if (!a || !a.length) return [];
            if (!b || !b.length) return a;
            var c = [
                ],
                d = 0;
            a: for (; d < a.length; d++) {
                for (var e = a[d], m = 0; m < b.length; m++) if (e === b[m]) continue a;
                c.push(e)
            }
            return c
        }
        function c(a) {
            if (!a) return a;
            var b = a;
            H(a) ? b = a.map(c).join(' ')  : D(a) ? b = Object.keys(a).filter(function (b) {
                return a[b]
            }).join(' ')  : A(a) || (b = a + '');
            return b
        }
        a = 'ngClass' + a;
        var e;
        return ['$parse',
            function (f) {
                return {
                    restrict: 'AC',
                    link: function (g, k, h) {
                        function l(a, b) {
                            var c = [
                            ];
                            r(a, function (a) {
                                if (0 < b || p[a]) p[a] = (p[a] || 0) + b,
                                p[a] === + (0 < b) && c.push(a)
                            });
                            return c.join(' ')
                        }
                        function m(a) {
                            if (a === b) {
                                var c = s,
                                    c = l(c && c.split(' '), 1);
                                h.$addClass(c)
                            } else c = s,
                                c = l(c && c.split(' '), - 1),
                                h.$removeClass(c);
                            n = a
                        }
                        var p = k.data('$classCounts'),
                            n = !0,
                            s;
                        p || (p = T(), k.data('$classCounts', p));
                        'ngClass' !== a && (e || (e = f('$index', function (a) {
                            return 1 & a
                        })), g.$watch(e, m));
                        g.$watch(f(h[a], c), function (a) {
                            if (n === b) {
                                var c = s && s.split(' '),
                                    e = a && a.split(' '),
                                    f = d(c, e),
                                    c = d(e, c),
                                    f = l(f, - 1),
                                    c = l(c, 1);
                                h.$addClass(c);
                                h.$removeClass(f)
                            }
                            s = a
                        })
                    }
                }
            }
        ]
    }
    function qd(a, b, d, c, e, f) {
        return {
            restrict: 'A',
            compile: function (g, k) {
                var h = a(k[c]);
                return function (a, c) {
                    c.on(e, function (c) {
                        var e = function () {
                            h(a, {
                                $event: c
                            })
                        };
                        if (b.$$phase) if (f) a.$evalAsync(e);
                        else try {
                                e()
                            } catch (g) {
                                d(g)
                            } else a.$apply(e)
                    })
                }
            }
        }
    }
    function Rb(a, b, d, c, e, f, g, k, h) {
        this.$modelValue = this.$viewValue = Number.NaN;
        this.$$rawModelValue = void 0;
        this.$validators = {
        };
        this.$asyncValidators = {
        };
        this.$parsers = [
        ];
        this.$formatters = [
        ];
        this.$viewChangeListeners = [
        ];
        this.$untouched = !0;
        this.$touched = !1;
        this.$pristine = !0;
        this.$dirty = !1;
        this.$valid = !0;
        this.$invalid = !1;
        this.$error = {
        };
        this.$$success = {
        };
        this.$pending = void 0;
        this.$name = h(d.name || '', !1) (a);
        this.$$parentForm = lb;
        this.$options = Sb;
        this.$$updateEvents = '';
        this.$$updateEventHandler = this.$$updateEventHandler.bind(this);
        this.$$parsedNgModel = e(d.ngModel);
        this.$$parsedNgModelAssign = this.$$parsedNgModel.assign;
        this.$$ngModelGet = this.$$parsedNgModel;
        this.$$ngModelSet = this.$$parsedNgModelAssign;
        this.$$pendingDebounce = null;
        this.$$parserValid = void 0;
        this.$$parserName = 'parse';
        this.$$currentValidationRunId = 0;
        this.$$scope = a;
        this.$$rootScope = a.$root;
        this.$$attr = d;
        this.$$element = c;
        this.$$animate = f;
        this.$$timeout = g;
        this.$$parse = e;
        this.$$q = k;
        this.$$exceptionHandler = b;
        Zd(this);
        jh(this)
    }
    function jh(a) {
        a.$$scope.$watch(function (b) {
            b = a.$$ngModelGet(b);
            b === a.$modelValue || a.$modelValue !== a.$modelValue && b !== b || a.$$setModelValue(b);
            return b
        })
    }
    function Lc(a) {
        this.$$options = a
    }
    function ge(a, b) {
        r(b, function (b, c) {
            w(a[c]) || (a[c] = b)
        })
    }
    function Oa(a, b) {
        a.prop('selected', b);
        a.attr('selected', b)
    }
    function he(a, b, d) {
        if (a) {
            A(a) && (a = new RegExp('^' + a + '$'));
            if (!a.test) throw F('ngPattern') ('noregexp', b, a, za(d));
            return a
        }
    }
    function Tb(a) {
        a = fa(a);
        return X(a) ? - 1 : a
    }
    var Wb = {
            objectMaxDepth: 5,
            urlErrorParamsEnabled: !0
        },
        ie = /^\/(.+)\/([a-z]*)$/,
        ta = Object.prototype.hasOwnProperty,
        K = function (a) {
            return A(a) ? a.toLowerCase()  : a
        },
        ub = function (a) {
            return A(a) ? a.toUpperCase()  : a
        },
        Ca,
        x,
        rb,
        Ha = [
        ].slice,
        Fg = [
        ].splice,
        kh = [
        ].push,
        la = Object.prototype.toString,
        Pc = Object.getPrototypeOf,
        pa = F('ng'),
        ca = C.angular || (C.angular = {
        }),
        kc,
        pb = 0;
    Ca = C.document.documentMode;
    var X = Number.isNaN || function (a) {
        return a !== a
    };
    E.$inject = [
    ];
    Ta.$inject = [
    ];
    var ve = /^\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array]$/,
        U = function (a) {
            return A(a) ? a.trim()  : a
        },
        Md = function (a) {
            return a.replace(/([-()[\]{}+?*.$^|,:#<!\\])/g, '\\$1').replace(/\x08/g, '\\x08')
        },
        Aa = function () {
            if (!w(Aa.rules)) {
                var a = C.document.querySelector('[ng-csp]') || C.document.querySelector('[data-ng-csp]');
                if (a) {
                    var b = a.getAttribute('ng-csp') || a.getAttribute('data-ng-csp');
                    Aa.rules = {
                        noUnsafeEval: !b || - 1 !== b.indexOf('no-unsafe-eval'),
                        noInlineStyle: !b || - 1 !== b.indexOf('no-inline-style')
                    }
                } else {
                    a = Aa;
                    try {
                        new Function(''),
                            b = !1
                    } catch (d) {
                        b = !0
                    }
                    a.rules = {
                        noUnsafeEval: b,
                        noInlineStyle: !1
                    }
                }
            }
            return Aa.rules
        },
        qb = function () {
            if (w(qb.name_)) return qb.name_;
            var a,
                b,
                d = Qa.length,
                c,
                e;
            for (b = 0; b < d; ++b) if (c = Qa[b], a = C.document.querySelector('[' + c.replace(':', '\\:') + 'jq]')) {
                e = a.getAttribute(c + 'jq');
                break
            }
            return qb.name_ = e
        },
        xe = /:/g,
        Qa = [
            'ng-',
            'data-ng-',
            'ng:',
            'x-ng-'
        ],
        Be = function (a) {
            var b = a.currentScript;
            if (!b) return !0;
            if (!(b instanceof C.HTMLScriptElement || b instanceof C.SVGScriptElement)) return !1;
            b = b.attributes;
            return [b.getNamedItem('src'),
                b.getNamedItem('href'),
                b.getNamedItem('xlink:href')].every(function (b) {
                if (!b) return !0;
                if (!b.value) return !1;
                var c = a.createElement('a');
                c.href = b.value;
                if (a.location.origin === c.origin) return !0;
                switch (c.protocol) {
                    case 'http:':
                    case 'https:':
                    case 'ftp:':
                    case 'blob:':
                    case 'file:':
                    case 'data:':
                        return !0;
                    default:
                        return !1
                }
            })
        }(C.document),
        Ee = /[A-Z]/g,
        Wc = !1,
        Pa = 3,
        Ke = {
            full: '1.7.8',
            major: 1,
            minor: 7,
            dot: 8,
            codeName: 'enthusiastic-oblation'
        };
    Y.expando = 'ng339';
    var Ka = Y.cache = {
        },
        pg = 1;
    Y._data = function (a) {
        return this.cache[a[this.expando]] || {
        }
    };
    var lg = /-([a-z])/g,
        lh = /^-ms-/,
        Ab = {
            mouseleave: 'mouseout',
            mouseenter: 'mouseover'
        },
        nc = F('jqLite'),
        og = /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,
        mc = /<|&#?\w+;/,
        mg = /<([\w:-]+)/,
        ng = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,
        oa = {
            option: [
                1,
                '<select multiple="multiple">',
                '</select>'
            ],
            thead: [
                1,
                '<table>',
                '</table>'
            ],
            col: [
                2,
                '<table><colgroup>',
                '</colgroup></table>'
            ],
            tr: [
                2,
                '<table><tbody>',
                '</tbody></table>'
            ],
            td: [
                3,
                '<table><tbody><tr>',
                '</tr></tbody></table>'
            ],
            _default: [
                0,
                '',
                ''
            ]
        };
    oa.optgroup = oa.option;
    oa.tbody = oa.tfoot = oa.colgroup = oa.caption = oa.thead;
    oa.th = oa.td;
    var ug = C.Node.prototype.contains || function (a) {
            return !!(16 & this.compareDocumentPosition(a))
        },
        Wa = Y.prototype = {
            ready: fd,
            toString: function () {
                var a = [
                ];
                r(this, function (b) {
                    a.push('' + b)
                });
                return '[' + a.join(', ') + ']'
            },
            eq: function (a) {
                return 0 <= a ? x(this[a])  : x(this[this.length + a])
            },
            length: 0,
            push: kh,
            sort: [
            ].sort,
            splice: [
            ].splice
        },
        Gb = {
        };
    r('multiple selected checked disabled readOnly required open'.split(' '), function (a) {
        Gb[K(a)] = a
    });
    var md = {
    };
    r('input select option textarea button form details'.split(' '), function (a) {
        md[a] = !0
    });
    var td = {
        ngMinlength: 'minlength',
        ngMaxlength: 'maxlength',
        ngMin: 'min',
        ngMax: 'max',
        ngPattern: 'pattern',
        ngStep: 'step'
    };
    r({
        data: rc,
        removeData: qc,
        hasData: function (a) {
            for (var b in Ka[a.ng339]) return !0;
            return !1
        },
        cleanData: function (a) {
            for (var b = 0, d = a.length; b < d; b++) qc(a[b]),
                id(a[b])
        }
    }, function (a, b) {
        Y[b] = a
    });
    r({
        data: rc,
        inheritedData: Eb,
        scope: function (a) {
            return x.data(a, '$scope') || Eb(a.parentNode || a, [
                '$isolateScope',
                '$scope'
            ])
        },
        isolateScope: function (a) {
            return x.data(a, '$isolateScope') || x.data(a, '$isolateScopeNoTemplate')
        },
        controller: jd,
        injector: function (a) {
            return Eb(a, '$injector')
        },
        removeAttr: function (a, b) {
            a.removeAttribute(b)
        },
        hasClass: Bb,
        css: function (a, b, d) {
            b = xb(b.replace(lh, 'ms-'));
            if (w(d)) a.style[b] = d;
            else return a.style[b]
        },
        attr: function (a, b, d) {
            var c = a.nodeType;
            if (c !== Pa && 2 !== c && 8 !== c && a.getAttribute) {
                var c = K(b),
                    e = Gb[c];
                if (w(d)) null === d || !1 === d && e ? a.removeAttribute(b)  : a.setAttribute(b, e ? c : d);
                else return a = a.getAttribute(b),
                e && null !== a && (a = c),
                    null === a ? void 0 : a
            }
        },
        prop: function (a, b, d) {
            if (w(d)) a[b] = d;
            else return a[b]
        },
        text: function () {
            function a(a, d) {
                if (z(d)) {
                    var c = a.nodeType;
                    return 1 === c || c === Pa ? a.textContent : ''
                }
                a.textContent = d
            }
            a.$dv = '';
            return a
        }(),
        val: function (a, b) {
            if (z(b)) {
                if (a.multiple && 'select' === ua(a)) {
                    var d = [
                    ];
                    r(a.options, function (a) {
                        a.selected && d.push(a.value || a.text)
                    });
                    return d
                }
                return a.value
            }
            a.value = b
        },
        html: function (a, b) {
            if (z(b)) return a.innerHTML;
            yb(a, !0);
            a.innerHTML = b
        },
        empty: kd
    }, function (a, b) {
        Y.prototype[b] = function (b, c) {
            var e,
                f,
                g = this.length;
            if (a !== kd && z(2 === a.length && a !== Bb && a !== jd ? b : c)) {
                if (D(b)) {
                    for (e = 0; e < g; e++) if (a === rc) a(this[e], b);
                    else for (f in b) a(this[e], f, b[f]);
                    return this
                }
                e = a.$dv;
                g = z(e) ? Math.min(g, 1)  : g;
                for (f = 0; f < g; f++) {
                    var k = a(this[f], b, c);
                    e = e ? e + k : k
                }
                return e
            }
            for (e = 0; e < g; e++) a(this[e], b, c);
            return this
        }
    });
    r({
        removeData: qc,
        on: function (a, b, d, c) {
            if (w(c)) throw nc('onargs');
            if (lc(a)) {
                c = zb(a, !0);
                var e = c.events,
                    f = c.handle;
                f || (f = c.handle = rg(a, e));
                c = 0 <= b.indexOf(' ') ? b.split(' ')  : [
                    b
                ];
                for (var g = c.length, k = function (b, c, g) {
                    var k = e[b];
                    k || (k = e[b] = [
                    ], k.specialHandlerWrapper = c, '$destroy' === b || g || a.addEventListener(b, f));
                    k.push(d)
                }; g--; ) b = c[g],
                    Ab[b] ? (k(Ab[b], tg), k(b, void 0, !0))  : k(b)
            }
        },
        off: id,
        one: function (a, b, d) {
            a = x(a);
            a.on(b, function e() {
                a.off(b, d);
                a.off(b, e)
            });
            a.on(b, d)
        },
        replaceWith: function (a, b) {
            var d,
                c = a.parentNode;
            yb(a);
            r(new Y(b), function (b) {
                d ? c.insertBefore(b, d.nextSibling)  : c.replaceChild(b, a);
                d = b
            })
        },
        children: function (a) {
            var b = [
            ];
            r(a.childNodes, function (a) {
                1 === a.nodeType && b.push(a)
            });
            return b
        },
        contents: function (a) {
            return a.contentDocument || a.childNodes || [
            ]
        },
        append: function (a, b) {
            var d = a.nodeType;
            if (1 === d || 11 === d) {
                b = new Y(b);
                for (var d = 0, c = b.length; d < c; d++) a.appendChild(b[d])
            }
        },
        prepend: function (a, b) {
            if (1 === a.nodeType) {
                var d = a.firstChild;
                r(new Y(b), function (b) {
                    a.insertBefore(b, d)
                })
            }
        },
        wrap: function (a, b) {
            var d = x(b).eq(0).clone() [0],
                c = a.parentNode;
            c && c.replaceChild(d, a);
            d.appendChild(a)
        },
        remove: Fb,
        detach: function (a) {
            Fb(a, !0)
        },
        after: function (a, b) {
            var d = a,
                c = a.parentNode;
            if (c) {
                b = new Y(b);
                for (var e = 0, f = b.length; e < f; e++) {
                    var g = b[e];
                    c.insertBefore(g, d.nextSibling);
                    d = g
                }
            }
        },
        addClass: Db,
        removeClass: Cb,
        toggleClass: function (a, b, d) {
            b && r(b.split(' '), function (b) {
                var e = d;
                z(e) && (e = !Bb(a, b));
                (e ? Db : Cb) (a, b)
            })
        },
        parent: function (a) {
            return (a = a.parentNode) && 11 !== a.nodeType ? a : null
        },
        next: function (a) {
            return a.nextElementSibling
        },
        find: function (a, b) {
            return a.getElementsByTagName ? a.getElementsByTagName(b)  : [
            ]
        },
        clone: pc,
        triggerHandler: function (a, b, d) {
            var c,
                e,
                f = b.type || b,
                g = zb(a);
            if (g = (g = g && g.events) && g[f]) c = {
                preventDefault: function () {
                    this.defaultPrevented = !0
                },
                isDefaultPrevented: function () {
                    return !0 === this.defaultPrevented
                },
                stopImmediatePropagation: function () {
                    this.immediatePropagationStopped = !0
                },
                isImmediatePropagationStopped: function () {
                    return !0 === this.immediatePropagationStopped
                },
                stopPropagation: E,
                type: f,
                target: a
            },
            b.type && (c = S(c, b)),
                b = ja(g),
                e = d ? [
                    c
                ].concat(d)  : [
                    c
                ],
                r(b, function (b) {
                    c.isImmediatePropagationStopped() || b.apply(a, e)
                })
        }
    }, function (a, b) {
        Y.prototype[b] = function (b, c, e) {
            for (var f, g = 0, k = this.length; g < k; g++) z(f) ? (f = a(this[g], b, c, e), w(f) && (f = x(f)))  : oc(f, a(this[g], b, c, e));
            return w(f) ? f : this
        }
    });
    Y.prototype.bind = Y.prototype.on;
    Y.prototype.unbind = Y.prototype.off;
    var mh = Object.create(null);
    nd.prototype = {
        _idx: function (a) {
            a !== this._lastKey && (this._lastKey = a, this._lastIndex = this._keys.indexOf(a));
            return this._lastIndex
        },
        _transformKey: function (a) {
            return X(a) ? mh : a
        },
        get: function (a) {
            a = this._transformKey(a);
            a = this._idx(a);
            if ( - 1 !== a) return this._values[a]
        },
        has: function (a) {
            a = this._transformKey(a);
            return - 1 !== this._idx(a)
        },
        set: function (a, b) {
            a = this._transformKey(a);
            var d = this._idx(a);
            - 1 === d && (d = this._lastIndex = this._keys.length);
            this._keys[d] = a;
            this._values[d] = b
        },
        delete : function (a) {
            a = this._transformKey(a);
            a = this._idx(a);
            if ( - 1 === a) return !1;
            this._keys.splice(a, 1);
            this._values.splice(a, 1);
            this._lastKey = NaN;
            this._lastIndex = - 1;
            return !0
        }
    };
    var Hb = nd,
        jg = [
            function () {
                this.$get = [
                    function () {
                        return Hb
                    }
                ]
            }
        ],
        wg = /^([^(]+?)=>/,
        xg = /^[^(]*\(\s*([^)]*)\)/m,
        nh = /,/,
        oh = /^\s*(_?)(\S+?)\1\s*$/,
        vg = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm,
        Ba = F('$injector');
    fb.$$annotate = function (a, b, d) {
        var c;
        if ('function' === typeof a) {
            if (!(c = a.$inject)) {
                c = [
                ];
                if (a.length) {
                    if (b) throw A(d) && d || (d = a.name || yg(a)),
                        Ba('strictdi', d);
                    b = od(a);
                    r(b[1].split(nh), function (a) {
                        a.replace(oh, function (a, b, d) {
                            c.push(d)
                        })
                    })
                }
                a.$inject = c
            }
        } else H(a) ? (b = a.length - 1, sb(a[b], 'fn'), c = a.slice(0, b))  : sb(a, 'fn', !0);
        return c
    };
    var je = F('$animate'),
        zf = function () {
            this.$get = E
        },
        Af = function () {
            var a = new Hb,
                b = [
                ];
            this.$get = [
                '$$AnimateRunner',
                '$rootScope',
                function (d, c) {
                    function e(a, b, c) {
                        var d = !1;
                        b && (b = A(b) ? b.split(' ')  : H(b) ? b : [
                        ], r(b, function (b) {
                            b && (d = !0, a[b] = c)
                        }));
                        return d
                    }
                    function f() {
                        r(b, function (b) {
                            var c = a.get(b);
                            if (c) {
                                var d = zg(b.attr('class')),
                                    e = '',
                                    f = '';
                                r(c, function (a, b) {
                                    a !== !!d[b] && (a ? e += (e.length ? ' ' : '') + b : f += (f.length ? ' ' : '') + b)
                                });
                                r(b, function (a) {
                                    e && Db(a, e);
                                    f && Cb(a, f)
                                });
                                a.delete (b)
                            }
                        });
                        b.length = 0
                    }
                    return {
                        enabled: E,
                        on: E,
                        off: E,
                        pin: E,
                        push: function (g, k, h, l) {
                            l && l();
                            h = h || {
                            };
                            h.from && g.css(h.from);
                            h.to && g.css(h.to);
                            if (h.addClass || h.removeClass) if (k = h.addClass, l = h.removeClass, h = a.get(g) || {
                            }, k = e(h, k, !0), l = e(h, l, !1), k || l) a.set(g, h),
                                b.push(g),
                            1 === b.length && c.$$postDigest(f);
                            g = new d;
                            g.complete();
                            return g
                        }
                    }
                }
            ]
        },
        xf = [
            '$provide',
            function (a) {
                var b = this,
                    d = null,
                    c = null;
                this.$$registeredAnimations = Object.create(null);
                this.register = function (c, d) {
                    if (c && '.' !== c.charAt(0)) throw je('notcsel', c);
                    var g = c + '-animation';
                    b.$$registeredAnimations[c.substr(1)] = g;
                    a.factory(g, d)
                };
                this.customFilter = function (a) {
                    1 === arguments.length && (c = B(a) ? a : null);
                    return c
                };
                this.classNameFilter = function (a) {
                    if (1 === arguments.length && (d = a instanceof RegExp ? a : null) && /[(\s|\/)]ng-animate[(\s|\/)]/.test(d.toString())) throw d = null,
                        je('nongcls', 'ng-animate');
                    return d
                };
                this.$get = [
                    '$$animateQueue',
                    function (a) {
                        function b(a, c, d) {
                            if (d) {
                                var e;
                                a: {
                                    for (e = 0; e < d.length; e++) {
                                        var f = d[e];
                                        if (1 === f.nodeType) {
                                            e = f;
                                            break a
                                        }
                                    }
                                    e = void 0
                                }
                                !e || e.parentNode || e.previousElementSibling || (d = null)
                            }
                            d ? d.after(a)  : c.prepend(a)
                        }
                        return {
                            on: a.on,
                            off: a.off,
                            pin: a.pin,
                            enabled: a.enabled,
                            cancel: function (a) {
                                a.cancel && a.cancel()
                            },
                            enter: function (c, d, h, l) {
                                d = d && x(d);
                                h = h && x(h);
                                d = d || h.parent();
                                b(c, d, h);
                                return a.push(c, 'enter', ra(l))
                            },
                            move: function (c, d, h, l) {
                                d = d && x(d);
                                h = h && x(h);
                                d = d || h.parent();
                                b(c, d, h);
                                return a.push(c, 'move', ra(l))
                            },
                            leave: function (b, c) {
                                return a.push(b, 'leave', ra(c), function () {
                                    b.remove()
                                })
                            },
                            addClass: function (b, c, d) {
                                d = ra(d);
                                d.addClass = hb(d.addclass, c);
                                return a.push(b, 'addClass', d)
                            },
                            removeClass: function (b, c, d) {
                                d = ra(d);
                                d.removeClass = hb(d.removeClass, c);
                                return a.push(b, 'removeClass', d)
                            },
                            setClass: function (b, c, d, f) {
                                f = ra(f);
                                f.addClass = hb(f.addClass, c);
                                f.removeClass = hb(f.removeClass, d);
                                return a.push(b, 'setClass', f)
                            },
                            animate: function (b, c, d, f, m) {
                                m = ra(m);
                                m.from = m.from ? S(m.from, c)  : c;
                                m.to = m.to ? S(m.to, d)  : d;
                                m.tempClasses = hb(m.tempClasses, f || 'ng-inline-animate');
                                return a.push(b, 'animate', m)
                            }
                        }
                    }
                ]
            }
        ],
        Cf = function () {
            this.$get = [
                '$$rAF',
                function (a) {
                    function b(b) {
                        d.push(b);
                        1 < d.length || a(function () {
                            for (var a = 0; a < d.length; a++) d[a]();
                            d = [
                            ]
                        })
                    }
                    var d = [
                    ];
                    return function () {
                        var a = !1;
                        b(function () {
                            a = !0
                        });
                        return function (d) {
                            a ? d()  : b(d)
                        }
                    }
                }
            ]
        },
        Bf = function () {
            this.$get = [
                '$q',
                '$sniffer',
                '$$animateAsyncRun',
                '$$isDocumentHidden',
                '$timeout',
                function (a, b, d, c, e) {
                    function f(a) {
                        this.setHost(a);
                        var b = d();
                        this._doneCallbacks = [
                        ];
                        this._tick = function (a) {
                            c() ? e(a, 0, !1)  : b(a)
                        };
                        this._state = 0
                    }
                    f.chain = function (a, b) {
                        function c() {
                            if (d === a.length) b(!0);
                            else a[d](function (a) {
                                !1 === a ? b(!1)  : (d++, c())
                            })
                        }
                        var d = 0;
                        c()
                    };
                    f.all = function (a, b) {
                        function c(f) {
                            e = e && f;
                            ++d === a.length && b(e)
                        }
                        var d = 0,
                            e = !0;
                        r(a, function (a) {
                            a.done(c)
                        })
                    };
                    f.prototype = {
                        setHost: function (a) {
                            this.host = a || {
                            }
                        },
                        done: function (a) {
                            2 === this._state ? a()  : this._doneCallbacks.push(a)
                        },
                        progress: E,
                        getPromise: function () {
                            if (!this.promise) {
                                var b = this;
                                this.promise = a(function (a, c) {
                                    b.done(function (b) {
                                        !1 === b ? c()  : a()
                                    })
                                })
                            }
                            return this.promise
                        },
                        then: function (a, b) {
                            return this.getPromise().then(a, b)
                        },
                        catch : function (a) {
                            return this.getPromise() ['catch'](a)
                        },
                        finally : function (a) {
                            return this.getPromise() ['finally'](a)
                        },
                        pause: function () {
                            this.host.pause && this.host.pause()
                        },
                        resume: function () {
                            this.host.resume && this.host.resume()
                        },
                        end: function () {
                            this.host.end && this.host.end();
                            this._resolve(!0)
                        },
                        cancel: function () {
                            this.host.cancel && this.host.cancel();
                            this._resolve(!1)
                        },
                        complete: function (a) {
                            var b = this;
                            0 === b._state && (b._state = 1, b._tick(function () {
                                b._resolve(a)
                            }))
                        },
                        _resolve: function (a) {
                            2 !== this._state && (r(this._doneCallbacks, function (b) {
                                b(a)
                            }), this._doneCallbacks.length = 0, this._state = 2)
                        }
                    };
                    return f
                }
            ]
        },
        yf = function () {
            this.$get = [
                '$$rAF',
                '$q',
                '$$AnimateRunner',
                function (a, b, d) {
                    return function (b, e) {
                        function f() {
                            a(function () {
                                g.addClass && (b.addClass(g.addClass), g.addClass = null);
                                g.removeClass && (b.removeClass(g.removeClass), g.removeClass = null);
                                g.to && (b.css(g.to), g.to = null);
                                k || h.complete();
                                k = !0
                            });
                            return h
                        }
                        var g = e || {
                        };
                        g.$$prepared || (g = Ia(g));
                        g.cleanupStyles && (g.from = g.to = null);
                        g.from && (b.css(g.from), g.from = null);
                        var k,
                            h = new d;
                        return {
                            start: f,
                            end: f
                        }
                    }
                }
            ]
        },
        $ = F('$compile'),
        tc = new function () {
        };
    Xc.$inject = [
        '$provide',
        '$$sanitizeUriProvider'
    ];
    Jb.prototype.isFirstChange = function () {
        return this.previousValue === tc
    };
    var pd = /^((?:x|data)[:\-_])/i,
        Eg = /[:\-_]+(.)/g,
        vd = F('$controller'),
        ud = /^(\S+)(\s+as\s+([\w$]+))?$/,
        Jf = function () {
            this.$get = [
                '$document',
                function (a) {
                    return function (b) {
                        b ? !b.nodeType && b instanceof x && (b = b[0])  : b = a[0].body;
                        return b.offsetWidth + 1
                    }
                }
            ]
        },
        wd = 'application/json',
        wc = {
            'Content-Type': wd + ';charset=utf-8'
        },
        Hg = /^\[|^\{(?!\{)/,
        Ig = {
            '[': /]$/,
            '{': /}$/
        },
        Gg = /^\)]\}',?\n/,
        Kb = F('$http'),
        Ma = ca.$interpolateMinErr = F('$interpolate');
    Ma.throwNoconcat = function (a) {
        throw Ma('noconcat', a)
    };
    Ma.interr = function (a, b) {
        return Ma('interr', a, b.toString())
    };
    var Lg = F('$interval'),
        Sf = function () {
            this.$get = function () {
                function a(a) {
                    var b = function (a) {
                        b.data = a;
                        b.called = !0
                    };
                    b.id = a;
                    return b
                }
                var b = ca.callbacks,
                    d = {
                    };
                return {
                    createCallback: function (c) {
                        c = '_' + (b.$$counter++).toString(36);
                        var e = 'angular.callbacks.' + c,
                            f = a(c);
                        d[e] = b[c] = f;
                        return e
                    },
                    wasCalled: function (a) {
                        return d[a].called
                    },
                    getResponse: function (a) {
                        return d[a].data
                    },
                    removeCallback: function (a) {
                        delete b[d[a].id];
                        delete d[a]
                    }
                }
            }
        },
        ph = /^([^?#]*)(\?([^#]*))?(#(.*))?$/,
        Mg = {
            http: 80,
            https: 443,
            ftp: 21
        },
        jb = F('$location'),
        Ng = /^\s*[\\/]{2,}/,
        qh = {
            $$absUrl: '',
            $$html5: !1,
            $$replace: !1,
            $$compose: function () {
                for (var a = this.$$path, b = this.$$hash, d = ye(this.$$search), b = b ? '#' + hc(b)  : '', a = a.split('/'), c = a.length; c--; ) a[c] = hc(a[c].replace(/%2F/g, '/'));
                this.$$url = a.join('/') + (d ? '?' + d : '') + b;
                this.$$absUrl = this.$$normalizeUrl(this.$$url);
                this.$$urlUpdatedByLocation = !0
            },
            absUrl: Lb('$$absUrl'),
            url: function (a) {
                if (z(a)) return this.$$url;
                var b = ph.exec(a);
                (b[1] || '' === a) && this.path(decodeURIComponent(b[1]));
                (b[2] || b[1] || '' === a) && this.search(b[3] || '');
                this.hash(b[5] || '');
                return this
            },
            protocol: Lb('$$protocol'),
            host: Lb('$$host'),
            port: Lb('$$port'),
            path: Dd('$$path', function (a) {
                a = null !== a ? a.toString()  : '';
                return '/' === a.charAt(0) ? a : '/' + a
            }),
            search: function (a, b) {
                switch (arguments.length) {
                    case 0:
                        return this.$$search;
                    case 1:
                        if (A(a) || W(a)) a = a.toString(),
                            this.$$search = gc(a);
                        else if (D(a)) a = Ia(a, {
                        }),
                            r(a, function (b, c) {
                                null == b && delete a[c]
                            }),
                            this.$$search = a;
                        else throw jb('isrcharg');
                        break;
                    default:
                        z(b) || null === b ? delete this.$$search[a] : this.$$search[a] = b
                }
                this.$$compose();
                return this
            },
            hash: Dd('$$hash', function (a) {
                return null !== a ? a.toString()  : ''
            }),
            replace: function () {
                this.$$replace = !0;
                return this
            }
        };
    r([Cd,
        zc,
        yc], function (a) {
        a.prototype = Object.create(qh);
        a.prototype.state = function (b) {
            if (!arguments.length) return this.$$state;
            if (a !== yc || !this.$$html5) throw jb('nostate');
            this.$$state = z(b) ? null : b;
            this.$$urlUpdatedByLocation = !0;
            return this
        }
    });
    var Ya = F('$parse'),
        Rg = {
        }.constructor.prototype.valueOf,
        Ub = T();
    r('+ - * / % === !== == != < > <= >= && || ! = |'.split(' '), function (a) {
        Ub[a] = !0
    });
    var rh = {
            n: '\n',
            f: '\f',
            r: '\r',
            t: '\t',
            v: '\v',
            '\'': '\'',
            '"': '"'
        },
        Nb = function (a) {
            this.options = a
        };
    Nb.prototype = {
        constructor: Nb,
        lex: function (a) {
            this.text = a;
            this.index = 0;
            for (this.tokens = [
            ]; this.index < this.text.length; ) if (a = this.text.charAt(this.index), '"' === a || '\'' === a) this.readString(a);
            else if (this.isNumber(a) || '.' === a && this.isNumber(this.peek())) this.readNumber();
            else if (this.isIdentifierStart(this.peekMultichar())) this.readIdent();
            else if (this.is(a, '(){}[].,;:?')) this.tokens.push({
                index: this.index,
                text: a
            }),
                this.index++;
            else if (this.isWhitespace(a)) this.index++;
            else {
                var b = a + this.peek(),
                    d = b + this.peek(2),
                    c = Ub[b],
                    e = Ub[d];
                Ub[a] || c || e ? (a = e ? d : c ? b : a, this.tokens.push({
                    index: this.index,
                    text: a,
                    operator: !0
                }), this.index += a.length)  : this.throwError('Unexpected next character ', this.index, this.index + 1)
            }
            return this.tokens
        },
        is: function (a, b) {
            return - 1 !== b.indexOf(a)
        },
        peek: function (a) {
            a = a || 1;
            return this.index + a < this.text.length ? this.text.charAt(this.index + a)  : !1
        },
        isNumber: function (a) {
            return '0' <= a && '9' >= a && 'string' === typeof a
        },
        isWhitespace: function (a) {
            return ' ' === a || '\r' === a || '\t' === a || '\n' === a || '\v' === a || ' ' === a
        },
        isIdentifierStart: function (a) {
            return this.options.isIdentifierStart ? this.options.isIdentifierStart(a, this.codePointAt(a))  : this.isValidIdentifierStart(a)
        },
        isValidIdentifierStart: function (a) {
            return 'a' <= a && 'z' >= a || 'A' <= a && 'Z' >= a || '_' === a || '$' === a
        },
        isIdentifierContinue: function (a) {
            return this.options.isIdentifierContinue ? this.options.isIdentifierContinue(a, this.codePointAt(a))  : this.isValidIdentifierContinue(a)
        },
        isValidIdentifierContinue: function (a, b) {
            return this.isValidIdentifierStart(a, b) || this.isNumber(a)
        },
        codePointAt: function (a) {
            return 1 === a.length ? a.charCodeAt(0)  : (a.charCodeAt(0) << 10) + a.charCodeAt(1) - 56613888
        },
        peekMultichar: function () {
            var a = this.text.charAt(this.index),
                b = this.peek();
            if (!b) return a;
            var d = a.charCodeAt(0),
                c = b.charCodeAt(0);
            return 55296 <= d && 56319 >= d && 56320 <= c && 57343 >= c ? a + b : a
        },
        isExpOperator: function (a) {
            return '-' === a || '+' === a || this.isNumber(a)
        },
        throwError: function (a, b, d) {
            d = d || this.index;
            b = w(b) ? 's ' + b + '-' + this.index + ' [' + this.text.substring(b, d) + ']' : ' ' + d;
            throw Ya('lexerr', a, b, this.text)
        },
        readNumber: function () {
            for (var a = '', b = this.index; this.index < this.text.length; ) {
                var d = K(this.text.charAt(this.index));
                if ('.' === d || this.isNumber(d)) a += d;
                else {
                    var c = this.peek();
                    if ('e' === d && this.isExpOperator(c)) a += d;
                    else if (this.isExpOperator(d) && c && this.isNumber(c) && 'e' === a.charAt(a.length - 1)) a += d;
                    else if (!this.isExpOperator(d) || c && this.isNumber(c) || 'e' !== a.charAt(a.length - 1)) break;
                    else this.throwError('Invalid exponent')
                }
                this.index++
            }
            this.tokens.push({
                index: b,
                text: a,
                constant: !0,
                value: Number(a)
            })
        },
        readIdent: function () {
            var a = this.index;
            for (this.index += this.peekMultichar().length; this.index < this.text.length; ) {
                var b = this.peekMultichar();
                if (!this.isIdentifierContinue(b)) break;
                this.index += b.length
            }
            this.tokens.push({
                index: a,
                text: this.text.slice(a, this.index),
                identifier: !0
            })
        },
        readString: function (a) {
            var b = this.index;
            this.index++;
            for (var d = '', c = a, e = !1; this.index < this.text.length; ) {
                var f = this.text.charAt(this.index),
                    c = c + f;
                if (e) 'u' === f ? (e = this.text.substring(this.index + 1, this.index + 5), e.match(/[\da-f]{4}/i) || this.throwError('Invalid unicode escape [\\u' + e + ']'), this.index += 4, d += String.fromCharCode(parseInt(e, 16)))  : d += rh[f] || f,
                    e = !1;
                else if ('\\' === f) e = !0;
                else {
                    if (f === a) {
                        this.index++;
                        this.tokens.push({
                            index: b,
                            text: c,
                            constant: !0,
                            value: d
                        });
                        return
                    }
                    d += f
                }
                this.index++
            }
            this.throwError('Unterminated quote', b)
        }
    };
    var q = function (a, b) {
        this.lexer = a;
        this.options = b
    };
    q.Program = 'Program';
    q.ExpressionStatement = 'ExpressionStatement';
    q.AssignmentExpression = 'AssignmentExpression';
    q.ConditionalExpression = 'ConditionalExpression';
    q.LogicalExpression = 'LogicalExpression';
    q.BinaryExpression = 'BinaryExpression';
    q.UnaryExpression = 'UnaryExpression';
    q.CallExpression = 'CallExpression';
    q.MemberExpression = 'MemberExpression';
    q.Identifier = 'Identifier';
    q.Literal = 'Literal';
    q.ArrayExpression = 'ArrayExpression';
    q.Property = 'Property';
    q.ObjectExpression = 'ObjectExpression';
    q.ThisExpression = 'ThisExpression';
    q.LocalsExpression = 'LocalsExpression';
    q.NGValueParameter = 'NGValueParameter';
    q.prototype = {
        ast: function (a) {
            this.text = a;
            this.tokens = this.lexer.lex(a);
            a = this.program();
            0 !== this.tokens.length && this.throwError('is an unexpected token', this.tokens[0]);
            return a
        },
        program: function () {
            for (var a = [
            ]; ; ) if (0 < this.tokens.length && !this.peek('}', ')', ';', ']') && a.push(this.expressionStatement()), !this.expect(';')) return {
                type: q.Program,
                body: a
            }
        },
        expressionStatement: function () {
            return {
                type: q.ExpressionStatement,
                expression: this.filterChain()
            }
        },
        filterChain: function () {
            for (var a = this.expression(); this.expect('|'); ) a = this.filter(a);
            return a
        },
        expression: function () {
            return this.assignment()
        },
        assignment: function () {
            var a = this.ternary();
            if (this.expect('=')) {
                if (!Hd(a)) throw Ya('lval');
                a = {
                    type: q.AssignmentExpression,
                    left: a,
                    right: this.assignment(),
                    operator: '='
                }
            }
            return a
        },
        ternary: function () {
            var a = this.logicalOR(),
                b,
                d;
            return this.expect('?') && (b = this.expression(), this.consume(':')) ? (d = this.expression(), {
                type: q.ConditionalExpression,
                test: a,
                alternate: b,
                consequent: d
            })  : a
        },
        logicalOR: function () {
            for (var a = this.logicalAND(); this.expect('||'); ) a = {
                type: q.LogicalExpression,
                operator: '||',
                left: a,
                right: this.logicalAND()
            };
            return a
        },
        logicalAND: function () {
            for (var a = this.equality(); this.expect('&&'); ) a = {
                type: q.LogicalExpression,
                operator: '&&',
                left: a,
                right: this.equality()
            };
            return a
        },
        equality: function () {
            for (var a = this.relational(), b; b = this.expect('==', '!=', '===', '!=='); ) a = {
                type: q.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.relational()
            };
            return a
        },
        relational: function () {
            for (var a = this.additive(), b; b = this.expect('<', '>', '<=', '>='); ) a = {
                type: q.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.additive()
            };
            return a
        },
        additive: function () {
            for (var a = this.multiplicative(), b; b = this.expect('+', '-'); ) a = {
                type: q.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.multiplicative()
            };
            return a
        },
        multiplicative: function () {
            for (var a = this.unary(), b; b = this.expect('*', '/', '%'); ) a = {
                type: q.BinaryExpression,
                operator: b.text,
                left: a,
                right: this.unary()
            };
            return a
        },
        unary: function () {
            var a;
            return (a = this.expect('+', '-', '!')) ? {
                    type: q.UnaryExpression,
                    operator: a.text,
                    prefix: !0,
                    argument: this.unary()
                }
                : this.primary()
        },
        primary: function () {
            var a;
            this.expect('(') ? (a = this.filterChain(), this.consume(')'))  : this.expect('[') ? a = this.arrayDeclaration()  : this.expect('{') ? a = this.object()  : this.selfReferential.hasOwnProperty(this.peek().text) ? a = Ia(this.selfReferential[this.consume().text])  : this.options.literals.hasOwnProperty(this.peek().text) ? a = {
                    type: q.Literal,
                    value: this.options.literals[this.consume().text]
                }
                : this.peek().identifier ? a = this.identifier()  : this.peek().constant ? a = this.constant()  : this.throwError('not a primary expression', this.peek());
            for (var b; b = this.expect('(', '[', '.'); ) '(' === b.text ? (a = {
                type: q.CallExpression,
                callee: a,
                arguments: this.parseArguments()
            }, this.consume(')'))  : '[' === b.text ? (a = {
                type: q.MemberExpression,
                object: a,
                property: this.expression(),
                computed: !0
            }, this.consume(']'))  : '.' === b.text ? a = {
                    type: q.MemberExpression,
                    object: a,
                    property: this.identifier(),
                    computed: !1
                }
                : this.throwError('IMPOSSIBLE');
            return a
        },
        filter: function (a) {
            a = [
                a
            ];
            for (var b = {
                type: q.CallExpression,
                callee: this.identifier(),
                arguments: a,
                filter: !0
            }; this.expect(':'); ) a.push(this.expression());
            return b
        },
        parseArguments: function () {
            var a = [
            ];
            if (')' !== this.peekToken().text) do a.push(this.filterChain());
            while (this.expect(','));
            return a
        },
        identifier: function () {
            var a = this.consume();
            a.identifier || this.throwError('is not a valid identifier', a);
            return {
                type: q.Identifier,
                name: a.text
            }
        },
        constant: function () {
            return {
                type: q.Literal,
                value: this.consume().value
            }
        },
        arrayDeclaration: function () {
            var a = [
            ];
            if (']' !== this.peekToken().text) do {
                if (this.peek(']')) break;
                a.push(this.expression())
            } while (this.expect(','));
            this.consume(']');
            return {
                type: q.ArrayExpression,
                elements: a
            }
        },
        object: function () {
            var a = [
                ],
                b;
            if ('}' !== this.peekToken().text) do {
                if (this.peek('}')) break;
                b = {
                    type: q.Property,
                    kind: 'init'
                };
                this.peek().constant ? (b.key = this.constant(), b.computed = !1, this.consume(':'), b.value = this.expression())  : this.peek().identifier ? (b.key = this.identifier(), b.computed = !1, this.peek(':') ? (this.consume(':'), b.value = this.expression())  : b.value = b.key)  : this.peek('[') ? (this.consume('['), b.key = this.expression(), this.consume(']'), b.computed = !0, this.consume(':'), b.value = this.expression())  : this.throwError('invalid key', this.peek());
                a.push(b)
            } while (this.expect(','));
            this.consume('}');
            return {
                type: q.ObjectExpression,
                properties: a
            }
        },
        throwError: function (a, b) {
            throw Ya('syntax', b.text, a, b.index + 1, this.text, this.text.substring(b.index))
        },
        consume: function (a) {
            if (0 === this.tokens.length) throw Ya('ueoe', this.text);
            var b = this.expect(a);
            b || this.throwError('is unexpected, expecting [' + a + ']', this.peek());
            return b
        },
        peekToken: function () {
            if (0 === this.tokens.length) throw Ya('ueoe', this.text);
            return this.tokens[0]
        },
        peek: function (a, b, d, c) {
            return this.peekAhead(0, a, b, d, c)
        },
        peekAhead: function (a, b, d, c, e) {
            if (this.tokens.length > a) {
                a = this.tokens[a];
                var f = a.text;
                if (f === b || f === d || f === c || f === e || !(b || d || c || e)) return a
            }
            return !1
        },
        expect: function (a, b, d, c) {
            return (a = this.peek(a, b, d, c)) ? (this.tokens.shift(), a)  : !1
        },
        selfReferential: {
            this: {
                type: q.ThisExpression
            },
            $locals: {
                type: q.LocalsExpression
            }
        }
    };
    var Fd = 2;
    Jd.prototype = {
        compile: function (a) {
            var b = this;
            this.state = {
                nextId: 0,
                filters: {
                },
                fn: {
                    vars: [
                    ],
                    body: [
                    ],
                    own: {
                    }
                },
                assign: {
                    vars: [
                    ],
                    body: [
                    ],
                    own: {
                    }
                },
                inputs: [
                ]
            };
            Z(a, b.$filter);
            var d = '',
                c;
            this.stage = 'assign';
            if (c = Id(a)) this.state.computing = 'assign',
                d = this.nextId(),
                this.recurse(c, d),
                this.return_(d),
                d = 'fn.assign=' + this.generateFunction('assign', 's,v,l');
            c = Gd(a.body);
            b.stage = 'inputs';
            r(c, function (a, c) {
                var d = 'fn' + c;
                b.state[d] = {
                    vars: [
                    ],
                    body: [
                    ],
                    own: {
                    }
                };
                b.state.computing = d;
                var k = b.nextId();
                b.recurse(a, k);
                b.return_(k);
                b.state.inputs.push({
                    name: d,
                    isPure: a.isPure
                });
                a.watchId = c
            });
            this.state.computing = 'fn';
            this.stage = 'main';
            this.recurse(a);
            a = '"' + this.USE + ' ' + this.STRICT + '";\n' + this.filterPrefix() + 'var fn=' + this.generateFunction('fn', 's,l,a,i') + d + this.watchFns() + 'return fn;';
            a = new Function('$filter', 'getStringValue', 'ifDefined', 'plus', a) (this.$filter, Og, Pg, Ed);
            this.state = this.stage = void 0;
            return a
        },
        USE: 'use',
        STRICT: 'strict',
        watchFns: function () {
            var a = [
                ],
                b = this.state.inputs,
                d = this;
            r(b, function (b) {
                a.push('var ' + b.name + '=' + d.generateFunction(b.name, 's'));
                b.isPure && a.push(b.name, '.isPure=' + JSON.stringify(b.isPure) + ';')
            });
            b.length && a.push('fn.inputs=[' + b.map(function (a) {
                return a.name
            }).join(',') + '];');
            return a.join('')
        },
        generateFunction: function (a, b) {
            return 'function(' + b + '){' + this.varsPrefix(a) + this.body(a) + '};'
        },
        filterPrefix: function () {
            var a = [
                ],
                b = this;
            r(this.state.filters, function (d, c) {
                a.push(d + '=$filter(' + b.escape(c) + ')')
            });
            return a.length ? 'var ' + a.join(',') + ';' : ''
        },
        varsPrefix: function (a) {
            return this.state[a].vars.length ? 'var ' + this.state[a].vars.join(',') + ';' : ''
        },
        body: function (a) {
            return this.state[a].body.join('')
        },
        recurse: function (a, b, d, c, e, f) {
            var g,
                k,
                h = this,
                l,
                m,
                p;
            c = c || E;
            if (!f && w(a.watchId)) b = b || this.nextId(),
                this.if_('i', this.lazyAssign(b, this.computedMember('i', a.watchId)), this.lazyRecurse(a, b, d, c, e, !0));
            else switch (a.type) {
                case q.Program:
                    r(a.body, function (b, c) {
                        h.recurse(b.expression, void 0, void 0, function (a) {
                            k = a
                        });
                        c !== a.body.length - 1 ? h.current().body.push(k, ';')  : h.return_(k)
                    });
                    break;
                case q.Literal:
                    m = this.escape(a.value);
                    this.assign(b, m);
                    c(b || m);
                    break;
                case q.UnaryExpression:
                    this.recurse(a.argument, void 0, void 0, function (a) {
                        k = a
                    });
                    m = a.operator + '(' + this.ifDefined(k, 0) + ')';
                    this.assign(b, m);
                    c(m);
                    break;
                case q.BinaryExpression:
                    this.recurse(a.left, void 0, void 0, function (a) {
                        g = a
                    });
                    this.recurse(a.right, void 0, void 0, function (a) {
                        k = a
                    });
                    m = '+' === a.operator ? this.plus(g, k)  : '-' === a.operator ? this.ifDefined(g, 0) + a.operator + this.ifDefined(k, 0)  : '(' + g + ')' + a.operator + '(' + k + ')';
                    this.assign(b, m);
                    c(m);
                    break;
                case q.LogicalExpression:
                    b = b || this.nextId();
                    h.recurse(a.left, b);
                    h.if_('&&' === a.operator ? b : h.not(b), h.lazyRecurse(a.right, b));
                    c(b);
                    break;
                case q.ConditionalExpression:
                    b = b || this.nextId();
                    h.recurse(a.test, b);
                    h.if_(b, h.lazyRecurse(a.alternate, b), h.lazyRecurse(a.consequent, b));
                    c(b);
                    break;
                case q.Identifier:
                    b = b || this.nextId();
                    d && (d.context = 'inputs' === h.stage ? 's' : this.assign(this.nextId(), this.getHasOwnProperty('l', a.name) + '?l:s'), d.computed = !1, d.name = a.name);
                    h.if_('inputs' === h.stage || h.not(h.getHasOwnProperty('l', a.name)), function () {
                        h.if_('inputs' === h.stage || 's', function () {
                            e && 1 !== e && h.if_(h.isNull(h.nonComputedMember('s', a.name)), h.lazyAssign(h.nonComputedMember('s', a.name), '{}'));
                            h.assign(b, h.nonComputedMember('s', a.name))
                        })
                    }, b && h.lazyAssign(b, h.nonComputedMember('l', a.name)));
                    c(b);
                    break;
                case q.MemberExpression:
                    g = d && (d.context = this.nextId()) || this.nextId();
                    b = b || this.nextId();
                    h.recurse(a.object, g, void 0, function () {
                        h.if_(h.notNull(g), function () {
                            a.computed ? (k = h.nextId(), h.recurse(a.property, k), h.getStringValue(k), e && 1 !== e && h.if_(h.not(h.computedMember(g, k)), h.lazyAssign(h.computedMember(g, k), '{}')), m = h.computedMember(g, k), h.assign(b, m), d && (d.computed = !0, d.name = k))  : (e && 1 !== e && h.if_(h.isNull(h.nonComputedMember(g, a.property.name)), h.lazyAssign(h.nonComputedMember(g, a.property.name), '{}')), m = h.nonComputedMember(g, a.property.name), h.assign(b, m), d && (d.computed = !1, d.name = a.property.name))
                        }, function () {
                            h.assign(b, 'undefined')
                        });
                        c(b)
                    }, !!e);
                    break;
                case q.CallExpression:
                    b = b || this.nextId();
                    a.filter ? (k = h.filter(a.callee.name), l = [
                    ], r(a.arguments, function (a) {
                        var b = h.nextId();
                        h.recurse(a, b);
                        l.push(b)
                    }), m = k + '(' + l.join(',') + ')', h.assign(b, m), c(b))  : (k = h.nextId(), g = {
                    }, l = [
                    ], h.recurse(a.callee, k, g, function () {
                        h.if_(h.notNull(k), function () {
                            r(a.arguments, function (b) {
                                h.recurse(b, a.constant ? void 0 : h.nextId(), void 0, function (a) {
                                    l.push(a)
                                })
                            });
                            m = g.name ? h.member(g.context, g.name, g.computed) + '(' + l.join(',') + ')' : k + '(' + l.join(',') + ')';
                            h.assign(b, m)
                        }, function () {
                            h.assign(b, 'undefined')
                        });
                        c(b)
                    }));
                    break;
                case q.AssignmentExpression:
                    k = this.nextId();
                    g = {
                    };
                    this.recurse(a.left, void 0, g, function () {
                        h.if_(h.notNull(g.context), function () {
                            h.recurse(a.right, k);
                            m = h.member(g.context, g.name, g.computed) + a.operator + k;
                            h.assign(b, m);
                            c(b || m)
                        })
                    }, 1);
                    break;
                case q.ArrayExpression:
                    l = [
                    ];
                    r(a.elements, function (b) {
                        h.recurse(b, a.constant ? void 0 : h.nextId(), void 0, function (a) {
                            l.push(a)
                        })
                    });
                    m = '[' + l.join(',') + ']';
                    this.assign(b, m);
                    c(b || m);
                    break;
                case q.ObjectExpression:
                    l = [
                    ];
                    p = !1;
                    r(a.properties, function (a) {
                        a.computed && (p = !0)
                    });
                    p ? (b = b || this.nextId(), this.assign(b, '{}'), r(a.properties, function (a) {
                        a.computed ? (g = h.nextId(), h.recurse(a.key, g))  : g = a.key.type === q.Identifier ? a.key.name : '' + a.key.value;
                        k = h.nextId();
                        h.recurse(a.value, k);
                        h.assign(h.member(b, g, a.computed), k)
                    }))  : (r(a.properties, function (b) {
                        h.recurse(b.value, a.constant ? void 0 : h.nextId(), void 0, function (a) {
                            l.push(h.escape(b.key.type === q.Identifier ? b.key.name : '' + b.key.value) + ':' + a)
                        })
                    }), m = '{' + l.join(',') + '}', this.assign(b, m));
                    c(b || m);
                    break;
                case q.ThisExpression:
                    this.assign(b, 's');
                    c(b || 's');
                    break;
                case q.LocalsExpression:
                    this.assign(b, 'l');
                    c(b || 'l');
                    break;
                case q.NGValueParameter:
                    this.assign(b, 'v'),
                        c(b || 'v')
            }
        },
        getHasOwnProperty: function (a, b) {
            var d = a + '.' + b,
                c = this.current().own;
            c.hasOwnProperty(d) || (c[d] = this.nextId(!1, a + '&&(' + this.escape(b) + ' in ' + a + ')'));
            return c[d]
        },
        assign: function (a, b) {
            if (a) return this.current().body.push(a, '=', b, ';'),
                a
        },
        filter: function (a) {
            this.state.filters.hasOwnProperty(a) || (this.state.filters[a] = this.nextId(!0));
            return this.state.filters[a]
        },
        ifDefined: function (a, b) {
            return 'ifDefined(' + a + ',' + this.escape(b) + ')'
        },
        plus: function (a, b) {
            return 'plus(' + a + ',' + b + ')'
        },
        return_: function (a) {
            this.current().body.push('return ', a, ';')
        },
        if_: function (a, b, d) {
            if (!0 === a) b();
            else {
                var c = this.current().body;
                c.push('if(', a, '){');
                b();
                c.push('}');
                d && (c.push('else{'), d(), c.push('}'))
            }
        },
        not: function (a) {
            return '!(' + a + ')'
        },
        isNull: function (a) {
            return a + '==null'
        },
        notNull: function (a) {
            return a + '!=null'
        },
        nonComputedMember: function (a, b) {
            var d = /[^$_a-zA-Z0-9]/g;
            return /^[$_a-zA-Z][$_a-zA-Z0-9]*$/.test(b) ? a + '.' + b : a + '["' + b.replace(d, this.stringEscapeFn) + '"]'
        },
        computedMember: function (a, b) {
            return a + '[' + b + ']'
        },
        member: function (a, b, d) {
            return d ? this.computedMember(a, b)  : this.nonComputedMember(a, b)
        },
        getStringValue: function (a) {
            this.assign(a, 'getStringValue(' + a + ')')
        },
        lazyRecurse: function (a, b, d, c, e, f) {
            var g = this;
            return function () {
                g.recurse(a, b, d, c, e, f)
            }
        },
        lazyAssign: function (a, b) {
            var d = this;
            return function () {
                d.assign(a, b)
            }
        },
        stringEscapeRegex: /[^ a-zA-Z0-9]/g,
        stringEscapeFn: function (a) {
            return '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice( - 4)
        },
        escape: function (a) {
            if (A(a)) return '\'' + a.replace(this.stringEscapeRegex, this.stringEscapeFn) + '\'';
            if (W(a)) return a.toString();
            if (!0 === a) return 'true';
            if (!1 === a) return 'false';
            if (null === a) return 'null';
            if ('undefined' === typeof a) return 'undefined';
            throw Ya('esc')
        },
        nextId: function (a, b) {
            var d = 'v' + this.state.nextId++;
            a || this.current().vars.push(d + (b ? '=' + b : ''));
            return d
        },
        current: function () {
            return this.state[this.state.computing]
        }
    };
    Kd.prototype = {
        compile: function (a) {
            var b = this;
            Z(a, b.$filter);
            var d,
                c;
            if (d = Id(a)) c = this.recurse(d);
            d = Gd(a.body);
            var e;
            d && (e = [
            ], r(d, function (a, c) {
                var d = b.recurse(a);
                d.isPure = a.isPure;
                a.input = d;
                e.push(d);
                a.watchId = c
            }));
            var f = [
            ];
            r(a.body, function (a) {
                f.push(b.recurse(a.expression))
            });
            a = 0 === a.body.length ? E : 1 === a.body.length ? f[0] : function (a, b) {
                var c;
                r(f, function (d) {
                    c = d(a, b)
                });
                return c
            };
            c && (a.assign = function (a, b, d) {
                return c(a, d, b)
            });
            e && (a.inputs = e);
            return a
        },
        recurse: function (a, b, d) {
            var c,
                e,
                f = this,
                g;
            if (a.input) return this.inputs(a.input, a.watchId);
            switch (a.type) {
                case q.Literal:
                    return this.value(a.value, b);
                case q.UnaryExpression:
                    return e = this.recurse(a.argument),
                        this['unary' + a.operator](e, b);
                case q.BinaryExpression:
                    return c = this.recurse(a.left),
                        e = this.recurse(a.right),
                        this['binary' + a.operator](c, e, b);
                case q.LogicalExpression:
                    return c = this.recurse(a.left),
                        e = this.recurse(a.right),
                        this['binary' + a.operator](c, e, b);
                case q.ConditionalExpression:
                    return this['ternary?:'](this.recurse(a.test), this.recurse(a.alternate), this.recurse(a.consequent), b);
                case q.Identifier:
                    return f.identifier(a.name, b, d);
                case q.MemberExpression:
                    return c = this.recurse(a.object, !1, !!d),
                    a.computed || (e = a.property.name),
                    a.computed && (e = this.recurse(a.property)),
                        a.computed ? this.computedMember(c, e, b, d)  : this.nonComputedMember(c, e, b, d);
                case q.CallExpression:
                    return g = [
                    ],
                        r(a.arguments, function (a) {
                            g.push(f.recurse(a))
                        }),
                    a.filter && (e = this.$filter(a.callee.name)),
                    a.filter || (e = this.recurse(a.callee, !0)),
                        a.filter ? function (a, c, d, f) {
                                for (var p = [
                                ], n = 0; n < g.length; ++n) p.push(g[n](a, c, d, f));
                                a = e.apply(void 0, p, f);
                                return b ? {
                                        context: void 0,
                                        name: void 0,
                                        value: a
                                    }
                                    : a
                            }
                            : function (a, c, d, f) {
                                var p = e(a, c, d, f),
                                    n;
                                if (null != p.value) {
                                    n = [
                                    ];
                                    for (var s = 0; s < g.length; ++s) n.push(g[s](a, c, d, f));
                                    n = p.value.apply(p.context, n)
                                }
                                return b ? {
                                        value: n
                                    }
                                    : n
                            };
                case q.AssignmentExpression:
                    return c = this.recurse(a.left, !0, 1),
                        e = this.recurse(a.right),
                        function (a, d, f, g) {
                            var p = c(a, d, f, g);
                            a = e(a, d, f, g);
                            p.context[p.name] = a;
                            return b ? {
                                    value: a
                                }
                                : a
                        };
                case q.ArrayExpression:
                    return g = [
                    ],
                        r(a.elements, function (a) {
                            g.push(f.recurse(a))
                        }),
                        function (a, c, d, e) {
                            for (var f = [
                            ], n = 0; n < g.length; ++n) f.push(g[n](a, c, d, e));
                            return b ? {
                                    value: f
                                }
                                : f
                        };
                case q.ObjectExpression:
                    return g = [
                    ],
                        r(a.properties, function (a) {
                            a.computed ? g.push({
                                key: f.recurse(a.key),
                                computed: !0,
                                value: f.recurse(a.value)
                            })  : g.push({
                                key: a.key.type === q.Identifier ? a.key.name : '' + a.key.value,
                                computed: !1,
                                value: f.recurse(a.value)
                            })
                        }),
                        function (a, c, d, e) {
                            for (var f = {
                            }, n = 0; n < g.length; ++n) g[n].computed ? f[g[n].key(a, c, d, e)] = g[n].value(a, c, d, e)  : f[g[n].key] = g[n].value(a, c, d, e);
                            return b ? {
                                    value: f
                                }
                                : f
                        };
                case q.ThisExpression:
                    return function (a) {
                        return b ? {
                                value: a
                            }
                            : a
                    };
                case q.LocalsExpression:
                    return function (a, c) {
                        return b ? {
                                value: c
                            }
                            : c
                    };
                case q.NGValueParameter:
                    return function (a, c, d) {
                        return b ? {
                                value: d
                            }
                            : d
                    }
            }
        },
        'unary+': function (a, b) {
            return function (d, c, e, f) {
                d = a(d, c, e, f);
                d = w(d) ? + d : 0;
                return b ? {
                        value: d
                    }
                    : d
            }
        },
        'unary-': function (a, b) {
            return function (d, c, e, f) {
                d = a(d, c, e, f);
                d = w(d) ? - d : - 0;
                return b ? {
                        value: d
                    }
                    : d
            }
        },
        'unary!': function (a, b) {
            return function (d, c, e, f) {
                d = !a(d, c, e, f);
                return b ? {
                        value: d
                    }
                    : d
            }
        },
        'binary+': function (a, b, d) {
            return function (c, e, f, g) {
                var k = a(c, e, f, g);
                c = b(c, e, f, g);
                k = Ed(k, c);
                return d ? {
                        value: k
                    }
                    : k
            }
        },
        'binary-': function (a, b, d) {
            return function (c, e, f, g) {
                var k = a(c, e, f, g);
                c = b(c, e, f, g);
                k = (w(k) ? k : 0) - (w(c) ? c : 0);
                return d ? {
                        value: k
                    }
                    : k
            }
        },
        'binary*': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) * b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary/': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) / b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary%': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) % b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary===': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) === b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary!==': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) !== b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary==': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) == b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary!=': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) != b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary<': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) < b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary>': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) > b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary<=': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) <= b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary>=': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) >= b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary&&': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) && b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'binary||': function (a, b, d) {
            return function (c, e, f, g) {
                c = a(c, e, f, g) || b(c, e, f, g);
                return d ? {
                        value: c
                    }
                    : c
            }
        },
        'ternary?:': function (a, b, d, c) {
            return function (e, f, g, k) {
                e = a(e, f, g, k) ? b(e, f, g, k)  : d(e, f, g, k);
                return c ? {
                        value: e
                    }
                    : e
            }
        },
        value: function (a, b) {
            return function () {
                return b ? {
                        context: void 0,
                        name: void 0,
                        value: a
                    }
                    : a
            }
        },
        identifier: function (a, b, d) {
            return function (c, e, f, g) {
                c = e && a in e ? e : c;
                d && 1 !== d && c && null == c[a] && (c[a] = {
                });
                e = c ? c[a] : void 0;
                return b ? {
                        context: c,
                        name: a,
                        value: e
                    }
                    : e
            }
        },
        computedMember: function (a, b, d, c) {
            return function (e, f, g, k) {
                var h = a(e, f, g, k),
                    l,
                    m;
                null != h && (l = b(e, f, g, k), l += '', c && 1 !== c && h && !h[l] && (h[l] = {
                }), m = h[l]);
                return d ? {
                        context: h,
                        name: l,
                        value: m
                    }
                    : m
            }
        },
        nonComputedMember: function (a, b, d, c) {
            return function (e, f, g, k) {
                e = a(e, f, g, k);
                c && 1 !== c && e && null == e[b] && (e[b] = {
                });
                f = null != e ? e[b] : void 0;
                return d ? {
                        context: e,
                        name: b,
                        value: f
                    }
                    : f
            }
        },
        inputs: function (a, b) {
            return function (d, c, e, f) {
                return f ? f[b] : a(d, c, e)
            }
        }
    };
    Mb.prototype = {
        constructor: Mb,
        parse: function (a) {
            a = this.getAst(a);
            var b = this.astCompiler.compile(a.ast),
                d = a.ast;
            b.literal = 0 === d.body.length || 1 === d.body.length && (d.body[0].expression.type === q.Literal || d.body[0].expression.type === q.ArrayExpression || d.body[0].expression.type === q.ObjectExpression);
            b.constant = a.ast.constant;
            b.oneTime = a.oneTime;
            return b
        },
        getAst: function (a) {
            var b = !1;
            a = a.trim();
            ':' === a.charAt(0) && ':' === a.charAt(1) && (b = !0, a = a.substring(2));
            return {
                ast: this.ast.ast(a),
                oneTime: b
            }
        }
    };
    var Ea = F('$sce'),
        V = {
            HTML: 'html',
            CSS: 'css',
            MEDIA_URL: 'mediaUrl',
            URL: 'url',
            RESOURCE_URL: 'resourceUrl',
            JS: 'js'
        },
        Cc = /_([a-z])/g,
        Ug = F('$templateRequest'),
        Vg = F('$timeout'),
        aa = C.document.createElement('a'),
        Od = ga(C.location.href),
        Na;
    aa.href = 'http://[::1]';
    var Wg = '[::1]' === aa.hostname;
    Pd.$inject = [
        '$document'
    ];
    dd.$inject = [
        '$provide'
    ];
    var Wd = 22,
        Vd = '.',
        Ec = '0';
    Qd.$inject = [
        '$locale'
    ];
    Sd.$inject = [
        '$locale'
    ];
    var gh = {
            yyyy: ea('FullYear', 4, 0, !1, !0),
            yy: ea('FullYear', 2, 0, !0, !0),
            y: ea('FullYear', 1, 0, !1, !0),
            MMMM: kb('Month'),
            MMM: kb('Month', !0),
            MM: ea('Month', 2, 1),
            M: ea('Month', 1, 1),
            LLLL: kb('Month', !1, !0),
            dd: ea('Date', 2),
            d: ea('Date', 1),
            HH: ea('Hours', 2),
            H: ea('Hours', 1),
            hh: ea('Hours', 2, - 12),
            h: ea('Hours', 1, - 12),
            mm: ea('Minutes', 2),
            m: ea('Minutes', 1),
            ss: ea('Seconds', 2),
            s: ea('Seconds', 1),
            sss: ea('Milliseconds', 3),
            EEEE: kb('Day'),
            EEE: kb('Day', !0),
            a: function (a, b) {
                return 12 > a.getHours() ? b.AMPMS[0] : b.AMPMS[1]
            },
            Z: function (a, b, d) {
                a = - 1 * d;
                return a = (0 <= a ? '+' : '') + (Ob(Math[0 < a ? 'floor' : 'ceil'](a / 60), 2) + Ob(Math.abs(a % 60), 2))
            },
            ww: Yd(2),
            w: Yd(1),
            G: Fc,
            GG: Fc,
            GGG: Fc,
            GGGG: function (a, b) {
                return 0 >= a.getFullYear() ? b.ERANAMES[0] : b.ERANAMES[1]
            }
        },
        fh = /((?:[^yMLdHhmsaZEwG']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|m+|s+|a|Z|G+|w+))([\s\S]*)/,
        eh = /^-?\d+$/;
    Rd.$inject = [
        '$locale'
    ];
    var $g = ia(K),
        ah = ia(ub);
    Td.$inject = [
        '$parse'
    ];
    var Me = ia({
            restrict: 'E',
            compile: function (a, b) {
                if (!b.href && !b.xlinkHref) return function (a, b) {
                    if ('a' === b[0].nodeName.toLowerCase()) {
                        var e = '[object SVGAnimatedString]' === la.call(b.prop('href')) ? 'xlink:href' : 'href';
                        b.on('click', function (a) {
                            b.attr(e) || a.preventDefault()
                        })
                    }
                }
            }
        }),
        vb = {
        };
    r(Gb, function (a, b) {
        function d(a, d, e) {
            a.$watch(e[c], function (a) {
                e.$set(b, !!a)
            })
        }
        if ('multiple' !== a) {
            var c = wa('ng-' + b),
                e = d;
            'checked' === a && (e = function (a, b, e) {
                e.ngModel !== e[c] && d(a, b, e)
            });
            vb[c] = function () {
                return {
                    restrict: 'A',
                    priority: 100,
                    link: e
                }
            }
        }
    });
    r(td, function (a, b) {
        vb[b] = function () {
            return {
                priority: 100,
                link: function (a, c, e) {
                    if ('ngPattern' !== b || '/' !== e.ngPattern.charAt(0) || !(c = e.ngPattern.match(ie))) a.$watch(e[b], function (a) {
                        e.$set(b, a)
                    });
                    else e.$set('ngPattern', new RegExp(c[1], c[2]))
                }
            }
        }
    });
    r(['src',
        'srcset',
        'href'], function (a) {
        var b = wa('ng-' + a);
        vb[b] = [
            '$sce',
            function (d) {
                return {
                    priority: 99,
                    link: function (c, e, f) {
                        var g = a,
                            k = a;
                        'href' === a && '[object SVGAnimatedString]' === la.call(e.prop('href')) && (k = 'xlinkHref', f.$attr[k] = 'xlink:href', g = null);
                        f.$set(b, d.getTrustedMediaUrl(f[b]));
                        f.$observe(b, function (b) {
                            b ? (f.$set(k, b), Ca && g && e.prop(g, f[k]))  : 'href' === a && f.$set(k, null)
                        })
                    }
                }
            }
        ]
    });
    var lb = {
        $addControl: E,
        $getControls: ia([]),
        $$renameControl: function (a, b) {
            a.$name = b
        },
        $removeControl: E,
        $setValidity: E,
        $setDirty: E,
        $setPristine: E,
        $setSubmitted: E,
        $$setSubmitted: E
    };
    Pb.$inject = [
        '$element',
        '$attrs',
        '$scope',
        '$animate',
        '$interpolate'
    ];
    Pb.prototype = {
        $rollbackViewValue: function () {
            r(this.$$controls, function (a) {
                a.$rollbackViewValue()
            })
        },
        $commitViewValue: function () {
            r(this.$$controls, function (a) {
                a.$commitViewValue()
            })
        },
        $addControl: function (a) {
            Ja(a.$name, 'input');
            this.$$controls.push(a);
            a.$name && (this[a.$name] = a);
            a.$$parentForm = this
        },
        $getControls: function () {
            return ja(this.$$controls)
        },
        $$renameControl: function (a, b) {
            var d = a.$name;
            this[d] === a && delete this[d];
            this[b] = a;
            a.$name = b
        },
        $removeControl: function (a) {
            a.$name && this[a.$name] === a && delete this[a.$name];
            r(this.$pending, function (b, d) {
                this.$setValidity(d, null, a)
            }, this);
            r(this.$error, function (b, d) {
                this.$setValidity(d, null, a)
            }, this);
            r(this.$$success, function (b, d) {
                this.$setValidity(d, null, a)
            }, this);
            cb(this.$$controls, a);
            a.$$parentForm = lb
        },
        $setDirty: function () {
            this.$$animate.removeClass(this.$$element, Za);
            this.$$animate.addClass(this.$$element, Vb);
            this.$dirty = !0;
            this.$pristine = !1;
            this.$$parentForm.$setDirty()
        },
        $setPristine: function () {
            this.$$animate.setClass(this.$$element, Za, Vb + ' ng-submitted');
            this.$dirty = !1;
            this.$pristine = !0;
            this.$submitted = !1;
            r(this.$$controls, function (a) {
                a.$setPristine()
            })
        },
        $setUntouched: function () {
            r(this.$$controls, function (a) {
                a.$setUntouched()
            })
        },
        $setSubmitted: function () {
            for (var a = this; a.$$parentForm && a.$$parentForm !== lb; ) a = a.$$parentForm;
            a.$$setSubmitted()
        },
        $$setSubmitted: function () {
            this.$$animate.addClass(this.$$element, 'ng-submitted');
            this.$submitted = !0;
            r(this.$$controls, function (a) {
                a.$$setSubmitted && a.$$setSubmitted()
            })
        }
    };
    ae({
        clazz: Pb,
        set: function (a, b, d) {
            var c = a[b];
            c ? - 1 === c.indexOf(d) && c.push(d)  : a[b] = [
                d
            ]
        },
        unset: function (a, b, d) {
            var c = a[b];
            c && (cb(c, d), 0 === c.length && delete a[b])
        }
    });
    var ke = function (a) {
            return ['$timeout',
                '$parse',
                function (b, d) {
                    function c(a) {
                        return '' === a ? d('this[""]').assign : d(a).assign || E
                    }
                    return {
                        name: 'form',
                        restrict: a ? 'EAC' : 'E',
                        require: [
                            'form',
                            '^^?form'
                        ],
                        controller: Pb,
                        compile: function (d, f) {
                            d.addClass(Za).addClass(mb);
                            var g = f.name ? 'name' : a && f.ngForm ? 'ngForm' : !1;
                            return {
                                pre: function (a, d, e, f) {
                                    var p = f[0];
                                    if (!('action' in e)) {
                                        var n = function (b) {
                                            a.$apply(function () {
                                                p.$commitViewValue();
                                                p.$setSubmitted()
                                            });
                                            b.preventDefault()
                                        };
                                        d[0].addEventListener('submit', n);
                                        d.on('$destroy', function () {
                                            b(function () {
                                                d[0].removeEventListener('submit', n)
                                            }, 0, !1)
                                        })
                                    }(f[1] || p.$$parentForm).$addControl(p);
                                    var s = g ? c(p.$name)  : E;
                                    g && (s(a, p), e.$observe(g, function (b) {
                                        p.$name !== b && (s(a, void 0), p.$$parentForm.$$renameControl(p, b), s = c(p.$name), s(a, p))
                                    }));
                                    d.on('$destroy', function () {
                                        p.$$parentForm.$removeControl(p);
                                        s(a, void 0);
                                        S(p, lb)
                                    })
                                }
                            }
                        }
                    }
                }
            ]
        },
        Ne = ke(),
        Ze = ke(!0),
        hh = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/,
        sh = /^[a-z][a-z\d.+-]*:\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\s:\/?#]+|\[[a-f\d:]+])(?::\d+)?(?:\/[^?#]*)?(?:\?[^#]*)?(?:#.*)?$/i,
        th = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+\/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/,
        ih = /^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/,
        le = /^(\d{4,})-(\d{2})-(\d{2})$/,
        me = /^(\d{4,})-(\d\d)-(\d\d)T(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        Mc = /^(\d{4,})-W(\d\d)$/,
        ne = /^(\d{4,})-(\d\d)$/,
        oe = /^(\d\d):(\d\d)(?::(\d\d)(\.\d{1,3})?)?$/,
        ce = T();
    r(['date',
        'datetime-local',
        'month',
        'time',
        'week'], function (a) {
        ce[a] = !0
    });
    var pe = {
            text: function (a, b, d, c, e, f) {
                Sa(a, b, d, c, e, f);
                Hc(c)
            },
            date: nb('date', le, Qb(le, [
                'yyyy',
                'MM',
                'dd'
            ]), 'yyyy-MM-dd'),
            'datetime-local': nb('datetimelocal', me, Qb(me, 'yyyy MM dd HH mm ss sss'.split(' ')), 'yyyy-MM-ddTHH:mm:ss.sss'),
            time: nb('time', oe, Qb(oe, [
                'HH',
                'mm',
                'ss',
                'sss'
            ]), 'HH:mm:ss.sss'),
            week: nb('week', Mc, function (a, b) {
                if (ha(a)) return a;
                if (A(a)) {
                    Mc.lastIndex = 0;
                    var d = Mc.exec(a);
                    if (d) {
                        var c = + d[1],
                            e = + d[2],
                            f = d = 0,
                            g = 0,
                            k = 0,
                            h = Xd(c),
                            e = 7 * (e - 1);
                        b && (d = b.getHours(), f = b.getMinutes(), g = b.getSeconds(), k = b.getMilliseconds());
                        return new Date(c, 0, h.getDate() + e, d, f, g, k)
                    }
                }
                return NaN
            }, 'yyyy-Www'),
            month: nb('month', ne, Qb(ne, [
                'yyyy',
                'MM'
            ]), 'yyyy-MM'),
            number: function (a, b, d, c, e, f, g, k) {
                Ic(a, b, d, c, 'number');
                de(c);
                Sa(a, b, d, c, e, f);
                var h;
                if (w(d.min) || d.ngMin) {
                    var l = d.min || k(d.ngMin) (a);
                    h = na(l);
                    c.$validators.min = function (a, b) {
                        return c.$isEmpty(b) || z(h) || b >= h
                    };
                    d.$observe('min', function (a) {
                        a !== l && (h = na(a), l = a, c.$validate())
                    })
                }
                if (w(d.max) || d.ngMax) {
                    var m = d.max || k(d.ngMax) (a),
                        p = na(m);
                    c.$validators.max = function (a, b) {
                        return c.$isEmpty(b) || z(p) || b <= p
                    };
                    d.$observe('max', function (a) {
                        a !== m && (p = na(a), m = a, c.$validate())
                    })
                }
                if (w(d.step) || d.ngStep) {
                    var n = d.step || k(d.ngStep) (a),
                        s = na(n);
                    c.$validators.step = function (a, b) {
                        return c.$isEmpty(b) || z(s) || ee(b, h || 0, s)
                    };
                    d.$observe('step', function (a) {
                        a !== n && (s = na(a), n = a, c.$validate())
                    })
                }
            },
            url: function (a, b, d, c, e, f) {
                Sa(a, b, d, c, e, f);
                Hc(c);
                c.$validators.url = function (a, b) {
                    var d = a || b;
                    return c.$isEmpty(d) || sh.test(d)
                }
            },
            email: function (a, b, d, c, e, f) {
                Sa(a, b, d, c, e, f);
                Hc(c);
                c.$validators.email = function (a, b) {
                    var d = a || b;
                    return c.$isEmpty(d) || th.test(d)
                }
            },
            radio: function (a, b, d, c) {
                var e = !d.ngTrim || 'false' !== U(d.ngTrim);
                z(d.name) && b.attr('name', ++pb);
                b.on('change', function (a) {
                    var g;
                    b[0].checked && (g = d.value, e && (g = U(g)), c.$setViewValue(g, a && a.type))
                });
                c.$render = function () {
                    var a = d.value;
                    e && (a = U(a));
                    b[0].checked = a === c.$viewValue
                };
                d.$observe('value', c.$render)
            },
            range: function (a, b, d, c, e, f) {
                function g(a, c) {
                    b.attr(a, d[a]);
                    var e = d[a];
                    d.$observe(a, function (a) {
                        a !== e && (e = a, c(a))
                    })
                }
                function k(a) {
                    p = na(a);
                    X(c.$modelValue) || (m ? (a = b.val(), p > a && (a = p, b.val(a)), c.$setViewValue(a))  : c.$validate())
                }
                function h(a) {
                    n = na(a);
                    X(c.$modelValue) || (m ? (a = b.val(), n < a && (b.val(n), a = n < p ? p : n), c.$setViewValue(a))  : c.$validate())
                }
                function l(a) {
                    s = na(a);
                    X(c.$modelValue) || (m ? c.$viewValue !== b.val() && c.$setViewValue(b.val())  : c.$validate())
                }
                Ic(a, b, d, c, 'range');
                de(c);
                Sa(a, b, d, c, e, f);
                var m = c.$$hasNativeValidators && 'range' === b[0].type,
                    p = m ? 0 : void 0,
                    n = m ? 100 : void 0,
                    s = m ? 1 : void 0,
                    r = b[0].validity;
                a = w(d.min);
                e = w(d.max);
                f = w(d.step);
                var q = c.$render;
                c.$render = m && w(r.rangeUnderflow) && w(r.rangeOverflow) ? function () {
                        q();
                        c.$setViewValue(b.val())
                    }
                    : q;
                a && (p = na(d.min), c.$validators.min = m ? function () {
                        return !0
                    }
                    : function (a, b) {
                        return c.$isEmpty(b) || z(p) || b >= p
                    }, g('min', k));
                e && (n = na(d.max), c.$validators.max = m ? function () {
                        return !0
                    }
                    : function (a, b) {
                        return c.$isEmpty(b) || z(n) || b <= n
                    }, g('max', h));
                f && (s = na(d.step), c.$validators.step = m ? function () {
                        return !r.stepMismatch
                    }
                    : function (a, b) {
                        return c.$isEmpty(b) || z(s) || ee(b, p || 0, s)
                    }, g('step', l))
            },
            checkbox: function (a, b, d, c, e, f, g, k) {
                var h = fe(k, a, 'ngTrueValue', d.ngTrueValue, !0),
                    l = fe(k, a, 'ngFalseValue', d.ngFalseValue, !1);
                b.on('change', function (a) {
                    c.$setViewValue(b[0].checked, a && a.type)
                });
                c.$render = function () {
                    b[0].checked = c.$viewValue
                };
                c.$isEmpty = function (a) {
                    return !1 === a
                };
                c.$formatters.push(function (a) {
                    return va(a, h)
                });
                c.$parsers.push(function (a) {
                    return a ? h : l
                })
            },
            hidden: E,
            button: E,
            submit: E,
            reset: E,
            file: E
        },
        Yc = [
            '$browser',
            '$sniffer',
            '$filter',
            '$parse',
            function (a, b, d, c) {
                return {
                    restrict: 'E',
                    require: [
                        '?ngModel'
                    ],
                    link: {
                        pre: function (e, f, g, k) {
                            k[0] && (pe[K(g.type)] || pe.text) (e, f, g, k[0], b, a, d, c)
                        }
                    }
                }
            }
        ],
        vf = function () {
            var a = {
                configurable: !0,
                enumerable: !1,
                get: function () {
                    return this.getAttribute('value') || ''
                },
                set: function (a) {
                    this.setAttribute('value', a)
                }
            };
            return {
                restrict: 'E',
                priority: 200,
                compile: function (b, d) {
                    if ('hidden' === K(d.type)) return {
                        pre: function (b, d, f, g) {
                            b = d[0];
                            b.parentNode && b.parentNode.insertBefore(b, b.nextSibling);
                            Object.defineProperty && Object.defineProperty(b, 'value', a)
                        }
                    }
                }
            }
        },
        uh = /^(true|false|\d+)$/,
        sf = function () {
            function a(a, d, c) {
                var e = w(c) ? c : 9 === Ca ? '' : null;
                a.prop('value', e);
                d.$set('value', c)
            }
            return {
                restrict: 'A',
                priority: 100,
                compile: function (b, d) {
                    return uh.test(d.ngValue) ? function (b, d, f) {
                            b = b.$eval(f.ngValue);
                            a(d, f, b)
                        }
                        : function (b, d, f) {
                            b.$watch(f.ngValue, function (b) {
                                a(d, f, b)
                            })
                        }
                }
            }
        },
        Re = [
            '$compile',
            function (a) {
                return {
                    restrict: 'AC',
                    compile: function (b) {
                        a.$$addBindingClass(b);
                        return function (b, c, e) {
                            a.$$addBindingInfo(c, e.ngBind);
                            c = c[0];
                            b.$watch(e.ngBind, function (a) {
                                c.textContent = ic(a)
                            })
                        }
                    }
                }
            }
        ],
        Te = [
            '$interpolate',
            '$compile',
            function (a, b) {
                return {
                    compile: function (d) {
                        b.$$addBindingClass(d);
                        return function (c, d, f) {
                            c = a(d.attr(f.$attr.ngBindTemplate));
                            b.$$addBindingInfo(d, c.expressions);
                            d = d[0];
                            f.$observe('ngBindTemplate', function (a) {
                                d.textContent = z(a) ? '' : a
                            })
                        }
                    }
                }
            }
        ],
        Se = [
            '$sce',
            '$parse',
            '$compile',
            function (a, b, d) {
                return {
                    restrict: 'A',
                    compile: function (c, e) {
                        var f = b(e.ngBindHtml),
                            g = b(e.ngBindHtml, function (b) {
                                return a.valueOf(b)
                            });
                        d.$$addBindingClass(c);
                        return function (b, c, e) {
                            d.$$addBindingInfo(c, e.ngBindHtml);
                            b.$watch(g, function () {
                                var d = f(b);
                                c.html(a.getTrustedHtml(d) || '')
                            })
                        }
                    }
                }
            }
        ],
        rf = ia({
            restrict: 'A',
            require: 'ngModel',
            link: function (a, b, d, c) {
                c.$viewChangeListeners.push(function () {
                    a.$eval(d.ngChange)
                })
            }
        }),
        Ue = Kc('', !0),
        We = Kc('Odd', 0),
        Ve = Kc('Even', 1),
        Xe = Ra({
            compile: function (a, b) {
                b.$set('ngCloak', void 0);
                a.removeClass('ng-cloak')
            }
        }),
        Ye = [
            function () {
                return {
                    restrict: 'A',
                    scope: !0,
                    controller: '@',
                    priority: 500
                }
            }
        ],
        cd = {
        },
        vh = {
            blur: !0,
            focus: !0
        };
    r('click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste'.split(' '), function (a) {
        var b = wa('ng-' + a);
        cd[b] = [
            '$parse',
            '$rootScope',
            '$exceptionHandler',
            function (d, c, e) {
                return qd(d, c, e, b, a, vh[a])
            }
        ]
    });
    var af = [
            '$animate',
            '$compile',
            function (a, b) {
                return {
                    multiElement: !0,
                    transclude: 'element',
                    priority: 600,
                    terminal: !0,
                    restrict: 'A',
                    $$tlb: !0,
                    link: function (d, c, e, f, g) {
                        var k,
                            h,
                            l;
                        d.$watch(e.ngIf, function (d) {
                            d ? h || g(function (d, f) {
                                h = f;
                                d[d.length++] = b.$$createComment('end ngIf', e.ngIf);
                                k = {
                                    clone: d
                                };
                                a.enter(d, c.parent(), c)
                            })  : (l && (l.remove(), l = null), h && (h.$destroy(), h = null), k && (l = tb(k.clone), a.leave(l).done(function (a) {
                                !1 !== a && (l = null)
                            }), k = null))
                        })
                    }
                }
            }
        ],
        bf = [
            '$templateRequest',
            '$anchorScroll',
            '$animate',
            function (a, b, d) {
                return {
                    restrict: 'ECA',
                    priority: 400,
                    terminal: !0,
                    transclude: 'element',
                    controller: ca.noop,
                    compile: function (c, e) {
                        var f = e.ngInclude || e.src,
                            g = e.onload || '',
                            k = e.autoscroll;
                        return function (c, e, m, p, n) {
                            var r = 0,
                                q,
                                t,
                                x,
                                v = function () {
                                    t && (t.remove(), t = null);
                                    q && (q.$destroy(), q = null);
                                    x && (d.leave(x).done(function (a) {
                                        !1 !== a && (t = null)
                                    }), t = x, x = null)
                                };
                            c.$watch(f, function (f) {
                                var m = function (a) {
                                        !1 === a || !w(k) || k && !c.$eval(k) || b()
                                    },
                                    t = ++r;
                                f ? (a(f, !0).then(function (a) {
                                    if (!c.$$destroyed && t === r) {
                                        var b = c.$new();
                                        p.template = a;
                                        a = n(b, function (a) {
                                            v();
                                            d.enter(a, null, e).done(m)
                                        });
                                        q = b;
                                        x = a;
                                        q.$emit('$includeContentLoaded', f);
                                        c.$eval(g)
                                    }
                                }, function () {
                                    c.$$destroyed || t !== r || (v(), c.$emit('$includeContentError', f))
                                }), c.$emit('$includeContentRequested', f))  : (v(), p.template = null)
                            })
                        }
                    }
                }
            }
        ],
        uf = [
            '$compile',
            function (a) {
                return {
                    restrict: 'ECA',
                    priority: - 400,
                    require: 'ngInclude',
                    link: function (b, d, c, e) {
                        la.call(d[0]).match(/SVG/) ? (d.empty(), a(ed(e.template, C.document).childNodes) (b, function (a) {
                            d.append(a)
                        }, {
                            futureParentElement: d
                        }))  : (d.html(e.template), a(d.contents()) (b))
                    }
                }
            }
        ],
        cf = Ra({
            priority: 450,
            compile: function () {
                return {
                    pre: function (a, b, d) {
                        a.$eval(d.ngInit)
                    }
                }
            }
        }),
        qf = function () {
            return {
                restrict: 'A',
                priority: 100,
                require: 'ngModel',
                link: function (a, b, d, c) {
                    var e = d.ngList || ', ',
                        f = 'false' !== d.ngTrim,
                        g = f ? U(e)  : e;
                    c.$parsers.push(function (a) {
                        if (!z(a)) {
                            var b = [
                            ];
                            a && r(a.split(g), function (a) {
                                a && b.push(f ? U(a)  : a)
                            });
                            return b
                        }
                    });
                    c.$formatters.push(function (a) {
                        if (H(a)) return a.join(e)
                    });
                    c.$isEmpty = function (a) {
                        return !a || !a.length
                    }
                }
            }
        },
        mb = 'ng-valid',
        $d = 'ng-invalid',
        Za = 'ng-pristine',
        Vb = 'ng-dirty',
        ob = F('ngModel');
    Rb.$inject = '$scope $exceptionHandler $attrs $element $parse $animate $timeout $q $interpolate'.split(' ');
    Rb.prototype = {
        $$initGetterSetters: function () {
            if (this.$options.getOption('getterSetter')) {
                var a = this.$$parse(this.$$attr.ngModel + '()'),
                    b = this.$$parse(this.$$attr.ngModel + '($$$p)');
                this.$$ngModelGet = function (b) {
                    var c = this.$$parsedNgModel(b);
                    B(c) && (c = a(b));
                    return c
                };
                this.$$ngModelSet = function (a, c) {
                    B(this.$$parsedNgModel(a)) ? b(a, {
                        $$$p: c
                    })  : this.$$parsedNgModelAssign(a, c)
                }
            } else if (!this.$$parsedNgModel.assign) throw ob('nonassign', this.$$attr.ngModel, za(this.$$element))
        },
        $render: E,
        $isEmpty: function (a) {
            return z(a) || '' === a || null === a || a !== a
        },
        $$updateEmptyClasses: function (a) {
            this.$isEmpty(a) ? (this.$$animate.removeClass(this.$$element, 'ng-not-empty'), this.$$animate.addClass(this.$$element, 'ng-empty'))  : (this.$$animate.removeClass(this.$$element, 'ng-empty'), this.$$animate.addClass(this.$$element, 'ng-not-empty'))
        },
        $setPristine: function () {
            this.$dirty = !1;
            this.$pristine = !0;
            this.$$animate.removeClass(this.$$element, Vb);
            this.$$animate.addClass(this.$$element, Za)
        },
        $setDirty: function () {
            this.$dirty = !0;
            this.$pristine = !1;
            this.$$animate.removeClass(this.$$element, Za);
            this.$$animate.addClass(this.$$element, Vb);
            this.$$parentForm.$setDirty()
        },
        $setUntouched: function () {
            this.$touched = !1;
            this.$untouched = !0;
            this.$$animate.setClass(this.$$element, 'ng-untouched', 'ng-touched')
        },
        $setTouched: function () {
            this.$touched = !0;
            this.$untouched = !1;
            this.$$animate.setClass(this.$$element, 'ng-touched', 'ng-untouched')
        },
        $rollbackViewValue: function () {
            this.$$timeout.cancel(this.$$pendingDebounce);
            this.$viewValue = this.$$lastCommittedViewValue;
            this.$render()
        },
        $validate: function () {
            if (!X(this.$modelValue)) {
                var a = this.$$lastCommittedViewValue,
                    b = this.$$rawModelValue,
                    d = this.$valid,
                    c = this.$modelValue,
                    e = this.$options.getOption('allowInvalid'),
                    f = this;
                this.$$runValidators(b, a, function (a) {
                    e || d === a || (f.$modelValue = a ? b : void 0, f.$modelValue !== c && f.$$writeModelToScope())
                })
            }
        },
        $$runValidators: function (a, b, d) {
            function c() {
                var c = !0;
                r(h.$validators, function (d, e) {
                    var g = Boolean(d(a, b));
                    c = c && g;
                    f(e, g)
                });
                return c ? !0 : (r(h.$asyncValidators, function (a, b) {
                    f(b, null)
                }), !1)
            }
            function e() {
                var c = [
                    ],
                    d = !0;
                r(h.$asyncValidators, function (e, g) {
                    var h = e(a, b);
                    if (!h || !B(h.then)) throw ob('nopromise', h);
                    f(g, void 0);
                    c.push(h.then(function () {
                        f(g, !0)
                    }, function () {
                        d = !1;
                        f(g, !1)
                    }))
                });
                c.length ? h.$$q.all(c).then(function () {
                    g(d)
                }, E)  : g(!0)
            }
            function f(a, b) {
                k === h.$$currentValidationRunId && h.$setValidity(a, b)
            }
            function g(a) {
                k === h.$$currentValidationRunId && d(a)
            }
            this.$$currentValidationRunId++;
            var k = this.$$currentValidationRunId,
                h = this;
            !function () {
                var a = h.$$parserName;
                if (z(h.$$parserValid)) f(a, null);
                else return h.$$parserValid || (r(h.$validators, function (a, b) {
                    f(b, null)
                }), r(h.$asyncValidators, function (a, b) {
                    f(b, null)
                })),
                    f(a, h.$$parserValid),
                    h.$$parserValid;
                return !0
            }() ? g(!1)  : c() ? e()  : g(!1)
        },
        $commitViewValue: function () {
            var a = this.$viewValue;
            this.$$timeout.cancel(this.$$pendingDebounce);
            if (this.$$lastCommittedViewValue !== a || '' === a && this.$$hasNativeValidators) this.$$updateEmptyClasses(a),
                this.$$lastCommittedViewValue = a,
            this.$pristine && this.$setDirty(),
                this.$$parseAndValidate()
        },
        $$parseAndValidate: function () {
            var a = this.$$lastCommittedViewValue,
                b = this;
            this.$$parserValid = z(a) ? void 0 : !0;
            this.$setValidity(this.$$parserName, null);
            this.$$parserName = 'parse';
            if (this.$$parserValid) for (var d = 0; d < this.$parsers.length; d++) if (a = this.$parsers[d](a), z(a)) {
                this.$$parserValid = !1;
                break
            }
            X(this.$modelValue) && (this.$modelValue = this.$$ngModelGet(this.$$scope));
            var c = this.$modelValue,
                e = this.$options.getOption('allowInvalid');
            this.$$rawModelValue = a;
            e && (this.$modelValue = a, b.$modelValue !== c && b.$$writeModelToScope());
            this.$$runValidators(a, this.$$lastCommittedViewValue, function (d) {
                e || (b.$modelValue = d ? a : void 0, b.$modelValue !== c && b.$$writeModelToScope())
            })
        },
        $$writeModelToScope: function () {
            this.$$ngModelSet(this.$$scope, this.$modelValue);
            r(this.$viewChangeListeners, function (a) {
                try {
                    a()
                } catch (b) {
                    this.$$exceptionHandler(b)
                }
            }, this)
        },
        $setViewValue: function (a, b) {
            this.$viewValue = a;
            this.$options.getOption('updateOnDefault') && this.$$debounceViewValueCommit(b)
        },
        $$debounceViewValueCommit: function (a) {
            var b = this.$options.getOption('debounce');
            W(b[a]) ? b = b[a] : W(b['default']) && - 1 === this.$options.getOption('updateOn').indexOf(a) ? b = b['default'] : W(b['*']) && (b = b['*']);
            this.$$timeout.cancel(this.$$pendingDebounce);
            var d = this;
            0 < b ? this.$$pendingDebounce = this.$$timeout(function () {
                d.$commitViewValue()
            }, b)  : this.$$rootScope.$$phase ? this.$commitViewValue()  : this.$$scope.$apply(function () {
                d.$commitViewValue()
            })
        },
        $overrideModelOptions: function (a) {
            this.$options = this.$options.createChild(a);
            this.$$setUpdateOnEvents()
        },
        $processModelValue: function () {
            var a = this.$$format();
            this.$viewValue !== a && (this.$$updateEmptyClasses(a), this.$viewValue = this.$$lastCommittedViewValue = a, this.$render(), this.$$runValidators(this.$modelValue, this.$viewValue, E))
        },
        $$format: function () {
            for (var a = this.$formatters, b = a.length, d = this.$modelValue; b--; ) d = a[b](d);
            return d
        },
        $$setModelValue: function (a) {
            this.$modelValue = this.$$rawModelValue = a;
            this.$$parserValid = void 0;
            this.$processModelValue()
        },
        $$setUpdateOnEvents: function () {
            this.$$updateEvents && this.$$element.off(this.$$updateEvents, this.$$updateEventHandler);
            if (this.$$updateEvents = this.$options.getOption('updateOn')) this.$$element.on(this.$$updateEvents, this.$$updateEventHandler)
        },
        $$updateEventHandler: function (a) {
            this.$$debounceViewValueCommit(a && a.type)
        }
    };
    ae({
        clazz: Rb,
        set: function (a, b) {
            a[b] = !0
        },
        unset: function (a, b) {
            delete a[b]
        }
    });
    var pf = [
            '$rootScope',
            function (a) {
                return {
                    restrict: 'A',
                    require: [
                        'ngModel',
                        '^?form',
                        '^?ngModelOptions'
                    ],
                    controller: Rb,
                    priority: 1,
                    compile: function (b) {
                        b.addClass(Za).addClass('ng-untouched').addClass(mb);
                        return {
                            pre: function (a, b, e, f) {
                                var g = f[0];
                                b = f[1] || g.$$parentForm;
                                if (f = f[2]) g.$options = f.$options;
                                g.$$initGetterSetters();
                                b.$addControl(g);
                                e.$observe('name', function (a) {
                                    g.$name !== a && g.$$parentForm.$$renameControl(g, a)
                                });
                                a.$on('$destroy', function () {
                                    g.$$parentForm.$removeControl(g)
                                })
                            },
                            post: function (b, c, e, f) {
                                function g() {
                                    k.$setTouched()
                                }
                                var k = f[0];
                                k.$$setUpdateOnEvents();
                                c.on('blur', function () {
                                    k.$touched || (a.$$phase ? b.$evalAsync(g)  : b.$apply(g))
                                })
                            }
                        }
                    }
                }
            }
        ],
        Sb,
        wh = /(\s+|^)default(\s+|$)/;
    Lc.prototype = {
        getOption: function (a) {
            return this.$$options[a]
        },
        createChild: function (a) {
            var b = !1;
            a = S({
            }, a);
            r(a, function (d, c) {
                '$inherit' === d ? '*' === c ? b = !0 : (a[c] = this.$$options[c], 'updateOn' === c && (a.updateOnDefault = this.$$options.updateOnDefault))  : 'updateOn' === c && (a.updateOnDefault = !1, a[c] = U(d.replace(wh, function () {
                    a.updateOnDefault = !0;
                    return ' '
                })))
            }, this);
            b && (delete a['*'], ge(a, this.$$options));
            ge(a, Sb.$$options);
            return new Lc(a)
        }
    };
    Sb = new Lc({
        updateOn: '',
        updateOnDefault: !0,
        debounce: 0,
        getterSetter: !1,
        allowInvalid: !1,
        timezone: null
    });
    var tf = function () {
            function a(a, d) {
                this.$$attrs = a;
                this.$$scope = d
            }
            a.$inject = [
                '$attrs',
                '$scope'
            ];
            a.prototype = {
                $onInit: function () {
                    var a = this.parentCtrl ? this.parentCtrl.$options : Sb,
                        d = this.$$scope.$eval(this.$$attrs.ngModelOptions);
                    this.$options = a.createChild(d)
                }
            };
            return {
                restrict: 'A',
                priority: 10,
                require: {
                    parentCtrl: '?^^ngModelOptions'
                },
                bindToController: !0,
                controller: a
            }
        },
        df = Ra({
            terminal: !0,
            priority: 1000
        }),
        xh = F('ngOptions'),
        yh = /^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?(?:\s+disable\s+when\s+([\s\S]+?))?\s+for\s+(?:([$\w][$\w]*)|(?:\(\s*([$\w][$\w]*)\s*,\s*([$\w][$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,
        nf = [
            '$compile',
            '$document',
            '$parse',
            function (a, b, d) {
                function c(a, b, c) {
                    function e(a, b, c, d, f) {
                        this.selectValue = a;
                        this.viewValue = b;
                        this.label = c;
                        this.group = d;
                        this.disabled = f
                    }
                    function f(a) {
                        var b;
                        if (!r && ya(a)) b = a;
                        else {
                            b = [
                            ];
                            for (var c in a) a.hasOwnProperty(c) && '$' !== c.charAt(0) && b.push(c)
                        }
                        return b
                    }
                    var p = a.match(yh);
                    if (!p) throw xh('iexp', a, za(b));
                    var n = p[5] || p[7],
                        r = p[6];
                    a = / as /.test(p[0]) && p[1];
                    var q = p[9];
                    b = d(p[2] ? p[1] : n);
                    var t = a && d(a) || b,
                        w = q && d(q),
                        v = q ? function (a, b) {
                                return w(c, b)
                            }
                            : function (a) {
                                return La(a)
                            },
                        x = function (a, b) {
                            return v(a, A(a, b))
                        },
                        z = d(p[2] || p[1]),
                        y = d(p[3] || ''),
                        J = d(p[4] || ''),
                        I = d(p[8]),
                        B = {
                        },
                        A = r ? function (a, b) {
                                B[r] = b;
                                B[n] = a;
                                return B
                            }
                            : function (a) {
                                B[n] = a;
                                return B
                            };
                    return {
                        trackBy: q,
                        getTrackByValue: x,
                        getWatchables: d(I, function (a) {
                            var b = [
                            ];
                            a = a || [
                            ];
                            for (var d = f(a), e = d.length, g = 0; g < e; g++) {
                                var k = a === d ? g : d[g],
                                    l = a[k],
                                    k = A(l, k),
                                    l = v(l, k);
                                b.push(l);
                                if (p[2] || p[1]) l = z(c, k),
                                    b.push(l);
                                p[4] && (k = J(c, k), b.push(k))
                            }
                            return b
                        }),
                        getOptions: function () {
                            for (var a = [
                            ], b = {
                            }, d = I(c) || [
                            ], g = f(d), k = g.length, n = 0; n < k; n++) {
                                var p = d === g ? n : g[n],
                                    r = A(d[p], p),
                                    s = t(c, r),
                                    p = v(s, r),
                                    w = z(c, r),
                                    B = y(c, r),
                                    r = J(c, r),
                                    s = new e(p, s, w, B, r);
                                a.push(s);
                                b[p] = s
                            }
                            return {
                                items: a,
                                selectValueMap: b,
                                getOptionFromViewValue: function (a) {
                                    return b[x(a)]
                                },
                                getViewValueFromOption: function (a) {
                                    return q ? Ia(a.viewValue)  : a.viewValue
                                }
                            }
                        }
                    }
                }
                var e = C.document.createElement('option'),
                    f = C.document.createElement('optgroup');
                return {
                    restrict: 'A',
                    terminal: !0,
                    require: [
                        'select',
                        'ngModel'
                    ],
                    link: {
                        pre: function (a, b, c, d) {
                            d[0].registerOption = E
                        },
                        post: function (d, k, h, l) {
                            function m(a) {
                                var b = (a = v.getOptionFromViewValue(a)) && a.element;
                                b && !b.selected && (b.selected = !0);
                                return a
                            }
                            function p(a, b) {
                                a.element = b;
                                b.disabled = a.disabled;
                                a.label !== b.label && (b.label = a.label, b.textContent = a.label);
                                b.value = a.selectValue
                            }
                            var n = l[0],
                                q = l[1],
                                z = h.multiple;
                            l = 0;
                            for (var t = k.children(), B = t.length; l < B; l++) if ('' === t[l].value) {
                                n.hasEmptyOption = !0;
                                n.emptyOption = t.eq(l);
                                break
                            }
                            k.empty();
                            l = !!n.emptyOption;
                            x(e.cloneNode(!1)).val('?');
                            var v,
                                A = c(h.ngOptions, k, d),
                                C = b[0].createDocumentFragment();
                            n.generateUnknownOptionValue = function (a) {
                                return '?'
                            };
                            z ? (n.writeValue = function (a) {
                                if (v) {
                                    var b = a && a.map(m) || [
                                    ];
                                    v.items.forEach(function (a) {
                                        a.element.selected && - 1 === Array.prototype.indexOf.call(b, a) && (a.element.selected = !1)
                                    })
                                }
                            }, n.readValue = function () {
                                var a = k.val() || [
                                    ],
                                    b = [
                                    ];
                                r(a, function (a) {
                                    (a = v.selectValueMap[a]) && !a.disabled && b.push(v.getViewValueFromOption(a))
                                });
                                return b
                            }, A.trackBy && d.$watchCollection(function () {
                                if (H(q.$viewValue)) return q.$viewValue.map(function (a) {
                                    return A.getTrackByValue(a)
                                })
                            }, function () {
                                q.$render()
                            }))  : (n.writeValue = function (a) {
                                if (v) {
                                    var b = k[0].options[k[0].selectedIndex],
                                        c = v.getOptionFromViewValue(a);
                                    b && b.removeAttribute('selected');
                                    c ? (k[0].value !== c.selectValue && (n.removeUnknownOption(), k[0].value = c.selectValue, c.element.selected = !0), c.element.setAttribute('selected', 'selected'))  : n.selectUnknownOrEmptyOption(a)
                                }
                            }, n.readValue = function () {
                                var a = v.selectValueMap[k.val()];
                                return a && !a.disabled ? (n.unselectEmptyOption(), n.removeUnknownOption(), v.getViewValueFromOption(a))  : null
                            }, A.trackBy && d.$watch(function () {
                                return A.getTrackByValue(q.$viewValue)
                            }, function () {
                                q.$render()
                            }));
                            l && (a(n.emptyOption) (d), k.prepend(n.emptyOption), 8 === n.emptyOption[0].nodeType ? (n.hasEmptyOption = !1, n.registerOption = function (a, b) {
                                '' === b.val() && (n.hasEmptyOption = !0, n.emptyOption = b, n.emptyOption.removeClass('ng-scope'), q.$render(), b.on('$destroy', function () {
                                    var a = n.$isEmptyOptionSelected();
                                    n.hasEmptyOption = !1;
                                    n.emptyOption = void 0;
                                    a && q.$render()
                                }))
                            })  : n.emptyOption.removeClass('ng-scope'));
                            d.$watchCollection(A.getWatchables, function () {
                                var a = v && n.readValue();
                                if (v) for (var b = v.items.length - 1; 0 <= b; b--) {
                                    var c = v.items[b];
                                    w(c.group) ? Fb(c.element.parentNode)  : Fb(c.element)
                                }
                                v = A.getOptions();
                                var d = {
                                };
                                v.items.forEach(function (a) {
                                    var b;
                                    if (w(a.group)) {
                                        b = d[a.group];
                                        b || (b = f.cloneNode(!1), C.appendChild(b), b.label = null === a.group ? 'null' : a.group, d[a.group] = b);
                                        var c = e.cloneNode(!1);
                                        b.appendChild(c);
                                        p(a, c)
                                    } else b = e.cloneNode(!1),
                                        C.appendChild(b),
                                        p(a, b)
                                });
                                k[0].appendChild(C);
                                q.$render();
                                q.$isEmpty(a) || (b = n.readValue(), (A.trackBy || z ? va(a, b)  : a === b) || (q.$setViewValue(b), q.$render()))
                            })
                        }
                    }
                }
            }
        ],
        ef = [
            '$locale',
            '$interpolate',
            '$log',
            function (a, b, d) {
                var c = /{}/g,
                    e = /^when(Minus)?(.+)$/;
                return {
                    link: function (f, g, k) {
                        function h(a) {
                            g.text(a || '')
                        }
                        var l = k.count,
                            m = k.$attr.when && g.attr(k.$attr.when),
                            p = k.offset || 0,
                            n = f.$eval(m) || {
                            },
                            q = {
                            },
                            w = b.startSymbol(),
                            t = b.endSymbol(),
                            x = w + l + '-' + p + t,
                            v = ca.noop,
                            A;
                        r(k, function (a, b) {
                            var c = e.exec(b);
                            c && (c = (c[1] ? '-' : '') + K(c[2]), n[c] = g.attr(k.$attr[b]))
                        });
                        r(n, function (a, d) {
                            q[d] = b(a.replace(c, x))
                        });
                        f.$watch(l, function (b) {
                            var c = parseFloat(b),
                                e = X(c);
                            e || c in n || (c = a.pluralCat(c - p));
                            c === A || e && X(A) || (v(), e = q[c], z(e) ? (null != b && d.debug('ngPluralize: no rule defined for \'' + c + '\' in ' + m), v = E, h())  : v = f.$watch(e, h), A = c)
                        })
                    }
                }
            }
        ],
        qe = F('ngRef'),
        ff = [
            '$parse',
            function (a) {
                return {
                    priority: - 1,
                    restrict: 'A',
                    compile: function (b, d) {
                        var c = wa(ua(b)),
                            e = a(d.ngRef),
                            f = e.assign || function () {
                                throw qe('nonassign', d.ngRef)
                            };
                        return function (a, b, h) {
                            var l;
                            if (h.hasOwnProperty('ngRefRead')) {
                                if ('$element' === h.ngRefRead) l = b;
                                else if (l = b.data('$' + h.ngRefRead + 'Controller'), !l) throw qe('noctrl', h.ngRefRead, d.ngRef)
                            } else l = b.data('$' + c + 'Controller');
                            l = l || b;
                            f(a, l);
                            b.on('$destroy', function () {
                                e(a) === l && f(a, null)
                            })
                        }
                    }
                }
            }
        ],
        gf = [
            '$parse',
            '$animate',
            '$compile',
            function (a, b, d) {
                var c = F('ngRepeat'),
                    e = function (a, b, c, d, e, f, g) {
                        a[c] = d;
                        e && (a[e] = f);
                        a.$index = b;
                        a.$first = 0 === b;
                        a.$last = b === g - 1;
                        a.$middle = !(a.$first || a.$last);
                        a.$odd = !(a.$even = 0 === (1 & b))
                    },
                    f = function (a, b, c) {
                        return La(c)
                    },
                    g = function (a, b) {
                        return b
                    };
                return {
                    restrict: 'A',
                    multiElement: !0,
                    transclude: 'element',
                    priority: 1000,
                    terminal: !0,
                    $$tlb: !0,
                    compile: function (k, h) {
                        var l = h.ngRepeat,
                            m = d.$$createComment('end ngRepeat', l),
                            p = l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/);
                        if (!p) throw c('iexp', l);
                        var n = p[1],
                            q = p[2],
                            w = p[3],
                            t = p[4],
                            p = n.match(/^(?:(\s*[$\w]+)|\(\s*([$\w]+)\s*,\s*([$\w]+)\s*\))$/);
                        if (!p) throw c('iidexp', n);
                        var x = p[3] || p[1],
                            v = p[2];
                        if (w && (!/^[$a-zA-Z_][$a-zA-Z0-9_]*$/.test(w) || /^(null|undefined|this|\$index|\$first|\$middle|\$last|\$even|\$odd|\$parent|\$root|\$id)$/.test(w))) throw c('badident', w);
                        var z;
                        if (t) {
                            var A = {
                                    $id: La
                                },
                                y = a(t);
                            z = function (a, b, c, d) {
                                v && (A[v] = b);
                                A[x] = c;
                                A.$index = d;
                                return y(a, A)
                            }
                        }
                        return function (a, d, h, k, n) {
                            var p = T();
                            a.$watchCollection(q, function (h) {
                                var k,
                                    q,
                                    t = d[0],
                                    s,
                                    y = T(),
                                    B,
                                    C,
                                    E,
                                    D,
                                    H,
                                    F,
                                    K;
                                w && (a[w] = h);
                                if (ya(h)) H = h,
                                    q = z || f;
                                else for (K in q = z || g, H = [
                                ], h) ta.call(h, K) && '$' !== K.charAt(0) && H.push(K);
                                B = H.length;
                                K = Array(B);
                                for (k = 0; k < B; k++) if (C = h === H ? k : H[k], E = h[C], D = q(a, C, E, k), p[D]) F = p[D],
                                    delete p[D],
                                    y[D] = F,
                                    K[k] = F;
                                else {
                                    if (y[D]) throw r(K, function (a) {
                                        a && a.scope && (p[a.id] = a)
                                    }),
                                        c('dupes', l, D, E);
                                    K[k] = {
                                        id: D,
                                        scope: void 0,
                                        clone: void 0
                                    };
                                    y[D] = !0
                                }
                                A && (A[x] = void 0);
                                for (s in p) {
                                    F = p[s];
                                    D = tb(F.clone);
                                    b.leave(D);
                                    if (D[0].parentNode) for (k = 0, q = D.length; k < q; k++) D[k].$$NG_REMOVED = !0;
                                    F.scope.$destroy()
                                }
                                for (k = 0; k < B; k++) if (C = h === H ? k : H[k], E = h[C], F = K[k], F.scope) {
                                    s = t;
                                    do s = s.nextSibling;
                                    while (s && s.$$NG_REMOVED);
                                    F.clone[0] !== s && b.move(tb(F.clone), null, t);
                                    t = F.clone[F.clone.length - 1];
                                    e(F.scope, k, x, E, v, C, B)
                                } else n(function (a, c) {
                                    F.scope = c;
                                    var d = m.cloneNode(!1);
                                    a[a.length++] = d;
                                    b.enter(a, null, t);
                                    t = d;
                                    F.clone = a;
                                    y[F.id] = F;
                                    e(F.scope, k, x, E, v, C, B)
                                });
                                p = y
                            })
                        }
                    }
                }
            }
        ],
        hf = [
            '$animate',
            function (a) {
                return {
                    restrict: 'A',
                    multiElement: !0,
                    link: function (b, d, c) {
                        b.$watch(c.ngShow, function (b) {
                            a[b ? 'removeClass' : 'addClass'](d, 'ng-hide', {
                                tempClasses: 'ng-hide-animate'
                            })
                        })
                    }
                }
            }
        ],
        $e = [
            '$animate',
            function (a) {
                return {
                    restrict: 'A',
                    multiElement: !0,
                    link: function (b, d, c) {
                        b.$watch(c.ngHide, function (b) {
                            a[b ? 'addClass' : 'removeClass'](d, 'ng-hide', {
                                tempClasses: 'ng-hide-animate'
                            })
                        })
                    }
                }
            }
        ],
        jf = Ra(function (a, b, d) {
            a.$watchCollection(d.ngStyle, function (a, d) {
                d && a !== d && (a || (a = {
                }), r(d, function (b, d) {
                    null == a[d] && (a[d] = '')
                }));
                a && b.css(a)
            })
        }),
        kf = [
            '$animate',
            '$compile',
            function (a, b) {
                return {
                    require: 'ngSwitch',
                    controller: [
                        '$scope',
                        function () {
                            this.cases = {
                            }
                        }
                    ],
                    link: function (d, c, e, f) {
                        var g = [
                            ],
                            k = [
                            ],
                            h = [
                            ],
                            l = [
                            ],
                            m = function (a, b) {
                                return function (c) {
                                    !1 !== c && a.splice(b, 1)
                                }
                            };
                        d.$watch(e.ngSwitch || e.on, function (c) {
                            for (var d, e; h.length; ) a.cancel(h.pop());
                            d = 0;
                            for (e = l.length; d < e; ++d) {
                                var q = tb(k[d].clone);
                                l[d].$destroy();
                                (h[d] = a.leave(q)).done(m(h, d))
                            }
                            k.length = 0;
                            l.length = 0;
                            (g = f.cases['!' + c] || f.cases['?']) && r(g, function (c) {
                                c.transclude(function (d, e) {
                                    l.push(e);
                                    var f = c.element;
                                    d[d.length++] = b.$$createComment('end ngSwitchWhen');
                                    k.push({
                                        clone: d
                                    });
                                    a.enter(d, f.parent(), f)
                                })
                            })
                        })
                    }
                }
            }
        ],
        lf = Ra({
            transclude: 'element',
            priority: 1200,
            require: '^ngSwitch',
            multiElement: !0,
            link: function (a, b, d, c, e) {
                a = d.ngSwitchWhen.split(d.ngSwitchWhenSeparator).sort().filter(function (a, b, c) {
                    return c[b - 1] !== a
                });
                r(a, function (a) {
                    c.cases['!' + a] = c.cases['!' + a] || [
                    ];
                    c.cases['!' + a].push({
                        transclude: e,
                        element: b
                    })
                })
            }
        }),
        mf = Ra({
            transclude: 'element',
            priority: 1200,
            require: '^ngSwitch',
            multiElement: !0,
            link: function (a, b, d, c, e) {
                c.cases['?'] = c.cases['?'] || [
                ];
                c.cases['?'].push({
                    transclude: e,
                    element: b
                })
            }
        }),
        zh = F('ngTransclude'),
        of = [
            '$compile',
            function (a) {
                return {
                    restrict: 'EAC',
                    compile: function (b) {
                        var d = a(b.contents());
                        b.empty();
                        return function (a, b, f, g, k) {
                            function h() {
                                d(a, function (a) {
                                    b.append(a)
                                })
                            }
                            if (!k) throw zh('orphan', za(b));
                            f.ngTransclude === f.$attr.ngTransclude && (f.ngTransclude = '');
                            f = f.ngTransclude || f.ngTranscludeSlot;
                            k(function (a, c) {
                                var d;
                                if (d = a.length) a: {
                                    d = 0;
                                    for (var f = a.length; d < f; d++) {
                                        var g = a[d];
                                        if (g.nodeType !== Pa || g.nodeValue.trim()) {
                                            d = !0;
                                            break a
                                        }
                                    }
                                    d = void 0
                                }
                                d ? b.append(a)  : (h(), c.$destroy())
                            }, null, f);
                            f && !k.isSlotFilled(f) && h()
                        }
                    }
                }
            }
        ],
        Oe = [
            '$templateCache',
            function (a) {
                return {
                    restrict: 'E',
                    terminal: !0,
                    compile: function (b, d) {
                        'text/ng-template' === d.type && a.put(d.id, b[0].text)
                    }
                }
            }
        ],
        Ah = {
            $setViewValue: E,
            $render: E
        },
        Bh = [
            '$element',
            '$scope',
            function (a, b) {
                function d() {
                    g || (g = !0, b.$$postDigest(function () {
                        g = !1;
                        e.ngModelCtrl.$render()
                    }))
                }
                function c(a) {
                    k || (k = !0, b.$$postDigest(function () {
                        b.$$destroyed || (k = !1, e.ngModelCtrl.$setViewValue(e.readValue()), a && e.ngModelCtrl.$render())
                    }))
                }
                var e = this,
                    f = new Hb;
                e.selectValueMap = {
                };
                e.ngModelCtrl = Ah;
                e.multiple = !1;
                e.unknownOption = x(C.document.createElement('option'));
                e.hasEmptyOption = !1;
                e.emptyOption = void 0;
                e.renderUnknownOption = function (b) {
                    b = e.generateUnknownOptionValue(b);
                    e.unknownOption.val(b);
                    a.prepend(e.unknownOption);
                    Oa(e.unknownOption, !0);
                    a.val(b)
                };
                e.updateUnknownOption = function (b) {
                    b = e.generateUnknownOptionValue(b);
                    e.unknownOption.val(b);
                    Oa(e.unknownOption, !0);
                    a.val(b)
                };
                e.generateUnknownOptionValue = function (a) {
                    return '? ' + La(a) + ' ?'
                };
                e.removeUnknownOption = function () {
                    e.unknownOption.parent() && e.unknownOption.remove()
                };
                e.selectEmptyOption = function () {
                    e.emptyOption && (a.val(''), Oa(e.emptyOption, !0))
                };
                e.unselectEmptyOption = function () {
                    e.hasEmptyOption && Oa(e.emptyOption, !1)
                };
                b.$on('$destroy', function () {
                    e.renderUnknownOption = E
                });
                e.readValue = function () {
                    var b = a.val(),
                        b = b in e.selectValueMap ? e.selectValueMap[b] : b;
                    return e.hasOption(b) ? b : null
                };
                e.writeValue = function (b) {
                    var c = a[0].options[a[0].selectedIndex];
                    c && Oa(x(c), !1);
                    e.hasOption(b) ? (e.removeUnknownOption(), c = La(b), a.val(c in e.selectValueMap ? c : b), Oa(x(a[0].options[a[0].selectedIndex]), !0))  : e.selectUnknownOrEmptyOption(b)
                };
                e.addOption = function (a, b) {
                    if (8 !== b[0].nodeType) {
                        Ja(a, '"option value"');
                        '' === a && (e.hasEmptyOption = !0, e.emptyOption = b);
                        var c = f.get(a) || 0;
                        f.set(a, c + 1);
                        d()
                    }
                };
                e.removeOption = function (a) {
                    var b = f.get(a);
                    b && (1 === b ? (f.delete (a), '' === a && (e.hasEmptyOption = !1, e.emptyOption = void 0))  : f.set(a, b - 1))
                };
                e.hasOption = function (a) {
                    return !!f.get(a)
                };
                e.$hasEmptyOption = function () {
                    return e.hasEmptyOption
                };
                e.$isUnknownOptionSelected = function () {
                    return a[0].options[0] === e.unknownOption[0]
                };
                e.$isEmptyOptionSelected = function () {
                    return e.hasEmptyOption && a[0].options[a[0].selectedIndex] === e.emptyOption[0]
                };
                e.selectUnknownOrEmptyOption = function (a) {
                    null == a && e.emptyOption ? (e.removeUnknownOption(), e.selectEmptyOption())  : e.unknownOption.parent().length ? e.updateUnknownOption(a)  : e.renderUnknownOption(a)
                };
                var g = !1,
                    k = !1;
                e.registerOption = function (a, b, f, g, k) {
                    if (f.$attr.ngValue) {
                        var q,
                            r;
                        f.$observe('value', function (a) {
                            var d,
                                f = b.prop('selected');
                            w(r) && (e.removeOption(q), delete e.selectValueMap[r], d = !0);
                            r = La(a);
                            q = a;
                            e.selectValueMap[r] = a;
                            e.addOption(a, b);
                            b.attr('value', r);
                            d && f && c()
                        })
                    } else g ? f.$observe('value', function (a) {
                        e.readValue();
                        var d,
                            f = b.prop('selected');
                        w(q) && (e.removeOption(q), d = !0);
                        q = a;
                        e.addOption(a, b);
                        d && f && c()
                    })  : k ? a.$watch(k, function (a, d) {
                        f.$set('value', a);
                        var g = b.prop('selected');
                        d !== a && e.removeOption(d);
                        e.addOption(a, b);
                        d && g && c()
                    })  : e.addOption(f.value, b);
                    f.$observe('disabled', function (a) {
                        if ('true' === a || a && b.prop('selected')) e.multiple ? c(!0)  : (e.ngModelCtrl.$setViewValue(null), e.ngModelCtrl.$render())
                    });
                    b.on('$destroy', function () {
                        var a = e.readValue(),
                            b = f.value;
                        e.removeOption(b);
                        d();
                        (e.multiple && a && - 1 !== a.indexOf(b) || a === b) && c(!0)
                    })
                }
            }
        ],
        Pe = function () {
            return {
                restrict: 'E',
                require: [
                    'select',
                    '?ngModel'
                ],
                controller: Bh,
                priority: 1,
                link: {
                    pre: function (a, b, d, c) {
                        var e = c[0],
                            f = c[1];
                        if (f) {
                            if (e.ngModelCtrl = f, b.on('change', function () {
                                e.removeUnknownOption();
                                a.$apply(function () {
                                    f.$setViewValue(e.readValue())
                                })
                            }), d.multiple) {
                                e.multiple = !0;
                                e.readValue = function () {
                                    var a = [
                                    ];
                                    r(b.find('option'), function (b) {
                                        b.selected && !b.disabled && (b = b.value, a.push(b in e.selectValueMap ? e.selectValueMap[b] : b))
                                    });
                                    return a
                                };
                                e.writeValue = function (a) {
                                    r(b.find('option'), function (b) {
                                        var c = !!a && ( - 1 !== Array.prototype.indexOf.call(a, b.value) || - 1 !== Array.prototype.indexOf.call(a, e.selectValueMap[b.value]));
                                        c !== b.selected && Oa(x(b), c)
                                    })
                                };
                                var g,
                                    k = NaN;
                                a.$watch(function () {
                                    k !== f.$viewValue || va(g, f.$viewValue) || (g = ja(f.$viewValue), f.$render());
                                    k = f.$viewValue
                                });
                                f.$isEmpty = function (a) {
                                    return !a || 0 === a.length
                                }
                            }
                        } else e.registerOption = E
                    },
                    post: function (a, b, d, c) {
                        var e = c[1];
                        if (e) {
                            var f = c[0];
                            e.$render = function () {
                                f.writeValue(e.$viewValue)
                            }
                        }
                    }
                }
            }
        },
        Qe = [
            '$interpolate',
            function (a) {
                return {
                    restrict: 'E',
                    priority: 100,
                    compile: function (b, d) {
                        var c,
                            e;
                        w(d.ngValue) || (w(d.value) ? c = a(d.value, !0)  : (e = a(b.text(), !0)) || d.$set('value', b.text()));
                        return function (a, b, d) {
                            var h = b.parent();
                            (h = h.data('$selectController') || h.parent().data('$selectController')) && h.registerOption(a, b, d, c, e)
                        }
                    }
                }
            }
        ],
        $c = [
            '$parse',
            function (a) {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (b, d, c, e) {
                        if (e) {
                            var f = c.hasOwnProperty('required') || a(c.ngRequired) (b);
                            c.ngRequired || (c.required = !0);
                            e.$validators.required = function (a, b) {
                                return !f || !e.$isEmpty(b)
                            };
                            c.$observe('required', function (a) {
                                f !== a && (f = a, e.$validate())
                            })
                        }
                    }
                }
            }
        ],
        Zc = [
            '$parse',
            function (a) {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    compile: function (b, d) {
                        var c,
                            e;
                        d.ngPattern && (c = d.ngPattern, e = '/' === d.ngPattern.charAt(0) && ie.test(d.ngPattern) ? function () {
                                return d.ngPattern
                            }
                            : a(d.ngPattern));
                        return function (a, b, d, h) {
                            if (h) {
                                var l = d.pattern;
                                d.ngPattern ? l = e(a)  : c = d.pattern;
                                var m = he(l, c, b);
                                d.$observe('pattern', function (a) {
                                    var d = m;
                                    m = he(a, c, b);
                                    (d && d.toString()) !== (m && m.toString()) && h.$validate()
                                });
                                h.$validators.pattern = function (a, b) {
                                    return h.$isEmpty(b) || z(m) || m.test(b)
                                }
                            }
                        }
                    }
                }
            }
        ],
        bd = [
            '$parse',
            function (a) {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (b, d, c, e) {
                        if (e) {
                            var f = c.maxlength || a(c.ngMaxlength) (b),
                                g = Tb(f);
                            c.$observe('maxlength', function (a) {
                                f !== a && (g = Tb(a), f = a, e.$validate())
                            });
                            e.$validators.maxlength = function (a, b) {
                                return 0 > g || e.$isEmpty(b) || b.length <= g
                            }
                        }
                    }
                }
            }
        ],
        ad = [
            '$parse',
            function (a) {
                return {
                    restrict: 'A',
                    require: '?ngModel',
                    link: function (b, d, c, e) {
                        if (e) {
                            var f = c.minlength || a(c.ngMinlength) (b),
                                g = Tb(f) || - 1;
                            c.$observe('minlength', function (a) {
                                f !== a && (g = Tb(a) || - 1, f = a, e.$validate())
                            });
                            e.$validators.minlength = function (a, b) {
                                return e.$isEmpty(b) || b.length >= g
                            }
                        }
                    }
                }
            }
        ];
    C.angular.bootstrap ? C.console && void 0 : (Fe(), Je(ca), ca.module('ngLocale', [
    ], [
        '$provide',
        function (a) {
            function b(a) {
                a += '';
                var b = a.indexOf('.');
                return - 1 == b ? 0 : a.length - b - 1
            }
            a.value('$locale', {
                DATETIME_FORMATS: {
                    AMPMS: [
                        'AM',
                        'PM'
                    ],
                    DAY: 'Sunday Monday Tuesday Wednesday Thursday Friday Saturday'.split(' '),
                    ERANAMES: [
                        'Before Christ',
                        'Anno Domini'
                    ],
                    ERAS: [
                        'BC',
                        'AD'
                    ],
                    FIRSTDAYOFWEEK: 6,
                    MONTH: 'January February March April May June July August September October November December'.split(' '),
                    SHORTDAY: 'Sun Mon Tue Wed Thu Fri Sat'.split(' '),
                    SHORTMONTH: 'Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec'.split(' '),
                    STANDALONEMONTH: 'January February March April May June July August September October November December'.split(' '),
                    WEEKENDRANGE: [
                        5,
                        6
                    ],
                    fullDate: 'EEEE, MMMM d, y',
                    longDate: 'MMMM d, y',
                    medium: 'MMM d, y h:mm:ss a',
                    mediumDate: 'MMM d, y',
                    mediumTime: 'h:mm:ss a',
                    short: 'M/d/yy h:mm a',
                    shortDate: 'M/d/yy',
                    shortTime: 'h:mm a'
                },
                NUMBER_FORMATS: {
                    CURRENCY_SYM: '$',
                    DECIMAL_SEP: '.',
                    GROUP_SEP: ',',
                    PATTERNS: [
                        {
                            gSize: 3,
                            lgSize: 3,
                            maxFrac: 3,
                            minFrac: 0,
                            minInt: 1,
                            negPre: '-',
                            negSuf: '',
                            posPre: '',
                            posSuf: ''
                        },
                        {
                            gSize: 3,
                            lgSize: 3,
                            maxFrac: 2,
                            minFrac: 2,
                            minInt: 1,
                            negPre: '-¤',
                            negSuf: '',
                            posPre: '¤',
                            posSuf: ''
                        }
                    ]
                },
                id: 'en-us',
                localeID: 'en_US',
                pluralCat: function (a, c) {
                    var e = 0 | a,
                        f = c;
                    void 0 === f && (f = Math.min(b(a), 3));
                    Math.pow(10, f);
                    return 1 == e && 0 == f ? 'one' : 'other'
                }
            })
        }
    ]), x(function () {
        Ae(C.document, Uc)
    }))
}(window);
!window.angular.$$csp().noInlineStyle && window.angular.element(document.head).prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>');
define('angular', function (global) {
    return function () {
        var ret,
            fn;
        return ret || global.angular
    }
}(this));
(function () {
    function n(n, t, r) {
        switch (r.length) {
            case 0:
                return n.call(t);
            case 1:
                return n.call(t, r[0]);
            case 2:
                return n.call(t, r[0], r[1]);
            case 3:
                return n.call(t, r[0], r[1], r[2])
        }
        return n.apply(t, r)
    }
    function t(n, t, r, e) {
        for (var u = - 1, i = null == n ? 0 : n.length; ++u < i; ) {
            var o = n[u];
            t(e, o, r(o), n)
        }
        return e
    }
    function r(n, t) {
        for (var r = - 1, e = null == n ? 0 : n.length; ++r < e && false !== t(n[r], r, n); );
        return n
    }
    function e(n, t) {
        for (var r = null == n ? 0 : n.length; r-- && false !== t(n[r], r, n); );
        return n
    }
    function u(n, t) {
        for (var r = - 1, e = null == n ? 0 : n.length; ++r < e; ) if (!t(n[r], r, n)) return false;
        return true
    }
    function i(n, t) {
        for (var r = - 1, e = null == n ? 0 : n.length, u = 0, i = [
        ]; ++r < e; ) {
            var o = n[r];
            t(o, r, n) && (i[u++] = o)
        }
        return i
    }
    function o(n, t) {
        return !(null == n || !n.length) && - 1 < v(n, t, 0)
    }
    function f(n, t, r) {
        for (var e = - 1, u = null == n ? 0 : n.length; ++e < u; ) if (r(t, n[e])) return true;
        return false
    }
    function c(n, t) {
        for (var r = - 1, e = null == n ? 0 : n.length, u = Array(e); ++r < e; ) u[r] = t(n[r], r, n);
        return u
    }
    function a(n, t) {
        for (var r = - 1, e = t.length, u = n.length; ++r < e; ) n[u + r] = t[r];
        return n
    }
    function l(n, t, r, e) {
        var u = - 1,
            i = null == n ? 0 : n.length;
        for (e && i && (r = n[++u]); ++u < i; ) r = t(r, n[u], u, n);
        return r
    }
    function s(n, t, r, e) {
        var u = null == n ? 0 : n.length;
        for (e && u && (r = n[--u]); u--; ) r = t(r, n[u], u, n);
        return r
    }
    function h(n, t) {
        for (var r = - 1, e = null == n ? 0 : n.length; ++r < e; ) if (t(n[r], r, n)) return true;
        return false
    }
    function p(n, t, r) {
        var e;
        return r(n, function (n, r, u) {
            if (t(n, r, u)) return e = r,
                false
        }),
            e
    }
    function _(n, t, r, e) {
        var u = n.length;
        for (r += e ? 1 : - 1; e ? r-- : ++r < u; ) if (t(n[r], r, n)) return r;
        return - 1
    }
    function v(n, t, r) {
        if (t === t) n: {
            --r;
            for (var e = n.length; ++r < e; ) if (n[r] === t) {
                n = r;
                break n
            }
            n = - 1
        } else n = _(n, d, r);
        return n
    }
    function g(n, t, r, e) {
        --r;
        for (var u = n.length; ++r < u; ) if (e(n[r], t)) return r;
        return - 1
    }
    function d(n) {
        return n !== n
    }
    function y(n, t) {
        var r = null == n ? 0 : n.length;
        return r ? m(n, t) / r : F
    }
    function b(n) {
        return function (t) {
            return null == t ? T : t[n]
        }
    }
    function x(n) {
        return function (t) {
            return null == n ? T : n[t]
        }
    }
    function j(n, t, r, e, u) {
        return u(n, function (n, u, i) {
            r = e ? (e = false, n)  : t(r, n, u, i)
        }),
            r
    }
    function w(n, t) {
        var r = n.length;
        for (n.sort(t); r--; ) n[r] = n[r].c;
        return n
    }
    function m(n, t) {
        for (var r, e = - 1, u = n.length; ++e < u; ) {
            var i = t(n[e]);
            i !== T && (r = r === T ? i : r + i)
        }
        return r
    }
    function A(n, t) {
        for (var r = - 1, e = Array(n); ++r < n; ) e[r] = t(r);
        return e
    }
    function k(n, t) {
        return c(t, function (t) {
            return [t,
                n[t]]
        })
    }
    function E(n) {
        return function (t) {
            return n(t)
        }
    }
    function S(n, t) {
        return c(t, function (t) {
            return n[t]
        })
    }
    function O(n, t) {
        return n.has(t)
    }
    function I(n, t) {
        for (var r = - 1, e = n.length; ++r < e && - 1 < v(t, n[r], 0); );
        return r
    }
    function R(n, t) {
        for (var r = n.length; r-- && - 1 < v(t, n[r], 0); );
        return r
    }
    function z(n) {
        return '\\' + Ln[n]
    }
    function W(n) {
        var t = - 1,
            r = Array(n.size);
        return n.forEach(function (n, e) {
            r[++t] = [
                e,
                n
            ]
        }),
            r
    }
    function U(n, t) {
        return function (r) {
            return n(t(r))
        }
    }
    function B(n, t) {
        for (var r = - 1, e = n.length, u = 0, i = [
        ]; ++r < e; ) {
            var o = n[r];
            o !== t && '__lodash_placeholder__' !== o || (n[r] = '__lodash_placeholder__', i[u++] = r)
        }
        return i
    }
    function L(n) {
        var t = - 1,
            r = Array(n.size);
        return n.forEach(function (n) {
            r[++t] = n
        }),
            r
    }
    function C(n) {
        var t = - 1,
            r = Array(n.size);
        return n.forEach(function (n) {
            r[++t] = [
                n,
                n
            ]
        }),
            r
    }
    function D(n) {
        if (Rn.test(n)) {
            for (var t = On.lastIndex = 0; On.test(n); ) ++t;
            n = t
        } else n = Qn(n);
        return n
    }
    function M(n) {
        return Rn.test(n) ? n.match(On) || [
        ] : n.split('')
    }
    var T,
        $ = 1 / 0,
        F = NaN,
        N = [
            ['ary',
                128],
            [
                'bind',
                1
            ],
            [
                'bindKey',
                2
            ],
            [
                'curry',
                8
            ],
            [
                'curryRight',
                16
            ],
            [
                'flip',
                512
            ],
            [
                'partial',
                32
            ],
            [
                'partialRight',
                64
            ],
            [
                'rearg',
                256
            ]
        ],
        P = /\b__p\+='';/g,
        Z = /\b(__p\+=)''\+/g,
        q = /(__e\(.*?\)|\b__t\))\+'';/g,
        V = /&(?:amp|lt|gt|quot|#39);/g,
        K = /[&<>"']/g,
        G = RegExp(V.source),
        H = RegExp(K.source),
        J = /<%-([\s\S]+?)%>/g,
        Y = /<%([\s\S]+?)%>/g,
        Q = /<%=([\s\S]+?)%>/g,
        X = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        nn = /^\w*$/,
        tn = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        rn = /[\\^$.*+?()[\]{}|]/g,
        en = RegExp(rn.source),
        un = /^\s+|\s+$/g,
        on = /^\s+/,
        fn = /\s+$/,
        cn = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        an = /\{\n\/\* \[wrapped with (.+)\] \*/,
        ln = /,? & /,
        sn = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
        hn = /\\(\\)?/g,
        pn = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
        _n = /\w*$/,
        vn = /^[-+]0x[0-9a-f]+$/i,
        gn = /^0b[01]+$/i,
        dn = /^\[object .+?Constructor\]$/,
        yn = /^0o[0-7]+$/i,
        bn = /^(?:0|[1-9]\d*)$/,
        xn = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
        jn = /($^)/,
        wn = /['\n\r\u2028\u2029\\]/g,
        mn = '[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*',
        An = '(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])' + mn,
        kn = '(?:[^\\ud800-\\udfff][\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]?|[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff])',
        En = RegExp('[\'’]', 'g'),
        Sn = RegExp('[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]', 'g'),
        On = RegExp('\\ud83c[\\udffb-\\udfff](?=\\ud83c[\\udffb-\\udfff])|' + kn + mn, 'g'),
        In = RegExp(['[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:[\'’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:[\'’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:[\'’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:[\'’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+',
            An].join('|'), 'g'),
        Rn = RegExp('[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]'),
        zn = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
        Wn = 'Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout'.split(' '),
        Un = {
        };
    Un['[object Float32Array]'] = Un['[object Float64Array]'] = Un['[object Int8Array]'] = Un['[object Int16Array]'] = Un['[object Int32Array]'] = Un['[object Uint8Array]'] = Un['[object Uint8ClampedArray]'] = Un['[object Uint16Array]'] = Un['[object Uint32Array]'] = true,
        Un['[object Arguments]'] = Un['[object Array]'] = Un['[object ArrayBuffer]'] = Un['[object Boolean]'] = Un['[object DataView]'] = Un['[object Date]'] = Un['[object Error]'] = Un['[object Function]'] = Un['[object Map]'] = Un['[object Number]'] = Un['[object Object]'] = Un['[object RegExp]'] = Un['[object Set]'] = Un['[object String]'] = Un['[object WeakMap]'] = false;
    var Bn = {
    };
    Bn['[object Arguments]'] = Bn['[object Array]'] = Bn['[object ArrayBuffer]'] = Bn['[object DataView]'] = Bn['[object Boolean]'] = Bn['[object Date]'] = Bn['[object Float32Array]'] = Bn['[object Float64Array]'] = Bn['[object Int8Array]'] = Bn['[object Int16Array]'] = Bn['[object Int32Array]'] = Bn['[object Map]'] = Bn['[object Number]'] = Bn['[object Object]'] = Bn['[object RegExp]'] = Bn['[object Set]'] = Bn['[object String]'] = Bn['[object Symbol]'] = Bn['[object Uint8Array]'] = Bn['[object Uint8ClampedArray]'] = Bn['[object Uint16Array]'] = Bn['[object Uint32Array]'] = true,
        Bn['[object Error]'] = Bn['[object Function]'] = Bn['[object WeakMap]'] = false;
    var Ln = {
            '\\': '\\',
            '\'': '\'',
            '\n': 'n',
            '\r': 'r',
            ' ': 'u2028',
            ' ': 'u2029'
        },
        Cn = parseFloat,
        Dn = parseInt,
        Mn = 'object' == typeof global && global && global.Object === Object && global,
        Tn = 'object' == typeof self && self && self.Object === Object && self,
        $n = Mn || Tn || Function('return this') (),
        Fn = 'object' == typeof exports && exports && !exports.nodeType && exports,
        Nn = Fn && 'object' == typeof module && module && !module.nodeType && module,
        Pn = Nn && Nn.exports === Fn,
        Zn = Pn && Mn.process,
        qn = function () {
            try {
                var n = Nn && Nn.require && Nn.require('util').types;
                return n ? n : Zn && Zn.binding && Zn.binding('util')
            } catch (n) {
            }
        }(),
        Vn = qn && qn.isArrayBuffer,
        Kn = qn && qn.isDate,
        Gn = qn && qn.isMap,
        Hn = qn && qn.isRegExp,
        Jn = qn && qn.isSet,
        Yn = qn && qn.isTypedArray,
        Qn = b('length'),
        Xn = x({
            'À': 'A',
            'Á': 'A',
            'Â': 'A',
            'Ã': 'A',
            'Ä': 'A',
            'Å': 'A',
            'à': 'a',
            'á': 'a',
            'â': 'a',
            'ã': 'a',
            'ä': 'a',
            'å': 'a',
            'Ç': 'C',
            'ç': 'c',
            'Ð': 'D',
            'ð': 'd',
            'È': 'E',
            'É': 'E',
            'Ê': 'E',
            'Ë': 'E',
            'è': 'e',
            'é': 'e',
            'ê': 'e',
            'ë': 'e',
            'Ì': 'I',
            'Í': 'I',
            'Î': 'I',
            'Ï': 'I',
            'ì': 'i',
            'í': 'i',
            'î': 'i',
            'ï': 'i',
            'Ñ': 'N',
            'ñ': 'n',
            'Ò': 'O',
            'Ó': 'O',
            'Ô': 'O',
            'Õ': 'O',
            'Ö': 'O',
            'Ø': 'O',
            'ò': 'o',
            'ó': 'o',
            'ô': 'o',
            'õ': 'o',
            'ö': 'o',
            'ø': 'o',
            'Ù': 'U',
            'Ú': 'U',
            'Û': 'U',
            'Ü': 'U',
            'ù': 'u',
            'ú': 'u',
            'û': 'u',
            'ü': 'u',
            'Ý': 'Y',
            'ý': 'y',
            'ÿ': 'y',
            'Æ': 'Ae',
            'æ': 'ae',
            'Þ': 'Th',
            'þ': 'th',
            'ß': 'ss',
            'Ā': 'A',
            'Ă': 'A',
            'Ą': 'A',
            'ā': 'a',
            'ă': 'a',
            'ą': 'a',
            'Ć': 'C',
            'Ĉ': 'C',
            'Ċ': 'C',
            'Č': 'C',
            'ć': 'c',
            'ĉ': 'c',
            'ċ': 'c',
            'č': 'c',
            'Ď': 'D',
            'Đ': 'D',
            'ď': 'd',
            'đ': 'd',
            'Ē': 'E',
            'Ĕ': 'E',
            'Ė': 'E',
            'Ę': 'E',
            'Ě': 'E',
            'ē': 'e',
            'ĕ': 'e',
            'ė': 'e',
            'ę': 'e',
            'ě': 'e',
            'Ĝ': 'G',
            'Ğ': 'G',
            'Ġ': 'G',
            'Ģ': 'G',
            'ĝ': 'g',
            'ğ': 'g',
            'ġ': 'g',
            'ģ': 'g',
            'Ĥ': 'H',
            'Ħ': 'H',
            'ĥ': 'h',
            'ħ': 'h',
            'Ĩ': 'I',
            'Ī': 'I',
            'Ĭ': 'I',
            'Į': 'I',
            'İ': 'I',
            'ĩ': 'i',
            'ī': 'i',
            'ĭ': 'i',
            'į': 'i',
            'ı': 'i',
            'Ĵ': 'J',
            'ĵ': 'j',
            'Ķ': 'K',
            'ķ': 'k',
            'ĸ': 'k',
            'Ĺ': 'L',
            'Ļ': 'L',
            'Ľ': 'L',
            'Ŀ': 'L',
            'Ł': 'L',
            'ĺ': 'l',
            'ļ': 'l',
            'ľ': 'l',
            'ŀ': 'l',
            'ł': 'l',
            'Ń': 'N',
            'Ņ': 'N',
            'Ň': 'N',
            'Ŋ': 'N',
            'ń': 'n',
            'ņ': 'n',
            'ň': 'n',
            'ŋ': 'n',
            'Ō': 'O',
            'Ŏ': 'O',
            'Ő': 'O',
            'ō': 'o',
            'ŏ': 'o',
            'ő': 'o',
            'Ŕ': 'R',
            'Ŗ': 'R',
            'Ř': 'R',
            'ŕ': 'r',
            'ŗ': 'r',
            'ř': 'r',
            'Ś': 'S',
            'Ŝ': 'S',
            'Ş': 'S',
            'Š': 'S',
            'ś': 's',
            'ŝ': 's',
            'ş': 's',
            'š': 's',
            'Ţ': 'T',
            'Ť': 'T',
            'Ŧ': 'T',
            'ţ': 't',
            'ť': 't',
            'ŧ': 't',
            'Ũ': 'U',
            'Ū': 'U',
            'Ŭ': 'U',
            'Ů': 'U',
            'Ű': 'U',
            'Ų': 'U',
            'ũ': 'u',
            'ū': 'u',
            'ŭ': 'u',
            'ů': 'u',
            'ű': 'u',
            'ų': 'u',
            'Ŵ': 'W',
            'ŵ': 'w',
            'Ŷ': 'Y',
            'ŷ': 'y',
            'Ÿ': 'Y',
            'Ź': 'Z',
            'Ż': 'Z',
            'Ž': 'Z',
            'ź': 'z',
            'ż': 'z',
            'ž': 'z',
            'Ĳ': 'IJ',
            'ĳ': 'ij',
            'Œ': 'Oe',
            'œ': 'oe',
            'ŉ': '\'n',
            'ſ': 's'
        }),
        nt = x({
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            '\'': '&#39;'
        }),
        tt = x({
            '&amp;': '&',
            '&lt;': '<',
            '&gt;': '>',
            '&quot;': '"',
            '&#39;': '\''
        }),
        rt = function x(mn) {
            function An(n) {
                if (yu(n) && !ff(n) && !(n instanceof Ln)) {
                    if (n instanceof On) return n;
                    if (oi.call(n, '__wrapped__')) return Fe(n)
                }
                return new On(n)
            }
            function kn() {
            }
            function On(n, t) {
                this.__wrapped__ = n,
                    this.__actions__ = [
                    ],
                    this.__chain__ = !!t,
                    this.__index__ = 0,
                    this.__values__ = T
            }
            function Ln(n) {
                this.__wrapped__ = n,
                    this.__actions__ = [
                    ],
                    this.__dir__ = 1,
                    this.__filtered__ = false,
                    this.__iteratees__ = [
                    ],
                    this.__takeCount__ = 4294967295,
                    this.__views__ = [
                    ]
            }
            function Mn(n) {
                var t = - 1,
                    r = null == n ? 0 : n.length;
                for (this.clear(); ++t < r; ) {
                    var e = n[t];
                    this.set(e[0], e[1])
                }
            }
            function Tn(n) {
                var t = - 1,
                    r = null == n ? 0 : n.length;
                for (this.clear(); ++t < r; ) {
                    var e = n[t];
                    this.set(e[0], e[1])
                }
            }
            function Fn(n) {
                var t = - 1,
                    r = null == n ? 0 : n.length;
                for (this.clear(); ++t < r; ) {
                    var e = n[t];
                    this.set(e[0], e[1])
                }
            }
            function Nn(n) {
                var t = - 1,
                    r = null == n ? 0 : n.length;
                for (this.__data__ = new Fn; ++t < r; ) this.add(n[t])
            }
            function Zn(n) {
                this.size = (this.__data__ = new Tn(n)).size
            }
            function qn(n, t) {
                var r,
                    e = ff(n),
                    u = !e && of(n),
                    i = !e && !u && af(n),
                    o = !e && !u && !i && _f(n),
                    u = (e = e || u || i || o) ? A(n.length, ni)  : [
                    ],
                    f = u.length;
                for (r in n) !t && !oi.call(n, r) || e && ('length' == r || i && ('offset' == r || 'parent' == r) || o && ('buffer' == r || 'byteLength' == r || 'byteOffset' == r) || Se(r, f)) || u.push(r);
                return u
            }
            function Qn(n) {
                var t = n.length;
                return t ? n[ir(0, t - 1)] : T
            }
            function et(n, t) {
                return De(Lr(n), pt(t, 0, n.length))
            }
            function ut(n) {
                return De(Lr(n))
            }
            function it(n, t, r) {
                (r === T || lu(n[t], r)) && (r !== T || t in n) || st(n, t, r)
            }
            function ot(n, t, r) {
                var e = n[t];
                oi.call(n, t) && lu(e, r) && (r !== T || t in n) || st(n, t, r)
            }
            function ft(n, t) {
                for (var r = n.length; r--; ) if (lu(n[r][0], t)) return r;
                return - 1
            }
            function ct(n, t, r, e) {
                return uo(n, function (n, u, i) {
                    t(e, n, r(n), i)
                }),
                    e
            }
            function at(n, t) {
                return n && Cr(t, Wu(t), n)
            }
            function lt(n, t) {
                return n && Cr(t, Uu(t), n)
            }
            function st(n, t, r) {
                '__proto__' == t && Ai ? Ai(n, t, {
                    configurable: true,
                    enumerable: true,
                    value: r,
                    writable: true
                })  : n[t] = r
            }
            function ht(n, t) {
                for (var r = - 1, e = t.length, u = Ku(e), i = null == n; ++r < e; ) u[r] = i ? T : Ru(n, t[r]);
                return u
            }
            function pt(n, t, r) {
                return n === n && (r !== T && (n = n <= r ? n : r), t !== T && (n = n >= t ? n : t)),
                    n
            }
            function _t(n, t, e, u, i, o) {
                var f,
                    c = 1 & t,
                    a = 2 & t,
                    l = 4 & t;
                if (e && (f = i ? e(n, u, i, o)  : e(n)), f !== T) return f;
                if (!du(n)) return n;
                if (u = ff(n)) {
                    if (f = me(n), !c) return Lr(n, f)
                } else {
                    var s = vo(n),
                        h = '[object Function]' == s || '[object GeneratorFunction]' == s;
                    if (af(n)) return Ir(n, c);
                    if ('[object Object]' == s || '[object Arguments]' == s || h && !i) {
                        if (f = a || h ? {
                            }
                            : Ae(n), !c) return a ? Mr(n, lt(f, n))  : Dr(n, at(f, n))
                    } else {
                        if (!Bn[s]) return i ? n : {
                        };
                        f = ke(n, s, c)
                    }
                }
                if (o || (o = new Zn), i = o.get(n)) return i;
                if (o.set(n, f), pf(n)) return n.forEach(function (r) {
                    f.add(_t(r, t, e, r, n, o))
                }),
                    f;
                if (sf(n)) return n.forEach(function (r, u) {
                    f.set(u, _t(r, t, e, u, n, o))
                }),
                    f;
                var a = l ? a ? ve : _e : a ? Uu : Wu,
                    p = u ? T : a(n);
                return r(p || n, function (r, u) {
                    p && (u = r, r = n[u]),
                        ot(f, u, _t(r, t, e, u, n, o))
                }),
                    f
            }
            function vt(n) {
                var t = Wu(n);
                return function (r) {
                    return gt(r, n, t)
                }
            }
            function gt(n, t, r) {
                var e = r.length;
                if (null == n) return !e;
                for (n = Qu(n); e--; ) {
                    var u = r[e],
                        i = t[u],
                        o = n[u];
                    if (o === T && !(u in n) || !i(o)) return false
                }
                return true
            }
            function dt(n, t, r) {
                if ('function' != typeof n) throw new ti('Expected a function');
                return bo(function () {
                    n.apply(T, r)
                }, t)
            }
            function yt(n, t, r, e) {
                var u = - 1,
                    i = o,
                    a = true,
                    l = n.length,
                    s = [
                    ],
                    h = t.length;
                if (!l) return s;
                r && (t = c(t, E(r))),
                    e ? (i = f, a = false)  : 200 <= t.length && (i = O, a = false, t = new Nn(t));
                n: for (; ++u < l; ) {
                    var p = n[u],
                        _ = null == r ? p : r(p),
                        p = e || 0 !== p ? p : 0;
                    if (a && _ === _) {
                        for (var v = h; v--; ) if (t[v] === _) continue n;
                        s.push(p)
                    } else i(t, _, e) || s.push(p)
                }
                return s
            }
            function bt(n, t) {
                var r = true;
                return uo(n, function (n, e, u) {
                    return r = !!t(n, e, u)
                }),
                    r
            }
            function xt(n, t, r) {
                for (var e = - 1, u = n.length; ++e < u; ) {
                    var i = n[e],
                        o = t(i);
                    if (null != o && (f === T ? o === o && !wu(o)  : r(o, f))) var f = o,
                        c = i
                }
                return c
            }
            function jt(n, t) {
                var r = [
                ];
                return uo(n, function (n, e, u) {
                    t(n, e, u) && r.push(n)
                }),
                    r
            }
            function wt(n, t, r, e, u) {
                var i = - 1,
                    o = n.length;
                for (r || (r = Ee), u || (u = [
                ]); ++i < o; ) {
                    var f = n[i];
                    0 < t && r(f) ? 1 < t ? wt(f, t - 1, r, e, u)  : a(u, f)  : e || (u[u.length] = f)
                }
                return u
            }
            function mt(n, t) {
                return n && oo(n, t, Wu)
            }
            function At(n, t) {
                return n && fo(n, t, Wu)
            }
            function kt(n, t) {
                return i(t, function (t) {
                    return _u(n[t])
                })
            }
            function Et(n, t) {
                t = Sr(t, n);
                for (var r = 0, e = t.length; null != n && r < e; ) n = n[Me(t[r++])];
                return r && r == e ? n : T
            }
            function St(n, t, r) {
                return t = t(n),
                    ff(n) ? t : a(t, r(n))
            }
            function Ot(n) {
                if (null == n) return n === T ? '[object Undefined]' : '[object Null]';
                if (mi && mi in Qu(n)) {
                    var t = oi.call(n, mi),
                        r = n[mi];
                    try {
                        n[mi] = T;
                        var e = true
                    } catch (n) {
                    }
                    var u = ai.call(n);
                    e && (t ? n[mi] = r : delete n[mi]),
                        n = u
                } else n = ai.call(n);
                return n
            }
            function It(n, t) {
                return n > t
            }
            function Rt(n, t) {
                return null != n && oi.call(n, t)
            }
            function zt(n, t) {
                return null != n && t in Qu(n)
            }
            function Wt(n, t, r) {
                for (var e = r ? f : o, u = n[0].length, i = n.length, a = i, l = Ku(i), s = 1 / 0, h = [
                ]; a--; ) {
                    var p = n[a];
                    a && t && (p = c(p, E(t))),
                        s = Ci(p.length, s),
                        l[a] = !r && (t || 120 <= u && 120 <= p.length) ? new Nn(a && p)  : T
                }
                var p = n[0],
                    _ = - 1,
                    v = l[0];
                n: for (; ++_ < u && h.length < s; ) {
                    var g = p[_],
                        d = t ? t(g)  : g,
                        g = r || 0 !== g ? g : 0;
                    if (v ? !O(v, d)  : !e(h, d, r)) {
                        for (a = i; --a; ) {
                            var y = l[a];
                            if (y ? !O(y, d)  : !e(n[a], d, r)) continue n
                        }
                        v && v.push(d),
                            h.push(g)
                    }
                }
                return h
            }
            function Ut(n, t, r, e) {
                return mt(n, function (n, u, i) {
                    t(e, r(n), u, i)
                }),
                    e
            }
            function Bt(t, r, e) {
                return r = Sr(r, t),
                    t = 2 > r.length ? t : Et(t, hr(r, 0, - 1)),
                    r = null == t ? t : t[Me(Ve(r))],
                    null == r ? T : n(r, t, e)
            }
            function Lt(n) {
                return yu(n) && '[object Arguments]' == Ot(n)
            }
            function Ct(n) {
                return yu(n) && '[object ArrayBuffer]' == Ot(n)
            }
            function Dt(n) {
                return yu(n) && '[object Date]' == Ot(n)
            }
            function Mt(n, t, r, e, u) {
                if (n === t) return true;
                if (null == n || null == t || !yu(n) && !yu(t)) return n !== n && t !== t;
                n: {
                    var i = ff(n),
                        o = ff(t),
                        f = i ? '[object Array]' : vo(n),
                        c = o ? '[object Array]' : vo(t),
                        f = '[object Arguments]' == f ? '[object Object]' : f,
                        c = '[object Arguments]' == c ? '[object Object]' : c,
                        a = '[object Object]' == f,
                        o = '[object Object]' == c;
                    if ((c = f == c) && af(n)) {
                        if (!af(t)) {
                            t = false;
                            break n
                        }
                        i = true,
                            a = false
                    }
                    if (c && !a) u || (u = new Zn),
                        t = i || _f(n) ? se(n, t, r, e, Mt, u)  : he(n, t, f, r, e, Mt, u);
                    else {
                        if (!(1 & r) && (i = a && oi.call(n, '__wrapped__'), f = o && oi.call(t, '__wrapped__'), i || f)) {
                            n = i ? n.value()  : n,
                                t = f ? t.value()  : t,
                            u || (u = new Zn),
                                t = Mt(n, t, r, e, u);
                            break n
                        }
                        if (c) t: if (u || (u = new Zn), i = 1 & r, f = _e(n), o = f.length, c = _e(t).length, o == c || i) {
                            for (a = o; a--; ) {
                                var l = f[a];
                                if (!(i ? l in t : oi.call(t, l))) {
                                    t = false;
                                    break t
                                }
                            }
                            if ((c = u.get(n)) && u.get(t)) t = c == t;
                            else {
                                c = true,
                                    u.set(n, t),
                                    u.set(t, n);
                                for (var s = i; ++a < o; ) {
                                    var l = f[a],
                                        h = n[l],
                                        p = t[l];
                                    if (e) var _ = i ? e(p, h, l, t, n, u)  : e(h, p, l, n, t, u);
                                    if (_ === T ? h !== p && !Mt(h, p, r, e, u)  : !_) {
                                        c = false;
                                        break
                                    }
                                    s || (s = 'constructor' == l)
                                }
                                c && !s && (r = n.constructor, e = t.constructor, r != e && 'constructor' in n && 'constructor' in t && !('function' == typeof r && r instanceof r && 'function' == typeof e && e instanceof e) && (c = false)),
                                    u.delete (n),
                                    u.delete (t),
                                    t = c
                            }
                        } else t = false;
                        else t = false
                    }
                }
                return t
            }
            function Tt(n) {
                return yu(n) && '[object Map]' == vo(n)
            }
            function $t(n, t, r, e) {
                var u = r.length,
                    i = u,
                    o = !e;
                if (null == n) return !i;
                for (n = Qu(n); u--; ) {
                    var f = r[u];
                    if (o && f[2] ? f[1] !== n[f[0]] : !(f[0] in n)) return false
                }
                for (; ++u < i; ) {
                    var f = r[u],
                        c = f[0],
                        a = n[c],
                        l = f[1];
                    if (o && f[2]) {
                        if (a === T && !(c in n)) return false
                    } else {
                        if (f = new Zn, e) var s = e(a, l, c, n, t, f);
                        if (s === T ? !Mt(l, a, 3, e, f)  : !s) return false
                    }
                }
                return true
            }
            function Ft(n) {
                return !(!du(n) || ci && ci in n) && (_u(n) ? hi : dn).test(Te(n))
            }
            function Nt(n) {
                return yu(n) && '[object RegExp]' == Ot(n)
            }
            function Pt(n) {
                return yu(n) && '[object Set]' == vo(n)
            }
            function Zt(n) {
                return yu(n) && gu(n.length) && !!Un[Ot(n)]
            }
            function qt(n) {
                return 'function' == typeof n ? n : null == n ? $u : 'object' == typeof n ? ff(n) ? Jt(n[0], n[1])  : Ht(n)  : Zu(n)
            }
            function Vt(n) {
                if (!ze(n)) return Bi(n);
                var t,
                    r = [
                    ];
                for (t in Qu(n)) oi.call(n, t) && 'constructor' != t && r.push(t);
                return r
            }
            function Kt(n, t) {
                return n < t
            }
            function Gt(n, t) {
                var r = - 1,
                    e = su(n) ? Ku(n.length)  : [
                    ];
                return uo(n, function (n, u, i) {
                    e[++r] = t(n, u, i)
                }),
                    e
            }
            function Ht(n) {
                var t = xe(n);
                return 1 == t.length && t[0][2] ? We(t[0][0], t[0][1])  : function (r) {
                    return r === n || $t(r, n, t)
                }
            }
            function Jt(n, t) {
                return Ie(n) && t === t && !du(t) ? We(Me(n), t)  : function (r) {
                    var e = Ru(r, n);
                    return e === T && e === t ? zu(r, n)  : Mt(t, e, 3)
                }
            }
            function Yt(n, t, r, e, u) {
                n !== t && oo(t, function (i, o) {
                    if (du(i)) {
                        u || (u = new Zn);
                        var f = u,
                            c = Be(n, o),
                            a = Be(t, o),
                            l = f.get(a);
                        if (!l) {
                            var l = e ? e(c, a, o + '', n, t, f)  : T,
                                s = l === T;
                            if (s) {
                                var h = ff(a),
                                    p = !h && af(a),
                                    _ = !h && !p && _f(a),
                                    l = a;
                                h || p || _ ? ff(c) ? l = c : hu(c) ? l = Lr(c)  : p ? (s = false, l = Ir(a, true))  : _ ? (s = false, l = zr(a, true))  : l = [
                                ] : xu(a) || of(a) ? (l = c, of(c) ? l = Ou(c)  : du(c) && !_u(c) || (l = Ae(a)))  : s = false
                            }
                            s && (f.set(a, l), Yt(l, a, r, e, f), f.delete (a))
                        }
                        it(n, o, l)
                    } else f = e ? e(Be(n, o), i, o + '', n, t, u)  : T,
                    f === T && (f = i),
                        it(n, o, f)
                }, Uu)
            }
            function Qt(n, t) {
                var r = n.length;
                if (r) return t += 0 > t ? r : 0,
                    Se(t, r) ? n[t] : T
            }
            function Xt(n, t, r) {
                var e = - 1;
                return t = c(t.length ? t : [
                    $u
                ], E(ye())),
                    n = Gt(n, function (n, r, u) {
                        return {
                            a: c(t, function (t) {
                                return t(n)
                            }),
                            b: ++e,
                            c: n
                        }
                    }),
                    w(n, function (n, t) {
                        var e;
                        n: {
                            e = - 1;
                            for (var u = n.a, i = t.a, o = u.length, f = r.length; ++e < o; ) {
                                var c = Wr(u[e], i[e]);
                                if (c) {
                                    if (e >= f) {
                                        e = c;
                                        break n
                                    }
                                    e = c * ('desc' == r[e] ? - 1 : 1);
                                    break n
                                }
                            }
                            e = n.b - t.b
                        }
                        return e
                    })
            }
            function nr(n, t) {
                return tr(n, t, function (t, r) {
                    return zu(n, r)
                })
            }
            function tr(n, t, r) {
                for (var e = - 1, u = t.length, i = {
                }; ++e < u; ) {
                    var o = t[e],
                        f = Et(n, o);
                    r(f, o) && lr(i, Sr(o, n), f)
                }
                return i
            }
            function rr(n) {
                return function (t) {
                    return Et(t, n)
                }
            }
            function er(n, t, r, e) {
                var u = e ? g : v,
                    i = - 1,
                    o = t.length,
                    f = n;
                for (n === t && (t = Lr(t)), r && (f = c(n, E(r))); ++i < o; ) for (var a = 0, l = t[i], l = r ? r(l)  : l; - 1 < (a = u(f, l, a, e)); ) f !== n && xi.call(f, a, 1),
                    xi.call(n, a, 1);
                return n
            }
            function ur(n, t) {
                for (var r = n ? t.length : 0, e = r - 1; r--; ) {
                    var u = t[r];
                    if (r == e || u !== i) {
                        var i = u;
                        Se(u) ? xi.call(n, u, 1)  : xr(n, u)
                    }
                }
                return n
            }
            function ir(n, t) {
                return n + Ii(Ti() * (t - n + 1))
            }
            function or(n, t) {
                var r = '';
                if (!n || 1 > t || 9007199254740991 < t) return r;
                do t % 2 && (r += n),
                (t = Ii(t / 2)) && (n += n);
                while (t);
                return r
            }
            function fr(n, t) {
                return xo(Ue(n, t, $u), n + '')
            }
            function cr(n) {
                return Qn(Lu(n))
            }
            function ar(n, t) {
                var r = Lu(n);
                return De(r, pt(t, 0, r.length))
            }
            function lr(n, t, r, e) {
                if (!du(n)) return n;
                t = Sr(t, n);
                for (var u = - 1, i = t.length, o = i - 1, f = n; null != f && ++u < i; ) {
                    var c = Me(t[u]),
                        a = r;
                    if (u != o) {
                        var l = f[c],
                            a = e ? e(l, c, f)  : T;
                        a === T && (a = du(l) ? l : Se(t[u + 1]) ? [
                        ] : {
                        })
                    }
                    ot(f, c, a),
                        f = f[c]
                }
                return n
            }
            function sr(n) {
                return De(Lu(n))
            }
            function hr(n, t, r) {
                var e = - 1,
                    u = n.length;
                for (0 > t && (t = - t > u ? 0 : u + t), r = r > u ? u : r, 0 > r && (r += u), u = t > r ? 0 : r - t >>> 0, t >>>= 0, r = Ku(u); ++e < u; ) r[e] = n[e + t];
                return r
            }
            function pr(n, t) {
                var r;
                return uo(n, function (n, e, u) {
                    return r = t(n, e, u),
                        !r
                }),
                    !!r
            }
            function _r(n, t, r) {
                var e = 0,
                    u = null == n ? e : n.length;
                if ('number' == typeof t && t === t && 2147483647 >= u) {
                    for (; e < u; ) {
                        var i = e + u >>> 1,
                            o = n[i];
                        null !== o && !wu(o) && (r ? o <= t : o < t) ? e = i + 1 : u = i
                    }
                    return u
                }
                return vr(n, t, $u, r)
            }
            function vr(n, t, r, e) {
                t = r(t);
                for (var u = 0, i = null == n ? 0 : n.length, o = t !== t, f = null === t, c = wu(t), a = t === T; u < i; ) {
                    var l = Ii((u + i) / 2),
                        s = r(n[l]),
                        h = s !== T,
                        p = null === s,
                        _ = s === s,
                        v = wu(s);
                    (o ? e || _ : a ? _ && (e || h)  : f ? _ && h && (e || !p)  : c ? _ && h && !p && (e || !v)  : p || v ? 0 : e ? s <= t : s < t) ? u = l + 1 : i = l
                }
                return Ci(i, 4294967294)
            }
            function gr(n, t) {
                for (var r = - 1, e = n.length, u = 0, i = [
                ]; ++r < e; ) {
                    var o = n[r],
                        f = t ? t(o)  : o;
                    if (!r || !lu(f, c)) {
                        var c = f;
                        i[u++] = 0 === o ? 0 : o
                    }
                }
                return i
            }
            function dr(n) {
                return 'number' == typeof n ? n : wu(n) ? F : + n
            }
            function yr(n) {
                if ('string' == typeof n) return n;
                if (ff(n)) return c(n, yr) + '';
                if (wu(n)) return ro ? ro.call(n)  : '';
                var t = n + '';
                return '0' == t && 1 / n == - $ ? '-0' : t
            }
            function br(n, t, r) {
                var e = - 1,
                    u = o,
                    i = n.length,
                    c = true,
                    a = [
                    ],
                    l = a;
                if (r) c = false,
                    u = f;
                else if (200 <= i) {
                    if (u = t ? null : so(n)) return L(u);
                    c = false,
                        u = O,
                        l = new Nn
                } else l = t ? [
                ] : a;
                n: for (; ++e < i; ) {
                    var s = n[e],
                        h = t ? t(s)  : s,
                        s = r || 0 !== s ? s : 0;
                    if (c && h === h) {
                        for (var p = l.length; p--; ) if (l[p] === h) continue n;
                        t && l.push(h),
                            a.push(s)
                    } else u(l, h, r) || (l !== a && l.push(h), a.push(s))
                }
                return a
            }
            function xr(n, t) {
                return t = Sr(t, n),
                    n = 2 > t.length ? n : Et(n, hr(t, 0, - 1)),
                null == n || delete n[Me(Ve(t))]
            }
            function jr(n, t, r, e) {
                for (var u = n.length, i = e ? u : - 1; (e ? i-- : ++i < u) && t(n[i], i, n); );
                return r ? hr(n, e ? 0 : i, e ? i + 1 : u)  : hr(n, e ? i + 1 : 0, e ? u : i)
            }
            function wr(n, t) {
                var r = n;
                return r instanceof Ln && (r = r.value()),
                    l(t, function (n, t) {
                        return t.func.apply(t.thisArg, a([n], t.args))
                    }, r)
            }
            function mr(n, t, r) {
                var e = n.length;
                if (2 > e) return e ? br(n[0])  : [
                ];
                for (var u = - 1, i = Ku(e); ++u < e; ) for (var o = n[u], f = - 1; ++f < e; ) f != u && (i[u] = yt(i[u] || o, n[f], t, r));
                return br(wt(i, 1), t, r)
            }
            function Ar(n, t, r) {
                for (var e = - 1, u = n.length, i = t.length, o = {
                }; ++e < u; ) r(o, n[e], e < i ? t[e] : T);
                return o
            }
            function kr(n) {
                return hu(n) ? n : [
                ]
            }
            function Er(n) {
                return 'function' == typeof n ? n : $u
            }
            function Sr(n, t) {
                return ff(n) ? n : Ie(n, t) ? [
                    n
                ] : jo(Iu(n))
            }
            function Or(n, t, r) {
                var e = n.length;
                return r = r === T ? e : r,
                    !t && r >= e ? n : hr(n, t, r)
            }
            function Ir(n, t) {
                if (t) return n.slice();
                var r = n.length,
                    r = gi ? gi(r)  : new n.constructor(r);
                return n.copy(r),
                    r
            }
            function Rr(n) {
                var t = new n.constructor(n.byteLength);
                return new vi(t).set(new vi(n)),
                    t
            }
            function zr(n, t) {
                return new n.constructor(t ? Rr(n.buffer)  : n.buffer, n.byteOffset, n.length)
            }
            function Wr(n, t) {
                if (n !== t) {
                    var r = n !== T,
                        e = null === n,
                        u = n === n,
                        i = wu(n),
                        o = t !== T,
                        f = null === t,
                        c = t === t,
                        a = wu(t);
                    if (!f && !a && !i && n > t || i && o && c && !f && !a || e && o && c || !r && c || !u) return 1;
                    if (!e && !i && !a && n < t || a && r && u && !e && !i || f && r && u || !o && u || !c) return - 1
                }
                return 0
            }
            function Ur(n, t, r, e) {
                var u = - 1,
                    i = n.length,
                    o = r.length,
                    f = - 1,
                    c = t.length,
                    a = Li(i - o, 0),
                    l = Ku(c + a);
                for (e = !e; ++f < c; ) l[f] = t[f];
                for (; ++u < o; ) (e || u < i) && (l[r[u]] = n[u]);
                for (; a--; ) l[f++] = n[u++];
                return l
            }
            function Br(n, t, r, e) {
                var u = - 1,
                    i = n.length,
                    o = - 1,
                    f = r.length,
                    c = - 1,
                    a = t.length,
                    l = Li(i - f, 0),
                    s = Ku(l + a);
                for (e = !e; ++u < l; ) s[u] = n[u];
                for (l = u; ++c < a; ) s[l + c] = t[c];
                for (; ++o < f; ) (e || u < i) && (s[l + r[o]] = n[u++]);
                return s
            }
            function Lr(n, t) {
                var r = - 1,
                    e = n.length;
                for (t || (t = Ku(e)); ++r < e; ) t[r] = n[r];
                return t
            }
            function Cr(n, t, r, e) {
                var u = !r;
                r || (r = {
                });
                for (var i = - 1, o = t.length; ++i < o; ) {
                    var f = t[i],
                        c = e ? e(r[f], n[f], f, r, n)  : T;
                    c === T && (c = n[f]),
                        u ? st(r, f, c)  : ot(r, f, c)
                }
                return r
            }
            function Dr(n, t) {
                return Cr(n, po(n), t)
            }
            function Mr(n, t) {
                return Cr(n, _o(n), t)
            }
            function Tr(n, r) {
                return function (e, u) {
                    var i = ff(e) ? t : ct,
                        o = r ? r()  : {
                        };
                    return i(e, n, ye(u, 2), o)
                }
            }
            function $r(n) {
                return fr(function (t, r) {
                    var e = - 1,
                        u = r.length,
                        i = 1 < u ? r[u - 1] : T,
                        o = 2 < u ? r[2] : T,
                        i = 3 < n.length && 'function' == typeof i ? (u--, i)  : T;
                    for (o && Oe(r[0], r[1], o) && (i = 3 > u ? T : i, u = 1), t = Qu(t); ++e < u; ) (o = r[e]) && n(t, o, e, i);
                    return t
                })
            }
            function Fr(n, t) {
                return function (r, e) {
                    if (null == r) return r;
                    if (!su(r)) return n(r, e);
                    for (var u = r.length, i = t ? u : - 1, o = Qu(r); (t ? i-- : ++i < u) && false !== e(o[i], i, o); );
                    return r
                }
            }
            function Nr(n) {
                return function (t, r, e) {
                    var u = - 1,
                        i = Qu(t);
                    e = e(t);
                    for (var o = e.length; o--; ) {
                        var f = e[n ? o : ++u];
                        if (false === r(i[f], f, i)) break
                    }
                    return t
                }
            }
            function Pr(n, t, r) {
                function e() {
                    return (this && this !== $n && this instanceof e ? i : n).apply(u ? r : this, arguments)
                }
                var u = 1 & t,
                    i = Vr(n);
                return e
            }
            function Zr(n) {
                return function (t) {
                    t = Iu(t);
                    var r = Rn.test(t) ? M(t)  : T,
                        e = r ? r[0] : t.charAt(0);
                    return t = r ? Or(r, 1).join('')  : t.slice(1),
                    e[n]() + t
                }
            }
            function qr(n) {
                return function (t) {
                    return l(Mu(Du(t).replace(En, '')), n, '')
                }
            }
            function Vr(n) {
                return function () {
                    var t = arguments;
                    switch (t.length) {
                        case 0:
                            return new n;
                        case 1:
                            return new n(t[0]);
                        case 2:
                            return new n(t[0], t[1]);
                        case 3:
                            return new n(t[0], t[1], t[2]);
                        case 4:
                            return new n(t[0], t[1], t[2], t[3]);
                        case 5:
                            return new n(t[0], t[1], t[2], t[3], t[4]);
                        case 6:
                            return new n(t[0], t[1], t[2], t[3], t[4], t[5]);
                        case 7:
                            return new n(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                    }
                    var r = eo(n.prototype),
                        t = n.apply(r, t);
                    return du(t) ? t : r
                }
            }
            function Kr(t, r, e) {
                function u() {
                    for (var o = arguments.length, f = Ku(o), c = o, a = de(u); c--; ) f[c] = arguments[c];
                    return c = 3 > o && f[0] !== a && f[o - 1] !== a ? [
                    ] : B(f, a),
                        o -= c.length,
                        o < e ? ue(t, r, Jr, u.placeholder, T, f, c, T, T, e - o)  : n(this && this !== $n && this instanceof u ? i : t, this, f)
                }
                var i = Vr(t);
                return u
            }
            function Gr(n) {
                return function (t, r, e) {
                    var u = Qu(t);
                    if (!su(t)) {
                        var i = ye(r, 3);
                        t = Wu(t),
                            r = function (n) {
                                return i(u[n], n, u)
                            }
                    }
                    return r = n(t, r, e),
                        - 1 < r ? u[i ? t[r] : r] : T
                }
            }
            function Hr(n) {
                return pe(function (t) {
                    var r = t.length,
                        e = r,
                        u = On.prototype.thru;
                    for (n && t.reverse(); e--; ) {
                        var i = t[e];
                        if ('function' != typeof i) throw new ti('Expected a function');
                        if (u && !o && 'wrapper' == ge(i)) var o = new On([], true)
                    }
                    for (e = o ? e : r; ++e < r; ) var i = t[e],
                        u = ge(i),
                        f = 'wrapper' == u ? ho(i)  : T,
                        o = f && Re(f[0]) && 424 == f[1] && !f[4].length && 1 == f[9] ? o[ge(f[0])].apply(o, f[3])  : 1 == i.length && Re(i) ? o[u]()  : o.thru(i);
                    return function () {
                        var n = arguments,
                            e = n[0];
                        if (o && 1 == n.length && ff(e)) return o.plant(e).value();
                        for (var u = 0, n = r ? t[u].apply(this, n)  : e; ++u < r; ) n = t[u].call(this, n);
                        return n
                    }
                })
            }
            function Jr(n, t, r, e, u, i, o, f, c, a) {
                function l() {
                    for (var d = arguments.length, y = Ku(d), b = d; b--; ) y[b] = arguments[b];
                    if (_) {
                        var x,
                            j = de(l),
                            b = y.length;
                        for (x = 0; b--; ) y[b] === j && ++x
                    }
                    if (e && (y = Ur(y, e, u, _)), i && (y = Br(y, i, o, _)), d -= x, _ && d < a) return j = B(y, j),
                        ue(n, t, Jr, l.placeholder, r, y, j, f, c, a - d);
                    if (j = h ? r : this, b = p ? j[n] : n, d = y.length, f) {
                        x = y.length;
                        for (var w = Ci(f.length, x), m = Lr(y); w--; ) {
                            var A = f[w];
                            y[w] = Se(A, x) ? m[A] : T
                        }
                    } else v && 1 < d && y.reverse();
                    return s && c < d && (y.length = c),
                    this && this !== $n && this instanceof l && (b = g || Vr(b)),
                        b.apply(j, y)
                }
                var s = 128 & t,
                    h = 1 & t,
                    p = 2 & t,
                    _ = 24 & t,
                    v = 512 & t,
                    g = p ? T : Vr(n);
                return l
            }
            function Yr(n, t) {
                return function (r, e) {
                    return Ut(r, n, t(e), {
                    })
                }
            }
            function Qr(n, t) {
                return function (r, e) {
                    var u;
                    if (r === T && e === T) return t;
                    if (r !== T && (u = r), e !== T) {
                        if (u === T) return e;
                        'string' == typeof r || 'string' == typeof e ? (r = yr(r), e = yr(e))  : (r = dr(r), e = dr(e)),
                            u = n(r, e)
                    }
                    return u
                }
            }
            function Xr(t) {
                return pe(function (r) {
                    return r = c(r, E(ye())),
                        fr(function (e) {
                            var u = this;
                            return t(r, function (t) {
                                return n(t, u, e)
                            })
                        })
                })
            }
            function ne(n, t) {
                t = t === T ? ' ' : yr(t);
                var r = t.length;
                return 2 > r ? r ? or(t, n)  : t : (r = or(t, Oi(n / D(t))), Rn.test(t) ? Or(M(r), 0, n).join('')  : r.slice(0, n))
            }
            function te(t, r, e, u) {
                function i() {
                    for (var r = - 1, c = arguments.length, a = - 1, l = u.length, s = Ku(l + c), h = this && this !== $n && this instanceof i ? f : t; ++a < l; ) s[a] = u[a];
                    for (; c--; ) s[a++] = arguments[++r];
                    return n(h, o ? e : this, s)
                }
                var o = 1 & r,
                    f = Vr(t);
                return i
            }
            function re(n) {
                return function (t, r, e) {
                    e && 'number' != typeof e && Oe(t, r, e) && (r = e = T),
                        t = Au(t),
                        r === T ? (r = t, t = 0)  : r = Au(r),
                        e = e === T ? t < r ? 1 : - 1 : Au(e);
                    var u = - 1;
                    r = Li(Oi((r - t) / (e || 1)), 0);
                    for (var i = Ku(r); r--; ) i[n ? r : ++u] = t,
                        t += e;
                    return i
                }
            }
            function ee(n) {
                return function (t, r) {
                    return 'string' == typeof t && 'string' == typeof r || (t = Su(t), r = Su(r)),
                        n(t, r)
                }
            }
            function ue(n, t, r, e, u, i, o, f, c, a) {
                var l = 8 & t,
                    s = l ? o : T;
                o = l ? T : o;
                var h = l ? i : T;
                return i = l ? T : i,
                    t = (t | (l ? 32 : 64)) & ~(l ? 64 : 32),
                4 & t || (t &= - 4),
                    u = [
                        n,
                        t,
                        u,
                        h,
                        s,
                        i,
                        o,
                        f,
                        c,
                        a
                    ],
                    r = r.apply(T, u),
                Re(n) && yo(r, u),
                    r.placeholder = e,
                    Le(r, n, t)
            }
            function ie(n) {
                var t = Yu[n];
                return function (n, r) {
                    if (n = Su(n), r = null == r ? 0 : Ci(ku(r), 292)) {
                        var e = (Iu(n) + 'e').split('e'),
                            e = t(e[0] + 'e' + ( + e[1] + r)),
                            e = (Iu(e) + 'e').split('e');
                        return + (e[0] + 'e' + ( + e[1] - r))
                    }
                    return t(n)
                }
            }
            function oe(n) {
                return function (t) {
                    var r = vo(t);
                    return '[object Map]' == r ? W(t)  : '[object Set]' == r ? C(t)  : k(t, n(t))
                }
            }
            function fe(n, t, r, e, u, i, o, f) {
                var c = 2 & t;
                if (!c && 'function' != typeof n) throw new ti('Expected a function');
                var a = e ? e.length : 0;
                if (a || (t &= - 97, e = u = T), o = o === T ? o : Li(ku(o), 0), f = f === T ? f : ku(f), a -= u ? u.length : 0, 64 & t) {
                    var l = e,
                        s = u;
                    e = u = T
                }
                var h = c ? T : ho(n);
                return i = [
                    n,
                    t,
                    r,
                    e,
                    u,
                    l,
                    s,
                    i,
                    o,
                    f
                ],
                h && (r = i[1], n = h[1], t = r | n, e = 128 == n && 8 == r || 128 == n && 256 == r && i[7].length <= h[8] || 384 == n && h[7].length <= h[8] && 8 == r, 131 > t || e) && (1 & n && (i[2] = h[2], t |= 1 & r ? 0 : 4), (r = h[3]) && (e = i[3], i[3] = e ? Ur(e, r, h[4])  : r, i[4] = e ? B(i[3], '__lodash_placeholder__')  : h[4]), (r = h[5]) && (e = i[5], i[5] = e ? Br(e, r, h[6])  : r, i[6] = e ? B(i[5], '__lodash_placeholder__')  : h[6]), (r = h[7]) && (i[7] = r), 128 & n && (i[8] = null == i[8] ? h[8] : Ci(i[8], h[8])), null == i[9] && (i[9] = h[9]), i[0] = h[0], i[1] = t),
                    n = i[0],
                    t = i[1],
                    r = i[2],
                    e = i[3],
                    u = i[4],
                    f = i[9] = i[9] === T ? c ? 0 : n.length : Li(i[9] - a, 0),
                !f && 24 & t && (t &= - 25),
                    c = t && 1 != t ? 8 == t || 16 == t ? Kr(n, t, f)  : 32 != t && 33 != t || u.length ? Jr.apply(T, i)  : te(n, t, r, e)  : Pr(n, t, r),
                    Le((h ? co : yo) (c, i), n, t)
            }
            function ce(n, t, r, e) {
                return n === T || lu(n, ei[r]) && !oi.call(e, r) ? t : n
            }
            function ae(n, t, r, e, u, i) {
                return du(n) && du(t) && (i.set(t, n), Yt(n, t, T, ae, i), i.delete (t)),
                    n
            }
            function le(n) {
                return xu(n) ? T : n
            }
            function se(n, t, r, e, u, i) {
                var o = 1 & r,
                    f = n.length,
                    c = t.length;
                if (f != c && !(o && c > f)) return false;
                if ((c = i.get(n)) && i.get(t)) return c == t;
                var c = - 1,
                    a = true,
                    l = 2 & r ? new Nn : T;
                for (i.set(n, t), i.set(t, n); ++c < f; ) {
                    var s = n[c],
                        p = t[c];
                    if (e) var _ = o ? e(p, s, c, t, n, i)  : e(s, p, c, n, t, i);
                    if (_ !== T) {
                        if (_) continue;
                        a = false;
                        break
                    }
                    if (l) {
                        if (!h(t, function (n, t) {
                            if (!O(l, t) && (s === n || u(s, n, r, e, i))) return l.push(t)
                        })) {
                            a = false;
                            break
                        }
                    } else if (s !== p && !u(s, p, r, e, i)) {
                        a = false;
                        break
                    }
                }
                return i.delete (n),
                    i.delete (t),
                    a
            }
            function he(n, t, r, e, u, i, o) {
                switch (r) {
                    case '[object DataView]':
                        if (n.byteLength != t.byteLength || n.byteOffset != t.byteOffset) break;
                        n = n.buffer,
                            t = t.buffer;
                    case '[object ArrayBuffer]':
                        if (n.byteLength != t.byteLength || !i(new vi(n), new vi(t))) break;
                        return true;
                    case '[object Boolean]':
                    case '[object Date]':
                    case '[object Number]':
                        return lu( + n, + t);
                    case '[object Error]':
                        return n.name == t.name && n.message == t.message;
                    case '[object RegExp]':
                    case '[object String]':
                        return n == t + '';
                    case '[object Map]':
                        var f = W;
                    case '[object Set]':
                        if (f || (f = L), n.size != t.size && !(1 & e)) break;
                        return (r = o.get(n)) ? r == t : (e |= 2, o.set(n, t), t = se(f(n), f(t), e, u, i, o), o.delete (n), t);
                    case '[object Symbol]':
                        if (to) return to.call(n) == to.call(t)
                }
                return false
            }
            function pe(n) {
                return xo(Ue(n, T, Ze), n + '')
            }
            function _e(n) {
                return St(n, Wu, po)
            }
            function ve(n) {
                return St(n, Uu, _o)
            }
            function ge(n) {
                for (var t = n.name + '', r = Gi[t], e = oi.call(Gi, t) ? r.length : 0; e--; ) {
                    var u = r[e],
                        i = u.func;
                    if (null == i || i == n) return u.name
                }
                return t
            }
            function de(n) {
                return (oi.call(An, 'placeholder') ? An : n).placeholder
            }
            function ye() {
                var n = An.iteratee || Fu,
                    n = n === Fu ? qt : n;
                return arguments.length ? n(arguments[0], arguments[1])  : n
            }
            function be(n, t) {
                var r = n.__data__,
                    e = typeof t;
                return ('string' == e || 'number' == e || 'symbol' == e || 'boolean' == e ? '__proto__' !== t : null === t) ? r['string' == typeof t ? 'string' : 'hash'] : r.map
            }
            function xe(n) {
                for (var t = Wu(n), r = t.length; r--; ) {
                    var e = t[r],
                        u = n[e];
                    t[r] = [
                        e,
                        u,
                        u === u && !du(u)
                    ]
                }
                return t
            }
            function je(n, t) {
                var r = null == n ? T : n[t];
                return Ft(r) ? r : T
            }
            function we(n, t, r) {
                t = Sr(t, n);
                for (var e = - 1, u = t.length, i = false; ++e < u; ) {
                    var o = Me(t[e]);
                    if (!(i = null != n && r(n, o))) break;
                    n = n[o]
                }
                return i || ++e != u ? i : (u = null == n ? 0 : n.length, !!u && gu(u) && Se(o, u) && (ff(n) || of(n)))
            }
            function me(n) {
                var t = n.length,
                    r = new n.constructor(t);
                return t && 'string' == typeof n[0] && oi.call(n, 'index') && (r.index = n.index, r.input = n.input),
                    r
            }
            function Ae(n) {
                return 'function' != typeof n.constructor || ze(n) ? {
                    }
                    : eo(di(n))
            }
            function ke(n, t, r) {
                var e = n.constructor;
                switch (t) {
                    case '[object ArrayBuffer]':
                        return Rr(n);
                    case '[object Boolean]':
                    case '[object Date]':
                        return new e( + n);
                    case '[object DataView]':
                        return t = r ? Rr(n.buffer)  : n.buffer,
                            new n.constructor(t, n.byteOffset, n.byteLength);
                    case '[object Float32Array]':
                    case '[object Float64Array]':
                    case '[object Int8Array]':
                    case '[object Int16Array]':
                    case '[object Int32Array]':
                    case '[object Uint8Array]':
                    case '[object Uint8ClampedArray]':
                    case '[object Uint16Array]':
                    case '[object Uint32Array]':
                        return zr(n, r);
                    case '[object Map]':
                        return new e;
                    case '[object Number]':
                    case '[object String]':
                        return new e(n);
                    case '[object RegExp]':
                        return t = new n.constructor(n.source, _n.exec(n)),
                            t.lastIndex = n.lastIndex,
                            t;
                    case '[object Set]':
                        return new e;
                    case '[object Symbol]':
                        return to ? Qu(to.call(n))  : {
                        }
                }
            }
            function Ee(n) {
                return ff(n) || of(n) || !!(ji && n && n[ji])
            }
            function Se(n, t) {
                var r = typeof n;
                return t = null == t ? 9007199254740991 : t,
                !!t && ('number' == r || 'symbol' != r && bn.test(n)) && - 1 < n && 0 == n % 1 && n < t
            }
            function Oe(n, t, r) {
                if (!du(r)) return false;
                var e = typeof t;
                return !!('number' == e ? su(r) && Se(t, r.length)  : 'string' == e && t in r) && lu(r[t], n)
            }
            function Ie(n, t) {
                if (ff(n)) return false;
                var r = typeof n;
                return !('number' != r && 'symbol' != r && 'boolean' != r && null != n && !wu(n)) || nn.test(n) || !X.test(n) || null != t && n in Qu(t)
            }
            function Re(n) {
                var t = ge(n),
                    r = An[t];
                return 'function' == typeof r && t in Ln.prototype && (n === r || (t = ho(r), !!t && n === t[0]))
            }
            function ze(n) {
                var t = n && n.constructor;
                return n === ('function' == typeof t && t.prototype || ei)
            }
            function We(n, t) {
                return function (r) {
                    return null != r && r[n] === t && (t !== T || n in Qu(r))
                }
            }
            function Ue(t, r, e) {
                return r = Li(r === T ? t.length - 1 : r, 0),
                    function () {
                        for (var u = arguments, i = - 1, o = Li(u.length - r, 0), f = Ku(o); ++i < o; ) f[i] = u[r + i];
                        for (i = - 1, o = Ku(r + 1); ++i < r; ) o[i] = u[i];
                        return o[r] = e(f),
                            n(t, this, o)
                    }
            }
            function Be(n, t) {
                if ('__proto__' != t) return n[t]
            }
            function Le(n, t, r) {
                var e = t + '';
                t = xo;
                var u,
                    i = $e;
                return u = (u = e.match(an)) ? u[1].split(ln)  : [
                ],
                    r = i(u, r),
                (i = r.length) && (u = i - 1, r[u] = (1 < i ? '& ' : '') + r[u], r = r.join(2 < i ? ', ' : ' '), e = e.replace(cn, '{\n/* [wrapped with ' + r + '] */\n')),
                    t(n, e)
            }
            function Ce(n) {
                var t = 0,
                    r = 0;
                return function () {
                    var e = Di(),
                        u = 16 - (e - r);
                    if (r = e, 0 < u) {
                        if (800 <= ++t) return arguments[0]
                    } else t = 0;
                    return n.apply(T, arguments)
                }
            }
            function De(n, t) {
                var r = - 1,
                    e = n.length,
                    u = e - 1;
                for (t = t === T ? e : t; ++r < t; ) {
                    var e = ir(r, u),
                        i = n[e];
                    n[e] = n[r],
                        n[r] = i
                }
                return n.length = t,
                    n
            }
            function Me(n) {
                if ('string' == typeof n || wu(n)) return n;
                var t = n + '';
                return '0' == t && 1 / n == - $ ? '-0' : t
            }
            function Te(n) {
                if (null != n) {
                    try {
                        return ii.call(n)
                    } catch (n) {
                    }
                    return n + ''
                }
                return ''
            }
            function $e(n, t) {
                return r(N, function (r) {
                    var e = '_.' + r[0];
                    t & r[1] && !o(n, e) && n.push(e)
                }),
                    n.sort()
            }
            function Fe(n) {
                if (n instanceof Ln) return n.clone();
                var t = new On(n.__wrapped__, n.__chain__);
                return t.__actions__ = Lr(n.__actions__),
                    t.__index__ = n.__index__,
                    t.__values__ = n.__values__,
                    t
            }
            function Ne(n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (r = null == r ? 0 : ku(r), 0 > r && (r = Li(e + r, 0)), _(n, ye(t, 3), r))  : - 1
            }
            function Pe(n, t, r) {
                var e = null == n ? 0 : n.length;
                if (!e) return - 1;
                var u = e - 1;
                return r !== T && (u = ku(r), u = 0 > r ? Li(e + u, 0)  : Ci(u, e - 1)),
                    _(n, ye(t, 3), u, true)
            }
            function Ze(n) {
                return (null == n ? 0 : n.length) ? wt(n, 1)  : [
                ]
            }
            function qe(n) {
                return n && n.length ? n[0] : T
            }
            function Ve(n) {
                var t = null == n ? 0 : n.length;
                return t ? n[t - 1] : T
            }
            function Ke(n, t) {
                return n && n.length && t && t.length ? er(n, t)  : n
            }
            function Ge(n) {
                return null == n ? n : $i.call(n)
            }
            function He(n) {
                if (!n || !n.length) return [];
                var t = 0;
                return n = i(n, function (n) {
                    if (hu(n)) return t = Li(n.length, t),
                        true
                }),
                    A(t, function (t) {
                        return c(n, b(t))
                    })
            }
            function Je(t, r) {
                if (!t || !t.length) return [];
                var e = He(t);
                return null == r ? e : c(e, function (t) {
                    return n(r, T, t)
                })
            }
            function Ye(n) {
                return n = An(n),
                    n.__chain__ = true,
                    n
            }
            function Qe(n, t) {
                return t(n)
            }
            function Xe() {
                return this
            }
            function nu(n, t) {
                return (ff(n) ? r : uo) (n, ye(t, 3))
            }
            function tu(n, t) {
                return (ff(n) ? e : io) (n, ye(t, 3))
            }
            function ru(n, t) {
                return (ff(n) ? c : Gt) (n, ye(t, 3))
            }
            function eu(n, t, r) {
                return t = r ? T : t,
                    t = n && null == t ? n.length : t,
                    fe(n, 128, T, T, T, T, t)
            }
            function uu(n, t) {
                var r;
                if ('function' != typeof t) throw new ti('Expected a function');
                return n = ku(n),
                    function () {
                        return 0 < --n && (r = t.apply(this, arguments)),
                        1 >= n && (t = T),
                            r
                    }
            }
            function iu(n, t, r) {
                return t = r ? T : t,
                    n = fe(n, 8, T, T, T, T, T, t),
                    n.placeholder = iu.placeholder,
                    n
            }
            function ou(n, t, r) {
                return t = r ? T : t,
                    n = fe(n, 16, T, T, T, T, T, t),
                    n.placeholder = ou.placeholder,
                    n
            }
            function fu(n, t, r) {
                function e(t) {
                    var r = c,
                        e = a;
                    return c = a = T,
                        _ = t,
                        s = n.apply(e, r)
                }
                function u(n) {
                    var r = n - p;
                    return n -= _,
                    p === T || r >= t || 0 > r || g && n >= l
                }
                function i() {
                    var n = Go();
                    if (u(n)) return o(n);
                    var r,
                        e = bo;
                    r = n - _,
                        n = t - (n - p),
                        r = g ? Ci(n, l - r)  : n,
                        h = e(i, r)
                }
                function o(n) {
                    return h = T,
                        d && c ? e(n)  : (c = a = T, s)
                }
                function f() {
                    var n = Go(),
                        r = u(n);
                    if (c = arguments, a = this, p = n, r) {
                        if (h === T) return _ = n = p,
                            h = bo(i, t),
                            v ? e(n)  : s;
                        if (g) return h = bo(i, t),
                            e(p)
                    }
                    return h === T && (h = bo(i, t)),
                        s
                }
                var c,
                    a,
                    l,
                    s,
                    h,
                    p,
                    _ = 0,
                    v = false,
                    g = false,
                    d = true;
                if ('function' != typeof n) throw new ti('Expected a function');
                return t = Su(t) || 0,
                du(r) && (v = !!r.leading, l = (g = 'maxWait' in r) ? Li(Su(r.maxWait) || 0, t)  : l, d = 'trailing' in r ? !!r.trailing : d),
                    f.cancel = function () {
                        h !== T && lo(h),
                            _ = 0,
                            c = p = a = h = T
                    },
                    f.flush = function () {
                        return h === T ? s : o(Go())
                    },
                    f
            }
            function cu(n, t) {
                if ('function' != typeof n || null != t && 'function' != typeof t) throw new ti('Expected a function');
                var r = function () {
                    var e = arguments,
                        u = t ? t.apply(this, e)  : e[0],
                        i = r.cache;
                    return i.has(u) ? i.get(u)  : (e = n.apply(this, e), r.cache = i.set(u, e) || i, e)
                };
                return r.cache = new (cu.Cache || Fn),
                    r
            }
            function au(n) {
                if ('function' != typeof n) throw new ti('Expected a function');
                return function () {
                    var t = arguments;
                    switch (t.length) {
                        case 0:
                            return !n.call(this);
                        case 1:
                            return !n.call(this, t[0]);
                        case 2:
                            return !n.call(this, t[0], t[1]);
                        case 3:
                            return !n.call(this, t[0], t[1], t[2])
                    }
                    return !n.apply(this, t)
                }
            }
            function lu(n, t) {
                return n === t || n !== n && t !== t
            }
            function su(n) {
                return null != n && gu(n.length) && !_u(n)
            }
            function hu(n) {
                return yu(n) && su(n)
            }
            function pu(n) {
                if (!yu(n)) return false;
                var t = Ot(n);
                return '[object Error]' == t || '[object DOMException]' == t || 'string' == typeof n.message && 'string' == typeof n.name && !xu(n)
            }
            function _u(n) {
                return !!du(n) && (n = Ot(n), '[object Function]' == n || '[object GeneratorFunction]' == n || '[object AsyncFunction]' == n || '[object Proxy]' == n)
            }
            function vu(n) {
                return 'number' == typeof n && n == ku(n)
            }
            function gu(n) {
                return 'number' == typeof n && - 1 < n && 0 == n % 1 && 9007199254740991 >= n
            }
            function du(n) {
                var t = typeof n;
                return null != n && ('object' == t || 'function' == t)
            }
            function yu(n) {
                return null != n && 'object' == typeof n
            }
            function bu(n) {
                return 'number' == typeof n || yu(n) && '[object Number]' == Ot(n)
            }
            function xu(n) {
                return !(!yu(n) || '[object Object]' != Ot(n)) && (n = di(n), null === n || (n = oi.call(n, 'constructor') && n.constructor, 'function' == typeof n && n instanceof n && ii.call(n) == li))
            }
            function ju(n) {
                return 'string' == typeof n || !ff(n) && yu(n) && '[object String]' == Ot(n)
            }
            function wu(n) {
                return 'symbol' == typeof n || yu(n) && '[object Symbol]' == Ot(n)
            }
            function mu(n) {
                if (!n) return [];
                if (su(n)) return ju(n) ? M(n)  : Lr(n);
                if (wi && n[wi]) {
                    n = n[wi]();
                    for (var t, r = [
                    ]; !(t = n.next()).done; ) r.push(t.value);
                    return r
                }
                return t = vo(n),
                    ('[object Map]' == t ? W : '[object Set]' == t ? L : Lu) (n)
            }
            function Au(n) {
                return n ? (n = Su(n), n === $ || n === - $ ? 1.7976931348623157e+308 * (0 > n ? - 1 : 1)  : n === n ? n : 0)  : 0 === n ? n : 0
            }
            function ku(n) {
                n = Au(n);
                var t = n % 1;
                return n === n ? t ? n - t : n : 0
            }
            function Eu(n) {
                return n ? pt(ku(n), 0, 4294967295)  : 0
            }
            function Su(n) {
                if ('number' == typeof n) return n;
                if (wu(n)) return F;
                if (du(n) && (n = 'function' == typeof n.valueOf ? n.valueOf()  : n, n = du(n) ? n + '' : n), 'string' != typeof n) return 0 === n ? n : + n;
                n = n.replace(un, '');
                var t = gn.test(n);
                return t || yn.test(n) ? Dn(n.slice(2), t ? 2 : 8)  : vn.test(n) ? F : + n
            }
            function Ou(n) {
                return Cr(n, Uu(n))
            }
            function Iu(n) {
                return null == n ? '' : yr(n)
            }
            function Ru(n, t, r) {
                return n = null == n ? T : Et(n, t),
                    n === T ? r : n
            }
            function zu(n, t) {
                return null != n && we(n, t, zt)
            }
            function Wu(n) {
                return su(n) ? qn(n)  : Vt(n)
            }
            function Uu(n) {
                if (su(n)) n = qn(n, true);
                else if (du(n)) {
                    var t,
                        r = ze(n),
                        e = [
                        ];
                    for (t in n) ('constructor' != t || !r && oi.call(n, t)) && e.push(t);
                    n = e
                } else {
                    if (t = [
                    ], null != n) for (r in Qu(n)) t.push(r);
                    n = t
                }
                return n
            }
            function Bu(n, t) {
                if (null == n) return {
                };
                var r = c(ve(n), function (n) {
                    return [n]
                });
                return t = ye(t),
                    tr(n, r, function (n, r) {
                        return t(n, r[0])
                    })
            }
            function Lu(n) {
                return null == n ? [
                ] : S(n, Wu(n))
            }
            function Cu(n) {
                return $f(Iu(n).toLowerCase())
            }
            function Du(n) {
                return (n = Iu(n)) && n.replace(xn, Xn).replace(Sn, '')
            }
            function Mu(n, t, r) {
                return n = Iu(n),
                    t = r ? T : t,
                    t === T ? zn.test(n) ? n.match(In) || [
                    ] : n.match(sn) || [
                    ] : n.match(t) || [
                    ]
            }
            function Tu(n) {
                return function () {
                    return n
                }
            }
            function $u(n) {
                return n
            }
            function Fu(n) {
                return qt('function' == typeof n ? n : _t(n, 1))
            }
            function Nu(n, t, e) {
                var u = Wu(t),
                    i = kt(t, u);
                null != e || du(t) && (i.length || !u.length) || (e = t, t = n, n = this, i = kt(t, Wu(t)));
                var o = !(du(e) && 'chain' in e && !e.chain),
                    f = _u(n);
                return r(i, function (r) {
                    var e = t[r];
                    n[r] = e,
                    f && (n.prototype[r] = function () {
                        var t = this.__chain__;
                        if (o || t) {
                            var r = n(this.__wrapped__);
                            return (r.__actions__ = Lr(this.__actions__)).push({
                                func: e,
                                args: arguments,
                                thisArg: n
                            }),
                                r.__chain__ = t,
                                r
                        }
                        return e.apply(n, a([this.value()], arguments))
                    })
                }),
                    n
            }
            function Pu() {
            }
            function Zu(n) {
                return Ie(n) ? b(Me(n))  : rr(n)
            }
            function qu() {
                return []
            }
            function Vu() {
                return false
            }
            mn = null == mn ? $n : rt.defaults($n.Object(), mn, rt.pick($n, Wn));
            var Ku = mn.Array,
                Gu = mn.Date,
                Hu = mn.Error,
                Ju = mn.Function,
                Yu = mn.Math,
                Qu = mn.Object,
                Xu = mn.RegExp,
                ni = mn.String,
                ti = mn.TypeError,
                ri = Ku.prototype,
                ei = Qu.prototype,
                ui = mn['__core-js_shared__'],
                ii = Ju.prototype.toString,
                oi = ei.hasOwnProperty,
                fi = 0,
                ci = function () {
                    var n = /[^.]+$/.exec(ui && ui.keys && ui.keys.IE_PROTO || '');
                    return n ? 'Symbol(src)_1.' + n : ''
                }(),
                ai = ei.toString,
                li = ii.call(Qu),
                si = $n._,
                hi = Xu('^' + ii.call(oi).replace(rn, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'),
                pi = Pn ? mn.Buffer : T,
                _i = mn.Symbol,
                vi = mn.Uint8Array,
                gi = pi ? pi.allocUnsafe : T,
                di = U(Qu.getPrototypeOf, Qu),
                yi = Qu.create,
                bi = ei.propertyIsEnumerable,
                xi = ri.splice,
                ji = _i ? _i.isConcatSpreadable : T,
                wi = _i ? _i.iterator : T,
                mi = _i ? _i.toStringTag : T,
                Ai = function () {
                    try {
                        var n = je(Qu, 'defineProperty');
                        return n({
                        }, '', {
                        }),
                            n
                    } catch (n) {
                    }
                }(),
                ki = mn.clearTimeout !== $n.clearTimeout && mn.clearTimeout,
                Ei = Gu && Gu.now !== $n.Date.now && Gu.now,
                Si = mn.setTimeout !== $n.setTimeout && mn.setTimeout,
                Oi = Yu.ceil,
                Ii = Yu.floor,
                Ri = Qu.getOwnPropertySymbols,
                zi = pi ? pi.isBuffer : T,
                Wi = mn.isFinite,
                Ui = ri.join,
                Bi = U(Qu.keys, Qu),
                Li = Yu.max,
                Ci = Yu.min,
                Di = Gu.now,
                Mi = mn.parseInt,
                Ti = Yu.random,
                $i = ri.reverse,
                Fi = je(mn, 'DataView'),
                Ni = je(mn, 'Map'),
                Pi = je(mn, 'Promise'),
                Zi = je(mn, 'Set'),
                qi = je(mn, 'WeakMap'),
                Vi = je(Qu, 'create'),
                Ki = qi && new qi,
                Gi = {
                },
                Hi = Te(Fi),
                Ji = Te(Ni),
                Yi = Te(Pi),
                Qi = Te(Zi),
                Xi = Te(qi),
                no = _i ? _i.prototype : T,
                to = no ? no.valueOf : T,
                ro = no ? no.toString : T,
                eo = function () {
                    function n() {
                    }
                    return function (t) {
                        return du(t) ? yi ? yi(t)  : (n.prototype = t, t = new n, n.prototype = T, t)  : {
                        }
                    }
                }();
            An.templateSettings = {
                escape: J,
                evaluate: Y,
                interpolate: Q,
                variable: '',
                imports: {
                    _: An
                }
            },
                An.prototype = kn.prototype,
                An.prototype.constructor = An,
                On.prototype = eo(kn.prototype),
                On.prototype.constructor = On,
                Ln.prototype = eo(kn.prototype),
                Ln.prototype.constructor = Ln,
                Mn.prototype.clear = function () {
                    this.__data__ = Vi ? Vi(null)  : {
                    },
                        this.size = 0
                },
                Mn.prototype.delete = function (n) {
                    return n = this.has(n) && delete this.__data__[n],
                        this.size -= n ? 1 : 0,
                        n
                },
                Mn.prototype.get = function (n) {
                    var t = this.__data__;
                    return Vi ? (n = t[n], '__lodash_hash_undefined__' === n ? T : n)  : oi.call(t, n) ? t[n] : T
                },
                Mn.prototype.has = function (n) {
                    var t = this.__data__;
                    return Vi ? t[n] !== T : oi.call(t, n)
                },
                Mn.prototype.set = function (n, t) {
                    var r = this.__data__;
                    return this.size += this.has(n) ? 0 : 1,
                        r[n] = Vi && t === T ? '__lodash_hash_undefined__' : t,
                        this
                },
                Tn.prototype.clear = function () {
                    this.__data__ = [
                    ],
                        this.size = 0
                },
                Tn.prototype.delete = function (n) {
                    var t = this.__data__;
                    return n = ft(t, n),
                    !(0 > n) && (n == t.length - 1 ? t.pop()  : xi.call(t, n, 1), --this.size, true)
                },
                Tn.prototype.get = function (n) {
                    var t = this.__data__;
                    return n = ft(t, n),
                        0 > n ? T : t[n][1]
                },
                Tn.prototype.has = function (n) {
                    return - 1 < ft(this.__data__, n)
                },
                Tn.prototype.set = function (n, t) {
                    var r = this.__data__,
                        e = ft(r, n);
                    return 0 > e ? (++this.size, r.push([n,
                        t]))  : r[e][1] = t,
                        this
                },
                Fn.prototype.clear = function () {
                    this.size = 0,
                        this.__data__ = {
                            hash: new Mn,
                            map: new (Ni || Tn),
                            string: new Mn
                        }
                },
                Fn.prototype.delete = function (n) {
                    return n = be(this, n).delete (n),
                        this.size -= n ? 1 : 0,
                        n
                },
                Fn.prototype.get = function (n) {
                    return be(this, n).get(n)
                },
                Fn.prototype.has = function (n) {
                    return be(this, n).has(n)
                },
                Fn.prototype.set = function (n, t) {
                    var r = be(this, n),
                        e = r.size;
                    return r.set(n, t),
                        this.size += r.size == e ? 0 : 1,
                        this
                },
                Nn.prototype.add = Nn.prototype.push = function (n) {
                    return this.__data__.set(n, '__lodash_hash_undefined__'),
                        this
                },
                Nn.prototype.has = function (n) {
                    return this.__data__.has(n)
                },
                Zn.prototype.clear = function () {
                    this.__data__ = new Tn,
                        this.size = 0
                },
                Zn.prototype.delete = function (n) {
                    var t = this.__data__;
                    return n = t.delete (n),
                        this.size = t.size,
                        n
                },
                Zn.prototype.get = function (n) {
                    return this.__data__.get(n)
                },
                Zn.prototype.has = function (n) {
                    return this.__data__.has(n)
                },
                Zn.prototype.set = function (n, t) {
                    var r = this.__data__;
                    if (r instanceof Tn) {
                        var e = r.__data__;
                        if (!Ni || 199 > e.length) return e.push([n,
                            t]),
                            this.size = ++r.size,
                            this;
                        r = this.__data__ = new Fn(e)
                    }
                    return r.set(n, t),
                        this.size = r.size,
                        this
                };
            var uo = Fr(mt),
                io = Fr(At, true),
                oo = Nr(),
                fo = Nr(true),
                co = Ki ? function (n, t) {
                        return Ki.set(n, t),
                            n
                    }
                    : $u,
                ao = Ai ? function (n, t) {
                        return Ai(n, 'toString', {
                            configurable: true,
                            enumerable: false,
                            value: Tu(t),
                            writable: true
                        })
                    }
                    : $u,
                lo = ki || function (n) {
                    return $n.clearTimeout(n)
                },
                so = Zi && 1 / L(new Zi([,
                    - 0])) [1] == $ ? function (n) {
                        return new Zi(n)
                    }
                    : Pu,
                ho = Ki ? function (n) {
                        return Ki.get(n)
                    }
                    : Pu,
                po = Ri ? function (n) {
                        return null == n ? [
                        ] : (n = Qu(n), i(Ri(n), function (t) {
                            return bi.call(n, t)
                        }))
                    }
                    : qu,
                _o = Ri ? function (n) {
                        for (var t = [
                        ]; n; ) a(t, po(n)),
                            n = di(n);
                        return t
                    }
                    : qu,
                vo = Ot;
            (Fi && '[object DataView]' != vo(new Fi(new ArrayBuffer(1))) || Ni && '[object Map]' != vo(new Ni) || Pi && '[object Promise]' != vo(Pi.resolve()) || Zi && '[object Set]' != vo(new Zi) || qi && '[object WeakMap]' != vo(new qi)) && (vo = function (n) {
                var t = Ot(n);
                if (n = (n = '[object Object]' == t ? n.constructor : T) ? Te(n)  : '') switch (n) {
                    case Hi:
                        return '[object DataView]';
                    case Ji:
                        return '[object Map]';
                    case Yi:
                        return '[object Promise]';
                    case Qi:
                        return '[object Set]';
                    case Xi:
                        return '[object WeakMap]'
                }
                return t
            }); var go = ui ? _u : Vu, yo = Ce(co), bo = Si || function (n, t) {
                return $n.setTimeout(n, t)
            }, xo = Ce(ao), jo = function (n) {
                n = cu(n, function (n) {
                    return 500 === t.size && t.clear(),
                        n
                });
                var t = n.cache;
                return n
            }(function (n) {
                var t = [
                ];
                return 46 === n.charCodeAt(0) && t.push(''),
                    n.replace(tn, function (n, r, e, u) {
                        t.push(e ? u.replace(hn, '$1')  : r || n)
                    }),
                    t
            }), wo = fr(function (n, t) {
                return hu(n) ? yt(n, wt(t, 1, hu, true))  : [
                ]
            }), mo = fr(function (n, t) {
                var r = Ve(t);
                return hu(r) && (r = T),
                    hu(n) ? yt(n, wt(t, 1, hu, true), ye(r, 2))  : [
                    ]
            }), Ao = fr(function (n, t) {
                var r = Ve(t);
                return hu(r) && (r = T),
                    hu(n) ? yt(n, wt(t, 1, hu, true), T, r)  : [
                    ]
            }), ko = fr(function (n) {
                var t = c(n, kr);
                return t.length && t[0] === n[0] ? Wt(t)  : [
                ]
            }), Eo = fr(function (n) {
                var t = Ve(n),
                    r = c(n, kr);
                return t === Ve(r) ? t = T : r.pop(),
                    r.length && r[0] === n[0] ? Wt(r, ye(t, 2))  : [
                    ]
            }), So = fr(function (n) {
                var t = Ve(n),
                    r = c(n, kr);
                return (t = 'function' == typeof t ? t : T) && r.pop(),
                    r.length && r[0] === n[0] ? Wt(r, T, t)  : [
                    ]
            }), Oo = fr(Ke), Io = pe(function (n, t) {
                var r = null == n ? 0 : n.length,
                    e = ht(n, t);
                return ur(n, c(t, function (n) {
                    return Se(n, r) ? + n : n
                }).sort(Wr)),
                    e
            }), Ro = fr(function (n) {
                return br(wt(n, 1, hu, true))
            }), zo = fr(function (n) {
                var t = Ve(n);
                return hu(t) && (t = T),
                    br(wt(n, 1, hu, true), ye(t, 2))
            }), Wo = fr(function (n) {
                var t = Ve(n),
                    t = 'function' == typeof t ? t : T;
                return br(wt(n, 1, hu, true), T, t)
            }), Uo = fr(function (n, t) {
                return hu(n) ? yt(n, t)  : [
                ]
            }), Bo = fr(function (n) {
                return mr(i(n, hu))
            }), Lo = fr(function (n) {
                var t = Ve(n);
                return hu(t) && (t = T),
                    mr(i(n, hu), ye(t, 2))
            }), Co = fr(function (n) {
                var t = Ve(n),
                    t = 'function' == typeof t ? t : T;
                return mr(i(n, hu), T, t)
            }), Do = fr(He), Mo = fr(function (n) {
                var t = n.length,
                    t = 1 < t ? n[t - 1] : T,
                    t = 'function' == typeof t ? (n.pop(), t)  : T;
                return Je(n, t)
            }), To = pe(function (n) {
                var t = n.length,
                    r = t ? n[0] : 0,
                    e = this.__wrapped__,
                    u = function (t) {
                        return ht(t, n)
                    };
                return !(1 < t || this.__actions__.length) && e instanceof Ln && Se(r) ? (e = e.slice(r, + r + (t ? 1 : 0)), e.__actions__.push({
                    func: Qe,
                    args: [
                        u
                    ],
                    thisArg: T
                }), new On(e, this.__chain__).thru(function (n) {
                    return t && !n.length && n.push(T),
                        n
                }))  : this.thru(u)
            }), $o = Tr(function (n, t, r) {
                oi.call(n, r) ? ++n[r] : st(n, r, 1)
            }), Fo = Gr(Ne), No = Gr(Pe), Po = Tr(function (n, t, r) {
                oi.call(n, r) ? n[r].push(t)  : st(n, r, [
                    t
                ])
            }), Zo = fr(function (t, r, e) {
                var u = - 1,
                    i = 'function' == typeof r,
                    o = su(t) ? Ku(t.length)  : [
                    ];
                return uo(t, function (t) {
                    o[++u] = i ? n(r, t, e)  : Bt(t, r, e)
                }),
                    o
            }), qo = Tr(function (n, t, r) {
                st(n, r, t)
            }), Vo = Tr(function (n, t, r) {
                n[r ? 0 : 1].push(t)
            }, function () {
                return [[],
                    [
                    ]]
            }), Ko = fr(function (n, t) {
                if (null == n) return [];
                var r = t.length;
                return 1 < r && Oe(n, t[0], t[1]) ? t = [
                ] : 2 < r && Oe(t[0], t[1], t[2]) && (t = [
                    t[0]
                ]),
                    Xt(n, wt(t, 1), [
                    ])
            }), Go = Ei || function () {
                return $n.Date.now()
            }, Ho = fr(function (n, t, r) {
                var e = 1;
                if (r.length) var u = B(r, de(Ho)),
                    e = 32 | e;
                return fe(n, e, t, r, u)
            }), Jo = fr(function (n, t, r) {
                var e = 3;
                if (r.length) var u = B(r, de(Jo)),
                    e = 32 | e;
                return fe(t, e, n, r, u)
            }), Yo = fr(function (n, t) {
                return dt(n, 1, t)
            }), Qo = fr(function (n, t, r) {
                return dt(n, Su(t) || 0, r)
            }); cu.Cache = Fn; var Xo = fr(function (t, r) {
                r = 1 == r.length && ff(r[0]) ? c(r[0], E(ye()))  : c(wt(r, 1), E(ye()));
                var e = r.length;
                return fr(function (u) {
                    for (var i = - 1, o = Ci(u.length, e); ++i < o; ) u[i] = r[i].call(this, u[i]);
                    return n(t, this, u)
                })
            }), nf = fr(function (n, t) {
                return fe(n, 32, T, t, B(t, de(nf)))
            }), tf = fr(function (n, t) {
                return fe(n, 64, T, t, B(t, de(tf)))
            }), rf = pe(function (n, t) {
                return fe(n, 256, T, T, T, t)
            }), ef = ee(It), uf = ee(function (n, t) {
                return n >= t
            }), of = Lt(function () {
                return arguments
            }()) ? Lt : function (n) {
                return yu(n) && oi.call(n, 'callee') && !bi.call(n, 'callee')
            }, ff = Ku.isArray, cf = Vn ? E(Vn)  : Ct, af = zi || Vu, lf = Kn ? E(Kn)  : Dt, sf = Gn ? E(Gn)  : Tt, hf = Hn ? E(Hn)  : Nt, pf = Jn ? E(Jn)  : Pt, _f = Yn ? E(Yn)  : Zt, vf = ee(Kt), gf = ee(function (n, t) {
                return n <= t
            }), df = $r(function (n, t) {
                if (ze(t) || su(t)) Cr(t, Wu(t), n);
                else for (var r in t) oi.call(t, r) && ot(n, r, t[r])
            }), yf = $r(function (n, t) {
                Cr(t, Uu(t), n)
            }), bf = $r(function (n, t, r, e) {
                Cr(t, Uu(t), n, e)
            }), xf = $r(function (n, t, r, e) {
                Cr(t, Wu(t), n, e)
            }), jf = pe(ht), wf = fr(function (n, t) {
                n = Qu(n);
                var r = - 1,
                    e = t.length,
                    u = 2 < e ? t[2] : T;
                for (u && Oe(t[0], t[1], u) && (e = 1); ++r < e; ) for (var u = t[r], i = Uu(u), o = - 1, f = i.length; ++o < f; ) {
                    var c = i[o],
                        a = n[c];
                    (a === T || lu(a, ei[c]) && !oi.call(n, c)) && (n[c] = u[c])
                }
                return n
            }), mf = fr(function (t) {
                return t.push(T, ae),
                    n(Of, T, t)
            }), Af = Yr(function (n, t, r) {
                null != t && 'function' != typeof t.toString && (t = ai.call(t)),
                    n[t] = r
            }, Tu($u)), kf = Yr(function (n, t, r) {
                null != t && 'function' != typeof t.toString && (t = ai.call(t)),
                    oi.call(n, t) ? n[t].push(r)  : n[t] = [
                        r
                    ]
            }, ye), Ef = fr(Bt), Sf = $r(function (n, t, r) {
                Yt(n, t, r)
            }), Of = $r(function (n, t, r, e) {
                Yt(n, t, r, e)
            }), If = pe(function (n, t) {
                var r = {
                };
                if (null == n) return r;
                var e = false;
                t = c(t, function (t) {
                    return t = Sr(t, n),
                    e || (e = 1 < t.length),
                        t
                }),
                    Cr(n, ve(n), r),
                e && (r = _t(r, 7, le));
                for (var u = t.length; u--; ) xr(r, t[u]);
                return r
            }), Rf = pe(function (n, t) {
                return null == n ? {
                    }
                    : nr(n, t)
            }), zf = oe(Wu), Wf = oe(Uu), Uf = qr(function (n, t, r) {
                return t = t.toLowerCase(),
                n + (r ? Cu(t)  : t)
            }), Bf = qr(function (n, t, r) {
                return n + (r ? '-' : '') + t.toLowerCase()
            }), Lf = qr(function (n, t, r) {
                return n + (r ? ' ' : '') + t.toLowerCase()
            }), Cf = Zr('toLowerCase'), Df = qr(function (n, t, r) {
                return n + (r ? '_' : '') + t.toLowerCase()
            }), Mf = qr(function (n, t, r) {
                return n + (r ? ' ' : '') + $f(t)
            }), Tf = qr(function (n, t, r) {
                return n + (r ? ' ' : '') + t.toUpperCase()
            }), $f = Zr('toUpperCase'), Ff = fr(function (t, r) {
                try {
                    return n(t, T, r)
                } catch (n) {
                    return pu(n) ? n : new Hu(n)
                }
            }), Nf = pe(function (n, t) {
                return r(t, function (t) {
                    t = Me(t),
                        st(n, t, Ho(n[t], n))
                }),
                    n
            }), Pf = Hr(), Zf = Hr(true), qf = fr(function (n, t) {
                return function (r) {
                    return Bt(r, n, t)
                }
            }), Vf = fr(function (n, t) {
                return function (r) {
                    return Bt(n, r, t)
                }
            }), Kf = Xr(c), Gf = Xr(u), Hf = Xr(h), Jf = re(), Yf = re(true), Qf = Qr(function (n, t) {
                return n + t
            }, 0), Xf = ie('ceil'), nc = Qr(function (n, t) {
                return n / t
            }, 1), tc = ie('floor'), rc = Qr(function (n, t) {
                return n * t
            }, 1), ec = ie('round'), uc = Qr(function (n, t) {
                return n - t
            }, 0); return An.after = function (n, t) {
                if ('function' != typeof t) throw new ti('Expected a function');
                return n = ku(n),
                    function () {
                        if (1 > --n) return t.apply(this, arguments)
                    }
            }, An.ary = eu, An.assign = df, An.assignIn = yf, An.assignInWith = bf, An.assignWith = xf, An.at = jf, An.before = uu, An.bind = Ho, An.bindAll = Nf, An.bindKey = Jo, An.castArray = function () {
                if (!arguments.length) return [];
                var n = arguments[0];
                return ff(n) ? n : [
                    n
                ]
            }, An.chain = Ye, An.chunk = function (n, t, r) {
                if (t = (r ? Oe(n, t, r)  : t === T) ? 1 : Li(ku(t), 0), r = null == n ? 0 : n.length, !r || 1 > t) return [];
                for (var e = 0, u = 0, i = Ku(Oi(r / t)); e < r; ) i[u++] = hr(n, e, e += t);
                return i
            }, An.compact = function (n) {
                for (var t = - 1, r = null == n ? 0 : n.length, e = 0, u = [
                ]; ++t < r; ) {
                    var i = n[t];
                    i && (u[e++] = i)
                }
                return u
            }, An.concat = function () {
                var n = arguments.length;
                if (!n) return [];
                for (var t = Ku(n - 1), r = arguments[0]; n--; ) t[n - 1] = arguments[n];
                return a(ff(r) ? Lr(r)  : [
                    r
                ], wt(t, 1))
            }, An.cond = function (t) {
                var r = null == t ? 0 : t.length,
                    e = ye();
                return t = r ? c(t, function (n) {
                    if ('function' != typeof n[1]) throw new ti('Expected a function');
                    return [e(n[0]),
                        n[1]]
                })  : [
                ],
                    fr(function (e) {
                        for (var u = - 1; ++u < r; ) {
                            var i = t[u];
                            if (n(i[0], this, e)) return n(i[1], this, e)
                        }
                    })
            }, An.conforms = function (n) {
                return vt(_t(n, 1))
            }, An.constant = Tu, An.countBy = $o, An.create = function (n, t) {
                var r = eo(n);
                return null == t ? r : at(r, t)
            }, An.curry = iu, An.curryRight = ou, An.debounce = fu, An.defaults = wf, An.defaultsDeep = mf, An.defer = Yo, An.delay = Qo, An.difference = wo, An.differenceBy = mo, An.differenceWith = Ao, An.drop = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (t = r || t === T ? 1 : ku(t), hr(n, 0 > t ? 0 : t, e))  : [
                ]
            }, An.dropRight = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (t = r || t === T ? 1 : ku(t), t = e - t, hr(n, 0, 0 > t ? 0 : t))  : [
                ]
            }, An.dropRightWhile = function (n, t) {
                return n && n.length ? jr(n, ye(t, 3), true, true)  : [
                ]
            }, An.dropWhile = function (n, t) {
                return n && n.length ? jr(n, ye(t, 3), true)  : [
                ]
            }, An.fill = function (n, t, r, e) {
                var u = null == n ? 0 : n.length;
                if (!u) return [];
                for (r && 'number' != typeof r && Oe(n, t, r) && (r = 0, e = u), u = n.length, r = ku(r), 0 > r && (r = - r > u ? 0 : u + r), e = e === T || e > u ? u : ku(e), 0 > e && (e += u), e = r > e ? 0 : Eu(e); r < e; ) n[r++] = t;
                return n
            }, An.filter = function (n, t) {
                return (ff(n) ? i : jt) (n, ye(t, 3))
            }, An.flatMap = function (n, t) {
                return wt(ru(n, t), 1)
            }, An.flatMapDeep = function (n, t) {
                return wt(ru(n, t), $)
            }, An.flatMapDepth = function (n, t, r) {
                return r = r === T ? 1 : ku(r),
                    wt(ru(n, t), r)
            }, An.flatten = Ze, An.flattenDeep = function (n) {
                return (null == n ? 0 : n.length) ? wt(n, $)  : [
                ]
            }, An.flattenDepth = function (n, t) {
                return null != n && n.length ? (t = t === T ? 1 : ku(t), wt(n, t))  : [
                ]
            }, An.flip = function (n) {
                return fe(n, 512)
            }, An.flow = Pf, An.flowRight = Zf, An.fromPairs = function (n) {
                for (var t = - 1, r = null == n ? 0 : n.length, e = {
                }; ++t < r; ) {
                    var u = n[t];
                    e[u[0]] = u[1]
                }
                return e
            }, An.functions = function (n) {
                return null == n ? [
                ] : kt(n, Wu(n))
            }, An.functionsIn = function (n) {
                return null == n ? [
                ] : kt(n, Uu(n))
            }, An.groupBy = Po, An.initial = function (n) {
                return (null == n ? 0 : n.length) ? hr(n, 0, - 1)  : [
                ]
            }, An.intersection = ko, An.intersectionBy = Eo, An.intersectionWith = So, An.invert = Af, An.invertBy = kf, An.invokeMap = Zo, An.iteratee = Fu, An.keyBy = qo, An.keys = Wu, An.keysIn = Uu, An.map = ru, An.mapKeys = function (n, t) {
                var r = {
                };
                return t = ye(t, 3),
                    mt(n, function (n, e, u) {
                        st(r, t(n, e, u), n)
                    }),
                    r
            }, An.mapValues = function (n, t) {
                var r = {
                };
                return t = ye(t, 3),
                    mt(n, function (n, e, u) {
                        st(r, e, t(n, e, u))
                    }),
                    r
            }, An.matches = function (n) {
                return Ht(_t(n, 1))
            }, An.matchesProperty = function (n, t) {
                return Jt(n, _t(t, 1))
            }, An.memoize = cu, An.merge = Sf, An.mergeWith = Of, An.method = qf, An.methodOf = Vf, An.mixin = Nu, An.negate = au, An.nthArg = function (n) {
                return n = ku(n),
                    fr(function (t) {
                        return Qt(t, n)
                    })
            }, An.omit = If, An.omitBy = function (n, t) {
                return Bu(n, au(ye(t)))
            }, An.once = function (n) {
                return uu(2, n)
            }, An.orderBy = function (n, t, r, e) {
                return null == n ? [
                ] : (ff(t) || (t = null == t ? [
                ] : [
                    t
                ]), r = e ? T : r, ff(r) || (r = null == r ? [
                ] : [
                    r
                ]), Xt(n, t, r))
            }, An.over = Kf, An.overArgs = Xo, An.overEvery = Gf, An.overSome = Hf, An.partial = nf, An.partialRight = tf, An.partition = Vo, An.pick = Rf, An.pickBy = Bu, An.property = Zu, An.propertyOf = function (n) {
                return function (t) {
                    return null == n ? T : Et(n, t)
                }
            }, An.pull = Oo, An.pullAll = Ke, An.pullAllBy = function (n, t, r) {
                return n && n.length && t && t.length ? er(n, t, ye(r, 2))  : n
            }, An.pullAllWith = function (n, t, r) {
                return n && n.length && t && t.length ? er(n, t, T, r)  : n
            }, An.pullAt = Io, An.range = Jf, An.rangeRight = Yf, An.rearg = rf, An.reject = function (n, t) {
                return (ff(n) ? i : jt) (n, au(ye(t, 3)))
            }, An.remove = function (n, t) {
                var r = [
                ];
                if (!n || !n.length) return r;
                var e = - 1,
                    u = [
                    ],
                    i = n.length;
                for (t = ye(t, 3); ++e < i; ) {
                    var o = n[e];
                    t(o, e, n) && (r.push(o), u.push(e))
                }
                return ur(n, u),
                    r
            }, An.rest = function (n, t) {
                if ('function' != typeof n) throw new ti('Expected a function');
                return t = t === T ? t : ku(t),
                    fr(n, t)
            }, An.reverse = Ge, An.sampleSize = function (n, t, r) {
                return t = (r ? Oe(n, t, r)  : t === T) ? 1 : ku(t),
                    (ff(n) ? et : ar) (n, t)
            }, An.set = function (n, t, r) {
                return null == n ? n : lr(n, t, r)
            }, An.setWith = function (n, t, r, e) {
                return e = 'function' == typeof e ? e : T,
                    null == n ? n : lr(n, t, r, e)
            }, An.shuffle = function (n) {
                return (ff(n) ? ut : sr) (n)
            }, An.slice = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (r && 'number' != typeof r && Oe(n, t, r) ? (t = 0, r = e)  : (t = null == t ? 0 : ku(t), r = r === T ? e : ku(r)), hr(n, t, r))  : [
                ]
            }, An.sortBy = Ko, An.sortedUniq = function (n) {
                return n && n.length ? gr(n)  : [
                ]
            }, An.sortedUniqBy = function (n, t) {
                return n && n.length ? gr(n, ye(t, 2))  : [
                ]
            }, An.split = function (n, t, r) {
                return r && 'number' != typeof r && Oe(n, t, r) && (t = r = T),
                    r = r === T ? 4294967295 : r >>> 0,
                    r ? (n = Iu(n)) && ('string' == typeof t || null != t && !hf(t)) && (t = yr(t), !t && Rn.test(n)) ? Or(M(n), 0, r)  : n.split(t, r)  : [
                    ]
            }, An.spread = function (t, r) {
                if ('function' != typeof t) throw new ti('Expected a function');
                return r = null == r ? 0 : Li(ku(r), 0),
                    fr(function (e) {
                        var u = e[r];
                        return e = Or(e, 0, r),
                        u && a(e, u),
                            n(t, this, e)
                    })
            }, An.tail = function (n) {
                var t = null == n ? 0 : n.length;
                return t ? hr(n, 1, t)  : [
                ]
            }, An.take = function (n, t, r) {
                return n && n.length ? (t = r || t === T ? 1 : ku(t), hr(n, 0, 0 > t ? 0 : t))  : [
                ]
            }, An.takeRight = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (t = r || t === T ? 1 : ku(t), t = e - t, hr(n, 0 > t ? 0 : t, e))  : [
                ]
            }, An.takeRightWhile = function (n, t) {
                return n && n.length ? jr(n, ye(t, 3), false, true)  : [
                ]
            }, An.takeWhile = function (n, t) {
                return n && n.length ? jr(n, ye(t, 3))  : [
                ]
            }, An.tap = function (n, t) {
                return t(n),
                    n
            }, An.throttle = function (n, t, r) {
                var e = true,
                    u = true;
                if ('function' != typeof n) throw new ti('Expected a function');
                return du(r) && (e = 'leading' in r ? !!r.leading : e, u = 'trailing' in r ? !!r.trailing : u),
                    fu(n, t, {
                        leading: e,
                        maxWait: t,
                        trailing: u
                    })
            }, An.thru = Qe, An.toArray = mu, An.toPairs = zf, An.toPairsIn = Wf, An.toPath = function (n) {
                return ff(n) ? c(n, Me)  : wu(n) ? [
                    n
                ] : Lr(jo(Iu(n)))
            }, An.toPlainObject = Ou, An.transform = function (n, t, e) {
                var u = ff(n),
                    i = u || af(n) || _f(n);
                if (t = ye(t, 4), null == e) {
                    var o = n && n.constructor;
                    e = i ? u ? new o : [
                    ] : du(n) && _u(o) ? eo(di(n))  : {
                    }
                }
                return (i ? r : mt) (n, function (n, r, u) {
                    return t(e, n, r, u)
                }),
                    e
            }, An.unary = function (n) {
                return eu(n, 1)
            }, An.union = Ro, An.unionBy = zo, An.unionWith = Wo, An.uniq = function (n) {
                return n && n.length ? br(n)  : [
                ]
            }, An.uniqBy = function (n, t) {
                return n && n.length ? br(n, ye(t, 2))  : [
                ]
            }, An.uniqWith = function (n, t) {
                return t = 'function' == typeof t ? t : T,
                    n && n.length ? br(n, T, t)  : [
                    ]
            }, An.unset = function (n, t) {
                return null == n || xr(n, t)
            }, An.unzip = He, An.unzipWith = Je, An.update = function (n, t, r) {
                return null != n && (r = Er(r), n = lr(n, t, r(Et(n, t)), void 0)),
                    n
            }, An.updateWith = function (n, t, r, e) {
                return e = 'function' == typeof e ? e : T,
                null != n && (r = Er(r), n = lr(n, t, r(Et(n, t)), e)),
                    n
            }, An.values = Lu, An.valuesIn = function (n) {
                return null == n ? [
                ] : S(n, Uu(n))
            }, An.without = Uo, An.words = Mu, An.wrap = function (n, t) {
                return nf(Er(t), n)
            }, An.xor = Bo, An.xorBy = Lo, An.xorWith = Co, An.zip = Do, An.zipObject = function (n, t) {
                return Ar(n || [
                ], t || [
                ], ot)
            }, An.zipObjectDeep = function (n, t) {
                return Ar(n || [
                ], t || [
                ], lr)
            }, An.zipWith = Mo, An.entries = zf, An.entriesIn = Wf, An.extend = yf, An.extendWith = bf, Nu(An, An), An.add = Qf, An.attempt = Ff, An.camelCase = Uf, An.capitalize = Cu, An.ceil = Xf, An.clamp = function (n, t, r) {
                return r === T && (r = t, t = T),
                r !== T && (r = Su(r), r = r === r ? r : 0),
                t !== T && (t = Su(t), t = t === t ? t : 0),
                    pt(Su(n), t, r)
            }, An.clone = function (n) {
                return _t(n, 4)
            }, An.cloneDeep = function (n) {
                return _t(n, 5)
            }, An.cloneDeepWith = function (n, t) {
                return t = 'function' == typeof t ? t : T,
                    _t(n, 5, t)
            }, An.cloneWith = function (n, t) {
                return t = 'function' == typeof t ? t : T,
                    _t(n, 4, t)
            }, An.conformsTo = function (n, t) {
                return null == t || gt(n, t, Wu(t))
            }, An.deburr = Du, An.defaultTo = function (n, t) {
                return null == n || n !== n ? t : n
            }, An.divide = nc, An.endsWith = function (n, t, r) {
                n = Iu(n),
                    t = yr(t);
                var e = n.length,
                    e = r = r === T ? e : pt(ku(r), 0, e);
                return r -= t.length,
                0 <= r && n.slice(r, e) == t
            }, An.eq = lu, An.escape = function (n) {
                return (n = Iu(n)) && H.test(n) ? n.replace(K, nt)  : n
            }, An.escapeRegExp = function (n) {
                return (n = Iu(n)) && en.test(n) ? n.replace(rn, '\\$&')  : n
            }, An.every = function (n, t, r) {
                var e = ff(n) ? u : bt;
                return r && Oe(n, t, r) && (t = T),
                    e(n, ye(t, 3))
            }, An.find = Fo, An.findIndex = Ne, An.findKey = function (n, t) {
                return p(n, ye(t, 3), mt)
            }, An.findLast = No, An.findLastIndex = Pe, An.findLastKey = function (n, t) {
                return p(n, ye(t, 3), At)
            }, An.floor = tc, An.forEach = nu, An.forEachRight = tu, An.forIn = function (n, t) {
                return null == n ? n : oo(n, ye(t, 3), Uu)
            }, An.forInRight = function (n, t) {
                return null == n ? n : fo(n, ye(t, 3), Uu)
            }, An.forOwn = function (n, t) {
                return n && mt(n, ye(t, 3))
            }, An.forOwnRight = function (n, t) {
                return n && At(n, ye(t, 3))
            }, An.get = Ru, An.gt = ef, An.gte = uf, An.has = function (n, t) {
                return null != n && we(n, t, Rt)
            }, An.hasIn = zu, An.head = qe, An.identity = $u, An.includes = function (n, t, r, e) {
                return n = su(n) ? n : Lu(n),
                    r = r && !e ? ku(r)  : 0,
                    e = n.length,
                0 > r && (r = Li(e + r, 0)),
                    ju(n) ? r <= e && - 1 < n.indexOf(t, r)  : !!e && - 1 < v(n, t, r)
            }, An.indexOf = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                return e ? (r = null == r ? 0 : ku(r), 0 > r && (r = Li(e + r, 0)), v(n, t, r))  : - 1
            }, An.inRange = function (n, t, r) {
                return t = Au(t),
                    r === T ? (r = t, t = 0)  : r = Au(r),
                    n = Su(n),
                n >= Ci(t, r) && n < Li(t, r)
            }, An.invoke = Ef, An.isArguments = of, An.isArray = ff, An.isArrayBuffer = cf, An.isArrayLike = su, An.isArrayLikeObject = hu, An.isBoolean = function (n) {
                return true === n || false === n || yu(n) && '[object Boolean]' == Ot(n)
            }, An.isBuffer = af, An.isDate = lf, An.isElement = function (n) {
                return yu(n) && 1 === n.nodeType && !xu(n)
            }, An.isEmpty = function (n) {
                if (null == n) return true;
                if (su(n) && (ff(n) || 'string' == typeof n || 'function' == typeof n.splice || af(n) || _f(n) || of(n))) return !n.length;
                var t = vo(n);
                if ('[object Map]' == t || '[object Set]' == t) return !n.size;
                if (ze(n)) return !Vt(n).length;
                for (var r in n) if (oi.call(n, r)) return false;
                return true
            }, An.isEqual = function (n, t) {
                return Mt(n, t)
            }, An.isEqualWith = function (n, t, r) {
                var e = (r = 'function' == typeof r ? r : T) ? r(n, t)  : T;
                return e === T ? Mt(n, t, T, r)  : !!e
            }, An.isError = pu, An.isFinite = function (n) {
                return 'number' == typeof n && Wi(n)
            }, An.isFunction = _u, An.isInteger = vu, An.isLength = gu, An.isMap = sf, An.isMatch = function (n, t) {
                return n === t || $t(n, t, xe(t))
            }, An.isMatchWith = function (n, t, r) {
                return r = 'function' == typeof r ? r : T,
                    $t(n, t, xe(t), r)
            }, An.isNaN = function (n) {
                return bu(n) && n != + n
            }, An.isNative = function (n) {
                if (go(n)) throw new Hu('Unsupported core-js use. Try https://npms.io/search?q=ponyfill.');
                return Ft(n)
            }, An.isNil = function (n) {
                return null == n
            }, An.isNull = function (n) {
                return null === n
            }, An.isNumber = bu, An.isObject = du, An.isObjectLike = yu, An.isPlainObject = xu, An.isRegExp = hf, An.isSafeInteger = function (n) {
                return vu(n) && - 9007199254740991 <= n && 9007199254740991 >= n
            }, An.isSet = pf, An.isString = ju, An.isSymbol = wu, An.isTypedArray = _f, An.isUndefined = function (n) {
                return n === T
            }, An.isWeakMap = function (n) {
                return yu(n) && '[object WeakMap]' == vo(n)
            }, An.isWeakSet = function (n) {
                return yu(n) && '[object WeakSet]' == Ot(n)
            }, An.join = function (n, t) {
                return null == n ? '' : Ui.call(n, t)
            }, An.kebabCase = Bf, An.last = Ve, An.lastIndexOf = function (n, t, r) {
                var e = null == n ? 0 : n.length;
                if (!e) return - 1;
                var u = e;
                if (r !== T && (u = ku(r), u = 0 > u ? Li(e + u, 0)  : Ci(u, e - 1)), t === t) n: {
                    for (r = u + 1; r--; ) if (n[r] === t) {
                        n = r;
                        break n
                    }
                    n = r
                } else n = _(n, d, u, true);
                return n
            }, An.lowerCase = Lf, An.lowerFirst = Cf, An.lt = vf, An.lte = gf, An.max = function (n) {
                return n && n.length ? xt(n, $u, It)  : T
            }, An.maxBy = function (n, t) {
                return n && n.length ? xt(n, ye(t, 2), It)  : T
            }, An.mean = function (n) {
                return y(n, $u)
            }, An.meanBy = function (n, t) {
                return y(n, ye(t, 2))
            }, An.min = function (n) {
                return n && n.length ? xt(n, $u, Kt)  : T
            }, An.minBy = function (n, t) {
                return n && n.length ? xt(n, ye(t, 2), Kt)  : T
            }, An.stubArray = qu, An.stubFalse = Vu, An.stubObject = function () {
                return {
                }
            }, An.stubString = function () {
                return ''
            }, An.stubTrue = function () {
                return true
            }, An.multiply = rc, An.nth = function (n, t) {
                return n && n.length ? Qt(n, ku(t))  : T
            }, An.noConflict = function () {
                return $n._ === this && ($n._ = si),
                    this
            }, An.noop = Pu, An.now = Go, An.pad = function (n, t, r) {
                n = Iu(n);
                var e = (t = ku(t)) ? D(n)  : 0;
                return !t || e >= t ? n : (t = (t - e) / 2, ne(Ii(t), r) + n + ne(Oi(t), r))
            }, An.padEnd = function (n, t, r) {
                n = Iu(n);
                var e = (t = ku(t)) ? D(n)  : 0;
                return t && e < t ? n + ne(t - e, r)  : n
            }, An.padStart = function (n, t, r) {
                n = Iu(n);
                var e = (t = ku(t)) ? D(n)  : 0;
                return t && e < t ? ne(t - e, r) + n : n
            }, An.parseInt = function (n, t, r) {
                return r || null == t ? t = 0 : t && (t = + t),
                    Mi(Iu(n).replace(on, ''), t || 0)
            }, An.random = function (n, t, r) {
                if (r && 'boolean' != typeof r && Oe(n, t, r) && (t = r = T), r === T && ('boolean' == typeof t ? (r = t, t = T)  : 'boolean' == typeof n && (r = n, n = T)), n === T && t === T ? (n = 0, t = 1)  : (n = Au(n), t === T ? (t = n, n = 0)  : t = Au(t)), n > t) {
                    var e = n;
                    n = t,
                        t = e
                }
                return r || n % 1 || t % 1 ? (r = Ti(), Ci(n + r * (t - n + Cn('1e-' + ((r + '').length - 1))), t))  : ir(n, t)
            }, An.reduce = function (n, t, r) {
                var e = ff(n) ? l : j,
                    u = 3 > arguments.length;
                return e(n, ye(t, 4), r, u, uo)
            }, An.reduceRight = function (n, t, r) {
                var e = ff(n) ? s : j,
                    u = 3 > arguments.length;
                return e(n, ye(t, 4), r, u, io)
            }, An.repeat = function (n, t, r) {
                return t = (r ? Oe(n, t, r)  : t === T) ? 1 : ku(t),
                    or(Iu(n), t)
            }, An.replace = function () {
                var n = arguments,
                    t = Iu(n[0]);
                return 3 > n.length ? t : t.replace(n[1], n[2])
            }, An.result = function (n, t, r) {
                t = Sr(t, n);
                var e = - 1,
                    u = t.length;
                for (u || (u = 1, n = T); ++e < u; ) {
                    var i = null == n ? T : n[Me(t[e])];
                    i === T && (e = u, i = r),
                        n = _u(i) ? i.call(n)  : i
                }
                return n
            }, An.round = ec, An.runInContext = x, An.sample = function (n) {
                return (ff(n) ? Qn : cr) (n)
            }, An.size = function (n) {
                if (null == n) return 0;
                if (su(n)) return ju(n) ? D(n)  : n.length;
                var t = vo(n);
                return '[object Map]' == t || '[object Set]' == t ? n.size : Vt(n).length
            }, An.snakeCase = Df, An.some = function (n, t, r) {
                var e = ff(n) ? h : pr;
                return r && Oe(n, t, r) && (t = T),
                    e(n, ye(t, 3))
            }, An.sortedIndex = function (n, t) {
                return _r(n, t)
            }, An.sortedIndexBy = function (n, t, r) {
                return vr(n, t, ye(r, 2))
            }, An.sortedIndexOf = function (n, t) {
                var r = null == n ? 0 : n.length;
                if (r) {
                    var e = _r(n, t);
                    if (e < r && lu(n[e], t)) return e
                }
                return - 1
            }, An.sortedLastIndex = function (n, t) {
                return _r(n, t, true)
            }, An.sortedLastIndexBy = function (n, t, r) {
                return vr(n, t, ye(r, 2), true)
            }, An.sortedLastIndexOf = function (n, t) {
                if (null == n ? 0 : n.length) {
                    var r = _r(n, t, true) - 1;
                    if (lu(n[r], t)) return r
                }
                return - 1
            }, An.startCase = Mf, An.startsWith = function (n, t, r) {
                return n = Iu(n),
                    r = null == r ? 0 : pt(ku(r), 0, n.length),
                    t = yr(t),
                n.slice(r, r + t.length) == t
            }, An.subtract = uc, An.sum = function (n) {
                return n && n.length ? m(n, $u)  : 0
            }, An.sumBy = function (n, t) {
                return n && n.length ? m(n, ye(t, 2))  : 0
            }, An.template = function (n, t, r) {
                var e = An.templateSettings;
                r && Oe(n, t, r) && (t = T),
                    n = Iu(n),
                    t = bf({
                    }, t, e, ce),
                    r = bf({
                    }, t.imports, e.imports, ce);
                var u,
                    i,
                    o = Wu(r),
                    f = S(r, o),
                    c = 0;
                r = t.interpolate || jn;
                var a = '__p+=\'';
                r = Xu((t.escape || jn).source + '|' + r.source + '|' + (r === Q ? pn : jn).source + '|' + (t.evaluate || jn).source + '|$', 'g');
                var l = 'sourceURL' in t ? '//# sourceURL=' + t.sourceURL + '\n' : '';
                if (n.replace(r, function (t, r, e, o, f, l) {
                    return e || (e = o),
                        a += n.slice(c, l).replace(wn, z),
                    r && (u = true, a += '\'+__e(' + r + ')+\''),
                    f && (i = true, a += '\';' + f + ';\n__p+=\''),
                    e && (a += '\'+((__t=(' + e + '))==null?\'\':__t)+\''),
                        c = l + t.length,
                        t
                }), a += '\';', (t = t.variable) || (a = 'with(obj){' + a + '}'), a = (i ? a.replace(P, '')  : a).replace(Z, '$1').replace(q, '$1;'), a = 'function(' + (t || 'obj') + '){' + (t ? '' : 'obj||(obj={});') + 'var __t,__p=\'\'' + (u ? ',__e=_.escape' : '') + (i ? ',__j=Array.prototype.join;function print(){__p+=__j.call(arguments,\'\')}' : ';') + a + 'return __p}', t = Ff(function () {
                    return Ju(o, l + 'return ' + a).apply(T, f)
                }), t.source = a, pu(t)) throw t;
                return t
            }, An.times = function (n, t) {
                if (n = ku(n), 1 > n || 9007199254740991 < n) return [];
                var r = 4294967295,
                    e = Ci(n, 4294967295);
                for (t = ye(t), n -= 4294967295, e = A(e, t); ++r < n; ) t(r);
                return e
            }, An.toFinite = Au, An.toInteger = ku, An.toLength = Eu, An.toLower = function (n) {
                return Iu(n).toLowerCase()
            }, An.toNumber = Su, An.toSafeInteger = function (n) {
                return n ? pt(ku(n), - 9007199254740991, 9007199254740991)  : 0 === n ? n : 0
            }, An.toString = Iu, An.toUpper = function (n) {
                return Iu(n).toUpperCase()
            }, An.trim = function (n, t, r) {
                return (n = Iu(n)) && (r || t === T) ? n.replace(un, '')  : n && (t = yr(t)) ? (n = M(n), r = M(t), t = I(n, r), r = R(n, r) + 1, Or(n, t, r).join(''))  : n
            }, An.trimEnd = function (n, t, r) {
                return (n = Iu(n)) && (r || t === T) ? n.replace(fn, '')  : n && (t = yr(t)) ? (n = M(n), t = R(n, M(t)) + 1, Or(n, 0, t).join(''))  : n
            }, An.trimStart = function (n, t, r) {
                return (n = Iu(n)) && (r || t === T) ? n.replace(on, '')  : n && (t = yr(t)) ? (n = M(n), t = I(n, M(t)), Or(n, t).join(''))  : n
            }, An.truncate = function (n, t) {
                var r = 30,
                    e = '...';
                if (du(t)) var u = 'separator' in t ? t.separator : u,
                    r = 'length' in t ? ku(t.length)  : r,
                    e = 'omission' in t ? yr(t.omission)  : e;
                n = Iu(n);
                var i = n.length;
                if (Rn.test(n)) var o = M(n),
                    i = o.length;
                if (r >= i) return n;
                if (i = r - D(e), 1 > i) return e;
                if (r = o ? Or(o, 0, i).join('')  : n.slice(0, i), u === T) return r + e;
                if (o && (i += r.length - i), hf(u)) {
                    if (n.slice(i).search(u)) {
                        var f = r;
                        for (u.global || (u = Xu(u.source, Iu(_n.exec(u)) + 'g')), u.lastIndex = 0; o = u.exec(f); ) var c = o.index;
                        r = r.slice(0, c === T ? i : c)
                    }
                } else n.indexOf(yr(u), i) != i && (u = r.lastIndexOf(u), - 1 < u && (r = r.slice(0, u)));
                return r + e
            }, An.unescape = function (n) {
                return (n = Iu(n)) && G.test(n) ? n.replace(V, tt)  : n
            }, An.uniqueId = function (n) {
                var t = ++fi;
                return Iu(n) + t
            }, An.upperCase = Tf, An.upperFirst = $f, An.each = nu, An.eachRight = tu, An.first = qe, Nu(An, function () {
                var n = {
                };
                return mt(An, function (t, r) {
                    oi.call(An.prototype, r) || (n[r] = t)
                }),
                    n
            }(), {
                chain: false
            }), An.VERSION = '4.17.11', r('bind bindKey curry curryRight partial partialRight'.split(' '), function (n) {
                An[n].placeholder = An
            }), r(['drop',
                'take'], function (n, t) {
                Ln.prototype[n] = function (r) {
                    r = r === T ? 1 : Li(ku(r), 0);
                    var e = this.__filtered__ && !t ? new Ln(this)  : this.clone();
                    return e.__filtered__ ? e.__takeCount__ = Ci(r, e.__takeCount__)  : e.__views__.push({
                        size: Ci(r, 4294967295),
                        type: n + (0 > e.__dir__ ? 'Right' : '')
                    }),
                        e
                },
                    Ln.prototype[n + 'Right'] = function (t) {
                        return this.reverse() [n](t).reverse()
                    }
            }), r(['filter',
                'map',
                'takeWhile'], function (n, t) {
                var r = t + 1,
                    e = 1 == r || 3 == r;
                Ln.prototype[n] = function (n) {
                    var t = this.clone();
                    return t.__iteratees__.push({
                        iteratee: ye(n, 3),
                        type: r
                    }),
                        t.__filtered__ = t.__filtered__ || e,
                        t
                }
            }), r(['head',
                'last'], function (n, t) {
                var r = 'take' + (t ? 'Right' : '');
                Ln.prototype[n] = function () {
                    return this[r](1).value() [0]
                }
            }), r(['initial',
                'tail'], function (n, t) {
                var r = 'drop' + (t ? '' : 'Right');
                Ln.prototype[n] = function () {
                    return this.__filtered__ ? new Ln(this)  : this[r](1)
                }
            }), Ln.prototype.compact = function () {
                return this.filter($u)
            }, Ln.prototype.find = function (n) {
                return this.filter(n).head()
            }, Ln.prototype.findLast = function (n) {
                return this.reverse().find(n)
            }, Ln.prototype.invokeMap = fr(function (n, t) {
                return 'function' == typeof n ? new Ln(this)  : this.map(function (r) {
                    return Bt(r, n, t)
                })
            }), Ln.prototype.reject = function (n) {
                return this.filter(au(ye(n)))
            }, Ln.prototype.slice = function (n, t) {
                n = ku(n);
                var r = this;
                return r.__filtered__ && (0 < n || 0 > t) ? new Ln(r)  : (0 > n ? r = r.takeRight( - n)  : n && (r = r.drop(n)), t !== T && (t = ku(t), r = 0 > t ? r.dropRight( - t)  : r.take(t - n)), r)
            }, Ln.prototype.takeRightWhile = function (n) {
                return this.reverse().takeWhile(n).reverse()
            }, Ln.prototype.toArray = function () {
                return this.take(4294967295)
            }, mt(Ln.prototype, function (n, t) {
                var r = /^(?:filter|find|map|reject)|While$/.test(t),
                    e = /^(?:head|last)$/.test(t),
                    u = An[e ? 'take' + ('last' == t ? 'Right' : '')  : t],
                    i = e || /^find/.test(t);
                u && (An.prototype[t] = function () {
                    var t = this.__wrapped__,
                        o = e ? [
                            1
                        ] : arguments,
                        f = t instanceof Ln,
                        c = o[0],
                        l = f || ff(t),
                        s = function (n) {
                            return n = u.apply(An, a([n], o)),
                                e && h ? n[0] : n
                        };
                    l && r && 'function' == typeof c && 1 != c.length && (f = l = false);
                    var h = this.__chain__,
                        p = !!this.__actions__.length,
                        c = i && !h,
                        f = f && !p;
                    return !i && l ? (t = f ? t : new Ln(this), t = n.apply(t, o), t.__actions__.push({
                        func: Qe,
                        args: [
                            s
                        ],
                        thisArg: T
                    }), new On(t, h))  : c && f ? n.apply(this, o)  : (t = this.thru(s), c ? e ? t.value() [0] : t.value()  : t)
                })
            }), r('pop push shift sort splice unshift'.split(' '), function (n) {
                var t = ri[n],
                    r = /^(?:push|sort|unshift)$/.test(n) ? 'tap' : 'thru',
                    e = /^(?:pop|shift)$/.test(n);
                An.prototype[n] = function () {
                    var n = arguments;
                    if (e && !this.__chain__) {
                        var u = this.value();
                        return t.apply(ff(u) ? u : [
                        ], n)
                    }
                    return this[r](function (r) {
                        return t.apply(ff(r) ? r : [
                        ], n)
                    })
                }
            }), mt(Ln.prototype, function (n, t) {
                var r = An[t];
                if (r) {
                    var e = r.name + '';
                    (Gi[e] || (Gi[e] = [
                    ])).push({
                        name: t,
                        func: r
                    })
                }
            }), Gi[Jr(T, 2).name] = [
                {
                    name: 'wrapper',
                    func: T
                }
            ], Ln.prototype.clone = function () {
                var n = new Ln(this.__wrapped__);
                return n.__actions__ = Lr(this.__actions__),
                    n.__dir__ = this.__dir__,
                    n.__filtered__ = this.__filtered__,
                    n.__iteratees__ = Lr(this.__iteratees__),
                    n.__takeCount__ = this.__takeCount__,
                    n.__views__ = Lr(this.__views__),
                    n
            }, Ln.prototype.reverse = function () {
                if (this.__filtered__) {
                    var n = new Ln(this);
                    n.__dir__ = - 1,
                        n.__filtered__ = true
                } else n = this.clone(),
                    n.__dir__ *= - 1;
                return n
            }, Ln.prototype.value = function () {
                var n,
                    t = this.__wrapped__.value(),
                    r = this.__dir__,
                    e = ff(t),
                    u = 0 > r,
                    i = e ? t.length : 0;
                n = 0;
                for (var o = i, f = this.__views__, c = - 1, a = f.length; ++c < a; ) {
                    var l = f[c],
                        s = l.size;
                    switch (l.type) {
                        case 'drop':
                            n += s;
                            break;
                        case 'dropRight':
                            o -= s;
                            break;
                        case 'take':
                            o = Ci(o, n + s);
                            break;
                        case 'takeRight':
                            n = Li(n, o - s)
                    }
                }
                if (n = {
                    start: n,
                    end: o
                }, o = n.start, f = n.end, n = f - o, o = u ? f : o - 1, f = this.__iteratees__, c = f.length, a = 0, l = Ci(n, this.__takeCount__), !e || !u && i == n && l == n) return wr(t, this.__actions__);
                e = [
                ];
                n: for (; n-- && a < l; ) {
                    for (o += r, u = - 1, i = t[o]; ++u < c; ) {
                        var h = f[u],
                            s = h.type,
                            h = (0, h.iteratee) (i);
                        if (2 == s) i = h;
                        else if (!h) {
                            if (1 == s) continue n;
                            break n
                        }
                    }
                    e[a++] = i
                }
                return e
            },
                An.prototype.at = To,
                An.prototype.chain = function () {
                    return Ye(this)
                },
                An.prototype.commit = function () {
                    return new On(this.value(), this.__chain__)
                },
                An.prototype.next = function () {
                    this.__values__ === T && (this.__values__ = mu(this.value()));
                    var n = this.__index__ >= this.__values__.length;
                    return {
                        done: n,
                        value: n ? T : this.__values__[this.__index__++]
                    }
                },
                An.prototype.plant = function (n) {
                    for (var t, r = this; r instanceof kn; ) {
                        var e = Fe(r);
                        e.__index__ = 0,
                            e.__values__ = T,
                            t ? u.__wrapped__ = e : t = e;
                        var u = e,
                            r = r.__wrapped__
                    }
                    return u.__wrapped__ = n,
                        t
                },
                An.prototype.reverse = function () {
                    var n = this.__wrapped__;
                    return n instanceof Ln ? (this.__actions__.length && (n = new Ln(this)), n = n.reverse(), n.__actions__.push({
                        func: Qe,
                        args: [
                            Ge
                        ],
                        thisArg: T
                    }), new On(n, this.__chain__))  : this.thru(Ge)
                },
                An.prototype.toJSON = An.prototype.valueOf = An.prototype.value = function () {
                    return wr(this.__wrapped__, this.__actions__)
                },
                An.prototype.first = An.prototype.head,
                wi && (An.prototype[wi] = Xe),
                An
        }(); 'function' == typeof define && 'object' == typeof define.amd && define.amd ? ($n._ = rt, define('lodash', [
    ], function () {
        return rt
    }))  : Nn ? ((Nn.exports = rt)._ = rt, Fn._ = rt)  : $n._ = rt
}).call(this);
!function (t, l) {
    'use strict';
    var c = 'BUTTON A INPUT TEXTAREA SELECT DETAILS SUMMARY'.split(' '),
        m = function (a, e) {
            if ( - 1 !== e.indexOf(a[0].nodeName)) return !0
        };
    l.module('ngAria', [
        'ng'
    ]).info({
        angularVersion: '1.7.8'
    }).provider('$aria', function () {
        function a(a, c, n, g) {
            return function (d, f, b) {
                if (!b.hasOwnProperty('ngAriaDisable')) {
                    var p = b.$normalize(c);
                    !e[p] || m(f, n) || b[p] || d.$watch(b[a], function (b) {
                        b = g ? !b : !!b;
                        f.attr(c, b)
                    })
                }
            }
        }
        var e = {
            ariaHidden: !0,
            ariaChecked: !0,
            ariaReadonly: !0,
            ariaDisabled: !0,
            ariaRequired: !0,
            ariaInvalid: !0,
            ariaValue: !0,
            tabindex: !0,
            bindKeydown: !0,
            bindRoleForClick: !0
        };
        this.config = function (a) {
            e = l.extend(e, a)
        };
        this.$get = function () {
            return {
                config: function (a) {
                    return e[a]
                },
                $$watchExpr: a
            }
        }
    }).directive('ngShow', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngShow', 'aria-hidden', [
            ], !0)
        }
    ]).directive('ngHide', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngHide', 'aria-hidden', [
            ], !1)
        }
    ]).directive('ngValue', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngValue', 'aria-checked', c, !1)
        }
    ]).directive('ngChecked', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngChecked', 'aria-checked', c, !1)
        }
    ]).directive('ngReadonly', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngReadonly', 'aria-readonly', c, !1)
        }
    ]).directive('ngRequired', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngRequired', 'aria-required', c, !1)
        }
    ]).directive('ngModel', [
        '$aria',
        function (a) {
            function e(e, g, d, f) {
                return a.config(g) && !d.attr(e) && (f || !m(d, c)) && ('hidden' !== d.attr('type') || 'INPUT' !== d[0].nodeName)
            }
            function k(a, e) {
                return !e.attr('role') && e.attr('type') === a && !m(e, c)
            }
            function h(a, e) {
                var d = a.type,
                    f = a.role;
                return 'checkbox' === (d || f) || 'menuitemcheckbox' === f ? 'checkbox' : 'radio' === (d || f) || 'menuitemradio' === f ? 'radio' : 'range' === d || 'progressbar' === f || 'slider' === f ? 'range' : ''
            }
            return {
                restrict: 'A',
                require: 'ngModel',
                priority: 200,
                compile: function (c, g) {
                    if (!g.hasOwnProperty('ngAriaDisable')) {
                        var d = h(g, c);
                        return {
                            post: function (f, b, c, g) {
                                function h() {
                                    return g.$modelValue
                                }
                                function m(a) {
                                    b.attr('aria-checked', c.value == g.$viewValue)
                                }
                                function n() {
                                    b.attr('aria-checked', !g.$isEmpty(g.$viewValue))
                                }
                                var l = e('tabindex', 'tabindex', b, !1);
                                switch (d) {
                                    case 'radio':
                                    case 'checkbox':
                                        k(d, b) && b.attr('role', d);
                                        e('aria-checked', 'ariaChecked', b, !1) && f.$watch(h, 'radio' === d ? m : n);
                                        l && b.attr('tabindex', 0);
                                        break;
                                    case 'range':
                                        k(d, b) && b.attr('role', 'slider');
                                        if (a.config('ariaValue')) {
                                            var q = !b.attr('aria-valuemin') && (c.hasOwnProperty('min') || c.hasOwnProperty('ngMin')),
                                                r = !b.attr('aria-valuemax') && (c.hasOwnProperty('max') || c.hasOwnProperty('ngMax')),
                                                s = !b.attr('aria-valuenow');
                                            q && c.$observe('min', function (a) {
                                                b.attr('aria-valuemin', a)
                                            });
                                            r && c.$observe('max', function (a) {
                                                b.attr('aria-valuemax', a)
                                            });
                                            s && f.$watch(h, function (a) {
                                                b.attr('aria-valuenow', a)
                                            })
                                        }
                                        l && b.attr('tabindex', 0)
                                }
                                !c.hasOwnProperty('ngRequired') && g.$validators.required && e('aria-required', 'ariaRequired', b, !1) && c.$observe('required', function () {
                                    b.attr('aria-required', !!c.required)
                                });
                                e('aria-invalid', 'ariaInvalid', b, !0) && f.$watch(function () {
                                    return g.$invalid
                                }, function (a) {
                                    b.attr('aria-invalid', !!a)
                                })
                            }
                        }
                    }
                }
            }
        }
    ]).directive('ngDisabled', [
        '$aria',
        function (a) {
            return a.$$watchExpr('ngDisabled', 'aria-disabled', c, !1)
        }
    ]).directive('ngMessages', function () {
        return {
            restrict: 'A',
            require: '?ngMessages',
            link: function (a, c, k, h) {
                k.hasOwnProperty('ngAriaDisable') || c.attr('aria-live') || c.attr('aria-live', 'assertive')
            }
        }
    }).directive('ngClick', [
        '$aria',
        '$parse',
        function (a, e) {
            return {
                restrict: 'A',
                compile: function (k, h) {
                    if (!h.hasOwnProperty('ngAriaDisable')) {
                        var l = e(h.ngClick);
                        return function (e, d, f) {
                            if (!m(d, c) && (a.config('bindRoleForClick') && !d.attr('role') && d.attr('role', 'button'), a.config('tabindex') && !d.attr('tabindex') && d.attr('tabindex', 0), a.config('bindKeydown') && !f.ngKeydown && !f.ngKeypress && !f.ngKeyup)) d.on('keydown', function (a) {
                                function d() {
                                    l(e, {
                                        $event: a
                                    })
                                }
                                var f = a.which || a.keyCode;
                                if (13 === f || 32 === f) - 1 !== c.indexOf(a.target.nodeName) || a.target.isContentEditable || a.preventDefault(),
                                    e.$apply(d)
                            })
                        }
                    }
                }
            }
        }
    ]).directive('ngDblclick', [
        '$aria',
        function (a) {
            return function (e, k, h) {
                h.hasOwnProperty('ngAriaDisable') || !a.config('tabindex') || k.attr('tabindex') || m(k, c) || k.attr('tabindex', 0)
            }
        }
    ])
}(window, window.angular);
define('angular-aria', [
    'angular'
], function () {
});
!function (I, b) {
    'use strict';
    function z(b, h) {
        var d = [
            ],
            c = b.replace(/([().])/g, '\\$1').replace(/(\/)?:(\w+)(\*\?|[?*])?/g, function (b, c, h, k) {
                b = '?' === k || '*?' === k;
                k = '*' === k || '*?' === k;
                d.push({
                    name: h,
                    optional: b
                });
                c = c || '';
                return (b ? '(?:' + c : c + '(?:') + (k ? '(.+?)' : '([^/]+)') + (b ? '?)?' : ')')
            }).replace(/([\/$*])/g, '\\$1');
        h.ignoreTrailingSlashes && (c = c.replace(/\/+$/, '') + '/*');
        return {
            keys: d,
            regexp: new RegExp('^' + c + '(?:[?#]|$)', h.caseInsensitiveMatch ? 'i' : '')
        }
    }
    function A(b) {
        p && b.get('$route')
    }
    function v(u, h, d) {
        return {
            restrict: 'ECA',
            terminal: !0,
            priority: 400,
            transclude: 'element',
            link: function (c, f, g, l, k) {
                function q() {
                    r && (d.cancel(r), r = null);
                    m && (m.$destroy(), m = null);
                    s && (r = d.leave(s), r.done(function (b) {
                        !1 !== b && (r = null)
                    }), s = null)
                }
                function C() {
                    var g = u.current && u.current.locals;
                    if (b.isDefined(g && g.$template)) {
                        var g = c.$new(),
                            l = u.current;
                        s = k(g, function (g) {
                            d.enter(g, null, s || f).done(function (d) {
                                !1 === d || !b.isDefined(w) || w && !c.$eval(w) || h()
                            });
                            q()
                        });
                        m = l.scope = g;
                        m.$emit('$viewContentLoaded');
                        m.$eval(p)
                    } else q()
                }
                var m,
                    s,
                    r,
                    w = g.autoscroll,
                    p = g.onload || '';
                c.$on('$routeChangeSuccess', C);
                C()
            }
        }
    }
    function x(b, h, d) {
        return {
            restrict: 'ECA',
            priority: - 400,
            link: function (c, f) {
                var g = d.current,
                    l = g.locals;
                f.html(l.$template);
                var k = b(f.contents());
                if (g.controller) {
                    l.$scope = c;
                    var q = h(g.controller, l);
                    g.controllerAs && (c[g.controllerAs] = q);
                    f.data('$ngControllerController', q);
                    f.children().data('$ngControllerController', q)
                }
                c[g.resolveAs || '$resolve'] = l;
                k(c)
            }
        }
    }
    var D,
        E,
        F,
        G,
        y = b.module('ngRoute', [
        ]).info({
            angularVersion: '1.7.8'
        }).provider('$route', function () {
            function u(d, c) {
                return b.extend(Object.create(d), c)
            }
            D = b.isArray;
            E = b.isObject;
            F = b.isDefined;
            G = b.noop;
            var h = {
            };
            this.when = function (d, c) {
                var f;
                f = void 0;
                if (D(c)) {
                    f = f || [
                    ];
                    for (var g = 0, l = c.length; g < l; g++) f[g] = c[g]
                } else if (E(c)) for (g in f = f || {
                }, c) if ('$' !== g.charAt(0) || '$' !== g.charAt(1)) f[g] = c[g];
                f = f || c;
                b.isUndefined(f.reloadOnUrl) && (f.reloadOnUrl = !0);
                b.isUndefined(f.reloadOnSearch) && (f.reloadOnSearch = !0);
                b.isUndefined(f.caseInsensitiveMatch) && (f.caseInsensitiveMatch = this.caseInsensitiveMatch);
                h[d] = b.extend(f, {
                    originalPath: d
                }, d && z(d, f));
                d && (g = '/' === d[d.length - 1] ? d.substr(0, d.length - 1)  : d + '/', h[g] = b.extend({
                    originalPath: d,
                    redirectTo: d
                }, z(g, f)));
                return this
            };
            this.caseInsensitiveMatch = !1;
            this.otherwise = function (b) {
                'string' === typeof b && (b = {
                    redirectTo: b
                });
                this.when(null, b);
                return this
            };
            p = !0;
            this.eagerInstantiationEnabled = function (b) {
                return F(b) ? (p = b, this)  : p
            };
            this.$get = [
                '$rootScope',
                '$location',
                '$routeParams',
                '$q',
                '$injector',
                '$templateRequest',
                '$sce',
                '$browser',
                function (d, c, f, g, l, k, q, p) {
                    function m(a) {
                        var e = t.current;
                        n = A();
                        (x = !B && n && e && n.$$route === e.$$route && (!n.reloadOnUrl || !n.reloadOnSearch && b.equals(n.pathParams, e.pathParams))) || !e && !n || d.$broadcast('$routeChangeStart', n, e).defaultPrevented && a && a.preventDefault()
                    }
                    function s() {
                        var a = t.current,
                            e = n;
                        if (x) a.params = e.params,
                            b.copy(a.params, f),
                            d.$broadcast('$routeUpdate', a);
                        else if (e || a) {
                            B = !1;
                            t.current = e;
                            var c = g.resolve(e);
                            p.$$incOutstandingRequestCount('$route');
                            c.then(r).then(w).then(function (g) {
                                return g && c.then(y).then(function (c) {
                                    e === t.current && (e && (e.locals = c, b.copy(e.params, f)), d.$broadcast('$routeChangeSuccess', e, a))
                                })
                            }).catch (function (b) {
                                e === t.current && d.$broadcast('$routeChangeError', e, a, b)
                            }).finally (function () {
                                p.$$completeOutstandingRequest(G, '$route')
                            })
                        }
                    }
                    function r(a) {
                        var e = {
                            route: a,
                            hasRedirection: !1
                        };
                        if (a) if (a.redirectTo) if (b.isString(a.redirectTo)) e.path = v(a.redirectTo, a.params),
                            e.search = a.params,
                            e.hasRedirection = !0;
                        else {
                            var d = c.path(),
                                f = c.search();
                            a = a.redirectTo(a.pathParams, d, f);
                            b.isDefined(a) && (e.url = a, e.hasRedirection = !0)
                        } else if (a.resolveRedirectTo) return g.resolve(l.invoke(a.resolveRedirectTo)).then(function (a) {
                            b.isDefined(a) && (e.url = a, e.hasRedirection = !0);
                            return e
                        });
                        return e
                    }
                    function w(a) {
                        var b = !0;
                        if (a.route !== t.current) b = !1;
                        else if (a.hasRedirection) {
                            var g = c.url(),
                                d = a.url;
                            d ? c.url(d).replace()  : d = c.path(a.path).search(a.search).replace().url();
                            d !== g && (b = !1)
                        }
                        return b
                    }
                    function y(a) {
                        if (a) {
                            var e = b.extend({
                            }, a.resolve);
                            b.forEach(e, function (a, c) {
                                e[c] = b.isString(a) ? l.get(a)  : l.invoke(a, null, null, c)
                            });
                            a = z(a);
                            b.isDefined(a) && (e.$template = a);
                            return g.all(e)
                        }
                    }
                    function z(a) {
                        var e,
                            c;
                        b.isDefined(e = a.template) ? b.isFunction(e) && (e = e(a.params))  : b.isDefined(c = a.templateUrl) && (b.isFunction(c) && (c = c(a.params)), b.isDefined(c) && (a.loadedTemplateUrl = q.valueOf(c), e = k(c)));
                        return e
                    }
                    function A() {
                        var a,
                            e;
                        b.forEach(h, function (d, g) {
                            var f;
                            if (f = !e) {
                                var h = c.path();
                                f = d.keys;
                                var l = {
                                };
                                if (d.regexp) if (h = d.regexp.exec(h)) {
                                    for (var k = 1, p = h.length; k < p; ++k) {
                                        var m = f[k - 1],
                                            n = h[k];
                                        m && n && (l[m.name] = n)
                                    }
                                    f = l
                                } else f = null;
                                else f = null;
                                f = a = f
                            }
                            f && (e = u(d, {
                                params: b.extend({
                                }, c.search(), a),
                                pathParams: a
                            }), e.$$route = d)
                        });
                        return e || h[null] && u(h[null], {
                            params: {
                            },
                            pathParams: {
                            }
                        })
                    }
                    function v(a, c) {
                        var d = [
                        ];
                        b.forEach((a || '').split(':'), function (a, b) {
                            if (0 === b) d.push(a);
                            else {
                                var f = a.match(/(\w+)(?:[?*])?(.*)/),
                                    g = f[1];
                                d.push(c[g]);
                                d.push(f[2] || '');
                                delete c[g]
                            }
                        });
                        return d.join('')
                    }
                    var B = !1,
                        n,
                        x,
                        t = {
                            routes: h,
                            reload: function () {
                                B = !0;
                                var a = {
                                    defaultPrevented: !1,
                                    preventDefault: function () {
                                        this.defaultPrevented = !0;
                                        B = !1
                                    }
                                };
                                d.$evalAsync(function () {
                                    m(a);
                                    a.defaultPrevented || s()
                                })
                            },
                            updateParams: function (a) {
                                if (this.current && this.current.$$route) a = b.extend({
                                }, this.current.params, a),
                                    c.path(v(this.current.$$route.originalPath, a)),
                                    c.search(a);
                                else throw H('norout')
                            }
                        };
                    d.$on('$locationChangeStart', m);
                    d.$on('$locationChangeSuccess', s);
                    return t
                }
            ]
        }).run(A),
        H = b.$$minErr('ngRoute'),
        p;
    A.$inject = [
        '$injector'
    ];
    y.provider('$routeParams', function () {
        this.$get = function () {
            return {
            }
        }
    });
    y.directive('ngView', v);
    y.directive('ngView', x);
    v.$inject = [
        '$route',
        '$anchorScroll',
        '$animate'
    ];
    x.$inject = [
        '$compile',
        '$controller',
        '$route'
    ]
}(window, window.angular);
define('angular-route', [
    'angular'
], function () {
});
!function (z, l) {
    'use strict';
    function q(n) {
        return ['$animate',
            function (u) {
                return {
                    restrict: 'AE',
                    transclude: 'element',
                    priority: 1,
                    terminal: !0,
                    require: '^^ngMessages',
                    link: function (m, f, a, e, r) {
                        var b,
                            h,
                            s;
                        if (!n) {
                            b = f[0];
                            s = a.ngMessage || a.when;
                            a = a.ngMessageExp || a.whenExp;
                            var k = function (c) {
                                h = c ? v(c) ? c : c.split(/[\s,]+/)  : null;
                                e.reRender()
                            };
                            a ? (k(m.$eval(a)), m.$watchCollection(a, k))  : k(s)
                        }
                        var g,
                            t;
                        e.register(b, t = {
                            test: function (c) {
                                var b = h;
                                c = b ? v(b) ? 0 <= b.indexOf(c)  : b.hasOwnProperty(c)  : void 0;
                                return c
                            },
                            attach: function () {
                                g || r(function (c, a) {
                                    u.enter(c, null, f);
                                    g = c;
                                    var d = g.$$attachId = e.getAttachId();
                                    g.on('$destroy', function () {
                                        g && g.$$attachId === d && (e.deregister(b, n), t.detach());
                                        a.$destroy()
                                    })
                                })
                            },
                            detach: function () {
                                if (g) {
                                    var c = g;
                                    g = null;
                                    u.leave(c)
                                }
                            }
                        }, n);
                        m.$on('$destroy', function () {
                            e.deregister(b, n)
                        })
                    }
                }
            }
        ]
    }
    var x,
        v,
        p,
        y;
    l.module('ngMessages', [
    ], function () {
        x = l.forEach;
        v = l.isArray;
        p = l.isString;
        y = l.element
    }).info({
        angularVersion: '1.7.8'
    }).directive('ngMessages', [
        '$animate',
        function (n) {
            function u(f, a) {
                return p(a) && 0 === a.length || m(f.$eval(a))
            }
            function m(f) {
                return p(f) ? f.length : !!f
            }
            return {
                require: 'ngMessages',
                restrict: 'AE',
                controller: [
                    '$element',
                    '$scope',
                    '$attrs',
                    function (f, a, e) {
                        function r(c, b) {
                            for (var d = b, a = [
                            ]; d && d !== c; ) {
                                var e = d.$$ngMessageNode;
                                if (e && e.length) return k[e];
                                d.childNodes.length && - 1 === a.indexOf(d) ? (a.push(d), d = d.childNodes[d.childNodes.length - 1])  : d.previousSibling ? d = d.previousSibling : (d = d.parentNode, a.push(d))
                            }
                        }
                        var b = this,
                            h = 0,
                            s = 0;
                        this.getAttachId = function () {
                            return s++
                        };
                        var k = this.messages = {
                            },
                            g,
                            t;
                        this.render = function (c) {
                            c = c || {
                            };
                            g = !1;
                            t = c;
                            for (var w = u(a, e.ngMessagesMultiple) || u(a, e.multiple), d = [
                            ], r = {
                            }, h = 0, k = b.head, s = !1, l = 0; null != k; ) {
                                l++;
                                var p = k.message,
                                    q = !1;
                                s || x(c, function (b, c) {
                                    m(b) && !q && (h++, p.test(c) && !r[c] && (q = r[c] = !0, p.attach()))
                                });
                                q ? s = !w : d.push(p);
                                k = k.next
                            }
                            x(d, function (c) {
                                c.detach()
                            });
                            c = d.length !== l;
                            (w = b.default && !c && 0 < h) ? b.default.attach() :
                                b.default && b.default.detach();
                            c || w ? n.setClass(f, 'ng-active', 'ng-inactive')  : n.setClass(f, 'ng-inactive', 'ng-active')
                        };
                        a.$watchCollection(e.ngMessages || e['for'], b.render);
                        this.reRender = function () {
                            g || (g = !0, a.$evalAsync(function () {
                                g && t && b.render(t)
                            }))
                        };
                        this.register = function (c, a, d) {
                            if (d) b.default = a;
                            else {
                                d = h.toString();
                                k[d] = {
                                    message: a
                                };
                                var e = f[0];
                                a = k[d];
                                b.head ? (e = r(e, c)) ? (a.next = e.next, e.next = a)  : (a.next = b.head, b.head = a)  : b.head = a;
                                c.$$ngMessageNode = d;
                                h++
                            }
                            b.reRender()
                        };
                        this.deregister = function (a, e) {
                            if (e) delete b.default;
                            else {
                                var d = a.$$ngMessageNode;
                                delete a.$$ngMessageNode;
                                var g = k[d];
                                if (g) {
                                    var h = r(f[0], a);
                                    h ? h.next = g.next : b.head = g.next
                                }
                                delete k[d]
                            }
                            b.reRender()
                        }
                    }
                ]
            }
        }
    ]).directive('ngMessagesInclude', [
        '$templateRequest',
        '$document',
        '$compile',
        function (n, l, m) {
            function f(a, e) {
                var f = m.$$createComment ? m.$$createComment('ngMessagesInclude', e)  : l[0].createComment(' ngMessagesInclude: ' + e + ' '),
                    f = y(f);
                a.after(f);
                a.remove()
            }
            return {
                restrict: 'AE',
                require: '^^ngMessages',
                link: function (a, e, l) {
                    var b = l.ngMessagesInclude || l.src;
                    n(b).then(function (h) {
                        a.$$destroyed || (p(h) && !h.trim() ? f(e, b)  : m(h) (a, function (a) {
                            e.after(a);
                            f(e, b)
                        }))
                    })
                }
            }
        }
    ]).directive('ngMessage', q()).directive('ngMessageExp', q()).directive('ngMessageDefault', q(!0))
}(window, window.angular);
define('angular-messages', [
    'angular'
], function () {
}); /**
 * State-based routing for AngularJS
 * @version v0.4.2
 * @link http://angular-ui.github.com/
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
'undefined' != typeof module && 'undefined' != typeof exports && module.exports === exports && (module.exports = 'ui.router'),
    function (a, b, c) {
        'use strict';
        function d(a, b) {
            return T(new (T(function () {
            }, {
                prototype: a
            })), b)
        }
        function e(a) {
            return S(arguments, function (b) {
                b !== a && S(b, function (b, c) {
                    a.hasOwnProperty(c) || (a[c] = b)
                })
            }),
                a
        }
        function f(a, b) {
            var c = [
            ];
            for (var d in a.path) {
                if (a.path[d] !== b.path[d]) break;
                c.push(a.path[d])
            }
            return c
        }
        function g(a) {
            if (Object.keys) return Object.keys(a);
            var b = [
            ];
            return S(a, function (a, c) {
                b.push(c)
            }),
                b
        }
        function h(a, b) {
            if (Array.prototype.indexOf) return a.indexOf(b, Number(arguments[2]) || 0);
            var c = a.length >>> 0,
                d = Number(arguments[2]) || 0;
            for (d = d < 0 ? Math.ceil(d)  : Math.floor(d), d < 0 && (d += c); d < c; d++) if (d in a && a[d] === b) return d;
            return - 1
        }
        function i(a, b, c, d) {
            var e,
                i = f(c, d),
                j = {
                },
                k = [
                ];
            for (var l in i) if (i[l] && i[l].params && (e = g(i[l].params), e.length)) for (var m in e) h(k, e[m]) >= 0 || (k.push(e[m]), j[e[m]] = a[e[m]]);
            return T({
            }, j, b)
        }
        function j(a, b, c) {
            if (!c) {
                c = [
                ];
                for (var d in a) c.push(d)
            }
            for (var e = 0; e < c.length; e++) {
                var f = c[e];
                if (a[f] != b[f]) return !1
            }
            return !0
        }
        function k(a, b) {
            var c = {
            };
            return S(a, function (a) {
                c[a] = b[a]
            }),
                c
        }
        function l(a) {
            var b = {
                },
                c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
            return S(c, function (c) {
                c in a && (b[c] = a[c])
            }),
                b
        }
        function m(a) {
            var b = {
                },
                c = Array.prototype.concat.apply(Array.prototype, Array.prototype.slice.call(arguments, 1));
            for (var d in a) h(c, d) == - 1 && (b[d] = a[d]);
            return b
        }
        function n(a, b) {
            var c = R(a),
                d = c ? [
                ] : {
                };
            return S(a, function (a, e) {
                b(a, e) && (d[c ? d.length : e] = a)
            }),
                d
        }
        function o(a, b) {
            var c = R(a) ? [
            ] : {
            };
            return S(a, function (a, d) {
                c[d] = b(a, d)
            }),
                c
        }
        function p(a) {
            return a.then(c, function () {
            }) && a
        }
        function q(a, b) {
            var d = 1,
                f = 2,
                i = {
                },
                j = [
                ],
                k = i,
                l = T(a.when(i), {
                    $$promises: i,
                    $$values: i
                });
            this.study = function (i) {
                function n(a, c) {
                    if (t[c] !== f) {
                        if (s.push(c), t[c] === d) throw s.splice(0, h(s, c)),
                            new Error('Cyclic dependency: ' + s.join(' -> '));
                        if (t[c] = d, P(a)) r.push(c, [
                            function () {
                                return b.get(a)
                            }
                        ], j);
                        else {
                            var e = b.annotate(a);
                            S(e, function (a) {
                                a !== c && i.hasOwnProperty(a) && n(i[a], a)
                            }),
                                r.push(c, a, e)
                        }
                        s.pop(),
                            t[c] = f
                    }
                }
                function o(a) {
                    return Q(a) && a.then && a.$$promises
                }
                if (!Q(i)) throw new Error('\'invocables\' must be an object');
                var q = g(i || {
                    }),
                    r = [
                    ],
                    s = [
                    ],
                    t = {
                    };
                return S(i, n),
                    i = s = t = null,
                    function (d, f, g) {
                        function h() {
                            --v || (w || e(u, f.$$values), s.$$values = u, s.$$promises = s.$$promises || !0, delete s.$$inheritedValues, n.resolve(u))
                        }
                        function i(a) {
                            s.$$failure = a,
                                n.reject(a)
                        }
                        function j(c, e, f) {
                            function j(a) {
                                l.reject(a),
                                    i(a)
                            }
                            function k() {
                                if (!N(s.$$failure)) try {
                                    l.resolve(b.invoke(e, g, u)),
                                        l.promise.then(function (a) {
                                            u[c] = a,
                                                h()
                                        }, j)
                                } catch (a) {
                                    j(a)
                                }
                            }
                            var l = a.defer(),
                                m = 0;
                            S(f, function (a) {
                                t.hasOwnProperty(a) && !d.hasOwnProperty(a) && (m++, t[a].then(function (b) {
                                    u[a] = b,
                                    --m || k()
                                }, j))
                            }),
                            m || k(),
                                t[c] = p(l.promise)
                        }
                        if (o(d) && g === c && (g = f, f = d, d = null), d) {
                            if (!Q(d)) throw new Error('\'locals\' must be an object')
                        } else d = k;
                        if (f) {
                            if (!o(f)) throw new Error('\'parent\' must be a promise returned by $resolve.resolve()')
                        } else f = l;
                        var n = a.defer(),
                            s = p(n.promise),
                            t = s.$$promises = {
                            },
                            u = T({
                            }, d),
                            v = 1 + r.length / 3,
                            w = !1;
                        if (p(s), N(f.$$failure)) return i(f.$$failure),
                            s;
                        f.$$inheritedValues && e(u, m(f.$$inheritedValues, q)),
                            T(t, f.$$promises),
                            f.$$values ? (w = e(u, m(f.$$values, q)), s.$$inheritedValues = m(f.$$values, q), h())  : (f.$$inheritedValues && (s.$$inheritedValues = m(f.$$inheritedValues, q)), f.then(h, i));
                        for (var x = 0, y = r.length; x < y; x += 3) d.hasOwnProperty(r[x]) ? h()  : j(r[x], r[x + 1], r[x + 2]);
                        return s
                    }
            },
                this.resolve = function (a, b, c, d) {
                    return this.study(a) (b, c, d)
                }
        }
        function r() {
            var a = b.version.minor < 3;
            this.shouldUnsafelyUseHttp = function (b) {
                a = !!b
            },
                this.$get = [
                    '$http',
                    '$templateCache',
                    '$injector',
                    function (b, c, d) {
                        return new s(b, c, d, a)
                    }
                ]
        }
        function s(a, b, c, d) {
            this.fromConfig = function (a, b, c) {
                return N(a.template) ? this.fromString(a.template, b)  : N(a.templateUrl) ? this.fromUrl(a.templateUrl, b)  : N(a.templateProvider) ? this.fromProvider(a.templateProvider, b, c)  : null
            },
                this.fromString = function (a, b) {
                    return O(a) ? a(b)  : a
                },
                this.fromUrl = function (e, f) {
                    return O(e) && (e = e(f)),
                        null == e ? null : d ? a.get(e, {
                            cache: b,
                            headers: {
                                Accept: 'text/html'
                            }
                        }).then(function (a) {
                            return a.data
                        })  : c.get('$templateRequest') (e)
                },
                this.fromProvider = function (a, b, d) {
                    return c.invoke(a, null, d || {
                        params: b
                    })
                }
        }
        function t(a, b, e) {
            function f(b, c, d, e) {
                if (q.push(b), o[b]) return o[b];
                if (!/^\w+([-.]+\w+)*(?:\[\])?$/.test(b)) throw new Error('Invalid parameter name \'' + b + '\' in pattern \'' + a + '\'');
                if (p[b]) throw new Error('Duplicate parameter name \'' + b + '\' in pattern \'' + a + '\'');
                return p[b] = new W.Param(b, c, d, e),
                    p[b]
            }
            function g(a, b, c, d) {
                var e = [
                        '',
                        ''
                    ],
                    f = a.replace(/[\\\[\]\^$*+?.()|{}]/g, '\\$&');
                if (!b) return f;
                switch (c) {
                    case !1:
                        e = [
                            '(',
                            ')' + (d ? '?' : '')
                        ];
                        break;
                    case !0:
                        f = f.replace(/\/$/, ''),
                            e = [
                                '(?:/(',
                                ')|/)?'
                            ];
                        break;
                    default:
                        e = [
                            '(' + c + '|',
                            ')?'
                        ]
                }
                return f + e[0] + b + e[1]
            }
            function h(e, f) {
                var g,
                    h,
                    i,
                    j,
                    k;
                return g = e[2] || e[3],
                    k = b.params[g],
                    i = a.substring(m, e.index),
                    h = f ? e[4] : e[4] || ('*' == e[1] ? '.*' : null),
                h && (j = W.type(h) || d(W.type('string'), {
                    pattern: new RegExp(h, b.caseInsensitive ? 'i' : c)
                })),
                    {
                        id: g,
                        regexp: h,
                        segment: i,
                        type: j,
                        cfg: k
                    }
            }
            b = T({
                params: {
                }
            }, Q(b) ? b : {
            });
            var i,
                j = /([:*])([\w\[\]]+)|\{([\w\[\]]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                k = /([:]?)([\w\[\].-]+)|\{([\w\[\].-]+)(?:\:\s*((?:[^{}\\]+|\\.|\{(?:[^{}\\]+|\\.)*\})+))?\}/g,
                l = '^',
                m = 0,
                n = this.segments = [
                ],
                o = e ? e.params : {
                },
                p = this.params = e ? e.params.$$new()  : new W.ParamSet,
                q = [
                ];
            this.source = a;
            for (var r, s, t; (i = j.exec(a)) && (r = h(i, !1), !(r.segment.indexOf('?') >= 0)); ) s = f(r.id, r.type, r.cfg, 'path'),
                l += g(r.segment, s.type.pattern.source, s.squash, s.isOptional),
                n.push(r.segment),
                m = j.lastIndex;
            t = a.substring(m);
            var u = t.indexOf('?');
            if (u >= 0) {
                var v = this.sourceSearch = t.substring(u);
                if (t = t.substring(0, u), this.sourcePath = a.substring(0, m + u), v.length > 0) for (m = 0; i = k.exec(v); ) r = h(i, !0),
                    s = f(r.id, r.type, r.cfg, 'search'),
                    m = j.lastIndex
            } else this.sourcePath = a,
                this.sourceSearch = '';
            l += g(t) + (b.strict === !1 ? '/?' : '') + '$',
                n.push(t),
                this.regexp = new RegExp(l, b.caseInsensitive ? 'i' : c),
                this.prefix = n[0],
                this.$$paramNames = q
        }
        function u(a) {
            T(this, a)
        }
        function v() {
            function a(a) {
                return null != a ? a.toString().replace(/(~|\/)/g, function (a) {
                    return {
                        '~': '~~',
                        '/': '~2F'
                    }
                        [
                        a
                        ]
                })  : a
            }
            function e(a) {
                return null != a ? a.toString().replace(/(~~|~2F)/g, function (a) {
                    return {
                        '~~': '~',
                        '~2F': '/'
                    }
                        [
                        a
                        ]
                })  : a
            }
            function f() {
                return {
                    strict: p,
                    caseInsensitive: m
                }
            }
            function i(a) {
                return O(a) || R(a) && O(a[a.length - 1])
            }
            function j() {
                for (; w.length; ) {
                    var a = w.shift();
                    if (a.pattern) throw new Error('You cannot override a type\'s .pattern at runtime.');
                    b.extend(r[a.name], l.invoke(a.def))
                }
            }
            function k(a) {
                T(this, a || {
                })
            }
            W = this;
            var l,
                m = !1,
                p = !0,
                q = !1,
                r = {
                },
                s = !0,
                w = [
                ],
                x = {
                    string: {
                        encode: a,
                        decode: e,
                        is: function (a) {
                            return null == a || !N(a) || 'string' == typeof a
                        },
                        pattern: /[^\/]*/
                    },
                    int: {
                        encode: a,
                        decode: function (a) {
                            return parseInt(a, 10)
                        },
                        is: function (a) {
                            return a !== c && null !== a && this.decode(a.toString()) === a
                        },
                        pattern: /\d+/
                    },
                    bool: {
                        encode: function (a) {
                            return a ? 1 : 0
                        },
                        decode: function (a) {
                            return 0 !== parseInt(a, 10)
                        },
                        is: function (a) {
                            return a === !0 || a === !1
                        },
                        pattern: /0|1/
                    },
                    date: {
                        encode: function (a) {
                            return this.is(a) ? [
                                a.getFullYear(),
                                ('0' + (a.getMonth() + 1)).slice( - 2),
                                ('0' + a.getDate()).slice( - 2)
                            ].join('-')  : c
                        },
                        decode: function (a) {
                            if (this.is(a)) return a;
                            var b = this.capture.exec(a);
                            return b ? new Date(b[1], b[2] - 1, b[3])  : c
                        },
                        is: function (a) {
                            return a instanceof Date && !isNaN(a.valueOf())
                        },
                        equals: function (a, b) {
                            return this.is(a) && this.is(b) && a.toISOString() === b.toISOString()
                        },
                        pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,
                        capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/
                    },
                    json: {
                        encode: b.toJson,
                        decode: b.fromJson,
                        is: b.isObject,
                        equals: b.equals,
                        pattern: /[^\/]*/
                    },
                    any: {
                        encode: b.identity,
                        decode: b.identity,
                        equals: b.equals,
                        pattern: /.*/
                    }
                };
            v.$$getDefaultValue = function (a) {
                if (!i(a.value)) return a.value;
                if (!l) throw new Error('Injectable functions cannot be called at configuration time');
                return l.invoke(a.value)
            },
                this.caseInsensitive = function (a) {
                    return N(a) && (m = a),
                        m
                },
                this.strictMode = function (a) {
                    return N(a) && (p = a),
                        p
                },
                this.defaultSquashPolicy = function (a) {
                    if (!N(a)) return q;
                    if (a !== !0 && a !== !1 && !P(a)) throw new Error('Invalid squash policy: ' + a + '. Valid policies: false, true, arbitrary-string');
                    return q = a,
                        a
                },
                this.compile = function (a, b) {
                    return new t(a, T(f(), b))
                },
                this.isMatcher = function (a) {
                    if (!Q(a)) return !1;
                    var b = !0;
                    return S(t.prototype, function (c, d) {
                        O(c) && (b = b && N(a[d]) && O(a[d]))
                    }),
                        b
                },
                this.type = function (a, b, c) {
                    if (!N(b)) return r[a];
                    if (r.hasOwnProperty(a)) throw new Error('A type named \'' + a + '\' has already been defined.');
                    return r[a] = new u(T({
                        name: a
                    }, b)),
                    c && (w.push({
                        name: a,
                        def: c
                    }), s || j()),
                        this
                },
                S(x, function (a, b) {
                    r[b] = new u(T({
                        name: b
                    }, a))
                }),
                r = d(r, {
                }),
                this.$get = [
                    '$injector',
                    function (a) {
                        return l = a,
                            s = !1,
                            j(),
                            S(x, function (a, b) {
                                r[b] || (r[b] = new u(a))
                            }),
                            this
                    }
                ],
                this.Param = function (a, d, e, f) {
                    function j(a) {
                        var b = Q(a) ? g(a)  : [
                            ],
                            c = h(b, 'value') === - 1 && h(b, 'type') === - 1 && h(b, 'squash') === - 1 && h(b, 'array') === - 1;
                        return c && (a = {
                            value: a
                        }),
                            a.$$fn = i(a.value) ? a.value : function () {
                                return a.value
                            },
                            a
                    }
                    function k(c, d, e) {
                        if (c.type && d) throw new Error('Param \'' + a + '\' has two type configurations.');
                        return d ? d : c.type ? b.isString(c.type) ? r[c.type] : c.type instanceof u ? c.type : new u(c.type)  : 'config' === e ? r.any : r.string
                    }
                    function m() {
                        var b = {
                                array: 'search' === f && 'auto'
                            },
                            c = a.match(/\[\]$/) ? {
                                    array: !0
                                }
                                : {
                                };
                        return T(b, c, e).array
                    }
                    function p(a, b) {
                        var c = a.squash;
                        if (!b || c === !1) return !1;
                        if (!N(c) || null == c) return q;
                        if (c === !0 || P(c)) return c;
                        throw new Error('Invalid squash policy: \'' + c + '\'. Valid policies: false, true, or arbitrary string')
                    }
                    function s(a, b, d, e) {
                        var f,
                            g,
                            i = [
                                {
                                    from: '',
                                    to: d || b ? c : ''
                                },
                                {
                                    from: null,
                                    to: d || b ? c : ''
                                }
                            ];
                        return f = R(a.replace) ? a.replace : [
                        ],
                        P(e) && f.push({
                            from: e,
                            to: c
                        }),
                            g = o(f, function (a) {
                                return a.from
                            }),
                            n(i, function (a) {
                                return h(g, a.from) === - 1
                            }).concat(f)
                    }
                    function t() {
                        if (!l) throw new Error('Injectable functions cannot be called at configuration time');
                        var a = l.invoke(e.$$fn);
                        if (null !== a && a !== c && !x.type.is(a)) throw new Error('Default value (' + a + ') for parameter \'' + x.id + '\' is not an instance of Type (' + x.type.name + ')');
                        return a
                    }
                    function v(a) {
                        function b(a) {
                            return function (b) {
                                return b.from === a
                            }
                        }
                        function c(a) {
                            var c = o(n(x.replace, b(a)), function (a) {
                                return a.to
                            });
                            return c.length ? c[0] : a
                        }
                        return a = c(a),
                            N(a) ? x.type.$normalize(a)  : t()
                    }
                    function w() {
                        return '{Param:' + a + ' ' + d + ' squash: \'' + A + '\' optional: ' + z + '}'
                    }
                    var x = this;
                    e = j(e),
                        d = k(e, d, f);
                    var y = m();
                    d = y ? d.$asArray(y, 'search' === f)  : d,
                    'string' !== d.name || y || 'path' !== f || e.value !== c || (e.value = '');
                    var z = e.value !== c,
                        A = p(e, z),
                        B = s(e, y, z, A);
                    T(this, {
                        id: a,
                        type: d,
                        location: f,
                        array: y,
                        squash: A,
                        replace: B,
                        isOptional: z,
                        value: v,
                        dynamic: c,
                        config: e,
                        toString: w
                    })
                },
                k.prototype = {
                    $$new: function () {
                        return d(this, T(new k, {
                            $$parent: this
                        }))
                    },
                    $$keys: function () {
                        for (var a = [
                        ], b = [
                        ], c = this, d = g(k.prototype); c; ) b.push(c),
                            c = c.$$parent;
                        return b.reverse(),
                            S(b, function (b) {
                                S(g(b), function (b) {
                                    h(a, b) === - 1 && h(d, b) === - 1 && a.push(b)
                                })
                            }),
                            a
                    },
                    $$values: function (a) {
                        var b = {
                            },
                            c = this;
                        return S(c.$$keys(), function (d) {
                            b[d] = c[d].value(a && a[d])
                        }),
                            b
                    },
                    $$equals: function (a, b) {
                        var c = !0,
                            d = this;
                        return S(d.$$keys(), function (e) {
                            var f = a && a[e],
                                g = b && b[e];
                            d[e].type.equals(f, g) || (c = !1)
                        }),
                            c
                    },
                    $$validates: function (a) {
                        var d,
                            e,
                            f,
                            g,
                            h,
                            i = this.$$keys();
                        for (d = 0; d < i.length && (e = this[i[d]], f = a[i[d]], f !== c && null !== f || !e.isOptional); d++) {
                            if (g = e.type.$normalize(f), !e.type.is(g)) return !1;
                            if (h = e.type.encode(g), b.isString(h) && !e.type.pattern.exec(h)) return !1
                        }
                        return !0
                    },
                    $$parent: c
                },
                this.ParamSet = k
        }
        function w(a, d) {
            function e(a) {
                var b = /^\^((?:\\[^a-zA-Z0-9]|[^\\\[\]\^$*+?.()|{}]+)*)/.exec(a.source);
                return null != b ? b[1].replace(/\\(.)/g, '$1')  : ''
            }
            function f(a, b) {
                return a.replace(/\$(\$|\d{1,2})/, function (a, c) {
                    return b['$' === c ? 0 : Number(c)]
                })
            }
            function g(a, b, c) {
                if (!c) return !1;
                var d = a.invoke(b, b, {
                    $match: c
                });
                return !N(d) || d
            }
            function h(d, e, f, g, h) {
                function m(a, b, c) {
                    return '/' === q ? a : b ? q.slice(0, - 1) + a : c ? q.slice(1) + a : a
                }
                function n(a) {
                    function b(a) {
                        var b = a(f, d);
                        return !!b && (P(b) && d.replace().url(b), !0)
                    }
                    if (!a || !a.defaultPrevented) {
                        p && d.url() === p;
                        p = c;
                        var e,
                            g = j.length;
                        for (e = 0; e < g; e++) if (b(j[e])) return;
                        k && b(k)
                    }
                }
                function o() {
                    return i = i || e.$on('$locationChangeSuccess', n)
                }
                var p,
                    q = g.baseHref(),
                    r = d.url();
                return l || o(),
                    {
                        sync: function () {
                            n()
                        },
                        listen: function () {
                            return o()
                        },
                        update: function (a) {
                            return a ? void (r = d.url())  : void (d.url() !== r && (d.url(r), d.replace()))
                        },
                        push: function (a, b, e) {
                            var f = a.format(b || {
                            });
                            null !== f && b && b['#'] && (f += '#' + b['#']),
                                d.url(f),
                                p = e && e.$$avoidResync ? d.url()  : c,
                            e && e.replace && d.replace()
                        },
                        href: function (c, e, f) {
                            if (!c.validates(e)) return null;
                            var g = a.html5Mode();
                            b.isObject(g) && (g = g.enabled),
                                g = g && h.history;
                            var i = c.format(e);
                            if (f = f || {
                            }, g || null === i || (i = '#' + a.hashPrefix() + i), null !== i && e && e['#'] && (i += '#' + e['#']), i = m(i, g, f.absolute), !f.absolute || !i) return i;
                            var j = !g && i ? '/' : '',
                                k = d.port();
                            return k = 80 === k || 443 === k ? '' : ':' + k,
                                [
                                    d.protocol(),
                                    '://',
                                    d.host(),
                                    k,
                                    j,
                                    i
                                ].join('')
                        }
                    }
            }
            var i,
                j = [
                ],
                k = null,
                l = !1;
            this.rule = function (a) {
                if (!O(a)) throw new Error('\'rule\' must be a function');
                return j.push(a),
                    this
            },
                this.otherwise = function (a) {
                    if (P(a)) {
                        var b = a;
                        a = function () {
                            return b
                        }
                    } else if (!O(a)) throw new Error('\'rule\' must be a function');
                    return k = a,
                        this
                },
                this.when = function (a, b) {
                    var c,
                        h = P(b);
                    if (P(a) && (a = d.compile(a)), !h && !O(b) && !R(b)) throw new Error('invalid \'handler\' in when()');
                    var i = {
                            matcher: function (a, b) {
                                return h && (c = d.compile(b), b = [
                                    '$match',
                                    function (a) {
                                        return c.format(a)
                                    }
                                ]),
                                    T(function (c, d) {
                                        return g(c, b, a.exec(d.path(), d.search()))
                                    }, {
                                        prefix: P(a.prefix) ? a.prefix : ''
                                    })
                            },
                            regex: function (a, b) {
                                if (a.global || a.sticky) throw new Error('when() RegExp must not be global or sticky');
                                return h && (c = b, b = [
                                    '$match',
                                    function (a) {
                                        return f(c, a)
                                    }
                                ]),
                                    T(function (c, d) {
                                        return g(c, b, a.exec(d.path()))
                                    }, {
                                        prefix: e(a)
                                    })
                            }
                        },
                        j = {
                            matcher: d.isMatcher(a),
                            regex: a instanceof RegExp
                        };
                    for (var k in j) if (j[k]) return this.rule(i[k](a, b));
                    throw new Error('invalid \'what\' in when()')
                },
                this.deferIntercept = function (a) {
                    a === c && (a = !0),
                        l = a
                },
                this.$get = h,
                h.$inject = [
                    '$location',
                    '$rootScope',
                    '$injector',
                    '$browser',
                    '$sniffer'
                ]
        }
        function x(a, e) {
            function f(a) {
                return 0 === a.indexOf('.') || 0 === a.indexOf('^')
            }
            function m(a, b) {
                if (!a) return c;
                var d = P(a),
                    e = d ? a : a.name,
                    g = f(e);
                if (g) {
                    if (!b) throw new Error('No reference point given for path \'' + e + '\'');
                    b = m(b);
                    for (var h = e.split('.'), i = 0, j = h.length, k = b; i < j; i++) if ('' !== h[i] || 0 !== i) {
                        if ('^' !== h[i]) break;
                        if (!k.parent) throw new Error('Path \'' + e + '\' not valid for state \'' + b.name + '\'');
                        k = k.parent
                    } else k = b;
                    h = h.slice(i).join('.'),
                        e = k.name + (k.name && h ? '.' : '') + h
                }
                var l = A[e];
                return !l || !d && (d || l !== a && l.self !== a) ? c : l
            }
            function n(a, b) {
                B[a] || (B[a] = [
                ]),
                    B[a].push(b)
            }
            function q(a) {
                for (var b = B[a] || [
                ]; b.length; ) r(b.shift())
            }
            function r(b) {
                b = d(b, {
                    self: b,
                    resolve: b.resolve || {
                    },
                    toString: function () {
                        return this.name
                    }
                });
                var c = b.name;
                if (!P(c) || c.indexOf('@') >= 0) throw new Error('State must have a valid name');
                if (A.hasOwnProperty(c)) throw new Error('State \'' + c + '\' is already defined');
                var e = c.indexOf('.') !== - 1 ? c.substring(0, c.lastIndexOf('.'))  : P(b.parent) ? b.parent : Q(b.parent) && P(b.parent.name) ? b.parent.name : '';
                if (e && !A[e]) return n(e, b.self);
                for (var f in D) O(D[f]) && (b[f] = D[f](b, D.$delegates[f]));
                return A[c] = b,
                !b[C] && b.url && a.when(b.url, [
                    '$match',
                    '$stateParams',
                    function (a, c) {
                        z.$current.navigable == b && j(a, c) || z.transitionTo(b, a, {
                            inherit: !0,
                            location: !1
                        })
                    }
                ]),
                    q(c),
                    b
            }
            function s(a) {
                return a.indexOf('*') > - 1
            }
            function t(a) {
                for (var b = a.split('.'), c = z.$current.name.split('.'), d = 0, e = b.length; d < e; d++) '*' === b[d] && (c[d] = '*');
                return '**' === b[0] && (c = c.slice(h(c, b[1])), c.unshift('**')),
                '**' === b[b.length - 1] && (c.splice(h(c, b[b.length - 2]) + 1, Number.MAX_VALUE), c.push('**')),
                b.length == c.length && c.join('') === b.join('')
            }
            function u(a, b) {
                return P(a) && !N(b) ? D[a] : O(b) && P(a) ? (D[a] && !D.$delegates[a] && (D.$delegates[a] = D[a]), D[a] = b, this)  : this
            }
            function v(a, b) {
                return Q(a) ? b = a : b.name = a,
                    r(b),
                    this
            }
            function w(a, e, f, h, j, l, n, q, r) {
                function u(b, c, d, f) {
                    var g = a.$broadcast('$stateNotFound', b, c, d);
                    if (g.defaultPrevented) return n.update(),
                        E;
                    if (!g.retry) return null;
                    if (f.$retry) return n.update(),
                        F;
                    var h = z.transition = e.when(g.retry);
                    return h.then(function () {
                        return h !== z.transition ? (a.$broadcast('$stateChangeCancel', b.to, b.toParams, c, d), B)  : (b.options.$retry = !0, z.transitionTo(b.to, b.toParams, b.options))
                    }, function () {
                        return E
                    }),
                        n.update(),
                        h
                }
                function v(a, c, d, g, i, l) {
                    function m() {
                        var c = [
                        ];
                        return S(a.views, function (d, e) {
                            var g = d.resolve && d.resolve !== a.resolve ? d.resolve : {
                            };
                            g.$template = [
                                function () {
                                    return f.load(e, {
                                        view: d,
                                        locals: i.globals,
                                        params: n,
                                        notify: l.notify
                                    }) || ''
                                }
                            ],
                                c.push(j.resolve(g, i.globals, i.resolve, a).then(function (c) {
                                    if (O(d.controllerProvider) || R(d.controllerProvider)) {
                                        var f = b.extend({
                                        }, g, i.globals);
                                        c.$$controller = h.invoke(d.controllerProvider, null, f)
                                    } else c.$$controller = d.controller;
                                    c.$$state = a,
                                        c.$$controllerAs = d.controllerAs,
                                        c.$$resolveAs = d.resolveAs,
                                        i[e] = c
                                }))
                        }),
                            e.all(c).then(function () {
                                return i.globals
                            })
                    }
                    var n = d ? c : k(a.params.$$keys(), c),
                        o = {
                            $stateParams: n
                        };
                    i.resolve = j.resolve(a.resolve, o, i.resolve, a);
                    var p = [
                        i.resolve.then(function (a) {
                            i.globals = a
                        })
                    ];
                    return g && p.push(g),
                        e.all(p).then(m).then(function (a) {
                            return i
                        })
                }
                var w = new Error('transition superseded'),
                    B = p(e.reject(w)),
                    D = p(e.reject(new Error('transition prevented'))),
                    E = p(e.reject(new Error('transition aborted'))),
                    F = p(e.reject(new Error('transition failed')));
                return y.locals = {
                    resolve: null,
                    globals: {
                        $stateParams: {
                        }
                    }
                },
                    z = {
                        params: {
                        },
                        current: y.self,
                        $current: y,
                        transition: null
                    },
                    z.reload = function (a) {
                        return z.transitionTo(z.current, l, {
                            reload: a || !0,
                            inherit: !1,
                            notify: !0
                        })
                    },
                    z.go = function (a, b, c) {
                        return z.transitionTo(a, b, T({
                            inherit: !0,
                            relative: z.$current
                        }, c))
                    },
                    z.transitionTo = function (b, c, f) {
                        c = c || {
                        },
                            f = T({
                                location: !0,
                                inherit: !1,
                                relative: null,
                                notify: !0,
                                reload: !1,
                                $retry: !1
                            }, f || {
                            });
                        var g,
                            j = z.$current,
                            o = z.params,
                            q = j.path,
                            r = m(b, f.relative),
                            s = c['#'];
                        if (!N(r)) {
                            var t = {
                                    to: b,
                                    toParams: c,
                                    options: f
                                },
                                A = u(t, j.self, o, f);
                            if (A) return A;
                            if (b = t.to, c = t.toParams, f = t.options, r = m(b, f.relative), !N(r)) {
                                if (!f.relative) throw new Error('No such state \'' + b + '\'');
                                throw new Error('Could not resolve \'' + b + '\' from state \'' + f.relative + '\'')
                            }
                        }
                        if (r[C]) throw new Error('Cannot transition to abstract state \'' + b + '\'');
                        if (f.inherit && (c = i(l, c || {
                        }, z.$current, r)), !r.params.$$validates(c)) return F;
                        c = r.params.$$values(c),
                            b = r;
                        var E = b.path,
                            G = 0,
                            H = E[G],
                            I = y.locals,
                            J = [
                            ];
                        if (f.reload) {
                            if (P(f.reload) || Q(f.reload)) {
                                if (Q(f.reload) && !f.reload.name) throw new Error('Invalid reload state object');
                                var K = f.reload === !0 ? q[0] : m(f.reload);
                                if (f.reload && !K) throw new Error('No such reload state \'' + (P(f.reload) ? f.reload : f.reload.name) + '\'');
                                for (; H && H === q[G] && H !== K; ) I = J[G] = H.locals,
                                    G++,
                                    H = E[G]
                            }
                        } else for (; H && H === q[G] && H.ownParams.$$equals(c, o); ) I = J[G] = H.locals,
                            G++,
                            H = E[G];
                        if (x(b, c, j, o, I, f)) return s && (c['#'] = s),
                            z.params = c,
                            U(z.params, l),
                            U(k(b.params.$$keys(), l), b.locals.globals.$stateParams),
                        f.location && b.navigable && b.navigable.url && (n.push(b.navigable.url, c, {
                            $$avoidResync: !0,
                            replace: 'replace' === f.location
                        }), n.update(!0)),
                            z.transition = null,
                            e.when(z.current);
                        if (c = k(b.params.$$keys(), c || {
                        }), s && (c['#'] = s), f.notify && a.$broadcast('$stateChangeStart', b.self, c, j.self, o, f).defaultPrevented) return a.$broadcast('$stateChangeCancel', b.self, c, j.self, o),
                        null == z.transition && n.update(),
                            D;
                        for (var L = e.when(I), M = G; M < E.length; M++, H = E[M]) I = J[M] = d(I),
                            L = v(H, c, H === b, L, I, f);
                        var O = z.transition = L.then(function () {
                            var d,
                                e,
                                g;
                            if (z.transition !== O) return a.$broadcast('$stateChangeCancel', b.self, c, j.self, o),
                                B;
                            for (d = q.length - 1; d >= G; d--) g = q[d],
                            g.self.onExit && h.invoke(g.self.onExit, g.self, g.locals.globals),
                                g.locals = null;
                            for (d = G; d < E.length; d++) e = E[d],
                                e.locals = J[d],
                            e.self.onEnter && h.invoke(e.self.onEnter, e.self, e.locals.globals);
                            return z.transition !== O ? (a.$broadcast('$stateChangeCancel', b.self, c, j.self, o), B)  : (z.$current = b, z.current = b.self, z.params = c, U(z.params, l), z.transition = null, f.location && b.navigable && n.push(b.navigable.url, b.navigable.locals.globals.$stateParams, {
                                $$avoidResync: !0,
                                replace: 'replace' === f.location
                            }), f.notify && a.$broadcast('$stateChangeSuccess', b.self, c, j.self, o), n.update(!0), z.current)
                        }).then(null, function (d) {
                            return d === w ? B : z.transition !== O ? (a.$broadcast('$stateChangeCancel', b.self, c, j.self, o), B)  : (z.transition = null, g = a.$broadcast('$stateChangeError', b.self, c, j.self, o, d), g.defaultPrevented || n.update(), e.reject(d))
                        });
                        return p(O),
                            O
                    },
                    z.is = function (a, b, d) {
                        d = T({
                            relative: z.$current
                        }, d || {
                        });
                        var e = m(a, d.relative);
                        return N(e) ? z.$current === e && (!b || g(b).reduce(function (a, c) {
                            var d = e.params[c];
                            return a && !d || d.type.equals(l[c], b[c])
                        }, !0))  : c
                    },
                    z.includes = function (a, b, d) {
                        if (d = T({
                            relative: z.$current
                        }, d || {
                        }), P(a) && s(a)) {
                            if (!t(a)) return !1;
                            a = z.$current.name
                        }
                        var e = m(a, d.relative);
                        if (!N(e)) return c;
                        if (!N(z.$current.includes[e.name])) return !1;
                        if (!b) return !0;
                        for (var f = g(b), h = 0; h < f.length; h++) {
                            var i = f[h],
                                j = e.params[i];
                            if (j && !j.type.equals(l[i], b[i])) return !1
                        }
                        return g(b).reduce(function (a, c) {
                            var d = e.params[c];
                            return a && !d || d.type.equals(l[c], b[c])
                        }, !0)
                    },
                    z.href = function (a, b, d) {
                        d = T({
                            lossy: !0,
                            inherit: !0,
                            absolute: !1,
                            relative: z.$current
                        }, d || {
                        });
                        var e = m(a, d.relative);
                        if (!N(e)) return null;
                        d.inherit && (b = i(l, b || {
                        }, z.$current, e));
                        var f = e && d.lossy ? e.navigable : e;
                        return f && f.url !== c && null !== f.url ? n.href(f.url, k(e.params.$$keys().concat('#'), b || {
                        }), {
                            absolute: d.absolute
                        })  : null
                    },
                    z.get = function (a, b) {
                        if (0 === arguments.length) return o(g(A), function (a) {
                            return A[a].self
                        });
                        var c = m(a, b || z.$current);
                        return c && c.self ? c.self : null
                    },
                    z
            }
            function x(a, b, c, d, e, f) {
                function g(a, b, c) {
                    function d(b) {
                        return 'search' != a.params[b].location
                    }
                    var e = a.params.$$keys().filter(d),
                        f = l.apply({
                        }, [
                            a.params
                        ].concat(e)),
                        g = new W.ParamSet(f);
                    return g.$$equals(b, c)
                }
                if (!f.reload && a === c && (e === c.locals || a.self.reloadOnSearch === !1 && g(c, d, b))) return !0
            }
            var y,
                z,
                A = {
                },
                B = {
                },
                C = 'abstract',
                D = {
                    parent: function (a) {
                        if (N(a.parent) && a.parent) return m(a.parent);
                        var b = /^(.+)\.[^.]+$/.exec(a.name);
                        return b ? m(b[1])  : y
                    },
                    data: function (a) {
                        return a.parent && a.parent.data && (a.data = a.self.data = d(a.parent.data, a.data)),
                            a.data
                    },
                    url: function (a) {
                        var b = a.url,
                            c = {
                                params: a.params || {
                                }
                            };
                        if (P(b)) return '^' == b.charAt(0) ? e.compile(b.substring(1), c)  : (a.parent.navigable || y).url.concat(b, c);
                        if (!b || e.isMatcher(b)) return b;
                        throw new Error('Invalid url \'' + b + '\' in state \'' + a + '\'')
                    },
                    navigable: function (a) {
                        return a.url ? a : a.parent ? a.parent.navigable : null
                    },
                    ownParams: function (a) {
                        var b = a.url && a.url.params || new W.ParamSet;
                        return S(a.params || {
                        }, function (a, c) {
                            b[c] || (b[c] = new W.Param(c, null, a, 'config'))
                        }),
                            b
                    },
                    params: function (a) {
                        var b = l(a.ownParams, a.ownParams.$$keys());
                        return a.parent && a.parent.params ? T(a.parent.params.$$new(), b)  : new W.ParamSet
                    },
                    views: function (a) {
                        var b = {
                        };
                        return S(N(a.views) ? a.views : {
                            '': a
                        }, function (c, d) {
                            d.indexOf('@') < 0 && (d += '@' + a.parent.name),
                                c.resolveAs = c.resolveAs || a.resolveAs || '$resolve',
                                b[d] = c
                        }),
                            b
                    },
                    path: function (a) {
                        return a.parent ? a.parent.path.concat(a)  : [
                        ]
                    },
                    includes: function (a) {
                        var b = a.parent ? T({
                        }, a.parent.includes)  : {
                        };
                        return b[a.name] = !0,
                            b
                    },
                    $delegates: {
                    }
                };
            y = r({
                name: '',
                url: '^',
                views: null,
                abstract: !0
            }),
                y.navigable = null,
                this.decorator = u,
                this.state = v,
                this.$get = w,
                w.$inject = [
                    '$rootScope',
                    '$q',
                    '$view',
                    '$injector',
                    '$resolve',
                    '$stateParams',
                    '$urlRouter',
                    '$location',
                    '$urlMatcherFactory'
                ]
        }
        function y() {
            function a(a, b) {
                return {
                    load: function (a, c) {
                        var d,
                            e = {
                                template: null,
                                controller: null,
                                view: null,
                                locals: null,
                                notify: !0,
                                async: !0,
                                params: {
                                }
                            };
                        return c = T(e, c),
                        c.view && (d = b.fromConfig(c.view, c.params, c.locals)),
                            d
                    }
                }
            }
            this.$get = a,
                a.$inject = [
                    '$rootScope',
                    '$templateFactory'
                ]
        }
        function z() {
            var a = !1;
            this.useAnchorScroll = function () {
                a = !0
            },
                this.$get = [
                    '$anchorScroll',
                    '$timeout',
                    function (b, c) {
                        return a ? b : function (a) {
                            return c(function () {
                                a[0].scrollIntoView()
                            }, 0, !1)
                        }
                    }
                ]
        }
        function A(a, c, d, e, f) {
            function g() {
                return c.has ? function (a) {
                        return c.has(a) ? c.get(a)  : null
                    }
                    : function (a) {
                        try {
                            return c.get(a)
                        } catch (a) {
                            return null
                        }
                    }
            }
            function h(a, c) {
                var d = function () {
                    return {
                        enter: function (a, b, c) {
                            b.after(a),
                                c()
                        },
                        leave: function (a, b) {
                            a.remove(),
                                b()
                        }
                    }
                };
                if (k) return {
                    enter: function (a, c, d) {
                        b.version.minor > 2 ? k.enter(a, null, c).then(d)  : k.enter(a, null, c, d)
                    },
                    leave: function (a, c) {
                        b.version.minor > 2 ? k.leave(a).then(c)  : k.leave(a, c)
                    }
                };
                if (j) {
                    var e = j && j(c, a);
                    return {
                        enter: function (a, b, c) {
                            e.enter(a, null, b),
                                c()
                        },
                        leave: function (a, b) {
                            e.leave(a),
                                b()
                        }
                    }
                }
                return d()
            }
            var i = g(),
                j = i('$animator'),
                k = i('$animate'),
                l = {
                    restrict: 'ECA',
                    terminal: !0,
                    priority: 400,
                    transclude: 'element',
                    compile: function (c, g, i) {
                        return function (c, g, j) {
                            function k() {
                                if (m && (m.remove(), m = null), o && (o.$destroy(), o = null), n) {
                                    var a = n.data('$uiViewAnim');
                                    s.leave(n, function () {
                                        a.$$animLeave.resolve(),
                                            m = null
                                    }),
                                        m = n,
                                        n = null
                                }
                            }
                            function l(h) {
                                var l,
                                    m = C(c, j, g, e),
                                    t = m && a.$current && a.$current.locals[m];
                                if (h || t !== p) {
                                    l = c.$new(),
                                        p = a.$current.locals[m],
                                        l.$emit('$viewContentLoading', m);
                                    var u = i(l, function (a) {
                                        var e = f.defer(),
                                            h = f.defer(),
                                            i = {
                                                $animEnter: e.promise,
                                                $animLeave: h.promise,
                                                $$animLeave: h
                                            };
                                        a.data('$uiViewAnim', i),
                                            s.enter(a, g, function () {
                                                e.resolve(),
                                                o && o.$emit('$viewContentAnimationEnded'),
                                                (b.isDefined(r) && !r || c.$eval(r)) && d(a)
                                            }),
                                            k()
                                    });
                                    n = u,
                                        o = l,
                                        o.$emit('$viewContentLoaded', m),
                                        o.$eval(q)
                                }
                            }
                            var m,
                                n,
                                o,
                                p,
                                q = j.onload || '',
                                r = j.autoscroll,
                                s = h(j, c);
                            g.inheritedData('$uiView');
                            c.$on('$stateChangeSuccess', function () {
                                l(!1)
                            }),
                                l(!0)
                        }
                    }
                };
            return l
        }
        function B(a, c, d, e) {
            return {
                restrict: 'ECA',
                priority: - 400,
                compile: function (f) {
                    var g = f.html();
                    return f.empty ? f.empty()  : f[0].innerHTML = null,
                        function (f, h, i) {
                            var j = d.$current,
                                k = C(f, i, h, e),
                                l = j && j.locals[k];
                            if (!l) return h.html(g),
                                void a(h.contents()) (f);
                            h.data('$uiView', {
                                name: k,
                                state: l.$$state
                            }),
                                h.html(l.$template ? l.$template : g);
                            var m = b.extend({
                            }, l);
                            f[l.$$resolveAs] = m;
                            var n = a(h.contents());
                            if (l.$$controller) {
                                l.$scope = f,
                                    l.$element = h;
                                var o = c(l.$$controller, l);
                                l.$$controllerAs && (f[l.$$controllerAs] = o, f[l.$$controllerAs][l.$$resolveAs] = m),
                                O(o.$onInit) && o.$onInit(),
                                    h.data('$ngControllerController', o),
                                    h.children().data('$ngControllerController', o)
                            }
                            n(f)
                        }
                }
            }
        }
        function C(a, b, c, d) {
            var e = d(b.uiView || b.name || '') (a),
                f = c.inheritedData('$uiView');
            return e.indexOf('@') >= 0 ? e : e + '@' + (f ? f.state.name : '')
        }
        function D(a, b) {
            var c,
                d = a.match(/^\s*({[^}]*})\s*$/);
            if (d && (a = b + '(' + d[1] + ')'), c = a.replace(/\n/g, ' ').match(/^([^(]+?)\s*(\((.*)\))?$/), !c || 4 !== c.length) throw new Error('Invalid state ref \'' + a + '\'');
            return {
                state: c[1],
                paramExpr: c[3] || null
            }
        }
        function E(a) {
            var b = a.parent().inheritedData('$uiView');
            if (b && b.state && b.state.name) return b.state
        }
        function F(a) {
            var b = '[object SVGAnimatedString]' === Object.prototype.toString.call(a.prop('href')),
                c = 'FORM' === a[0].nodeName;
            return {
                attr: c ? 'action' : b ? 'xlink:href' : 'href',
                isAnchor: 'A' === a.prop('tagName').toUpperCase(),
                clickable: !c
            }
        }
        function G(a, b, c, d, e) {
            return function (f) {
                var g = f.which || f.button,
                    h = e();
                if (!(g > 1 || f.ctrlKey || f.metaKey || f.shiftKey || a.attr('target'))) {
                    var i = c(function () {
                        b.go(h.state, h.params, h.options)
                    });
                    f.preventDefault();
                    var j = d.isAnchor && !h.href ? 1 : 0;
                    f.preventDefault = function () {
                        j-- <= 0 && c.cancel(i)
                    }
                }
            }
        }
        function H(a, b) {
            return {
                relative: E(a) || b.$current,
                inherit: !0
            }
        }
        function I(a, c) {
            return {
                restrict: 'A',
                require: [
                    '?^uiSrefActive',
                    '?^uiSrefActiveEq'
                ],
                link: function (d, e, f, g) {
                    var h,
                        i = D(f.uiSref, a.current.name),
                        j = {
                            state: i.state,
                            href: null,
                            params: null
                        },
                        k = F(e),
                        l = g[1] || g[0],
                        m = null;
                    j.options = T(H(e, a), f.uiSrefOpts ? d.$eval(f.uiSrefOpts)  : {
                    });
                    var n = function (c) {
                        c && (j.params = b.copy(c)),
                            j.href = a.href(i.state, j.params, j.options),
                        m && m(),
                        l && (m = l.$$addStateInfo(i.state, j.params)),
                        null !== j.href && f.$set(k.attr, j.href)
                    };
                    i.paramExpr && (d.$watch(i.paramExpr, function (a) {
                        a !== j.params && n(a)
                    }, !0), j.params = b.copy(d.$eval(i.paramExpr))),
                        n(),
                    k.clickable && (h = G(e, a, c, k, function () {
                        return j
                    }), e[e.on ? 'on' : 'bind']('click', h), d.$on('$destroy', function () {
                        e[e.off ? 'off' : 'unbind']('click', h)
                    }))
                }
            }
        }
        function J(a, b) {
            return {
                restrict: 'A',
                require: [
                    '?^uiSrefActive',
                    '?^uiSrefActiveEq'
                ],
                link: function (c, d, e, f) {
                    function g(b) {
                        m.state = b[0],
                            m.params = b[1],
                            m.options = b[2],
                            m.href = a.href(m.state, m.params, m.options),
                        n && n(),
                        j && (n = j.$$addStateInfo(m.state, m.params)),
                        m.href && e.$set(i.attr, m.href)
                    }
                    var h,
                        i = F(d),
                        j = f[1] || f[0],
                        k = [
                            e.uiState,
                            e.uiStateParams || null,
                            e.uiStateOpts || null
                        ],
                        l = '[' + k.map(function (a) {
                            return a || 'null'
                        }).join(', ') + ']',
                        m = {
                            state: null,
                            params: null,
                            options: null,
                            href: null
                        },
                        n = null;
                    c.$watch(l, g, !0),
                        g(c.$eval(l)),
                    i.clickable && (h = G(d, a, b, i, function () {
                        return m
                    }), d[d.on ? 'on' : 'bind']('click', h), c.$on('$destroy', function () {
                        d[d.off ? 'off' : 'unbind']('click', h)
                    }))
                }
            }
        }
        function K(a, b, c) {
            return {
                restrict: 'A',
                controller: [
                    '$scope',
                    '$element',
                    '$attrs',
                    '$timeout',
                    function (b, d, e, f) {
                        function g(b, c, e) {
                            var f = a.get(b, E(d)),
                                g = h(b, c),
                                i = {
                                    state: f || {
                                        name: b
                                    },
                                    params: c,
                                    hash: g
                                };
                            return p.push(i),
                                q[g] = e,
                                function () {
                                    var a = p.indexOf(i);
                                    a !== - 1 && p.splice(a, 1)
                                }
                        }
                        function h(a, c) {
                            if (!P(a)) throw new Error('state should be a string');
                            return Q(c) ? a + V(c)  : (c = b.$eval(c), Q(c) ? a + V(c)  : a)
                        }
                        function i() {
                            for (var a = 0; a < p.length; a++) l(p[a].state, p[a].params) ? j(d, q[p[a].hash])  : k(d, q[p[a].hash]),
                                m(p[a].state, p[a].params) ? j(d, n)  : k(d, n)
                        }
                        function j(a, b) {
                            f(function () {
                                a.addClass(b)
                            })
                        }
                        function k(a, b) {
                            a.removeClass(b)
                        }
                        function l(b, c) {
                            return a.includes(b.name, c)
                        }
                        function m(b, c) {
                            return a.is(b.name, c)
                        }
                        var n,
                            o,
                            p = [
                            ],
                            q = {
                            };
                        n = c(e.uiSrefActiveEq || '', !1) (b);
                        try {
                            o = b.$eval(e.uiSrefActive)
                        } catch (a) {
                        }
                        o = o || c(e.uiSrefActive || '', !1) (b),
                        Q(o) && S(o, function (c, d) {
                            if (P(c)) {
                                var e = D(c, a.current.name);
                                g(e.state, b.$eval(e.paramExpr), d)
                            }
                        }),
                            this.$$addStateInfo = function (a, b) {
                                if (!(Q(o) && p.length > 0)) {
                                    var c = g(a, b, o);
                                    return i(),
                                        c
                                }
                            },
                            b.$on('$stateChangeSuccess', i),
                            i()
                    }
                ]
            }
        }
        function L(a) {
            var b = function (b, c) {
                return a.is(b, c)
            };
            return b.$stateful = !0,
                b
        }
        function M(a) {
            var b = function (b, c, d) {
                return a.includes(b, c, d)
            };
            return b.$stateful = !0,
                b
        }
        var N = b.isDefined,
            O = b.isFunction,
            P = b.isString,
            Q = b.isObject,
            R = b.isArray,
            S = b.forEach,
            T = b.extend,
            U = b.copy,
            V = b.toJson;
        b.module('ui.router.util', [
            'ng'
        ]),
            b.module('ui.router.router', [
                'ui.router.util'
            ]),
            b.module('ui.router.state', [
                'ui.router.router',
                'ui.router.util'
            ]),
            b.module('ui.router', [
                'ui.router.state'
            ]),
            b.module('ui.router.compat', [
                'ui.router'
            ]),
            q.$inject = [
                '$q',
                '$injector'
            ],
            b.module('ui.router.util').service('$resolve', q),
            b.module('ui.router.util').provider('$templateFactory', r);
        var W;
        t.prototype.concat = function (a, b) {
            var c = {
                caseInsensitive: W.caseInsensitive(),
                strict: W.strictMode(),
                squash: W.defaultSquashPolicy()
            };
            return new t(this.sourcePath + a + this.sourceSearch, T(c, b), this)
        },
            t.prototype.toString = function () {
                return this.source
            },
            t.prototype.exec = function (a, b) {
                function c(a) {
                    function b(a) {
                        return a.split('').reverse().join('')
                    }
                    function c(a) {
                        return a.replace(/\\-/g, '-')
                    }
                    var d = b(a).split(/-(?!\\)/),
                        e = o(d, b);
                    return o(e, c).reverse()
                }
                var d = this.regexp.exec(a);
                if (!d) return null;
                b = b || {
                };
                var e,
                    f,
                    g,
                    h = this.parameters(),
                    i = h.length,
                    j = this.segments.length - 1,
                    k = {
                    };
                if (j !== d.length - 1) throw new Error('Unbalanced capture group in route \'' + this.source + '\'');
                var l,
                    m;
                for (e = 0; e < j; e++) {
                    for (g = h[e], l = this.params[g], m = d[e + 1], f = 0; f < l.replace.length; f++) l.replace[f].from === m && (m = l.replace[f].to);
                    m && l.array === !0 && (m = c(m)),
                    N(m) && (m = l.type.decode(m)),
                        k[g] = l.value(m)
                }
                for (; e < i; e++) {
                    for (g = h[e], k[g] = this.params[g].value(b[g]), l = this.params[g], m = b[g], f = 0; f < l.replace.length; f++) l.replace[f].from === m && (m = l.replace[f].to);
                    N(m) && (m = l.type.decode(m)),
                        k[g] = l.value(m)
                }
                return k
            },
            t.prototype.parameters = function (a) {
                return N(a) ? this.params[a] || null : this.$$paramNames
            },
            t.prototype.validates = function (a) {
                return this.params.$$validates(a)
            },
            t.prototype.format = function (a) {
                function b(a) {
                    return encodeURIComponent(a).replace(/-/g, function (a) {
                        return '%5C%' + a.charCodeAt(0).toString(16).toUpperCase()
                    })
                }
                a = a || {
                };
                var c = this.segments,
                    d = this.parameters(),
                    e = this.params;
                if (!this.validates(a)) return null;
                var f,
                    g = !1,
                    h = c.length - 1,
                    i = d.length,
                    j = c[0];
                for (f = 0; f < i; f++) {
                    var k = f < h,
                        l = d[f],
                        m = e[l],
                        n = m.value(a[l]),
                        p = m.isOptional && m.type.equals(m.value(), n),
                        q = !!p && m.squash,
                        r = m.type.encode(n);
                    if (k) {
                        var s = c[f + 1],
                            t = f + 1 === h;
                        if (q === !1) null != r && (j += R(r) ? o(r, b).join('-')  : encodeURIComponent(r)),
                            j += s;
                        else if (q === !0) {
                            var u = j.match(/\/$/) ? /\/?(.*)/ : /(.*)/;
                            j += s.match(u) [1]
                        } else P(q) && (j += q + s);
                        t && m.squash === !0 && '/' === j.slice( - 1) && (j = j.slice(0, - 1))
                    } else {
                        if (null == r || p && q !== !1) continue;
                        if (R(r) || (r = [
                            r
                        ]), 0 === r.length) continue;
                        r = o(r, encodeURIComponent).join('&' + l + '='),
                            j += (g ? '&' : '?') + (l + '=' + r),
                            g = !0
                    }
                }
                return j
            },
            u.prototype.is = function (a, b) {
                return !0
            },
            u.prototype.encode = function (a, b) {
                return a
            },
            u.prototype.decode = function (a, b) {
                return a
            },
            u.prototype.equals = function (a, b) {
                return a == b
            },
            u.prototype.$subPattern = function () {
                var a = this.pattern.toString();
                return a.substr(1, a.length - 2)
            },
            u.prototype.pattern = /.*/,
            u.prototype.toString = function () {
                return '{Type:' + this.name + '}'
            },
            u.prototype.$normalize = function (a) {
                return this.is(a) ? a : this.decode(a)
            },
            u.prototype.$asArray = function (a, b) {
                function d(a, b) {
                    function d(a, b) {
                        return function () {
                            return a[b].apply(a, arguments)
                        }
                    }
                    function e(a) {
                        return R(a) ? a : N(a) ? [
                            a
                        ] : [
                        ]
                    }
                    function f(a) {
                        switch (a.length) {
                            case 0:
                                return c;
                            case 1:
                                return 'auto' === b ? a[0] : a;
                            default:
                                return a
                        }
                    }
                    function g(a) {
                        return !a
                    }
                    function h(a, b) {
                        return function (c) {
                            if (R(c) && 0 === c.length) return c;
                            c = e(c);
                            var d = o(c, a);
                            return b === !0 ? 0 === n(d, g).length : f(d)
                        }
                    }
                    function i(a) {
                        return function (b, c) {
                            var d = e(b),
                                f = e(c);
                            if (d.length !== f.length) return !1;
                            for (var g = 0; g < d.length; g++) if (!a(d[g], f[g])) return !1;
                            return !0
                        }
                    }
                    this.encode = h(d(a, 'encode')),
                        this.decode = h(d(a, 'decode')),
                        this.is = h(d(a, 'is'), !0),
                        this.equals = i(d(a, 'equals')),
                        this.pattern = a.pattern,
                        this.$normalize = h(d(a, '$normalize')),
                        this.name = a.name,
                        this.$arrayMode = b
                }
                if (!a) return this;
                if ('auto' === a && !b) throw new Error('\'auto\' array mode is for query parameters only');
                return new d(this, a)
            },
            b.module('ui.router.util').provider('$urlMatcherFactory', v),
            b.module('ui.router.util').run(['$urlMatcherFactory',
                function (a) {
                }
            ]),
            w.$inject = [
                '$locationProvider',
                '$urlMatcherFactoryProvider'
            ],
            b.module('ui.router.router').provider('$urlRouter', w),
            x.$inject = [
                '$urlRouterProvider',
                '$urlMatcherFactoryProvider'
            ],
            b.module('ui.router.state').factory('$stateParams', function () {
                return {
                }
            }).constant('$state.runtime', {
                autoinject: 0
            }).provider('$state', x).run(['$injector',
                function (a) {
                    a.get('$state.runtime').autoinject && a.get('$state')
                }
            ]),
            y.$inject = [
            ],
            b.module('ui.router.state').provider('$view', y),
            b.module('ui.router.state').provider('$uiViewScroll', z),
            A.$inject = [
                '$state',
                '$injector',
                '$uiViewScroll',
                '$interpolate',
                '$q'
            ],
            B.$inject = [
                '$compile',
                '$controller',
                '$state',
                '$interpolate'
            ],
            b.module('ui.router.state').directive('uiView', A),
            b.module('ui.router.state').directive('uiView', B),
            I.$inject = [
                '$state',
                '$timeout'
            ],
            J.$inject = [
                '$state',
                '$timeout'
            ],
            K.$inject = [
                '$state',
                '$stateParams',
                '$interpolate'
            ],
            b.module('ui.router.state').directive('uiSref', I).directive('uiSrefActive', K).directive('uiSrefActiveEq', K).directive('uiState', J),
            L.$inject = [
                '$state'
            ],
            M.$inject = [
                '$state'
            ],
            b.module('ui.router.state').filter('isState', L).filter('includedByState', M)
    }(window, window.angular);
define('angular-ui-router', [
    'angular-route'
], function () {
});
!function () {
    'use strict';
    define('angular-dynamic-module', function (require) {
        var _ = require('lodash'),
            angular = require('angular'),
            router = require('angular-ui-router'),
            ExtensionUtils = {
                enableDynamicCreation: function enableDynamicCreation(module) {
                    module.config(['$controllerProvider',
                        '$provide',
                        '$compileProvider',
                        '$stateProvider',
                        '$injector',
                        function ($controllerProvider, $provide, $compileProvider, $stateProvider, $injector) {
                            module._controller = module.controller;
                            module._service = module.service;
                            module._factory = module.factory;
                            module._value = module.value;
                            module._directive = module.directive;
                            module.controller = function (name, constructor) {
                                $controllerProvider.register(name, constructor);
                                return this
                            };
                            module.service = function (name, constructor) {
                                $provide.service(name, constructor);
                                return this
                            };
                            module.factory = function (name, factory) {
                                $provide.factory(name, factory);
                                return this
                            };
                            module.value = function (name, value) {
                                $provide.value(name, value);
                                return this
                            };
                            module.directive = function (name, factory) {
                                $compileProvider.directive(name, factory);
                                return this
                            };
                            module.component = function (name, options) {
                                $compileProvider.component(name, options);
                                return this
                            };
                            module._stateProvider = $stateProvider;
                            $stateProvider.originalStateFn = $stateProvider.state;
                            $stateProvider.state = function (name, definition) {
                                try {
                                    return $stateProvider.originalStateFn(name, definition)
                                } catch (e) {
                                    return this
                                }
                            };
                            module._injector = $injector;
                            var initInjector = angular.injector(['ng'], {
                                    strictDi: true
                                }),
                                $q = initInjector.get('$q'),
                                $rootScope = initInjector.get('$rootScope');
                            module.registerDependencies = function (controller) {
                                var deferred = $q.defer(),
                                    finalResolve = [
                                    ],
                                    registerDirectives = function (directives) {
                                        requireAsync(directives, function () {
                                            var args = Array.prototype.slice.call(arguments);
                                            $rootScope.$apply(function () {
                                                _.forEach(args, function (value) {
                                                    if (!module._injector.has(value.name + 'Directive')) {
                                                        if (value.dependencies) {
                                                            finalResolve.push(false);
                                                            registerDirectives(value.dependencies)
                                                        }
                                                        if (value.component) module.component(value.name, value.implementation);
                                                        else module.directive(value.name, value.implementation)
                                                    }
                                                });
                                                if (!finalResolve.length) deferred.resolve();
                                                finalResolve.pop()
                                            })
                                        })
                                    };
                                if (controller.directives && controller.directives.length) registerDirectives(controller.directives);
                                else deferred.resolve();
                                return deferred.promise
                            }
                        }
                    ])
                }
            };
        return ExtensionUtils
    })
}();
!function (window, angular) {
    'use strict';
    define('angular-aria-extended', function () {
        function $AriaProvider() {
            function watchExpr(attrName, ariaAttr, nodeBlackList, negate) {
                return function (scope, elem, attr) {
                    var ariaCamelName = attr.$normalize(ariaAttr);
                    if (config[ariaCamelName] && !isNodeOneOf(elem, nodeBlackList) && !attr[ariaCamelName]) scope.$watch(attr[attrName], function (boolVal) {
                        boolVal = negate ? !boolVal : !!boolVal;
                        elem.attr(ariaAttr, boolVal)
                    })
                }
            }
            var config = {
                ariaExpanded: true
            };
            this.config = function (newConfig) {
                config = angular.extend(config, newConfig)
            };
            this.$get = function $get() {
                return {
                    config: function (key) {
                        return config[key]
                    },
                    $$watchExpr: watchExpr
                }
            }
        }
        var moduleName = 'ngAriaExtended',
            ngAriaModule = angular.module(moduleName, [
                'ng'
            ]).provider('$ariaExtended', $AriaProvider),
            nodeBlackList = [
                'BUTTON',
                'A',
                'INPUT',
                'TEXTAREA',
                'SELECT',
                'DETAILS',
                'SUMMARY'
            ],
            isNodeOneOf = function (elem, nodeTypeArray) {
                if (nodeTypeArray.indexOf(elem[0].nodeName) !== - 1) return true
            };
        ngAriaModule.directive('ngCollapse', [
            '$ariaExtended',
            function ($ariaExtended) {
                return $ariaExtended.$$watchExpr('ngCollapse', 'aria-expanded', [
                ], false)
            }
        ]);
        return {
            moduleName: moduleName
        }
    })
}(window, window.angular);
window._ne = function (document, window, _ne) {
    function isObject(value) {
        return null !== value && 'object' === typeof value
    }
    function isFunction(value) {
        return 'function' === typeof value
    }
    var node = Node.prototype,
        nodeList = NodeList.prototype,
        forEach = 'forEach',
        trigger = 'trigger',
        each = [
        ][forEach],
        dummy = document.createElement('i');
    nodeList[forEach] = each;
    var isArray = Array.isArray;
    window.on = node.on = function (event, fn) {
        if (!this.handlers) this.handlers = [
        ];
        this.addEventListener(event, fn, false);
        this.handlers.push({
            handler: fn,
            event: event
        });
        return this
    };
    window.off = node.off = function (event, fn) {
        if (fn) {
            this.removeEventListener(event, fn, false);
            if (this.handlers) this.handlers = this.handlers.filter(function (obj) {
                return obj.event !== event && obj.handler !== fn
            })
        } else {
            this.handlers[forEach](function (obj) {
                this.removeEventListener(event, obj.handler, false)
            }.bind(this));
            this.handlers = [
            ]
        }
        return this
    };
    nodeList.on = function (event, fn) {
        this[forEach](function (el) {
            el.on(event, fn)
        }.bind(this));
        return this
    };
    nodeList.off = function (event, fn) {
        if (fn) each.call(this, function (el) {
            el.off(event, fn)
        });
        else {
            this.handlers[forEach](function (obj) {
                this.off(event, obj.handler, false)
            }.bind(this));
            this.handlers = [
            ]
        }
        return this
    };
    Node.prototype.delegate = function (event, selector, fn) {
        var matches = this.mozMatchesSelector || this.webkitMatchesSelector || this.oMatchesSelector || this.matchesSelector || function (selector) {
            var target = this,
                elements = _ne(selector),
                match = false;
            if (elements instanceof NodeList) elements.forEach(function (el) {
                if (el === target) match = true
            });
            else if (elements === target) match = true;
            return match
        };
        this.on(event, function (e) {
            if (matches.call(e.target, selector)) fn.call(e.target, e)
        });
        return this
    };
    window[trigger] = node[trigger] = function (type, data) {
        var event = document.createEvent('HTMLEvents');
        event.initEvent(type, true, true);
        event.data = data || {
        };
        event.eventName = type;
        event.target = this;
        this.dispatchEvent(event);
        return this
    };
    nodeList[trigger] = function (event) {
        this[forEach](function (el) {
            el[trigger](event)
        });
        return this
    };
    _ne = function (s) {
        if (s === document || s === window) return s;
        var r = document.querySelectorAll(s || '☺'),
            length = r.length;
        return 1 == length ? r[0] : r
    };
    _ne.on = node.on.bind(dummy);
    _ne.off = node.off.bind(dummy);
    _ne[trigger] = node[trigger].bind(dummy);
    _ne.unflatten = function unflatten(data) {
        if (Object(data) !== data || isArray(data)) return data;
        var regex = /\.?([^.\[\]]+)|\[(\d+)\]/g,
            resultholder = {
            };
        for (var p in data) {
            var cur = resultholder,
                prop = '',
                m;
            while (m = regex.exec(p)) {
                cur = cur[prop] || (cur[prop] = m[2] ? [
                ] : {
                });
                prop = m[2] || m[1]
            }
            cur[prop] = data[p]
        }
        return resultholder[''] || resultholder
    };
    _ne.flatten = function flatten(data) {
        function recurse(cur, prop) {
            if (Object(cur) !== cur) result[prop] = cur;
            else if (isArray(cur)) {
                for (var i = 0, l = cur.length; i < l; i++) recurse(cur[i], prop + '[' + i + ']');
                if (0 == l) result[prop] = [
                ]
            } else {
                var isEmpty = true;
                for (var p in cur) {
                    isEmpty = false;
                    recurse(cur[p], prop ? prop + '.' + p : p)
                }
                if (isEmpty && prop) result[prop] = {
                }
            }
        }
        var result = {
        };
        recurse(data, '');
        return result
    };
    _ne.template = function template(s, d) {
        for (var p in d) s = s.replace(new RegExp('{' + p + '}', 'g'), d[p]);
        return s
    };
    _ne.exists = function exists(obj) {
        return 'undefined' !== typeof obj && null !== obj
    };
    return _ne
}(document, this);
define('ne', function (global) {
    return function () {
        var ret,
            fn;
        return ret || global._ne
    }
}(this));
!function (e) {
    'use strict';
    function j(e) {
        var r = 0 | e;
        return 0 < e || e === r ? r : r - 1
    }
    function $(e) {
        for (var r, n, t = 1, i = e.length, o = e[0] + ''; t < i; ) {
            for (r = e[t++] + '', n = M - r.length; n--; r = '0' + r);
            o += r
        }
        for (i = o.length; 48 === o.charCodeAt(--i); );
        return o.slice(0, i + 1 || 1)
    }
    function z(e, r) {
        var n,
            t,
            i = e.c,
            o = r.c,
            s = e.s,
            f = r.s,
            u = e.e,
            l = r.e;
        if (!s || !f) return null;
        if (n = i && !i[0], t = o && !o[0], n || t) return n ? t ? 0 : - f : s;
        if (s != f) return s;
        if (n = s < 0, t = u == l, !i || !o) return t ? 0 : !i ^ n ? 1 : - 1;
        if (!t) return l < u ^ n ? 1 : - 1;
        for (f = (u = i.length) < (l = o.length) ? u : l, s = 0; s < f; s++) if (i[s] != o[s]) return i[s] > o[s] ^ n ? 1 : - 1;
        return u == l ? 0 : l < u ^ n ? 1 : - 1
    }
    function H(e, r, n, t) {
        if (e < r || n < e || e !== U(e)) throw Error(I + (t || 'Argument') + ('number' == typeof e ? e < r || n < e ? ' out of range: ' : ' not an integer: ' : ' not a primitive number: ') + String(e))
    }
    function V(e) {
        var r = e.c.length - 1;
        return j(e.e / M) == r && e.c[r] % 2 != 0
    }
    function W(e, r) {
        return (1 < e.length ? e.charAt(0) + '.' + e.slice(1)  : e) + (r < 0 ? 'e' : 'e+') + r
    }
    function X(e, r, n) {
        var t,
            i;
        if (r < 0) {
            for (i = n + '.'; ++r; i += n);
            e = i + e
        } else if (++r > (t = e.length)) {
            for (i = n, r -= t; --r; i += n);
            e += i
        } else r < t && (e = e.slice(0, r) + '.' + e.slice(r));
        return e
    }
    var r,
        x = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        L = Math.ceil,
        U = Math.floor,
        I = '[BigNumber Error] ',
        T = I + 'Number primitive has more than 15 significant digits: ',
        C = 100000000000000,
        M = 14,
        G = 9007199254740991,
        k = [
            1,
            10,
            100,
            1000,
            10000,
            100000,
            1000000,
            10000000,
            100000000,
            1000000000,
            10000000000,
            100000000000,
            1000000000000,
            10000000000000
        ],
        F = 10000000,
        q = 1000000000;
    (r = function e(r) {
        function B(e, r) {
            var n,
                t,
                i,
                o,
                s,
                f,
                u,
                l,
                c = this;
            if (!(c instanceof B)) return new B(e, r);
            if (null == r) {
                if (e && !0 === e._isBigNumber) return c.s = e.s,
                    void (!e.c || e.e > y ? c.c = c.e = null : e.e < m ? c.c = [
                        c.e = 0
                    ] : (c.e = e.e, c.c = e.c.slice()));
                if ((f = 'number' == typeof e) && 0 * e == 0) {
                    if (c.s = 1 / e < 0 ? (e = - e, - 1)  : 1, e === ~~e) {
                        for (o = 0, s = e; 10 <= s; s /= 10, o++);
                        return void (c.c = y < o ? c.e = null : (c.e = o, [
                            e
                        ]))
                    }
                    l = String(e)
                } else {
                    if (!x.test(l = String(e))) return h(c, l, f);
                    c.s = 45 == l.charCodeAt(0) ? (l = l.slice(1), - 1)  : 1
                }
                - 1 < (o = l.indexOf('.')) && (l = l.replace('.', '')),
                    0 < (s = l.search(/e/i)) ? (o < 0 && (o = s), o += + l.slice(s + 1), l = l.substring(0, s))  : o < 0 && (o = l.length)
            } else {
                if (H(r, 2, S.length, 'Base'), 10 == r) return D(c = new B(e), N + c.e + 1, O);
                if (l = String(e), f = 'number' == typeof e) {
                    if (0 * e != 0) return h(c, l, f, r);
                    if (c.s = 1 / e < 0 ? (l = l.slice(1), - 1)  : 1, B.DEBUG && 15 < l.replace(/^0\.0*|\./, '').length) throw Error(T + e)
                } else c.s = 45 === l.charCodeAt(0) ? (l = l.slice(1), - 1)  : 1;
                for (n = S.slice(0, r), o = s = 0, u = l.length; s < u; s++) if (n.indexOf(t = l.charAt(s)) < 0) {
                    if ('.' == t) {
                        if (o < s) {
                            o = u;
                            continue
                        }
                    } else if (!i && (l == l.toUpperCase() && (l = l.toLowerCase()) || l == l.toLowerCase() && (l = l.toUpperCase()))) {
                        i = !0,
                            s = - 1,
                            o = 0;
                        continue
                    }
                    return h(c, String(e), f, r)
                }
                f = !1,
                    - 1 < (o = (l = a(l, r, 10, c.s)).indexOf('.')) ? l = l.replace('.', '')  : o = l.length
            }
            for (s = 0; 48 === l.charCodeAt(s); s++);
            for (u = l.length; 48 === l.charCodeAt(--u); );
            if (l = l.slice(s, ++u)) {
                if (u -= s, f && B.DEBUG && 15 < u && (G < e || e !== U(e))) throw Error(T + c.s * e);
                if ((o = o - s - 1) > y) c.c = c.e = null;
                else if (o < m) c.c = [
                    c.e = 0
                ];
                else {
                    if (c.e = o, c.c = [
                    ], s = (o + 1) % M, o < 0 && (s += M), s < u) {
                        for (s && c.c.push( + l.slice(0, s)), u -= M; s < u; ) c.c.push( + l.slice(s, s += M));
                        s = M - (l = l.slice(s)).length
                    } else s -= u;
                    for (; s--; l += '0');
                    c.c.push( + l)
                }
            } else c.c = [
                c.e = 0
            ]
        }
        function i(e, r, n, t) {
            var i,
                o,
                s,
                f,
                u;
            if (null == n ? n = O : H(n, 0, 8), !e.c) return e.toString();
            if (i = e.c[0], s = e.e, null == r) u = $(e.c),
                u = 1 == t || 2 == t && (s <= p || d <= s) ? W(u, s)  : X(u, s, '0');
            else if (o = (e = D(new B(e), r, n)).e, f = (u = $(e.c)).length, 1 == t || 2 == t && (r <= o || o <= p)) {
                for (; f < r; u += '0', f++);
                u = W(u, o)
            } else if (r -= s, u = X(u, o, '0'), f < o + 1) {
                if (0 < --r) for (u += '.'; r--; u += '0');
            } else if (0 < (r += o - f)) for (o + 1 == f && (u += '.'); r--; u += '0');
            return e.s < 0 && i ? '-' + u : u
        }
        function R(e, r) {
            for (var n, t = 1, i = new B(e[0]); t < e.length; t++) {
                if (!(n = new B(e[t])).s) {
                    i = n;
                    break
                }
                r.call(i, n) && (i = n)
            }
            return i
        }
        function _(e, r, n) {
            for (var t = 1, i = r.length; !r[--i]; r.pop());
            for (i = r[0]; 10 <= i; i /= 10, t++);
            return (n = t + n * M - 1) > y ? e.c = e.e = null : e.c = n < m ? [
                e.e = 0
            ] : (e.e = n, r),
                e
        }
        function D(e, r, n, t) {
            var i,
                o,
                s,
                f,
                u,
                l,
                c,
                a = e.c,
                h = k;
            if (a) {
                e: {
                    for (i = 1, f = a[0]; 10 <= f; f /= 10, i++);
                    if ((o = r - i) < 0) o += M,
                        s = r,
                        c = (u = a[l = 0]) / h[i - s - 1] % 10 | 0;
                    else if ((l = L((o + 1) / M)) >= a.length) {
                        if (!t) break e;
                        for (; a.length <= l; a.push(0));
                        u = c = 0,
                            s = (o %= M) - M + (i = 1)
                    } else {
                        for (u = f = a[l], i = 1; 10 <= f; f /= 10, i++);
                        c = (s = (o %= M) - M + i) < 0 ? 0 : u / h[i - s - 1] % 10 | 0
                    }
                    if (t = t || r < 0 || null != a[l + 1] || (s < 0 ? u : u % h[i - s - 1]), t = n < 4 ? (c || t) && (0 == n || n == (e.s < 0 ? 3 : 2))  : 5 < c || 5 == c && (4 == n || t || 6 == n && (0 < o ? 0 < s ? u / h[i - s] : 0 : a[l - 1]) % 10 & 1 || n == (e.s < 0 ? 8 : 7)), r < 1 || !a[0]) return a.length = 0,
                        t ? (r -= e.e + 1, a[0] = h[(M - r % M) % M], e.e = - r || 0)  : a[0] = e.e = 0,
                        e;
                    if (0 == o ? (a.length = l, f = 1, l--)  : (a.length = l + 1, f = h[M - o], a[l] = 0 < s ? U(u / h[i - s] % h[s]) * f : 0), t) for (; ; ) {
                        if (0 == l) {
                            for (o = 1, s = a[0]; 10 <= s; s /= 10, o++);
                            for (s = a[0] += f, f = 1; 10 <= s; s /= 10, f++);
                            o != f && (e.e++, a[0] == C && (a[0] = 1));
                            break
                        }
                        if (a[l] += f, a[l] != C) break;
                        a[l--] = 0,
                            f = 1
                    }
                    for (o = a.length; 0 === a[--o]; a.pop());
                }
                e.e > y ? e.c = e.e = null : e.e < m && (e.c = [
                    e.e = 0
                ])
            }
            return e
        }
        function P(e) {
            var r,
                n = e.e;
            return null === n ? e.toString()  : (r = $(e.c), r = n <= p || d <= n ? W(r, n)  : X(r, n, '0'), e.s < 0 ? '-' + r : r)
        }
        var v,
            a,
            h,
            n,
            l,
            s,
            f,
            u,
            c,
            g,
            t = B.prototype = {
                constructor: B,
                toString: null,
                valueOf: null
            },
            w = new B(1),
            N = 20,
            O = 4,
            p = - 7,
            d = 21,
            m = - 10000000,
            y = 10000000,
            b = !1,
            o = 1,
            E = 0,
            A = {
                prefix: '',
                groupSize: 3,
                secondaryGroupSize: 0,
                groupSeparator: ',',
                decimalSeparator: '.',
                fractionGroupSize: 0,
                fractionGroupSeparator: ' ',
                suffix: ''
            },
            S = '0123456789abcdefghijklmnopqrstuvwxyz';
        return B.clone = e,
            B.ROUND_UP = 0,
            B.ROUND_DOWN = 1,
            B.ROUND_CEIL = 2,
            B.ROUND_FLOOR = 3,
            B.ROUND_HALF_UP = 4,
            B.ROUND_HALF_DOWN = 5,
            B.ROUND_HALF_EVEN = 6,
            B.ROUND_HALF_CEIL = 7,
            B.ROUND_HALF_FLOOR = 8,
            B.EUCLID = 9,
            B.config = B.set = function (e) {
                var r,
                    n;
                if (null != e) {
                    if ('object' != typeof e) throw Error(I + 'Object expected: ' + e);
                    if (e.hasOwnProperty(r = 'DECIMAL_PLACES') && (H(n = e[r], 0, q, r), N = n), e.hasOwnProperty(r = 'ROUNDING_MODE') && (H(n = e[r], 0, 8, r), O = n), e.hasOwnProperty(r = 'EXPONENTIAL_AT') && ((n = e[r]) && n.pop ? (H(n[0], - q, 0, r), H(n[1], 0, q, r), p = n[0], d = n[1])  : (H(n, - q, q, r), p = - (d = n < 0 ? - n : n))), e.hasOwnProperty(r = 'RANGE')) if ((n = e[r]) && n.pop) H(n[0], - q, - 1, r),
                        H(n[1], 1, q, r),
                        m = n[0],
                        y = n[1];
                    else {
                        if (H(n, - q, q, r), !n) throw Error(I + r + ' cannot be zero: ' + n);
                        m = - (y = n < 0 ? - n : n)
                    }
                    if (e.hasOwnProperty(r = 'CRYPTO')) {
                        if ((n = e[r]) !== !!n) throw Error(I + r + ' not true or false: ' + n);
                        if (n) {
                            if ('undefined' == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw b = !n,
                                Error(I + 'crypto unavailable');
                            b = n
                        } else b = n
                    }
                    if (e.hasOwnProperty(r = 'MODULO_MODE') && (H(n = e[r], 0, 9, r), o = n), e.hasOwnProperty(r = 'POW_PRECISION') && (H(n = e[r], 0, q, r), E = n), e.hasOwnProperty(r = 'FORMAT')) {
                        if ('object' != typeof (n = e[r])) throw Error(I + r + ' not an object: ' + n);
                        A = n
                    }
                    if (e.hasOwnProperty(r = 'ALPHABET')) {
                        if ('string' != typeof (n = e[r]) || /^.$|[+-.\s]|(.).*\1/.test(n)) throw Error(I + r + ' invalid: ' + n);
                        S = n
                    }
                }
                return {
                    DECIMAL_PLACES: N,
                    ROUNDING_MODE: O,
                    EXPONENTIAL_AT: [
                        p,
                        d
                    ],
                    RANGE: [
                        m,
                        y
                    ],
                    CRYPTO: b,
                    MODULO_MODE: o,
                    POW_PRECISION: E,
                    FORMAT: A,
                    ALPHABET: S
                }
            },
            B.isBigNumber = function (e) {
                if (!e || !0 !== e._isBigNumber) return !1;
                if (!B.DEBUG) return !0;
                var r,
                    n,
                    t = e.c,
                    i = e.e,
                    o = e.s;
                e: if ('[object Array]' == {
                }.toString.call(t)) {
                    if ((1 === o || - 1 === o) && - q <= i && i <= q && i === U(i)) {
                        if (0 === t[0]) {
                            if (0 === i && 1 === t.length) return !0;
                            break e
                        }
                        if ((r = (i + 1) % M) < 1 && (r += M), String(t[0]).length == r) {
                            for (r = 0; r < t.length; r++) if ((n = t[r]) < 0 || C <= n || n !== U(n)) break e;
                            if (0 !== n) return !0
                        }
                    }
                } else if (null === t && null === i && (null === o || 1 === o || - 1 === o)) return !0;
                throw Error(I + 'Invalid BigNumber: ' + e)
            },
            B.maximum = B.max = function () {
                return R(arguments, t.lt)
            },
            B.minimum = B.min = function () {
                return R(arguments, t.gt)
            },
            B.random = (n = 9007199254740992, l = Math.random() * n & 2097151 ? function () {
                    return U(Math.random() * n)
                }
                : function () {
                    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                }, function (e) {
                var r,
                    n,
                    t,
                    i,
                    o,
                    s = 0,
                    f = [
                    ],
                    u = new B(w);
                if (null == e ? e = N : H(e, 0, q), i = L(e / M), b) if (crypto.getRandomValues) {
                    for (r = crypto.getRandomValues(new Uint32Array(i *= 2)); s < i; ) 9000000000000000 <= (o = 131072 * r[s] + (r[s + 1] >>> 11)) ? (n = crypto.getRandomValues(new Uint32Array(2)), r[s] = n[0], r[s + 1] = n[1])  : (f.push(o % 100000000000000), s += 2);
                    s = i / 2
                } else {
                    if (!crypto.randomBytes) throw b = !1,
                        Error(I + 'crypto unavailable');
                    for (r = crypto.randomBytes(i *= 7); s < i; ) 9000000000000000 <= (o = 281474976710656 * (31 & r[s]) + 1099511627776 * r[s + 1] + 4294967296 * r[s + 2] + 16777216 * r[s + 3] + (r[s + 4] << 16) + (r[s + 5] << 8) + r[s + 6]) ? crypto.randomBytes(7).copy(r, s)  : (f.push(o % 100000000000000), s += 7);
                    s = i / 7
                }
                if (!b) for (; s < i; ) (o = l()) < 9000000000000000 && (f[s++] = o % 100000000000000);
                for (i = f[--s], e %= M, i && e && (o = k[M - e], f[s] = U(i / o) * o); 0 === f[s]; f.pop(), s--);
                if (s < 0) f = [
                    t = 0
                ];
                else {
                    for (t = - 1; 0 === f[0]; f.splice(0, 1), t -= M);
                    for (s = 1, o = f[0]; 10 <= o; o /= 10, s++);
                    s < M && (t -= M - s)
                }
                return u.e = t,
                    u.c = f,
                    u
            }),
            B.sum = function () {
                for (var e = 1, r = arguments, n = new B(r[0]); e < r.length; ) n = n.plus(r[e++]);
                return n
            },
            a = function () {
                function m(e, r, n, t) {
                    for (var i, o, s = [
                        0
                    ], f = 0, u = e.length; f < u; ) {
                        for (o = s.length; o--; s[o] *= r);
                        for (s[0] += t.indexOf(e.charAt(f++)), i = 0; i < s.length; i++) s[i] > n - 1 && (null == s[i + 1] && (s[i + 1] = 0), s[i + 1] += s[i] / n | 0, s[i] %= n)
                    }
                    return s.reverse()
                }
                var d = '0123456789';
                return function (e, r, n, t, i) {
                    var o,
                        s,
                        f,
                        u,
                        l,
                        c,
                        a,
                        h,
                        g = e.indexOf('.'),
                        p = N,
                        w = O;
                    for (0 <= g && (u = E, E = 0, e = e.replace('.', ''), c = (h = new B(r)).pow(e.length - g), E = u, h.c = m(X($(c.c), c.e, '0'), 10, n, d), h.e = h.c.length), f = u = (a = m(e, r, n, i ? (o = S, d)  : (o = d, S))).length; 0 == a[--u]; a.pop());
                    if (!a[0]) return o.charAt(0);
                    if (g < 0 ? --f : (c.c = a, c.e = f, c.s = t, a = (c = v(c, h, p, w, n)).c, l = c.r, f = c.e), g = a[s = f + p + 1], u = n / 2, l = l || s < 0 || null != a[s + 1], l = w < 4 ? (null != g || l) && (0 == w || w == (c.s < 0 ? 3 : 2))  : u < g || g == u && (4 == w || l || 6 == w && 1 & a[s - 1] || w == (c.s < 0 ? 8 : 7)), s < 1 || !a[0]) e = l ? X(o.charAt(1), - p, o.charAt(0))  : o.charAt(0);
                    else {
                        if (a.length = s, l) for (--n; ++a[--s] > n; ) a[s] = 0,
                        s || (++f, a = [
                            1
                        ].concat(a));
                        for (u = a.length; !a[--u]; );
                        for (g = 0, e = ''; g <= u; e += o.charAt(a[g++]));
                        e = X(e, f, o.charAt(0))
                    }
                    return e
                }
            }(),
            v = function () {
                function S(e, r, n) {
                    var t,
                        i,
                        o,
                        s,
                        f = 0,
                        u = e.length,
                        l = r % F,
                        c = r / F | 0;
                    for (e = e.slice(); u--; ) f = ((i = l * (o = e[u] % F) + (t = c * o + (s = e[u] / F | 0) * l) % F * F + f) / n | 0) + (t / F | 0) + c * s,
                        e[u] = i % n;
                    return f && (e = [
                        f
                    ].concat(e)),
                        e
                }
                function R(e, r, n, t) {
                    var i,
                        o;
                    if (n != t) o = t < n ? 1 : - 1;
                    else for (i = o = 0; i < n; i++) if (e[i] != r[i]) {
                        o = e[i] > r[i] ? 1 : - 1;
                        break
                    }
                    return o
                }
                function _(e, r, n, t) {
                    for (var i = 0; n--; ) e[n] -= i,
                        i = e[n] < r[n] ? 1 : 0,
                        e[n] = i * t + e[n] - r[n];
                    for (; !e[0] && 1 < e.length; e.splice(0, 1));
                }
                return function (e, r, n, t, i) {
                    var o,
                        s,
                        f,
                        u,
                        l,
                        c,
                        a,
                        h,
                        g,
                        p,
                        w,
                        d,
                        m,
                        v,
                        N,
                        O,
                        y,
                        b = e.s == r.s ? 1 : - 1,
                        E = e.c,
                        A = r.c;
                    if (!(E && E[0] && A && A[0])) return new B(e.s && r.s && (E ? !A || E[0] != A[0] : A) ? E && 0 == E[0] || !A ? 0 * b : b / 0 : NaN);
                    for (g = (h = new B(b)).c = [
                    ], b = n + (s = e.e - r.e) + 1, i || (i = C, s = j(e.e / M) - j(r.e / M), b = b / M | 0), f = 0; A[f] == (E[f] || 0); f++);
                    if (A[f] > (E[f] || 0) && s--, b < 0) g.push(1),
                        u = !0;
                    else {
                        for (v = E.length, O = A.length, b += 2, 1 < (l = U(i / (A[f = 0] + 1))) && (A = S(A, l, i), E = S(E, l, i), O = A.length, v = E.length), m = O, w = (p = E.slice(0, O)).length; w < O; p[w++] = 0);
                        y = A.slice(),
                            y = [
                                0
                            ].concat(y),
                            N = A[0],
                        A[1] >= i / 2 && N++;
                        do {
                            if (l = 0, (o = R(A, p, O, w)) < 0) {
                                if (d = p[0], O != w && (d = d * i + (p[1] || 0)), 1 < (l = U(d / N))) for (i <= l && (l = i - 1), a = (c = S(A, l, i)).length, w = p.length; 1 == R(c, p, a, w); ) l--,
                                    _(c, O < a ? y : A, a, i),
                                    a = c.length,
                                    o = 1;
                                else 0 == l && (o = l = 1),
                                    a = (c = A.slice()).length;
                                if (a < w && (c = [
                                    0
                                ].concat(c)), _(p, c, w, i), w = p.length, - 1 == o) for (; R(A, p, O, w) < 1; ) l++,
                                    _(p, O < w ? y : A, w, i),
                                    w = p.length
                            } else 0 === o && (l++, p = [
                                0
                            ]);
                            g[f++] = l,
                                p[0] ? p[w++] = E[m] || 0 : (p = [
                                    E[m]
                                ], w = 1)
                        } while ((m++ < v || null != p[0]) && b--);
                        u = null != p[0],
                        g[0] || g.splice(0, 1)
                    }
                    if (i == C) {
                        for (f = 1, b = g[0]; 10 <= b; b /= 10, f++);
                        D(h, n + (h.e = f + s * M - 1) + 1, t, u)
                    } else h.e = s,
                        h.r = + u;
                    return h
                }
            }(),
            s = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
            f = /^([^.]+)\.$/,
            u = /^\.([^.]+)$/,
            c = /^-?(Infinity|NaN)$/,
            g = /^\s*\+(?=[\w.])|^\s+|\s+$/g,
            h = function (e, r, n, t) {
                var i,
                    o = n ? r : r.replace(g, '');
                if (c.test(o)) e.s = isNaN(o) ? null : o < 0 ? - 1 : 1;
                else {
                    if (!n && (o = o.replace(s, function (e, r, n) {
                        return i = 'x' == (n = n.toLowerCase()) ? 16 : 'b' == n ? 2 : 8,
                            t && t != i ? e : r
                    }), t && (i = t, o = o.replace(f, '$1').replace(u, '0.$1')), r != o)) return new B(o, i);
                    if (B.DEBUG) throw Error(I + 'Not a' + (t ? ' base ' + t : '') + ' number: ' + r);
                    e.s = null
                }
                e.c = e.e = null
            },
            t.absoluteValue = t.abs = function () {
                var e = new B(this);
                return e.s < 0 && (e.s = 1),
                    e
            },
            t.comparedTo = function (e, r) {
                return z(this, new B(e, r))
            },
            t.decimalPlaces = t.dp = function (e, r) {
                var n,
                    t,
                    i;
                if (null != e) return H(e, 0, q),
                    null == r ? r = O : H(r, 0, 8),
                    D(new B(this), e + this.e + 1, r);
                if (!(n = this.c)) return null;
                if (t = ((i = n.length - 1) - j(this.e / M)) * M, i = n[i]) for (; i % 10 == 0; i /= 10, t--);
                return t < 0 && (t = 0),
                    t
            },
            t.dividedBy = t.div = function (e, r) {
                return v(this, new B(e, r), N, O)
            },
            t.dividedToIntegerBy = t.idiv = function (e, r) {
                return v(this, new B(e, r), 0, 1)
            },
            t.exponentiatedBy = t.pow = function (e, r) {
                var n,
                    t,
                    i,
                    o,
                    s,
                    f,
                    u,
                    l,
                    c = this;
                if ((e = new B(e)).c && !e.isInteger()) throw Error(I + 'Exponent not an integer: ' + P(e));
                if (null != r && (r = new B(r)), s = 14 < e.e, !c.c || !c.c[0] || 1 == c.c[0] && !c.e && 1 == c.c.length || !e.c || !e.c[0]) return l = new B(Math.pow( + P(c), s ? 2 - V(e)  : + P(e))),
                    r ? l.mod(r)  : l;
                if (f = e.s < 0, r) {
                    if (r.c ? !r.c[0] : !r.s) return new B(NaN);
                    (t = !f && c.isInteger() && r.isInteger()) && (c = c.mod(r))
                } else {
                    if (9 < e.e && (0 < c.e || c.e < - 1 || (0 == c.e ? 1 < c.c[0] || s && 240000000 <= c.c[1] : c.c[0] < 80000000000000 || s && c.c[0] <= 99999750000000))) return o = c.s < 0 && V(e) ? - 0 : 0,
                    - 1 < c.e && (o = 1 / o),
                        new B(f ? 1 / o : o);
                    E && (o = L(E / M + 2))
                }
                for (u = s ? (n = new B(0.5), f && (e.s = 1), V(e))  : (i = Math.abs( + P(e))) % 2, l = new B(w); ; ) {
                    if (u) {
                        if (!(l = l.times(c)).c) break;
                        o ? l.c.length > o && (l.c.length = o)  : t && (l = l.mod(r))
                    }
                    if (i) {
                        if (0 === (i = U(i / 2))) break;
                        u = i % 2
                    } else if (D(e = e.times(n), e.e + 1, 1), 14 < e.e) u = V(e);
                    else {
                        if (0 == (i = + P(e))) break;
                        u = i % 2
                    }
                    c = c.times(c),
                        o ? c.c && c.c.length > o && (c.c.length = o)  : t && (c = c.mod(r))
                }
                return t ? l : (f && (l = w.div(l)), r ? l.mod(r)  : o ? D(l, E, O, void 0)  : l)
            },
            t.integerValue = function (e) {
                var r = new B(this);
                return null == e ? e = O : H(e, 0, 8),
                    D(r, r.e + 1, e)
            },
            t.isEqualTo = t.eq = function (e, r) {
                return 0 === z(this, new B(e, r))
            },
            t.isFinite = function () {
                return !!this.c
            },
            t.isGreaterThan = t.gt = function (e, r) {
                return 0 < z(this, new B(e, r))
            },
            t.isGreaterThanOrEqualTo = t.gte = function (e, r) {
                return 1 === (r = z(this, new B(e, r))) || 0 === r
            },
            t.isInteger = function () {
                return !!this.c && j(this.e / M) > this.c.length - 2
            },
            t.isLessThan = t.lt = function (e, r) {
                return z(this, new B(e, r)) < 0
            },
            t.isLessThanOrEqualTo = t.lte = function (e, r) {
                return - 1 === (r = z(this, new B(e, r))) || 0 === r
            },
            t.isNaN = function () {
                return !this.s
            },
            t.isNegative = function () {
                return this.s < 0
            },
            t.isPositive = function () {
                return 0 < this.s
            },
            t.isZero = function () {
                return !!this.c && 0 == this.c[0]
            },
            t.minus = function (e, r) {
                var n,
                    t,
                    i,
                    o,
                    s = this,
                    f = s.s;
                if (r = (e = new B(e, r)).s, !f || !r) return new B(NaN);
                if (f != r) return e.s = - r,
                    s.plus(e);
                var u = s.e / M,
                    l = e.e / M,
                    c = s.c,
                    a = e.c;
                if (!u || !l) {
                    if (!c || !a) return c ? (e.s = - r, e)  : new B(a ? s : NaN);
                    if (!c[0] || !a[0]) return a[0] ? (e.s = - r, e)  : new B(c[0] ? s : 3 == O ? - 0 : 0)
                }
                if (u = j(u), l = j(l), c = c.slice(), f = u - l) {
                    for ((i = (o = f < 0) ? (f = - f, c)  : (l = u, a)).reverse(), r = f; r--; i.push(0));
                    i.reverse()
                } else for (t = (o = (f = c.length) < (r = a.length)) ? f : r, f = r = 0; r < t; r++) if (c[r] != a[r]) {
                    o = c[r] < a[r];
                    break
                }
                if (o && (i = c, c = a, a = i, e.s = - e.s), 0 < (r = (t = a.length) - (n = c.length))) for (; r--; c[n++] = 0);
                for (r = C - 1; f < t; ) {
                    if (c[--t] < a[t]) {
                        for (n = t; n && !c[--n]; c[n] = r);
                        --c[n],
                            c[t] += C
                    }
                    c[t] -= a[t]
                }
                for (; 0 == c[0]; c.splice(0, 1), --l);
                return c[0] ? _(e, c, l)  : (e.s = 3 == O ? - 1 : 1, e.c = [
                    e.e = 0
                ], e)
            },
            t.modulo = t.mod = function (e, r) {
                var n,
                    t,
                    i = this;
                return e = new B(e, r),
                    !i.c || !e.s || e.c && !e.c[0] ? new B(NaN)  : !e.c || i.c && !i.c[0] ? new B(i)  : (9 == o ? (t = e.s, e.s = 1, n = v(i, e, 0, 3), e.s = t, n.s *= t)  : n = v(i, e, 0, o), (e = i.minus(n.times(e))).c[0] || 1 != o || (e.s = i.s), e)
            },
            t.multipliedBy = t.times = function (e, r) {
                var n,
                    t,
                    i,
                    o,
                    s,
                    f,
                    u,
                    l,
                    c,
                    a,
                    h,
                    g,
                    p,
                    w,
                    d,
                    m = this,
                    v = m.c,
                    N = (e = new B(e, r)).c;
                if (!(v && N && v[0] && N[0])) return !m.s || !e.s || v && !v[0] && !N || N && !N[0] && !v ? e.c = e.e = e.s = null : (e.s *= m.s, v && N ? (e.c = [
                    0
                ], e.e = 0)  : e.c = e.e = null),
                    e;
                for (t = j(m.e / M) + j(e.e / M), e.s *= m.s, (u = v.length) < (a = N.length) && (p = v, v = N, N = p, i = u, u = a, a = i), i = u + a, p = [
                ]; i--; p.push(0));
                for (w = C, d = F, i = a; 0 <= --i; ) {
                    for (n = 0, h = N[i] % d, g = N[i] / d | 0, o = i + (s = u); i < o; ) n = ((l = h * (l = v[--s] % d) + (f = g * l + (c = v[s] / d | 0) * h) % d * d + p[o] + n) / w | 0) + (f / d | 0) + g * c,
                        p[o--] = l % w;
                    p[o] = n
                }
                return n ? ++t : p.splice(0, 1),
                    _(e, p, t)
            },
            t.negated = function () {
                var e = new B(this);
                return e.s = - e.s || null,
                    e
            },
            t.plus = function (e, r) {
                var n,
                    t = this,
                    i = t.s;
                if (r = (e = new B(e, r)).s, !i || !r) return new B(NaN);
                if (i != r) return e.s = - r,
                    t.minus(e);
                var o = t.e / M,
                    s = e.e / M,
                    f = t.c,
                    u = e.c;
                if (!o || !s) {
                    if (!f || !u) return new B(i / 0);
                    if (!f[0] || !u[0]) return u[0] ? e : new B(f[0] ? t : 0 * i)
                }
                if (o = j(o), s = j(s), f = f.slice(), i = o - s) {
                    for ((n = 0 < i ? (s = o, u)  : (i = - i, f)).reverse(); i--; n.push(0));
                    n.reverse()
                }
                for ((i = f.length) - (r = u.length) < 0 && (n = u, u = f, f = n, r = i), i = 0; r; ) i = (f[--r] = f[r] + u[r] + i) / C | 0,
                    f[r] = C === f[r] ? 0 : f[r] % C;
                return i && (f = [
                    i
                ].concat(f), ++s),
                    _(e, f, s)
            },
            t.precision = t.sd = function (e, r) {
                var n,
                    t,
                    i;
                if (null != e && e !== !!e) return H(e, 1, q),
                    null == r ? r = O : H(r, 0, 8),
                    D(new B(this), e, r);
                if (!(n = this.c)) return null;
                if (t = (i = n.length - 1) * M + 1, i = n[i]) {
                    for (; i % 10 == 0; i /= 10, t--);
                    for (i = n[0]; 10 <= i; i /= 10, t++);
                }
                return e && this.e + 1 > t && (t = this.e + 1),
                    t
            },
            t.shiftedBy = function (e) {
                return H(e, - G, G),
                    this.times('1e' + e)
            },
            t.squareRoot = t.sqrt = function () {
                var e,
                    r,
                    n,
                    t,
                    i,
                    o = this,
                    s = o.c,
                    f = o.s,
                    u = o.e,
                    l = N + 4,
                    c = new B('0.5');
                if (1 !== f || !s || !s[0]) return new B(!f || f < 0 && (!s || s[0]) ? NaN : s ? o : 1 / 0);
                if ((n = 0 == (f = Math.sqrt( + P(o))) || f == 1 / 0 ? (((r = $(s)).length + u) % 2 == 0 && (r += '0'), f = Math.sqrt( + r), u = j((u + 1) / 2) - (u < 0 || u % 2), new B(r = f == 1 / 0 ? '1e' + u : (r = f.toExponential()).slice(0, r.indexOf('e') + 1) + u))  : new B(f + '')).c[0]) for ((f = (u = n.e) + l) < 3 && (f = 0); ; ) if (i = n, n = c.times(i.plus(v(o, i, l, 1))), $(i.c).slice(0, f) === (r = $(n.c)).slice(0, f)) {
                    if (n.e < u && --f, '9999' != (r = r.slice(f - 3, f + 1)) && (t || '4999' != r)) {
                        + r && ( + r.slice(1) || '5' != r.charAt(0)) || (D(n, n.e + N + 2, 1), e = !n.times(n).eq(o));
                        break
                    }
                    if (!t && (D(i, i.e + N + 2, 0), i.times(i).eq(o))) {
                        n = i;
                        break
                    }
                    l += 4,
                        f += 4,
                        t = 1
                }
                return D(n, n.e + N + 1, O, e)
            },
            t.toExponential = function (e, r) {
                return null != e && (H(e, 0, q), e++),
                    i(this, e, r, 1)
            },
            t.toFixed = function (e, r) {
                return null != e && (H(e, 0, q), e = e + this.e + 1),
                    i(this, e, r)
            },
            t.toFormat = function (e, r, n) {
                var t;
                if (null == n) null != e && r && 'object' == typeof r ? (n = r, r = null)  : e && 'object' == typeof e ? (n = e, e = r = null)  : n = A;
                else if ('object' != typeof n) throw Error(I + 'Argument not an object: ' + n);
                if (t = this.toFixed(e, r), this.c) {
                    var i,
                        o = t.split('.'),
                        s = + n.groupSize,
                        f = + n.secondaryGroupSize,
                        u = n.groupSeparator || '',
                        l = o[0],
                        c = o[1],
                        a = this.s < 0,
                        h = a ? l.slice(1)  : l,
                        g = h.length;
                    if (f && (i = s, s = f, g -= f = i), 0 < s && 0 < g) {
                        for (i = g % s || s, l = h.substr(0, i); i < g; i += s) l += u + h.substr(i, s);
                        0 < f && (l += u + h.slice(i)),
                        a && (l = '-' + l)
                    }
                    t = c ? l + (n.decimalSeparator || '') + ((f = + n.fractionGroupSize) ? c.replace(new RegExp('\\d{' + f + '}\\B', 'g'), '$&' + (n.fractionGroupSeparator || ''))  : c)  : l
                }
                return (n.prefix || '') + t + (n.suffix || '')
            },
            t.toFraction = function (e) {
                var r,
                    n,
                    t,
                    i,
                    o,
                    s,
                    f,
                    u,
                    l,
                    c,
                    a,
                    h,
                    g = this,
                    p = g.c;
                if (null != e && (!(f = new B(e)).isInteger() && (f.c || 1 !== f.s) || f.lt(w))) throw Error(I + 'Argument ' + (f.isInteger() ? 'out of range: ' : 'not an integer: ') + P(f));
                if (!p) return new B(g);
                for (r = new B(w), l = n = new B(w), t = u = new B(w), h = $(p), o = r.e = h.length - g.e - 1, r.c[0] = k[(s = o % M) < 0 ? M + s : s], e = !e || 0 < f.comparedTo(r) ? 0 < o ? r : l : f, s = y, y = 1 / 0, f = new B(h), u.c[0] = 0; c = v(f, r, 0, 1), 1 != (i = n.plus(c.times(t))).comparedTo(e); ) n = t,
                    t = i,
                    l = u.plus(c.times(i = l)),
                    u = i,
                    r = f.minus(c.times(i = r)),
                    f = i;
                return i = v(e.minus(n), t, 0, 1),
                    u = u.plus(i.times(l)),
                    n = n.plus(i.times(t)),
                    u.s = l.s = g.s,
                    a = v(l, t, o *= 2, O).minus(g).abs().comparedTo(v(u, n, o, O).minus(g).abs()) < 1 ? [
                        l,
                        t
                    ] : [
                        u,
                        n
                    ],
                    y = s,
                    a
            },
            t.toNumber = function () {
                return + P(this)
            },
            t.toPrecision = function (e, r) {
                return null != e && H(e, 1, q),
                    i(this, e, r, 2)
            },
            t.toString = function (e) {
                var r,
                    n = this,
                    t = n.s,
                    i = n.e;
                return null === i ? t ? (r = 'Infinity', t < 0 && (r = '-' + r))  : r = 'NaN' : (r = null == e ? i <= p || d <= i ? W($(n.c), i)  : X($(n.c), i, '0')  : 10 === e ? X($((n = D(new B(n), N + i + 1, O)).c), n.e, '0')  : (H(e, 2, S.length, 'Base'), a(X($(n.c), i, '0'), 10, e, t, !0)), t < 0 && n.c[0] && (r = '-' + r)),
                    r
            },
            t.valueOf = t.toJSON = function () {
                return P(this)
            },
            t._isBigNumber = !0,
        null != r && B.set(r),
            B
    }()).default = r.BigNumber = r,
        'function' == typeof define && define.amd ? define('bignumber', [
        ], function () {
            return r
        })  : 'undefined' != typeof module && module.exports ? module.exports = r : (e || (e = 'undefined' != typeof self && self ? self : window), e.BigNumber = r)
}(this);
//! api-check version 7.5.5 built with ♥ by Kent C. Dodds <kent@doddsfamily.us> (http://kent.doddsfamily.us) (ó ì_í)=óò=(ì_í ò)
!function (e, r) {
    'object' == typeof exports && 'object' == typeof module ? module.exports = r()  : 'function' == typeof define && define.amd ? define('api-check', r)  : 'object' == typeof exports ? exports.apiCheck = r()  : e.apiCheck = r()
}(this, function () {
    return function (e) {
        function r(n) {
            if (t[n]) return t[n].exports;
            var o = t[n] = {
                exports: {
                },
                id: n,
                loaded: !1
            };
            return e[n].call(o.exports, o, o.exports, r),
                o.loaded = !0,
                o.exports
        }
        var t = {
        };
        return r.m = e,
            r.c = t,
            r.p = '',
            r(0)
    }([function (e, r, t) {
        'use strict';
        function n(e) {
            return e && e.__esModule ? e : {
                default:
                e
            }
        }
        Object.defineProperty(r, '__esModule', {
            value: !0
        });
        var o = t(3),
            i = n(o);
        r['default'] = i['default'],
            e.exports = r['default']
    },
        function (e, r) {
            function t(e, r) {
                var t = [
                    ],
                    o = [
                    ];
                return r = r || function (e, r) {
                    return '[Circular ' + n(r, t, o) + ']'
                },
                    function (n, i) {
                        var a = i;
                        return 'object' == typeof i && i && ( - 1 !== t.indexOf(i) ? a = r(n, i)  : (t.push(i), o.push(n))),
                        e && (a = e(n, a)),
                            a
                    }
            }
            function n(e, r, t) {
                var n = r.indexOf(e),
                    o = [
                        t[n]
                    ];
                for (n--; n >= 0; n--) r[n][o[0]] === e && (e = r[n], o.unshift(t[n]));
                return '~' + o.join('.')
            }
            function o(e, r, n, o) {
                return JSON.stringify(e, t(r, o), n)
            }
            e.exports = o,
                o.getSerialize = t
        },
        function (e, r, t) {
            'use strict';
            function n(e, r, t) {
                return r in e ? Object.defineProperty(e, r, {
                    value: t,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                })  : e[r] = t,
                    e
            }
            function o(e) {
                var r = i(e),
                    t = void 0;
                if ('array' === r) t = [
                ];
                else {
                    if ('object' !== r) return e;
                    t = {
                    }
                }
                return f(e, function (e, r) {
                    t[r] = e
                }),
                    t
            }
            function i(e) {
                return Array.isArray(e) ? 'array' : e instanceof RegExp ? 'object' : typeof e
            }
            function a(e, r) {
                var t = void 0,
                    n = r && r['short'];
                return t = n && e.shortType ? e.shortType : !n && 'object' == typeof e.type || 'function' === e.type ? u(e, r)  : u(e, r) || e.displayName || e.name
            }
            function u(e, r) {
                var t = e.type;
                if ('function' == typeof t) {
                    var o = t.__apiCheckData,
                        i = t(r);
                    t = n({
                        __apiCheckData: o
                    }, o.type, i)
                }
                return t
            }
            function p(e) {
                return e ? Array.isArray(e) ? e : [
                    e
                ] : [
                ]
            }
            function f(e, r, t) {
                return Array.isArray(e) ? s(e, r, t)  : c(e, r, t)
            }
            function c(e, r, t) {
                var n = void 0,
                    o = Object.prototype.hasOwnProperty;
                for (var i in e) if (o.call(e, i) && (n = r.call(t, e[i], i, e), n === !1)) return n;
                return !0
            }
            function s(e, r, t) {
                for (var n = void 0, o = e.length, i = 0; o > i; i++) if (n = r.call(t, e[i], i, e), n === !1) return n;
                return !0
            }
            function l(e) {
                return e instanceof Error
            }
            function y(e, r, t) {
                e = p(e);
                var n = e.slice(),
                    o = n.pop();
                return 1 === n.length && (r = ' '),
                n.join(r) + ('' + (n.length ? r + t : '') + o)
            }
            function h(e, r, t) {
                'function' == typeof t && (t = t({
                    short: !0
                }));
                var n = 'object' != typeof t ? t : A(t);
                return new Error(d(e, r) + ' must be ' + v(n))
            }
            function d(e, r) {
                var t = v(e || 'value'),
                    n = r ? ' at ' + v(r)  : '';
                return '' + t + n
            }
            function v(e) {
                return '`' + e + '`'
            }
            function g(e) {
                return 'undefined' == typeof e
            }
            function b(e, r, t) {
                return t && (e = _(), e.isNoop = !0),
                'string' == typeof e.type && (e.shortType = e.type),
                    f(r, function (r, t) {
                        return e[t] = r
                    }),
                e.displayName || (e.displayName = 'apiCheck ' + v(e.shortType || e.type || e.name) + ' type checker'),
                e.notRequired || (e = m(e, t)),
                e.notNullable || k(e, t),
                e.notOptional || O(e, t),
                    e
            }
            function m(e, r) {
                var t = r ? _()  : function (r, t, n, o) {
                    if (g(r) && !e.isOptional) {
                        var i = n ? ' in ' + v(n)  : '',
                            u = a(e, {
                                short: !0
                            }),
                            p = 'object' != typeof u ? u : A(u);
                        return new Error('Required ' + v(t) + ' not specified' + i + '. Must be ' + v(p))
                    }
                    return e(r, t, n, o)
                };
                return j(e, t),
                    t.originalChecker = e,
                    t
            }
            function O(e, r) {
                var t = r ? _()  : function (r, t, n, o) {
                    return g(r) ? void 0 : e(r, t, n, o)
                };
                j(e, t),
                    t.isOptional = !0,
                    t.displayName = e.displayName + ' (optional)',
                    t.originalChecker = e,
                    e.optional = t,
                    C(e, e.optional)
            }
            function k(e, r) {
                var t = r ? _()  : function (r, t, n, o) {
                    return null !== r ? e(r, t, n, o)  : void 0
                };
                j(e, t),
                    t.isNullable = !0,
                    t.displayName = e.displayName + ' (nullable)',
                    t.originalChecker = e,
                    e.nullable = t,
                    C(e, e.nullable),
                e.notOptional || O(e.nullable, r)
            }
            function C(e, r) {
                if ('object' == typeof r.type) r.type = o(r.type);
                else {
                    if ('function' != typeof r.type) return void (r.type += ' (optional)');
                    r.type = function () {
                        return e.type.apply(e, arguments)
                    }
                }
                r.type.__apiCheckData = o(e.type.__apiCheckData) || {
                },
                    r.type.__apiCheckData.optional = !0
            }
            function j(e, r) {
                f(Object.keys(e), function (t) {
                    return r[t] = e[t]
                })
            }
            function x() {
            }
            function _() {
                return function () {
                }
            }
            var A = t(1),
                T = {
                    addOptional: O,
                    getRequiredVersion: m,
                    setupChecker: b,
                    addNullable: k
                };
            e.exports = {
                each: f,
                copy: o,
                typeOf: i,
                arrayify: p,
                getCheckerDisplay: a,
                isError: l,
                list: y,
                getError: h,
                nAtL: d,
                t: v,
                undef: g,
                checkerHelpers: T,
                noop: x
            }
        },
        function (e, r, t) {
            'use strict';
            function n() {
                function r(n, i, a) {
                    if (r.config.disabled || e.exports.globalConfig.disabled) return {
                        apiTypes: {
                        },
                        argTypes: {
                        },
                        passed: !0,
                        message: '',
                        failed: !1
                    };
                    t(arguments),
                        Array.isArray(n) ? i = Array.prototype.slice.call(i)  : (n = [
                            n
                        ], i = [
                            i
                        ]);
                    var u = p(n, i);
                    u.length || (u = o(n, i));
                    var f = c(n, i);
                    return f.args = i,
                        u.length ? (f.message = r.getErrorMessage(n, i, u, a), f.failed = !0, f.passed = !1)  : (f.message = '', f.failed = !1, f.passed = !0),
                        f
                }
                function t(e) {
                    var t = e[0],
                        n = e[1],
                        i = Array.isArray(n) || n && 'object' == typeof n && 'number' == typeof n.length;
                    if (Array.isArray(t) && !i) throw new Error(a(t, [
                        n
                    ], [
                        'If an array is provided for the api, an array must be provided for the args as well.'
                    ], {
                        prefix: 'apiCheck'
                    }));
                    var u = o(C.checkApiCheckApi, e);
                    if (u.length) {
                        var p = r.getErrorMessage(C.checkApiCheckApi, e, u, {
                            prefix: 'apiCheck'
                        });
                        r.handleErrorMessage(p, !0)
                    }
                }
                function n(e) {
                    return function (t, n, o) {
                        var i = r(t, n, o);
                        return r.handleErrorMessage(i.message, e),
                            i
                    }
                }
                function i(e, r) {
                    if (r && e) throw new Error(e)
                }
                function a(e, t) {
                    function n() {
                        var e = p.onlyPrefix;
                        return e || (e = ((f.prefix || '') + ' ' + (p.prefix || '')).trim()),
                            e
                    }
                    function o() {
                        var e = p.onlySuffix;
                        return e || (e = ((p.suffix || '') + ' ' + (f.suffix || '')).trim()),
                            e
                    }
                    function i() {
                        var e = p.url;
                        return e || (e = f.docsBaseUrl && p.urlSuffix && ('' + f.docsBaseUrl + p.urlSuffix).trim()),
                            e
                    }
                    var a = arguments.length <= 2 || void 0 === arguments[2] ? [
                        ] : arguments[2],
                        p = arguments.length <= 3 || void 0 === arguments[3] ? {
                            }
                            : arguments[3],
                        f = r.config.output || {
                        },
                        c = n(),
                        s = o(),
                        l = i(),
                        y = 'apiCheck failed! ' + a.join(', '),
                        h = '\n\n' + u(e, t);
                    return (c + ' ' + y + ' ' + s + ' ' + (l || '') + h).trim()
                }
                function u(e, r) {
                    function t(e) {
                        h(e, function (r, n) {
                            - 1 === f.indexOf(r) && (f.push(r), 'object' == typeof r ? t(e)  : 'function' == typeof r && (e[n] = r.displayName || r.name || 'anonymous function'))
                        })
                    }
                    function n(e) {
                        return e && e.length ? (e && 1 === e.length && (e = e[0]), l(e, null, 2))  : 'nothing'
                    }
                    function o() {
                        var e = '\n',
                            t = !0;
                        r && 1 === r.length && (t = 'object' == typeof r[0] && null !== r[0] ? !!Object.keys(r[0]).length : !1);
                        var n = 'type' + (t ? 's' : ''),
                            o = e + e;
                        return 'You passed:' + e + s + o + ('With the ' + n + ':' + e + u + o) + ('The API calls for:' + e + a)
                    }
                    var i = c(e, r),
                        a = i.apiTypes,
                        u = i.argTypes,
                        p = Array.prototype.slice.call(r || [
                        ]),
                        f = [
                        ];
                    t(p);
                    var s = n(p);
                    return u = n(u),
                        a = n(a),
                        o()
                }
                function c(t, n) {
                    t = g(t),
                        n = g(n);
                    var o = t.map(function (t, o) {
                            var i = e.exports.globalConfig.hasOwnProperty('verbose');
                            return b(t, {
                                terse: i ? !e.exports.globalConfig.verbose : !r.config.verbose,
                                obj: n[o],
                                addHelpers: !0
                            })
                        }),
                        i = n.map(function (e) {
                            return f(e, [
                            ])
                        });
                    return {
                        argTypes: i,
                        apiTypes: o
                    }
                }
                var s = arguments.length <= 0 || void 0 === arguments[0] ? {
                    }
                    : arguments[0],
                    d = arguments.length <= 1 || void 0 === arguments[1] ? {
                        }
                        : arguments[1];
                j && arguments.length && j['throw'](C.getApiCheckInstanceCheckers, arguments, {
                    prefix: 'creating an apiCheck instance'
                });
                var v = {
                    throw : n(!0),
                    warn: n(!1),
                    getErrorMessage: a,
                    handleErrorMessage: i,
                    config: {
                        output: s.output || {
                            prefix: '',
                            suffix: '',
                            docsBaseUrl: ''
                        },
                        verbose: s.verbose || !1,
                        disabled: s.disabled || !1
                    },
                    utils: y
                };
                h(v, function (e, t) {
                    return r[t] = e
                });
                var m = r.disabled || e.exports.globalConfig.disabled;
                return h(k.getCheckers(m), function (e, t) {
                    return r[t] = e
                }),
                    h(d, function (e, t) {
                        return r[t] = e
                    }),
                    r
            }
            function o(e, r) {
                for (var t = [
                ], n = !1, o = 0, i = 0, u = void 0, p = void 0, f = void 0, c = void 0, s = void 0, l = void 0, y = void 0; (p = e[o++]) && i < r.length; ) u = r[i++],
                    s = 'Argument ' + i + (p.isOptional ? ' (optional)' : ''),
                    f = p(u, 'value', s),
                    l = d(f),
                    c = o >= e.length,
                    y = o > 1 && e[o - 1].isOptional,
                    l && c || l && !c && !p.isOptional && !y ? (n = !0, t.push(a(f, p, u)))  : l && p.isOptional ? i-- : t.push(v(s) + ' passed');
                return n ? t : [
                ]
            }
            function i(e, r, t) {
                var n = k.shape({
                        type: k.string,
                        optional: k.bool
                    }),
                    o = k.func.withProperties({
                        __apiCheckData: n
                    }),
                    a = k.shape({
                        __apiCheckData: n
                    }),
                    u = k.oneOfType([o,
                        a]) (e, r, t);
                return d(u) ? u : 'function' == typeof e || e.hasOwnProperty(e.__apiCheckData.type) ? void 0 : O(r, t, i.type)
            }
            function a(e, r, t) {
                var n = u(r, t);
                return n = n ? ' - ' + n : '',
                e.message + n
            }
            function u(e, r) {
                var t = e.help;
                return t ? ('function' == typeof t && (t = t(r)), t)  : ''
            }
            function p(e, r) {
                var t = e.filter(function (e) {
                    return !e.isOptional
                });
                return r.length < t.length ? [
                    'Not enough arguments specified. Requires `' + t.length + '`, you passed `' + r.length + '`'
                ] : [
                ]
            }
            function f(e, r) {
                function t() {
                    return e && Object.keys(e).length
                }
                function n() {
                    return - 1 !== r.indexOf(e) ? '[Circular]' : (r.push(e), c(e, r))
                }
                var o = e && e.constructor && e.constructor.name,
                    i = m(e);
                if ('function' === i) {
                    if (t()) {
                        var a = l(n());
                        return o + ' (with properties: ' + a + ')'
                    }
                    return o
                }
                return null === e ? 'null' : 'array' !== i && 'object' !== i ? i : t() ? n()  : o
            }
            function c(e, r) {
                var t = {
                };
                return h(e, function (e, n) {
                    return t[n] = f(e, r)
                }),
                    t
            }
            function s() {
                var e = k.string.optional,
                    r = k.func.withProperties({
                        type: k.oneOfType([k.string,
                            i]).optional,
                        displayName: k.string.optional,
                        shortType: k.string.optional,
                        notOptional: k.bool.optional,
                        notRequired: k.bool.optional
                    }),
                    t = [
                        k.shape({
                            output: k.shape({
                                prefix: k.string.optional,
                                suffix: k.string.optional,
                                docsBaseUrl: k.string.optional
                            }).strict.optional,
                            verbose: k.bool.optional,
                            disabled: k.bool.optional
                        }).strict.optional,
                        k.objectOf(r).optional
                    ],
                    n = [
                        k.typeOrArrayOf(r),
                        k.any.optional,
                        k.shape({
                            prefix: e,
                            suffix: e,
                            urlSuffix: e,
                            onlyPrefix: e,
                            onlySuffix: e,
                            url: e
                        }).strict.optional
                    ];
                return {
                    checkerFnChecker: r,
                    getApiCheckInstanceCheckers: t,
                    checkApiCheckApi: n
                }
            }
            var l = t(1),
                y = t(2),
                h = y.each,
                d = y.isError,
                v = y.t,
                g = y.arrayify,
                b = y.getCheckerDisplay,
                m = y.typeOf,
                O = y.getError,
                k = t(4),
                C = s();
            e.exports = n,
                e.exports.VERSION = '7.5.5',
                e.exports.utils = y,
                e.exports.globalConfig = {
                    verbose: !1,
                    disabled: !1
                };
            var j = n({
                output: {
                    prefix: 'apiCheck'
                }
            });
            e.exports.internalChecker = j,
                h(k, function (r, t) {
                    return e.exports[t] = r
                }),
                i.type = 'function with __apiCheckData property and `${function.type}` property'
        },
        function (e, r, t) {
            'use strict';
            function n(e) {
                function r(r) {
                    var t = r.toLowerCase();
                    return b(function (e, n, o) {
                        return a(e) !== t ? y(n, o, r)  : void 0
                    }, {
                        type: r
                    }, e)
                }
                function t() {
                    var r = 'Function',
                        t = b(function (e, t, n) {
                            return 'function' !== a(e) ? y(t, n, r)  : void 0
                        }, {
                            type: r
                        }, e);
                    return t.withProperties = function (r) {
                        var t = m.objectOf(m.func) (r, 'properties', 'apiCheck.func.withProperties');
                        if (c(t)) throw t;
                        var n = m.shape(r, !0);
                        return n.type.__apiCheckData.type = 'func.withProperties',
                            b(function (e, r, t) {
                                var o = m.func(e, r, t);
                                return c(o) ? o : n(e, r, t)
                            }, {
                                type: n.type,
                                shortType: 'func.withProperties'
                            }, e)
                    },
                        t
                }
                function n() {
                    var r = 'Object',
                        t = 'Object (null ok)',
                        n = b(function (e, r, n) {
                            return 'object' !== a(e) ? y(r, n, t)  : void 0
                        }, {
                            type: t
                        }, e),
                        o = b(function (e, r, t) {
                            return null === e || c(n(e, r, t)) ? y(r, t, o.type)  : void 0
                        }, {
                            type: r,
                            nullOk: n
                        }, e);
                    return o
                }
                function i(r) {
                    return b(function (e, t, n) {
                        return e instanceof r ? void 0 : y(t, n, r.name)
                    }, {
                        type: r.name
                    }, e)
                }
                function v(r) {
                    var t = {
                            __apiCheckData: {
                                optional: !1,
                                type: 'enum'
                            },
                            enum: r
                        },
                        n = 'oneOf[' + r.map(function (e) {
                            return o(e)
                        }).join(', ') + ']';
                    return b(function (e, t, o) {
                        return r.some(function (r) {
                            return r === e
                        }) ? void 0 : y(t, o, n)
                    }, {
                        type: t,
                        shortType: n
                    }, e)
                }
                function O(r) {
                    function t(e) {
                        return e && e['short'] ? o : r.map(function (r) {
                            return f(r, e)
                        })
                    }
                    var n = r.map(function (e) {
                            return f(e, {
                                short: !0
                            })
                        }),
                        o = 'oneOfType[' + n.join(', ') + ']';
                    return t.__apiCheckData = {
                        optional: !1,
                        type: 'oneOfType'
                    },
                        b(function (e, t, n) {
                            return r.some(function (r) {
                                return !c(r(e, t, n))
                            }) ? void 0 : y(t, n, o)
                        }, {
                            type: t,
                            shortType: o
                        }, e)
                }
                function k(r) {
                    function t(e) {
                        return e && e['short'] ? o : f(r, e)
                    }
                    var n = f(r, {
                            short: !0
                        }),
                        o = 'arrayOf[' + n + ']';
                    return t.__apiCheckData = {
                        optional: !1,
                        type: 'arrayOf'
                    },
                        b(function (e, t, n) {
                            return c(m.array(e)) || !e.every(function (e) {
                                return !c(r(e))
                            }) ? y(t, n, o)  : void 0
                        }, {
                            type: t,
                            shortType: o
                        }, e)
                }
                function C(r) {
                    function t(e) {
                        return e && e['short'] ? o : f(r, e)
                    }
                    var n = f(r, {
                            short: !0
                        }),
                        o = 'objectOf[' + n + ']';
                    return t.__apiCheckData = {
                        optional: !1,
                        type: 'objectOf'
                    },
                        b(function (e, t, n) {
                            var i = m.object(e, t, n);
                            if (c(i)) return i;
                            var a = u(e, function (e, n) {
                                return c(r(e, n, t)) ? !1 : void 0
                            });
                            return a ? void 0 : y(t, n, o)
                        }, {
                            type: t,
                            shortType: o
                        }, e)
                }
                function j(r) {
                    function t(e) {
                        return e && e['short'] ? o : f(r, e)
                    }
                    var n = f(r, {
                            short: !0
                        }),
                        o = 'typeOrArrayOf[' + n + ']';
                    return t.__apiCheckData = {
                        optional: !1,
                        type: 'typeOrArrayOf'
                    },
                        b(function (e, t, n, i) {
                            return c(m.oneOfType([r,
                                m.arrayOf(r)]) (e, t, n, i)) ? y(t, n, o)  : void 0
                        }, {
                            type: t,
                            shortType: o
                        }, e)
                }
                function x() {
                    function r(r, t) {
                        function n() {
                            function e(e, r, t, n, o) {
                                function a(t, n, o) {
                                    'string' == typeof e[r] ? e[r] += o : e[r].__apiCheckData[t] = n
                                }
                                if (t || !o || n.isOptional) {
                                    if (t) {
                                        var u = n(i[r], r, null, i);
                                        c(u) && a('error', 'THIS IS THE PROBLEM: ' + u.message, ' <-- THIS IS THE PROBLEM: ' + u.message)
                                    }
                                } else {
                                    var p = 'ITEM';
                                    n.type && n.type.__apiCheckData && (p = n.type.__apiCheckData.type.toUpperCase()),
                                        a('missing', 'MISSING THIS ' + p, ' <-- YOU ARE MISSING THIS')
                                }
                            }
                            var t = arguments.length <= 0 || void 0 === arguments[0] ? {
                                }
                                : arguments[0],
                                n = {
                                },
                                o = t.terse,
                                i = t.obj,
                                a = t.addHelpers,
                                p = t.required;
                            return u(r, function (r, t) {
                                var u = i && i.hasOwnProperty(t),
                                    c = g(p) ? !r.isOptional : p;
                                o && !u && r.isOptional || (n[t] = f(r, {
                                    terse: o,
                                    obj: i && i[t],
                                    required: c,
                                    addHelpers: a
                                })),
                                a && e(n, t, u, r, c)
                            }),
                                n
                        }
                        function o() {
                            return n.apply(void 0, arguments)
                        }
                        var i = {
                        };
                        u(r, function (e, r) {
                            i[r] = f(e)
                        }),
                            n.__apiCheckData = {
                                strict: !1,
                                optional: !1,
                                type: 'shape'
                            };
                        var a = b(function (e, n, o) {
                            var i = !t && m.object(e, n, o);
                            if (c(i)) return i;
                            var a = void 0;
                            return o = o ? o + (n ? '/' : '')  : '',
                                n = n || '',
                                u(r, function (r, t) {
                                    return e.hasOwnProperty(t) || !r.isOptional ? (a = r(e[t], t, '' + o + n, e), !c(a))  : void 0
                                }),
                                c(a) ? a : void 0
                        }, {
                            type: n,
                            shortType: 'shape'
                        }, e);
                        return o.__apiCheckData = p(a.type.__apiCheckData),
                            o.__apiCheckData.strict = !0,
                            a.strict = b(function (e, t, n) {
                                var o = a(e, t, n);
                                if (c(o)) return o;
                                var i = Object.keys(r),
                                    u = Object.keys(e).filter(function (e) {
                                        return - 1 === i.indexOf(e)
                                    });
                                return u.length ? new Error(h(t, n) + ' cannot have extra properties: ' + d(u.join('`, `')) + '.It is limited to ' + d(i.join('`, `')))  : void 0
                            }, {
                                type: o,
                                shortType: 'strict shape'
                            }, e),
                            a
                    }
                    function t(r, t, o) {
                        var i = d(t.join(', ')),
                            a = 'if ' + (r ? 'all of' : 'at least one of'),
                            u = 'specified ' + a + ' these are not specified: ' + i + ' (otherwise it\'s optional)',
                            p = 'requiredIfNot' + (r ? '.all' : '') + '[' + t.join(', ') + '}]',
                            f = n(o, u, p);
                        return b(function (e, n, i, a) {
                            var u = a && a.hasOwnProperty(n),
                                p = r ? 'every' : 'some',
                                c = t[p](function (e) {
                                    return a && a.hasOwnProperty(e)
                                });
                            return c || u ? u ? o(e, n, i, a)  : void 0 : y(n, i, f)
                        }, {
                            type: f,
                            notRequired: !0
                        }, e)
                    }
                    function n(e, r, t) {
                        function n(r) {
                            return r && r['short'] ? t : f(e)
                        }
                        return n.__apiCheckData = {
                            optional: !1,
                            type: 'ifNot',
                            description: r
                        },
                            n
                    }
                    return r.ifNot = function (r, t) {
                        Array.isArray(r) || (r = [
                            r
                        ]);
                        var o = void 0;
                        o = 1 === r.length ? 'specified only if ' + r[0] + ' is not specified' : 'specified only if none of the following are specified: [' + l(r, ', ', 'and ') + ']';
                        var i = 'ifNot[' + r.join(', ') + ']',
                            a = n(t, o, i);
                        return b(function (e, n, o, i) {
                            var u = i && i.hasOwnProperty(n),
                                p = r.some(function (e) {
                                    return i && i.hasOwnProperty(e)
                                });
                            return u === p ? y(n, o, a)  : u ? t(e, n, o, i)  : void 0
                        }, {
                            notRequired: !0,
                            type: a,
                            shortType: i
                        }, e)
                    },
                        r.onlyIf = function (r, t) {
                            r = s(r);
                            var o = void 0;
                            o = 1 === r.length ? 'specified only if ' + r[0] + ' is also specified' : 'specified only if all of the following are specified: [' + l(r, ', ', 'and ') + ']';
                            var i = 'onlyIf[' + r.join(', ') + ']',
                                a = n(t, o, i);
                            return b(function (e, n, o, i) {
                                var u = r.every(function (e) {
                                    return i.hasOwnProperty(e)
                                });
                                return u ? t(e, n, o, i)  : y(n, o, a)
                            }, {
                                type: a,
                                shortType: i
                            }, e)
                        },
                        r.requiredIfNot = function (e, r) {
                            return Array.isArray(e) || (e = [
                                e
                            ]),
                                t(!1, e, r)
                        },
                        r.requiredIfNot.all = function (e, r) {
                            if (!Array.isArray(e)) throw new Error('requiredIfNot.all must be passed an array');
                            return t(!0, e, r)
                        },
                        r
                }
                function _() {
                    var r = 'function arguments';
                    return b(function (e, t, n) {
                        return Array.isArray(e) || c(m.object(e)) || c(m.number(e.length)) ? y(t, n, r)  : void 0
                    }, {
                        type: r
                    }, e)
                }
                function A() {
                    return b(function () {
                    }, {
                        type: 'any'
                    }, e)
                }
                function T() {
                    var r = 'null';
                    return b(function (e, t, n) {
                        return null !== e ? y(t, n, r)  : void 0
                    }, {
                        type: r
                    }, e)
                }
                function w(r, t) {
                    var n = 'Range (' + r + ' - ' + t + ')';
                    return b(function (e, o, i) {
                        return 'number' != typeof e || r > e || e > t ? y(o, i, n)  : void 0
                    }, {
                        type: n
                    }, e)
                }
                function E(r) {
                    var t = 'lessThan[' + r + ']';
                    return b(function (e, n, o) {
                        return 'number' != typeof e || e > r ? y(n, o, t)  : void 0
                    }, {
                        type: t
                    }, e)
                }
                function D(r) {
                    var t = 'greaterThan[' + r + ']';
                    return b(function (e, n, o) {
                        return 'number' != typeof e || r > e ? y(n, o, t)  : void 0
                    }, {
                        type: t
                    }, e)
                }
                function N() {
                    var r = 'empty object';
                    return b(function (e, t, n) {
                        return 'object' !== a(e) || null === e || Object.keys(e).length ? y(t, n, r)  : void 0
                    }, {
                        type: r
                    }, e)
                }
                return {
                    array: r('Array'),
                    bool: r('Boolean'),
                    number: r('Number'),
                    string: r('String'),
                    func: t(),
                    object: n(),
                    emptyObject: N(),
                    instanceOf: i,
                    oneOf: v,
                    oneOfType: O,
                    arrayOf: k,
                    objectOf: C,
                    typeOrArrayOf: j,
                    range: w,
                    lessThan: E,
                    greaterThan: D,
                    shape: x(),
                    args: _(),
                    any: A(),
                    null: T()
                }
            }
            var o = t(1),
                i = t(2),
                a = i.typeOf,
                u = i.each,
                p = i.copy,
                f = i.getCheckerDisplay,
                c = i.isError,
                s = i.arrayify,
                l = i.list,
                y = i.getError,
                h = i.nAtL,
                d = i.t,
                v = i.checkerHelpers,
                g = i.undef,
                b = v.setupChecker,
                m = e.exports = n();
            e.exports.getCheckers = n
        }
    ])
});
!function webpackUniversalModuleDefinition(root, factory) {
    if ('object' === typeof exports && 'object' === typeof module) module.exports = factory(require('angular'), require('api-check'));
    else if ('function' === typeof define && define.amd) define('angular-formly', [
        'angular',
        'api-check'
    ], factory);
    else if ('object' === typeof exports) exports['ngFormly'] = factory(require('angular'), require('api-check'));
    else root['ngFormly'] = factory(root['angular'], root['apiCheck'])
}(this, function (__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_6__) {
    return function (modules) {
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                exports: {
                },
                id: moduleId,
                loaded: false
            };
            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            module.loaded = true;
            return module.exports
        }
        var installedModules = {
        };
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.p = '';
        return __webpack_require__(0)
    }([function (module, exports, __webpack_require__) {
        'use strict';
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default:
                obj
            }
        }
        Object.defineProperty(exports, '__esModule', {
            value: true
        });
        var _indexCommon = __webpack_require__(1),
            _indexCommon2 = _interopRequireDefault(_indexCommon);
        exports['default'] = _indexCommon2['default'];
        module.exports = exports['default']
    },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix),
                _providersFormlyApiCheck = __webpack_require__(5),
                _providersFormlyApiCheck2 = _interopRequireDefault(_providersFormlyApiCheck),
                _otherDocsBaseUrl = __webpack_require__(7),
                _otherDocsBaseUrl2 = _interopRequireDefault(_otherDocsBaseUrl),
                _providersFormlyUsability = __webpack_require__(8),
                _providersFormlyUsability2 = _interopRequireDefault(_providersFormlyUsability),
                _providersFormlyConfig = __webpack_require__(9),
                _providersFormlyConfig2 = _interopRequireDefault(_providersFormlyConfig),
                _providersFormlyValidationMessages = __webpack_require__(11),
                _providersFormlyValidationMessages2 = _interopRequireDefault(_providersFormlyValidationMessages),
                _servicesFormlyUtil = __webpack_require__(12),
                _servicesFormlyUtil2 = _interopRequireDefault(_servicesFormlyUtil),
                _servicesFormlyWarn = __webpack_require__(2),
                _servicesFormlyWarn2 = _interopRequireDefault(_servicesFormlyWarn),
                _directivesFormlyCustomValidation = __webpack_require__(13),
                _directivesFormlyCustomValidation2 = _interopRequireDefault(_directivesFormlyCustomValidation),
                _directivesFormlyField = __webpack_require__(14),
                _directivesFormlyField2 = _interopRequireDefault(_directivesFormlyField),
                _directivesFormlyFocus = __webpack_require__(15),
                _directivesFormlyFocus2 = _interopRequireDefault(_directivesFormlyFocus),
                _directivesFormlyForm = __webpack_require__(16),
                _directivesFormlyForm2 = _interopRequireDefault(_directivesFormlyForm),
                _runFormlyNgModelAttrsManipulator = __webpack_require__(17),
                _runFormlyNgModelAttrsManipulator2 = _interopRequireDefault(_runFormlyNgModelAttrsManipulator),
                _runFormlyCustomTags = __webpack_require__(18),
                _runFormlyCustomTags2 = _interopRequireDefault(_runFormlyCustomTags),
                ngModuleName = 'formly';
            exports['default'] = ngModuleName;
            var ngModule = _angularFix2['default'].module(ngModuleName, [
            ]);
            ngModule.constant('formlyApiCheck', _providersFormlyApiCheck2['default']);
            ngModule.constant('formlyErrorAndWarningsUrlPrefix', _otherDocsBaseUrl2['default']);
            ngModule.constant('formlyVersion', '6.16.0');
            ngModule.provider('formlyUsability', _providersFormlyUsability2['default']);
            ngModule.provider('formlyConfig', _providersFormlyConfig2['default']);
            ngModule.factory('formlyValidationMessages', _providersFormlyValidationMessages2['default']);
            ngModule.factory('formlyUtil', _servicesFormlyUtil2['default']);
            ngModule.factory('formlyWarn', _servicesFormlyWarn2['default']);
            ngModule.directive('formlyCustomValidation', _directivesFormlyCustomValidation2['default']);
            ngModule.directive('formlyField', _directivesFormlyField2['default']);
            ngModule.directive('formlyFocus', _directivesFormlyFocus2['default']);
            ngModule.directive('formlyForm', _directivesFormlyForm2['default']);
            ngModule.run(_runFormlyNgModelAttrsManipulator2['default']);
            ngModule.run(_runFormlyCustomTags2['default']);
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _toConsumableArray(arr) {
                if (Array.isArray(arr)) {
                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
                    return arr2
                } else return Array.from(arr)
            }
            function formlyWarn(formlyConfig, formlyErrorAndWarningsUrlPrefix, $log) {
                return function warn() {
                    if (!formlyConfig.disableWarnings) {
                        var args = Array.prototype.slice.call(arguments),
                            warnInfoSlug = args.shift();
                        args.unshift('Formly Warning:');
                        args.push('' + formlyErrorAndWarningsUrlPrefix + warnInfoSlug);
                        $log.warn.apply($log, _toConsumableArray(args))
                    }
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports['default'] = formlyWarn;
            formlyWarn.$inject = [
                'formlyConfig',
                'formlyErrorAndWarningsUrlPrefix',
                '$log'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var angular = __webpack_require__(4);
            if (!angular.version) angular = window.angular;
            exports['default'] = angular;
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            module.exports = __WEBPACK_EXTERNAL_MODULE_4__
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function shapeRequiredIfNot(otherProps, propChecker) {
                function shapeRequiredIfNotDefinition(prop, propName, location, obj) {
                    var propExists = obj && obj.hasOwnProperty(propName),
                        otherPropsExist = otherProps.some(function (otherProp) {
                            return obj && obj.hasOwnProperty(otherProp)
                        });
                    if (!otherPropsExist && !propExists) return apiCheck.utils.getError(propName, location, type);
                    else if (propExists) return propChecker(prop, propName, location, obj)
                }
                if (!_angularFix2['default'].isArray(otherProps)) otherProps = [
                    otherProps
                ];
                var type = 'specified if these are not specified: `' + otherProps.join(', ') + '` (otherwise it\'s optional)';
                shapeRequiredIfNotDefinition.type = type;
                return apiCheck.utils.checkerHelpers.setupChecker(shapeRequiredIfNotDefinition)
            }
            function nullable(checker) {
                return apiCheck.oneOfType([apiCheck.oneOf([null]),
                    checker])
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix),
                _apiCheck = __webpack_require__(6),
                _apiCheck2 = _interopRequireDefault(_apiCheck),
                apiCheck = (0, _apiCheck2['default']) ({
                    output: {
                        prefix: 'angular-formly:',
                        docsBaseUrl: __webpack_require__(7)
                    }
                }),
                formlyExpression = apiCheck.oneOfType([apiCheck.string,
                    apiCheck.func]),
                specifyWrapperType = nullable(apiCheck.typeOrArrayOf(apiCheck.string)),
                apiCheckProperty = apiCheck.objectOf(apiCheck.func),
                apiCheckInstanceProperty = apiCheck.shape.onlyIf('apiCheck', apiCheck.func.withProperties({
                    warn: apiCheck.func,
                    throw : apiCheck.func,
                    shape: apiCheck.func
                })),
                apiCheckFunctionProperty = apiCheck.shape.onlyIf('apiCheck', apiCheck.oneOf(['throw',
                    'warn'])),
                formlyWrapperType = apiCheck.shape({
                    name: shapeRequiredIfNot('types', apiCheck.string).optional,
                    template: apiCheck.shape.ifNot('templateUrl', apiCheck.string).optional,
                    templateUrl: apiCheck.shape.ifNot('template', apiCheck.string).optional,
                    types: apiCheck.typeOrArrayOf(apiCheck.string).optional,
                    overwriteOk: apiCheck.bool.optional,
                    validateOptions: apiCheck.func.optional,
                    apiCheck: apiCheckProperty.optional,
                    apiCheckInstance: apiCheckInstanceProperty.optional,
                    apiCheckFunction: apiCheckFunctionProperty.optional,
                    apiCheckOptions: apiCheck.object.optional
                }).strict,
                expressionProperties = apiCheck.objectOf(apiCheck.oneOfType([formlyExpression,
                    apiCheck.shape({
                        expression: formlyExpression,
                        message: formlyExpression.optional
                    }).strict])),
                modelChecker = apiCheck.oneOfType([apiCheck.string,
                    apiCheck.object]),
                templateManipulators = nullable(apiCheck.shape({
                    preWrapper: nullable(apiCheck.arrayOf(apiCheck.func)).optional,
                    postWrapper: nullable(apiCheck.arrayOf(apiCheck.func)).optional
                }).strict),
                fieldOptionsApiShape = {
                    $$hashKey: apiCheck.any.optional,
                    type: apiCheck.shape.ifNot(['template',
                        'templateUrl'], apiCheck.string).optional,
                    template: apiCheck.shape.ifNot(['type',
                        'templateUrl'], apiCheck.oneOfType([apiCheck.string,
                        apiCheck.func])).optional,
                    templateUrl: apiCheck.shape.ifNot(['type',
                        'template'], apiCheck.oneOfType([apiCheck.string,
                        apiCheck.func])).optional,
                    key: apiCheck.oneOfType([apiCheck.string,
                        apiCheck.number]).optional,
                    model: modelChecker.optional,
                    className: apiCheck.string.optional,
                    id: apiCheck.string.optional,
                    name: apiCheck.string.optional,
                    expressionProperties: expressionProperties.optional,
                    data: apiCheck.object.optional,
                    templateOptions: apiCheck.object.optional,
                    wrapper: specifyWrapperType.optional,
                    modelOptions: apiCheck.shape({
                        updateOn: apiCheck.string.optional,
                        debounce: apiCheck.oneOfType([apiCheck.objectOf(apiCheck.number),
                            apiCheck.number]).optional,
                        allowInvalid: apiCheck.bool.optional,
                        getterSetter: apiCheck.bool.optional,
                        timezone: apiCheck.string.optional
                    }).optional,
                    watcher: apiCheck.typeOrArrayOf(apiCheck.shape({
                        expression: formlyExpression.optional,
                        listener: formlyExpression
                    })).optional,
                    validators: apiCheck.objectOf(apiCheck.oneOfType([formlyExpression,
                        apiCheck.shape({
                            expression: formlyExpression,
                            message: formlyExpression.optional
                        }).strict])).optional,
                    noFormControl: apiCheck.bool.optional,
                    hide: apiCheck.bool.optional,
                    hideExpression: formlyExpression.optional,
                    ngModelAttrs: apiCheck.objectOf(apiCheck.shape({
                        expression: apiCheck.shape.ifNot(['value',
                            'attribute',
                            'bound'], apiCheck.any).optional,
                        value: apiCheck.shape.ifNot('expression', apiCheck.any).optional,
                        attribute: apiCheck.shape.ifNot('expression', apiCheck.any).optional,
                        bound: apiCheck.shape.ifNot('expression', apiCheck.any).optional
                    }).strict).optional,
                    elementAttributes: apiCheck.objectOf(apiCheck.string).optional,
                    optionsTypes: apiCheck.typeOrArrayOf(apiCheck.string).optional,
                    link: apiCheck.func.optional,
                    controller: apiCheck.oneOfType([apiCheck.string,
                        apiCheck.func,
                        apiCheck.array]).optional,
                    validation: apiCheck.shape({
                        show: nullable(apiCheck.bool).optional,
                        messages: apiCheck.objectOf(formlyExpression).optional,
                        errorExistsAndShouldBeVisible: apiCheck.bool.optional
                    }).optional,
                    formControl: apiCheck.typeOrArrayOf(apiCheck.object).optional,
                    value: apiCheck.func.optional,
                    runExpressions: apiCheck.func.optional,
                    templateManipulators: templateManipulators.optional,
                    resetModel: apiCheck.func.optional,
                    updateInitialValue: apiCheck.func.optional,
                    initialValue: apiCheck.any.optional,
                    defaultValue: apiCheck.any.optional
                },
                formlyFieldOptions = apiCheck.shape(fieldOptionsApiShape).strict,
                formOptionsApi = apiCheck.shape({
                    formState: apiCheck.object.optional,
                    resetModel: apiCheck.func.optional,
                    updateInitialValue: apiCheck.func.optional,
                    removeChromeAutoComplete: apiCheck.bool.optional,
                    templateManipulators: templateManipulators.optional,
                    wrapper: specifyWrapperType.optional,
                    fieldTransform: apiCheck.func.optional,
                    data: apiCheck.object.optional
                }).strict,
                fieldGroup = apiCheck.shape({
                    $$hashKey: apiCheck.any.optional,
                    key: apiCheck.oneOfType([apiCheck.string,
                        apiCheck.number]).optional,
                    fieldGroup: apiCheck.arrayOf(apiCheck.oneOfType([formlyFieldOptions,
                        apiCheck.object])),
                    className: apiCheck.string.optional,
                    options: formOptionsApi.optional,
                    hide: apiCheck.bool.optional,
                    hideExpression: formlyExpression.optional,
                    data: apiCheck.object.optional,
                    model: modelChecker.optional,
                    form: apiCheck.object.optional,
                    elementAttributes: apiCheck.objectOf(apiCheck.string).optional
                }).strict,
                typeOptionsDefaultOptions = _angularFix2['default'].copy(fieldOptionsApiShape);
            typeOptionsDefaultOptions.key = apiCheck.string.optional;
            var formlyTypeOptions = apiCheck.shape({
                name: apiCheck.string,
                template: apiCheck.shape.ifNot('templateUrl', apiCheck.oneOfType([apiCheck.string,
                    apiCheck.func])).optional,
                templateUrl: apiCheck.shape.ifNot('template', apiCheck.oneOfType([apiCheck.string,
                    apiCheck.func])).optional,
                controller: apiCheck.oneOfType([apiCheck.func,
                    apiCheck.string,
                    apiCheck.array]).optional,
                link: apiCheck.func.optional,
                defaultOptions: apiCheck.oneOfType([apiCheck.func,
                    apiCheck.shape(typeOptionsDefaultOptions)]).optional,
                extends: apiCheck.string.optional,
                wrapper: specifyWrapperType.optional,
                data: apiCheck.object.optional,
                validateOptions: apiCheck.func.optional,
                apiCheck: apiCheckProperty.optional,
                apiCheckInstance: apiCheckInstanceProperty.optional,
                apiCheckFunction: apiCheckFunctionProperty.optional,
                apiCheckOptions: apiCheck.object.optional,
                overwriteOk: apiCheck.bool.optional
            }).strict;
            _angularFix2['default'].extend(apiCheck, {
                formlyTypeOptions: formlyTypeOptions,
                formlyFieldOptions: formlyFieldOptions,
                formlyExpression: formlyExpression,
                formlyWrapperType: formlyWrapperType,
                fieldGroup: fieldGroup,
                formOptionsApi: formOptionsApi
            });
            exports['default'] = apiCheck;
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            module.exports = __WEBPACK_EXTERNAL_MODULE_6__
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports['default'] = 'https://github.com/formly-js/angular-formly/blob/6.16.0/other/ERRORS_AND_WARNINGS.md#';
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyUsability(formlyApiCheck, formlyErrorAndWarningsUrlPrefix) {
                function getFieldError(errorInfoSlug, message, field) {
                    if (arguments.length < 3) {
                        field = message;
                        message = errorInfoSlug;
                        errorInfoSlug = null
                    }
                    return new Error(getErrorMessage(errorInfoSlug, message) + (' Field definition: ' + _angularFix2['default'].toJson(field)))
                }
                function getFormlyError(errorInfoSlug, message) {
                    if (!message) {
                        message = errorInfoSlug;
                        errorInfoSlug = null
                    }
                    return new Error(getErrorMessage(errorInfoSlug, message))
                }
                function getErrorMessage(errorInfoSlug, message) {
                    var url = '';
                    if (null !== errorInfoSlug) url = '' + formlyErrorAndWarningsUrlPrefix + errorInfoSlug;
                    return 'Formly Error: ' + message + '. ' + url
                }
                function checkWrapper(wrapper) {
                }
                function checkWrapperTemplate(template, additionalInfo) {
                    var formlyTransclude = '<formly-transclude></formly-transclude>';
                    if (template.indexOf(formlyTransclude) === - 1) throw getFormlyError('Template wrapper templates must use "' + formlyTransclude + '" somewhere in them. This one does not have "<formly-transclude></formly-transclude>" in it: ' + template + '\nAdditional information: ' + JSON.stringify(additionalInfo))
                }
                var _this = this;
                _angularFix2['default'].extend(this, {
                    getFormlyError: getFormlyError,
                    getFieldError: getFieldError,
                    checkWrapper: checkWrapper,
                    checkWrapperTemplate: checkWrapperTemplate,
                    getErrorMessage: getErrorMessage,
                    $get: function $get() {
                        return _this
                    }
                })
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = formlyUsability;
            formlyUsability.$inject = [
                'formlyApiCheck',
                'formlyErrorAndWarningsUrlPrefix'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyConfig(formlyUsabilityProvider, formlyApiCheck) {
                function setType(options) {
                    if (_angularFix2['default'].isArray(options)) _angularFix2['default'].forEach(options, setType);
                    else if (_angularFix2['default'].isObject(options)) {
                        if (options['extends']) extendTypeOptions(options);
                        typeMap[options.name] = options
                    } else throw getError('You must provide an object or array for setType. You provided: ' + JSON.stringify(arguments))
                }
                function extendTypeOptions(options) {
                    var extendsType = getType(options['extends'], true, options);
                    extendTypeControllerFunction(options, extendsType);
                    extendTypeLinkFunction(options, extendsType);
                    extendTypeValidateOptionsFunction(options, extendsType);
                    extendTypeDefaultOptions(options, extendsType);
                    _otherUtils2['default'].reverseDeepMerge(options, extendsType);
                    extendTemplate(options, extendsType)
                }
                function extendTemplate(options, extendsType) {
                    if (options.template && extendsType.templateUrl) delete options.templateUrl;
                    else if (options.templateUrl && extendsType.template) delete options.template
                }
                function extendTypeControllerFunction(options, extendsType) {
                    var extendsCtrl = extendsType.controller;
                    if (_angularFix2['default'].isDefined(extendsCtrl)) {
                        var optionsCtrl = options.controller;
                        if (_angularFix2['default'].isDefined(optionsCtrl)) {
                            options.controller = function ($scope, $controller) {
                                $controller(extendsCtrl, {
                                    $scope: $scope
                                });
                                $controller(optionsCtrl, {
                                    $scope: $scope
                                })
                            };
                            options.controller.$inject = [
                                '$scope',
                                '$controller'
                            ]
                        } else options.controller = extendsCtrl
                    }
                }
                function extendTypeLinkFunction(options, extendsType) {
                    var extendsFn = extendsType.link;
                    if (_angularFix2['default'].isDefined(extendsFn)) {
                        var optionsFn = options.link;
                        if (_angularFix2['default'].isDefined(optionsFn)) options.link = function () {
                            extendsFn.apply(void 0, arguments);
                            optionsFn.apply(void 0, arguments)
                        };
                        else options.link = extendsFn
                    }
                }
                function extendTypeValidateOptionsFunction(options, extendsType) {
                    var extendsFn = extendsType.validateOptions;
                    if (_angularFix2['default'].isDefined(extendsFn)) {
                        var optionsFn = options.validateOptions,
                            originalDefaultOptions = options.defaultOptions;
                        if (_angularFix2['default'].isDefined(optionsFn)) options.validateOptions = function (opts) {
                            optionsFn(opts);
                            var mergedOptions = _angularFix2['default'].copy(opts),
                                defaultOptions = originalDefaultOptions;
                            if (defaultOptions) {
                                if (_angularFix2['default'].isFunction(defaultOptions)) defaultOptions = defaultOptions(mergedOptions);
                                _otherUtils2['default'].reverseDeepMerge(mergedOptions, defaultOptions)
                            }
                            extendsFn(mergedOptions)
                        };
                        else options.validateOptions = extendsFn
                    }
                }
                function extendTypeDefaultOptions(options, extendsType) {
                    var extendsDO = extendsType.defaultOptions;
                    if (_angularFix2['default'].isDefined(extendsDO)) {
                        var optionsDO = options.defaultOptions,
                            optionsDOIsFn = _angularFix2['default'].isFunction(optionsDO),
                            extendsDOIsFn = _angularFix2['default'].isFunction(extendsDO);
                        if (extendsDOIsFn) options.defaultOptions = function defaultOptions(opts) {
                            var extendsDefaultOptions = extendsDO(opts),
                                mergedDefaultOptions = {
                                };
                            _otherUtils2['default'].reverseDeepMerge(mergedDefaultOptions, opts, extendsDefaultOptions);
                            var extenderOptionsDefaultOptions = optionsDO;
                            if (optionsDOIsFn) extenderOptionsDefaultOptions = extenderOptionsDefaultOptions(mergedDefaultOptions);
                            _otherUtils2['default'].reverseDeepMerge(extendsDefaultOptions, extenderOptionsDefaultOptions);
                            return extendsDefaultOptions
                        };
                        else if (optionsDOIsFn) options.defaultOptions = function defaultOptions(opts) {
                            var newDefaultOptions = {
                            };
                            _otherUtils2['default'].reverseDeepMerge(newDefaultOptions, opts, extendsDO);
                            return optionsDO(newDefaultOptions)
                        }
                    }
                }
                function getType(name, throwError, errorContext) {
                    if (name) {
                        var type = typeMap[name];
                        if (!type && true === throwError) throw getError('There is no type by the name of "' + name + '": ' + JSON.stringify(errorContext));
                        else return type
                    }
                }
                function setWrapper(_x, _x2) {
                    var _again = true;
                    _function: while (_again) {
                        var options = _x,
                            name = _x2;
                        _again = false;
                        if (_angularFix2['default'].isArray(options)) return options.map(function (wrapperOptions) {
                            return setWrapper(wrapperOptions)
                        });
                        else if (_angularFix2['default'].isObject(options)) {
                            options.types = getOptionsTypes(options);
                            options.name = getOptionsName(options, name);
                            templateWrappersMap[options.name] = options;
                            return options
                        } else if (_angularFix2['default'].isString(options)) {
                            _x = {
                                template: options,
                                name: name
                            };
                            _again = true;
                            continue _function
                        }
                    }
                }
                function getOptionsTypes(options) {
                    if (_angularFix2['default'].isString(options.types)) return [options.types];
                    if (!_angularFix2['default'].isDefined(options.types)) return [];
                    else return options.types
                }
                function getOptionsName(options, name) {
                    return options.name || name || options.types.join(' ') || defaultWrapperName
                }
                function getWrapper(name) {
                    return templateWrappersMap[name || defaultWrapperName]
                }
                function getWrapperByType(type) {
                    var wrappers = [
                    ];
                    for (var name in templateWrappersMap) if (templateWrappersMap.hasOwnProperty(name)) if (templateWrappersMap[name].types && templateWrappersMap[name].types.indexOf(type) !== - 1) wrappers.push(templateWrappersMap[name]);
                    return wrappers
                }
                function removeWrapperByName(name) {
                    var wrapper = templateWrappersMap[name];
                    delete templateWrappersMap[name];
                    return wrapper
                }
                function removeWrappersForType(type) {
                    var wrappers = getWrapperByType(type);
                    if (wrappers) if (!_angularFix2['default'].isArray(wrappers)) return removeWrapperByName(wrappers.name);
                    else {
                        wrappers.forEach(function (wrapper) {
                            return removeWrapperByName(wrapper.name)
                        });
                        return wrappers
                    }
                }
                var _this = this,
                    typeMap = {
                    },
                    templateWrappersMap = {
                    },
                    defaultWrapperName = 'default',
                    getError = formlyUsabilityProvider.getFormlyError;
                _angularFix2['default'].extend(this, {
                    setType: setType,
                    getType: getType,
                    setWrapper: setWrapper,
                    getWrapper: getWrapper,
                    getWrapperByType: getWrapperByType,
                    removeWrapperByName: removeWrapperByName,
                    removeWrappersForType: removeWrappersForType,
                    disableWarnings: false,
                    extras: {
                        disableNgModelAttrsManipulator: false,
                        ngModelAttrsManipulatorPreferUnbound: false,
                        removeChromeAutoComplete: false,
                        defaultHideDirective: 'ng-if',
                        getFieldId: null
                    },
                    templateManipulators: {
                        preWrapper: [
                        ],
                        postWrapper: [
                        ]
                    },
                    $get: function $get() {
                        return _this
                    }
                })
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix),
                _otherUtils = __webpack_require__(10),
                _otherUtils2 = _interopRequireDefault(_otherUtils);
            exports['default'] = formlyConfig;
            formlyConfig.$inject = [
                'formlyUsabilityProvider',
                'formlyApiCheck'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyEval(scope, expression, $modelValue, $viewValue, extraLocals) {
                if (_angularFix2['default'].isFunction(expression)) return expression($viewValue, $modelValue, scope, extraLocals);
                else return scope.$eval(expression, _angularFix2['default'].extend({
                    $viewValue: $viewValue,
                    $modelValue: $modelValue
                }, extraLocals))
            }
            function getFieldId(formId, options, index) {
                if (options.id) return options.id;
                var type = options.type;
                if (!type && options.template) type = 'template';
                else if (!type && options.templateUrl) type = 'templateUrl';
                return [formId,
                    type,
                    options.key,
                    index].join('_')
            }
            function reverseDeepMerge(dest) {
                _angularFix2['default'].forEach(arguments, function (src, index) {
                    if (index) _angularFix2['default'].forEach(src, function (val, prop) {
                        if (!_angularFix2['default'].isDefined(dest[prop])) dest[prop] = _angularFix2['default'].copy(val);
                        else if (objAndSameType(dest[prop], val)) reverseDeepMerge(dest[prop], val)
                    })
                })
            }
            function objAndSameType(obj1, obj2) {
                return _angularFix2['default'].isObject(obj1) && _angularFix2['default'].isObject(obj2) && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)
            }
            function findByNodeName(el, nodeName) {
                if (!el.prop) el = _angularFix2['default'].element(el);
                if (el.prop('nodeName') === nodeName.toUpperCase()) return el;
                for (var c = el.children(), i = 0; c && i < c.length; i++) {
                    var node = findByNodeName(c[i], nodeName);
                    if (node) return node
                }
            }
            function arrayify(obj) {
                if (obj && !_angularFix2['default'].isArray(obj)) obj = [
                    obj
                ];
                else if (!obj) obj = [
                ];
                return obj
            }
            function extendFunction() {
                for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) fns[_key] = arguments[_key];
                return function extendedFunction() {
                    var args = arguments;
                    fns.forEach(function (fn) {
                        return fn.apply(null, args)
                    })
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = {
                formlyEval: formlyEval,
                getFieldId: getFieldId,
                reverseDeepMerge: reverseDeepMerge,
                findByNodeName: findByNodeName,
                arrayify: arrayify,
                extendFunction: extendFunction
            };
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function formlyValidationMessages() {
                function addTemplateOptionValueMessage(name, prop, prefix, suffix, alternate) {
                    validationMessages.messages[name] = templateOptionValue(prop, prefix, suffix, alternate)
                }
                function addStringMessage(name, string) {
                    validationMessages.messages[name] = function () {
                        return string
                    }
                }
                function templateOptionValue(prop, prefix, suffix, alternate) {
                    return function getValidationMessage(viewValue, modelValue, scope) {
                        if (scope.options.templateOptions[prop]) return '' + prefix + ' ' + scope.options.templateOptions[prop] + ' ' + suffix;
                        else return alternate
                    }
                }
                var validationMessages = {
                    addTemplateOptionValueMessage: addTemplateOptionValueMessage,
                    addStringMessage: addStringMessage,
                    messages: {
                    }
                };
                return validationMessages
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports['default'] = formlyValidationMessages;
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyUtil() {
                return _otherUtils2['default']
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _otherUtils = __webpack_require__(10),
                _otherUtils2 = _interopRequireDefault(_otherUtils);
            exports['default'] = formlyUtil;
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyCustomValidation(formlyUtil, $q) {
                function isPromiseLike(obj) {
                    return obj && _angularFix2['default'].isFunction(obj.then)
                }
                function checkValidators(validators) {
                    var allowedProperties = [
                            'expression',
                            'message'
                        ],
                        validatorsWithExtraProps = {
                        };
                    _angularFix2['default'].forEach(validators, function (validator, name) {
                        if (!_angularFix2['default'].isString(validator)) {
                            var extraProps = [
                            ];
                            _angularFix2['default'].forEach(validator, function (v, key) {
                                if (allowedProperties.indexOf(key) === - 1) extraProps.push(key)
                            });
                            if (extraProps.length) validatorsWithExtraProps[name] = extraProps
                        }
                    });
                    if (Object.keys(validatorsWithExtraProps).length) throw new Error(['Validators are only allowed to be functions or objects that have ' + allowedProperties.join(', ') + '.',
                        'You provided some extra properties: ' + JSON.stringify(validatorsWithExtraProps)].join(' '))
                }
                return {
                    restrict: 'A',
                    require: 'ngModel',
                    link: function formlyCustomValidationLink(scope, el, attrs, ctrl) {
                        var opts = scope.options;
                        if (opts.validators) checkValidators(opts.validators);
                        opts.validation.messages = opts.validation.messages || {
                        };
                        _angularFix2['default'].forEach(opts.validation.messages, function (message, key) {
                            opts.validation.messages[key] = function () {
                                return formlyUtil.formlyEval(scope, message, ctrl.$modelValue, ctrl.$viewValue)
                            }
                        });
                        var useNewValidatorsApi = ctrl.hasOwnProperty('$validators') && !attrs.hasOwnProperty('useParsers');
                        _angularFix2['default'].forEach(opts.validators, function addValidatorToPipeline(validator, name) {
                            function setupWithValidators() {
                                var validatorCollection = isPossiblyAsync ? '$asyncValidators' : '$validators';
                                ctrl[validatorCollection][name] = function evalValidity(modelValue, viewValue) {
                                    var value = formlyUtil.formlyEval(scope, validator, modelValue, viewValue);
                                    if (isPossiblyAsync) return isPromiseLike(value) ? value : value ? $q.when(value)  : $q.reject(value);
                                    else return value
                                }
                            }
                            function setupWithParsers() {
                                var inFlightValidator = void 0;
                                ctrl.$parsers.unshift(function evalValidityOfParser(viewValue) {
                                    var isValid = formlyUtil.formlyEval(scope, validator, ctrl.$modelValue, viewValue);
                                    if (isPromiseLike(isValid)) {
                                        ctrl.$pending = ctrl.$pending || {
                                        };
                                        ctrl.$pending[name] = true;
                                        inFlightValidator = isValid;
                                        isValid.then(function () {
                                            if (inFlightValidator === isValid) ctrl.$setValidity(name, true)
                                        }) ['catch'](function () {
                                            if (inFlightValidator === isValid) ctrl.$setValidity(name, false)
                                        }) ['finally'](function () {
                                            if (1 === Object.keys(ctrl.$pending).length) delete ctrl.$pending;
                                            else delete ctrl.$pending[name]
                                        })
                                    } else ctrl.$setValidity(name, isValid);
                                    return viewValue
                                })
                            }
                            var message = validator.message;
                            if (message) opts.validation.messages[name] = function () {
                                return formlyUtil.formlyEval(scope, message, ctrl.$modelValue, ctrl.$viewValue)
                            };
                            validator = _angularFix2['default'].isObject(validator) ? validator.expression : validator;
                            var isPossiblyAsync = !_angularFix2['default'].isString(validator);
                            if (useNewValidatorsApi) setupWithValidators();
                            else setupWithParsers()
                        })
                    }
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = formlyCustomValidation;
            formlyCustomValidation.$inject = [
                'formlyUtil',
                '$q'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function formlyField($http, $q, $compile, $templateCache, $interpolate, formlyConfig, formlyValidationMessages, formlyApiCheck, formlyUtil, formlyUsability, formlyWarn) {
                function FormlyFieldController($scope, $timeout, $parse, $controller) {
                    function runExpressions() {
                        return $timeout(function runExpressionsOnNextTick() {
                            var field = $scope.options,
                                currentValue = valueGetterSetter();
                            _angularFix2['default'].forEach(field.expressionProperties, function runExpression(expression, prop) {
                                var setter = $parse(prop).assign,
                                    promise = $q.when(formlyUtil.formlyEval($scope, expression, currentValue, currentValue));
                                promise.then(function setFieldValue(value) {
                                    setter(field, value)
                                })
                            })
                        })
                    }
                    function valueGetterSetter(newVal) {
                        if ($scope.model && $scope.options.key) {
                            if (_angularFix2['default'].isDefined(newVal)) $scope.model[$scope.options.key] = newVal;
                            return $scope.model[$scope.options.key]
                        }
                    }
                    function simplifyLife(options) {
                        formlyUtil.reverseDeepMerge(options, {
                            data: {
                            },
                            templateOptions: {
                            },
                            validation: {
                            }
                        });
                        $scope.to = $scope.options.templateOptions;
                        $scope.formOptions = $scope.formOptions || {
                        }
                    }
                    function setFieldIdAndName() {
                        if (_angularFix2['default'].isFunction(formlyConfig.extras.getFieldId)) $scope.id = formlyConfig.extras.getFieldId($scope.options, $scope.model, $scope);
                        else {
                            var formName = $scope.form && $scope.form.$name || $scope.formId;
                            $scope.id = formlyUtil.getFieldId(formName, $scope.options, $scope.index)
                        }
                        $scope.options.id = $scope.id;
                        $scope.name = $scope.options.name || $scope.options.id;
                        $scope.options.name = $scope.name
                    }
                    function setDefaultValue() {
                        if (_angularFix2['default'].isDefined($scope.options.defaultValue) && !_angularFix2['default'].isDefined($scope.model[$scope.options.key])) {
                            var setter = $parse($scope.options.key).assign;
                            setter($scope.model, $scope.options.defaultValue)
                        }
                    }
                    function setInitialValue() {
                        $scope.options.initialValue = $scope.model && $scope.model[$scope.options.key]
                    }
                    function mergeFieldOptionsWithTypeDefaults(options, type) {
                        if (type) mergeOptions(options, type.defaultOptions);
                        var properOrder = arrayify(options.optionsTypes).reverse();
                        _angularFix2['default'].forEach(properOrder, function (typeName) {
                            mergeOptions(options, formlyConfig.getType(typeName, true, options).defaultOptions)
                        })
                    }
                    function mergeOptions(options, extraOptions) {
                        if (extraOptions) {
                            if (_angularFix2['default'].isFunction(extraOptions)) extraOptions = extraOptions(options);
                            formlyUtil.reverseDeepMerge(options, extraOptions)
                        }
                    }
                    function extendOptionsWithDefaults(options, index) {
                        var key = options.key || index || 0;
                        _angularFix2['default'].extend(options, {
                            key: key,
                            value: valueGetterSetter,
                            runExpressions: runExpressions,
                            resetModel: resetModel,
                            updateInitialValue: updateInitialValue
                        })
                    }
                    function addModelWatcher(scope, options) {
                        if (options.model) scope.$watch('options.model', runExpressions, true)
                    }
                    function resetModel() {
                        $scope.model[$scope.options.key] = $scope.options.initialValue;
                        if ($scope.options.formControl) if (_angularFix2['default'].isArray($scope.options.formControl)) _angularFix2['default'].forEach($scope.options.formControl, function (formControl) {
                            resetFormControl(formControl, true)
                        });
                        else resetFormControl($scope.options.formControl)
                    }
                    function resetFormControl(formControl, isMultiNgModel) {
                        if (!isMultiNgModel) formControl.$setViewValue($scope.model[$scope.options.key]);
                        formControl.$render();
                        formControl.$setUntouched();
                        formControl.$setPristine();
                        if (!$scope.$root.$$phase) $scope.$digest()
                    }
                    function updateInitialValue() {
                        $scope.options.initialValue = $scope.model[$scope.options.key]
                    }
                    function addValidationMessages(options) {
                        options.validation.messages = options.validation.messages || {
                        };
                        _angularFix2['default'].forEach(formlyValidationMessages.messages, function createFunctionForMessage(expression, name) {
                            if (!options.validation.messages[name]) options.validation.messages[name] = function evaluateMessage(viewValue, modelValue, scope) {
                                return formlyUtil.formlyEval(scope, expression, modelValue, viewValue)
                            }
                        })
                    }
                    function invokeControllers(scope) {
                        var options = void 0 === arguments[1] ? {
                            }
                            : arguments[1],
                            type = void 0 === arguments[2] ? {
                                }
                                : arguments[2];
                        _angularFix2['default'].forEach([type.controller,
                            options.controller], function (controller) {
                            if (controller) $controller(controller, {
                                $scope: scope
                            })
                        })
                    }
                    function setupFieldGroup() {
                        $scope.options.options = $scope.options.options || {
                        };
                        $scope.options.options.formState = $scope.formState
                    }
                    if (!$scope.options.fieldGroup) {
                        var fieldType = getFieldType($scope.options);
                        simplifyLife($scope.options);
                        mergeFieldOptionsWithTypeDefaults($scope.options, fieldType);
                        extendOptionsWithDefaults($scope.options, $scope.index);
                        setFieldIdAndName();
                        setDefaultValue();
                        setInitialValue();
                        runExpressions();
                        addModelWatcher($scope, $scope.options);
                        addValidationMessages($scope.options);
                        invokeControllers($scope, $scope.options, fieldType)
                    } else setupFieldGroup()
                }
                function fieldLink(scope, el) {
                    function setFieldGroupTemplate() {
                        el.addClass('formly-field-group');
                        var extraAttributes = '';
                        if (scope.options.elementAttributes) extraAttributes = Object.keys(scope.options.elementAttributes).map(function (key) {
                            return '' + key + '="' + scope.options.elementAttributes[key] + '"'
                        }).join(' ');
                        var modelValue = 'model';
                        scope.options.form = scope.form;
                        if (scope.options.key) modelValue = 'model[\'' + scope.options.key + '\']';
                        setElementTemplate('\n          <formly-form model="' + modelValue + '"\n                       fields="options.fieldGroup"\n                       options="options.options"\n                       form="options.form"\n                       class="' + scope.options.className + '"\n                       ' + extraAttributes + '\n                       is-field-group>\n          </formly-form>\n        ')
                    }
                    function addAttributes() {
                        if (scope.options.elementAttributes) el.attr(scope.options.elementAttributes)
                    }
                    function addClasses() {
                        if (scope.options.className) el.addClass(scope.options.className);
                        if (scope.options.type) el.addClass('formly-field-' + scope.options.type)
                    }
                    function setElementTemplate(templateString) {
                        el.html(asHtml(templateString));
                        $compile(el.contents()) (scope);
                        return templateString
                    }
                    function watchFormControl(templateString) {
                        function watchFieldNameOrExistence(name) {
                            var nameExpressionRegex = /\{\{(.*?)}}/,
                                nameExpression = nameExpressionRegex.exec(name);
                            if (nameExpression) name = $interpolate(name) (scope);
                            watchFieldExistence(name)
                        }
                        function watchFieldExistence(name) {
                            scope.$watch('form["' + name + '"]', function formControlChange(formControl) {
                                if (formControl) {
                                    if (fieldCount > 1) {
                                        if (!scope.options.formControl) scope.options.formControl = [
                                        ];
                                        scope.options.formControl.push(formControl)
                                    } else scope.options.formControl = formControl;
                                    scope.fc = scope.options.formControl;
                                    stopWatchingShowError();
                                    addShowMessagesWatcher()
                                }
                            })
                        }
                        function addShowMessagesWatcher() {
                            stopWatchingShowError = scope.$watch(function watchShowValidationChange() {
                                var customExpression = formlyConfig.extras.errorExistsAndShouldBeVisibleExpression,
                                    options = scope.options,
                                    fc = scope.fc;
                                if (_angularFix2['default'].isArray(fc)) return !fc.every(function (i) {
                                    return !i.$invalid
                                });
                                else if (!fc.$invalid) return false;
                                if ('boolean' === typeof options.validation.show) return options.validation.show;
                                else if (customExpression) if (_angularFix2['default'].isArray(fc)) return fc.every(function (i) {
                                    return formlyUtil.formlyEval(scope, customExpression, i.$modelValue, i.$viewValue)
                                });
                                else return formlyUtil.formlyEval(scope, customExpression, fc.$modelValue, fc.$viewValue);
                                else {
                                    var noTouchedButDirty = void 0;
                                    if (_angularFix2['default'].isArray(fc)) noTouchedButDirty = fc.some(function (i) {
                                        return _angularFix2['default'].isUndefined(fc.$touched) && fc.$dirty
                                    });
                                    else noTouchedButDirty = _angularFix2['default'].isUndefined(fc.$touched) && fc.$dirty;
                                    return scope.fc.$touched || noTouchedButDirty
                                }
                            }, function onShowValidationChange(show) {
                                scope.options.validation.errorExistsAndShouldBeVisible = show;
                                scope.showError = show
                            })
                        }
                        var stopWatchingShowError = _angularFix2['default'].noop;
                        if (!scope.options.noFormControl) {
                            var templateEl = _angularFix2['default'].element('<div>' + templateString + '</div>'),
                                ngModelNodes = templateEl[0].querySelectorAll('[ng-model],[data-ng-model]');
                            if (ngModelNodes) _angularFix2['default'].forEach(ngModelNodes, function (ngModelNode) {
                                fieldCount++;
                                watchFieldNameOrExistence(ngModelNode.getAttribute('name'))
                            })
                        }
                    }
                    function callLinkFunctions() {
                        if (type && type.link) type.link.apply(thusly, args);
                        if (scope.options.link) scope.options.link.apply(thusly, args)
                    }
                    function runManipulators(manipulators) {
                        return function runManipulatorsOnTemplate(templateToManipulate) {
                            var chain = $q.when(templateToManipulate);
                            _angularFix2['default'].forEach(manipulators, function (manipulator) {
                                chain = chain.then(function (template) {
                                    return $q.when(manipulator(template, scope.options, scope)).then(function (newTemplate) {
                                        return _angularFix2['default'].isString(newTemplate) ? newTemplate : asHtml(newTemplate)
                                    })
                                })
                            });
                            return chain
                        }
                    }
                    if (!scope.options.fieldGroup) {
                        addAttributes();
                        addClasses();
                        var type = getFieldType(scope.options),
                            args = arguments,
                            thusly = this,
                            fieldCount = 0,
                            fieldManipulators = getManipulators(scope.options, scope.formOptions);
                        getFieldTemplate(scope.options).then(runManipulators(fieldManipulators.preWrapper)).then(transcludeInWrappers(scope.options, scope.formOptions)).then(runManipulators(fieldManipulators.postWrapper)).then(setElementTemplate).then(watchFormControl).then(callLinkFunctions) ['catch'](function (error) {
                            formlyWarn('there-was-a-problem-setting-the-template-for-this-field', 'There was a problem setting the template for this field ', scope.options, error)
                        })
                    } else setFieldGroupTemplate()
                }
                function asHtml(el) {
                    var wrapper = _angularFix2['default'].element('<a></a>');
                    return wrapper.append(el).html()
                }
                function getFieldType(options) {
                    return options.type && formlyConfig.getType(options.type)
                }
                function getManipulators(options, formOptions) {
                    function addManipulators(manipulators) {
                        var _ref = manipulators || {
                            },
                            _ref$preWrapper = _ref.preWrapper,
                            pre = void 0 === _ref$preWrapper ? [
                            ] : _ref$preWrapper,
                            _ref$postWrapper = _ref.postWrapper,
                            post = void 0 === _ref$postWrapper ? [
                            ] : _ref$postWrapper;
                        preWrapper = preWrapper.concat(pre);
                        postWrapper = postWrapper.concat(post)
                    }
                    var preWrapper = [
                        ],
                        postWrapper = [
                        ];
                    addManipulators(options.templateManipulators);
                    addManipulators(formOptions.templateManipulators);
                    addManipulators(formlyConfig.templateManipulators);
                    return {
                        preWrapper: preWrapper,
                        postWrapper: postWrapper
                    }
                }
                function getFieldTemplate(options) {
                    function fromOptionsOrType(key, fieldType) {
                        if (_angularFix2['default'].isDefined(options[key])) return options[key];
                        else if (fieldType && _angularFix2['default'].isDefined(fieldType[key])) return fieldType[key]
                    }
                    var type = formlyConfig.getType(options.type, true, options),
                        template = fromOptionsOrType('template', type),
                        templateUrl = fromOptionsOrType('templateUrl', type);
                    if (_angularFix2['default'].isUndefined(template) && !templateUrl) throw formlyUsability.getFieldError('type-type-has-no-template', 'Type \'' + options.type + '\' has not template. On element:', options);
                    return getTemplate(templateUrl || template, _angularFix2['default'].isUndefined(template), options)
                }
                function getTemplate(template, isUrl, options) {
                    var templatePromise = void 0;
                    if (_angularFix2['default'].isFunction(template)) templatePromise = $q.when(template(options));
                    else templatePromise = $q.when(template);
                    if (!isUrl) return templatePromise;
                    else {
                        var _ret = function () {
                            var httpOptions = {
                                cache: $templateCache
                            };
                            return {
                                v: templatePromise.then(function (url) {
                                    return $http.get(url, httpOptions)
                                }).then(function (response) {
                                    return response.data
                                }) ['catch'](function handleErrorGettingATemplate(error) {
                                    formlyWarn('problem-loading-template-for-templateurl', 'Problem loading template for ' + template, error)
                                })
                            }
                        }();
                        if ('object' === typeof _ret) return _ret.v
                    }
                }
                function transcludeInWrappers(options, formOptions) {
                    var wrapper = getWrapperOption(options, formOptions);
                    return function transcludeTemplate(template) {
                        if (!wrapper.length) return $q.when(template);
                        wrapper.forEach(function (aWrapper) {
                            aWrapper.validateOptions && aWrapper.validateOptions(options)
                        });
                        var promises = wrapper.map(function (w) {
                            return getTemplate(w.template || w.templateUrl, !w.template)
                        });
                        return $q.all(promises).then(function (wrappersTemplates) {
                            wrappersTemplates.forEach(function (wrapperTemplate, index) {
                                formlyUsability.checkWrapperTemplate(wrapperTemplate, wrapper[index])
                            });
                            wrappersTemplates.reverse();
                            var totalWrapper = wrappersTemplates.shift();
                            wrappersTemplates.forEach(function (wrapperTemplate) {
                                totalWrapper = doTransclusion(totalWrapper, wrapperTemplate)
                            });
                            return doTransclusion(totalWrapper, template)
                        })
                    }
                }
                function doTransclusion(wrapper, template) {
                    var superWrapper = _angularFix2['default'].element('<a></a>');
                    superWrapper.append(wrapper);
                    var transcludeEl = superWrapper.find('formly-transclude');
                    if (!transcludeEl.length) transcludeEl = formlyUtil.findByNodeName(superWrapper, 'formly-transclude');
                    transcludeEl.replaceWith(template);
                    return superWrapper.html()
                }
                function getWrapperOption(options, formOptions) {
                    var wrapper = options.wrapper;
                    if (null === wrapper) return [];
                    if (!wrapper) wrapper = arrayify(formlyConfig.getWrapperByType(options.type));
                    else wrapper = arrayify(wrapper).map(formlyConfig.getWrapper);
                    var type = formlyConfig.getType(options.type, true, options);
                    if (type && type.wrapper) {
                        var typeWrappers = arrayify(type.wrapper).map(formlyConfig.getWrapper);
                        wrapper = wrapper.concat(typeWrappers)
                    }
                    if (formOptions.wrapper) {
                        var formWrappers = arrayify(formOptions.wrapper).map(formlyConfig.getWrapper);
                        wrapper = wrapper.concat(formWrappers)
                    }
                    var defaultWrapper = formlyConfig.getWrapper();
                    if (defaultWrapper) wrapper.push(defaultWrapper);
                    return wrapper
                }
                var arrayify = formlyUtil.arrayify;
                FormlyFieldController.$inject = [
                    '$scope',
                    '$timeout',
                    '$parse',
                    '$controller'
                ];
                return {
                    restrict: 'AE',
                    transclude: true,
                    scope: {
                        options: '=',
                        model: '=',
                        formId: '@',
                        index: '=?',
                        fields: '=?',
                        formState: '=?',
                        formOptions: '=?',
                        form: '=?'
                    },
                    controller: FormlyFieldController,
                    link: fieldLink
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = formlyField;
            formlyField.$inject = [
                '$http',
                '$q',
                '$compile',
                '$templateCache',
                '$interpolate',
                'formlyConfig',
                'formlyValidationMessages',
                'formlyApiCheck',
                'formlyUtil',
                'formlyUsability',
                'formlyWarn'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function formlyFocus($timeout, $document) {
                return {
                    restrict: 'A',
                    link: function formlyFocusLink(scope, element, attrs) {
                        var previousEl = null,
                            el = element[0],
                            doc = $document[0];
                        attrs.$observe('formlyFocus', function respondToFocusExpressionChange(value) {
                            if ('true' === value) $timeout(function setElementFocus() {
                                previousEl = doc.activeElement;
                                el.focus()
                            }, ~~attrs.focusWait);
                            else if ('false' === value) if (doc.activeElement === el) {
                                el.blur();
                                if (attrs.hasOwnProperty('refocus') && previousEl) previousEl.focus()
                            }
                        })
                    }
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            exports['default'] = formlyFocus;
            formlyFocus.$inject = [
                '$timeout',
                '$document'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function _toConsumableArray(arr) {
                if (Array.isArray(arr)) {
                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
                    return arr2
                } else return Array.from(arr)
            }
            function formlyForm(formlyUsability, formlyWarn, $parse, formlyConfig, $interpolate) {
                function formlyFormGetTemplate(el, attrs) {
                    function getRootEl() {
                        return attrs.rootEl || 'ng-form'
                    }
                    function getRootClass() {
                        return attrs.rootClass || ''
                    }
                    function getFieldRootClass() {
                        return attrs.fieldRootClass || ''
                    }
                    function getFieldRootEl() {
                        return attrs.fieldRootEl || 'div'
                    }
                    function getFieldRootWrapperEl() {
                        return attrs.fieldRootWrapperEl
                    }
                    function getFieldRootWrapperClass() {
                        return attrs.fieldRootWrapperClass || ''
                    }
                    function getHideDirective() {
                        return attrs.hideDirective || formlyConfig.extras.defaultHideDirective || 'ng-if'
                    }
                    function getTrackBy() {
                        if (!attrs.trackBy) return '';
                        else return 'track by ' + attrs.trackBy
                    }
                    function getFormName() {
                        var formName = formId,
                            bindName = attrs.bindName;
                        if (bindName) {
                            if (_angularFix2['default'].version.minor < 3) throw formlyUsability.getFormlyError('bind-name attribute on formly-form not allowed in < angular 1.3');
                            formName = '' + $interpolate.startSymbol() + '::\'formly_\' + ' + bindName + $interpolate.endSymbol()
                        }
                        return formName
                    }
                    function copyAttributes(attributes) {
                        var excluded = [
                                'model',
                                'form',
                                'fields',
                                'options',
                                'name',
                                'role',
                                'class',
                                'data-model',
                                'data-form',
                                'data-fields',
                                'data-options',
                                'data-name'
                            ],
                            arrayAttrs = [
                            ];
                        _angularFix2['default'].forEach(attributes, function (_ref) {
                            var nodeName = _ref.nodeName,
                                nodeValue = _ref.nodeValue;
                            if ('undefined' !== nodeName && excluded.indexOf(nodeName) === - 1) arrayAttrs.push('' + toKebabCase(nodeName) + '="' + nodeValue + '"')
                        });
                        return arrayAttrs.join(' ')
                    }
                    var rootEl = getRootEl(),
                        rootClass = getRootClass(),
                        fieldRootEl = getFieldRootEl(),
                        fieldRootClass = getFieldRootClass(),
                        fieldRootWrapperEl = getFieldRootWrapperEl(),
                        fieldRootWrapperClass = getFieldRootWrapperClass(),
                        formId = 'formly_' + currentFormId++,
                        parentFormAttributes = '';
                    if (attrs.hasOwnProperty('isFieldGroup') && el.parent().parent().hasClass('formly')) parentFormAttributes = copyAttributes(el.parent().parent() [0].attributes);
                    return '\n        <' + rootEl + ' class="formly ' + rootClass + '"\n                 name="' + getFormName() + '"\n                 role="form" ' + parentFormAttributes + '>' + (fieldRootWrapperEl ? '<' + fieldRootWrapperEl + ' class="' + fieldRootWrapperClass + '">' : '') + ('\n          <' + fieldRootEl + ' formly-field\n               ng-repeat="field in fields ' + getTrackBy() + '"\n               ' + getHideDirective() + '="!field.hide"\n               class="formly-field ' + fieldRootClass + '"\n               options="field"\n               model="field.model || model"\n               fields="fields"\n               form="theFormlyForm"\n               form-id="' + getFormName() + '"\n               form-state="options.formState"\n               form-options="options"\n               index="$index">\n          </' + fieldRootEl + '>\n          <' + fieldRootEl + ' ng-transclude></' + fieldRootEl + '>') + (fieldRootWrapperEl ? '</' + fieldRootWrapperEl + '>' : '') + ('\n        </' + rootEl + '>\n      ')
                }
                function FormlyFormController($scope, formlyApiCheck, formlyUtil) {
                    function onModelOrFormStateChange() {
                        _angularFix2['default'].forEach($scope.fields, function runFieldExpressionProperties(field, index) {
                            var model = field.model || $scope.model;
                            field.runExpressions && field.runExpressions(model);
                            if (field.hideExpression) {
                                var val = model[field.key];
                                field.hide = evalCloseToFormlyExpression(field.hideExpression, val, field, index)
                            }
                        })
                    }
                    function setupFields() {
                        $scope.fields = $scope.fields || [
                        ];
                        var fieldTransform = $scope.options.fieldTransform || formlyConfig.extras.fieldTransform;
                        if (fieldTransform) {
                            $scope.fields = fieldTransform($scope.fields, $scope.model, $scope.options, $scope.form);
                            if (!$scope.fields) throw formlyUsability.getFormlyError('fieldTransform must return an array of fields')
                        }
                        _angularFix2['default'].forEach($scope.fields, initModel);
                        _angularFix2['default'].forEach($scope.fields, attachKey);
                        _angularFix2['default'].forEach($scope.fields, setupWatchers)
                    }
                    function setupOptions() {
                        $scope.options = $scope.options || {
                        };
                        $scope.options.formState = $scope.options.formState || {
                        };
                        _angularFix2['default'].extend($scope.options, {
                            updateInitialValue: updateInitialValue,
                            resetModel: resetModel
                        })
                    }
                    function updateInitialValue() {
                        _angularFix2['default'].forEach($scope.fields, function (field) {
                            if (isFieldGroup(field)) field.options.updateInitialValue();
                            else if (field.resetModel) field.updateInitialValue()
                        })
                    }
                    function resetModel() {
                        _angularFix2['default'].forEach($scope.fields, function (field) {
                            if (isFieldGroup(field)) field.options.resetModel();
                            else field.resetModel()
                        })
                    }
                    function initModel(field) {
                        if (_angularFix2['default'].isString(field.model)) {
                            var expression = field.model,
                                index = $scope.fields.indexOf(field);
                            field.model = evalCloseToFormlyExpression(expression, void 0, field, index);
                            if (!field.model) throw formlyUsability.getFieldError('field-model-must-be-initialized', 'Field model must be initialized. When specifying a model as a string for a field, the result of the expression must have been initialized ahead of time.', field)
                        }
                    }
                    function attachKey(field, index) {
                        if (!isFieldGroup(field)) field.key = field.key || index || 0;
                    }
                    function setupWatchers(field, index) {
                        if (!isFieldGroup(field) && _angularFix2['default'].isDefined(field.watcher)) {
                            var watchers = field.watcher;
                            if (!_angularFix2['default'].isArray(watchers)) watchers = [
                                watchers
                            ];
                            _angularFix2['default'].forEach(watchers, function setupWatcher(watcher) {
                                if (!_angularFix2['default'].isDefined(watcher.listener)) throw formlyUsability.getFieldError('all-field-watchers-must-have-a-listener', 'All field watchers must have a listener', field);
                                var watchExpression = getWatchExpression(watcher, field, index),
                                    watchListener = getWatchListener(watcher, field, index),
                                    type = watcher.type || '$watch';
                                watcher.stopWatching = $scope[type](watchExpression, watchListener, watcher.watchDeep)
                            })
                        }
                    }
                    function getWatchExpression(watcher, field, index) {
                        var watchExpression = watcher.expression || 'model[\'' + field.key + '\']';
                        if (_angularFix2['default'].isFunction(watchExpression)) {
                            var originalExpression = watchExpression;
                            watchExpression = function formlyWatchExpression() {
                                var args = modifyArgs.apply(void 0, [
                                    watcher,
                                    index
                                ].concat(_slice.call(arguments)));
                                return originalExpression.apply(void 0, _toConsumableArray(args))
                            };
                            watchExpression.displayName = 'Formly Watch Expression for field for ' + field.key
                        }
                        return watchExpression
                    }
                    function getWatchListener(watcher, field, index) {
                        var watchListener = watcher.listener;
                        if (_angularFix2['default'].isFunction(watchListener)) {
                            var originalListener = watchListener;
                            watchListener = function formlyWatchListener() {
                                var args = modifyArgs.apply(void 0, [
                                    watcher,
                                    index
                                ].concat(_slice.call(arguments)));
                                return originalListener.apply(void 0, _toConsumableArray(args))
                            };
                            watchListener.displayName = 'Formly Watch Listener for field for ' + field.key
                        }
                        return watchListener
                    }
                    function modifyArgs(watcher, index) {
                        for (var _len = arguments.length, originalArgs = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) originalArgs[_key - 2] = arguments[_key];
                        return [$scope.fields[index]].concat(originalArgs, [
                            watcher.stopWatching
                        ])
                    }
                    function evalCloseToFormlyExpression(expression, val, field, index) {
                        var extraLocals = getFormlyFieldLikeLocals(field, index);
                        return formlyUtil.formlyEval($scope, expression, val, val, extraLocals)
                    }
                    function getFormlyFieldLikeLocals(field, index) {
                        return {
                            options: field,
                            index: index,
                            formState: $scope.options.formState,
                            formId: $scope.formId
                        }
                    }
                    setupOptions();
                    $scope.model = $scope.model || {
                    };
                    setupFields();
                    $scope.$watch('model', onModelOrFormStateChange, true);
                    if ($scope.options.formState) $scope.$watch('options.formState', onModelOrFormStateChange, true)
                }
                function formlyFormLink(scope, el, attrs) {
                    function setFormController() {
                        var formId = attrs.name;
                        scope.formId = formId;
                        scope.theFormlyForm = scope[formId];
                        if (attrs.form) {
                            var getter = $parse(attrs.form),
                                setter = getter.assign,
                                parentForm = getter(scope.$parent);
                            if (parentForm) {
                                scope.theFormlyForm = parentForm;
                                if (scope[formId]) scope.theFormlyForm.$removeControl(scope[formId]);
                                el.removeData('$formController')
                            } else setter(scope.$parent, scope[formId])
                        }
                        if (!scope.theFormlyForm && !formlyConfig.disableWarnings) formlyWarn('formly-form-has-no-formcontroller', 'Your formly-form does not have a `form` property. Many functions of the form (like validation) may not work', el, scope)
                    }
                    function fixChromeAutocomplete() {
                        var global = true === formlyConfig.extras.removeChromeAutoComplete,
                            offInstance = scope.options && false === scope.options.removeChromeAutoComplete,
                            onInstance = scope.options && true === scope.options.removeChromeAutoComplete;
                        if (global && !offInstance || onInstance) {
                            var input = document.createElement('input');
                            input.setAttribute('autocomplete', 'address-level4');
                            input.setAttribute('hidden', 'true');
                            el[0].appendChild(input)
                        }
                    }
                    setFormController();
                    fixChromeAutocomplete()
                }
                function toKebabCase(string) {
                    if (string) return string.replace(/([A-Z])/g, function ($1) {
                        return '-' + $1.toLowerCase()
                    });
                    else return ''
                }
                function isFieldGroup(field) {
                    return field && !!field.fieldGroup
                }
                var currentFormId = 1;
                FormlyFormController.$inject = [
                    '$scope',
                    'formlyApiCheck',
                    'formlyUtil'
                ];
                return {
                    restrict: 'E',
                    template: formlyFormGetTemplate,
                    replace: true,
                    transclude: true,
                    scope: {
                        fields: '=',
                        model: '=',
                        form: '=?',
                        options: '=?'
                    },
                    controller: FormlyFormController,
                    link: formlyFormLink
                }
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _slice = Array.prototype.slice,
                _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = formlyForm;
            formlyForm.$inject = [
                'formlyUsability',
                'formlyWarn',
                '$parse',
                'formlyConfig',
                '$interpolate'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function addFormlyNgModelAttrsManipulator(formlyConfig, $interpolate) {
                function ngModelAttrsManipulator(template, options, scope) {
                    function addValidation() {
                        if (_angularFix2['default'].isDefined(options.validators) || _angularFix2['default'].isDefined(options.validation.messages)) addIfNotPresent(modelNodes, 'formly-custom-validation', '')
                    }
                    function addModelOptions() {
                        if (_angularFix2['default'].isDefined(options.modelOptions)) {
                            addIfNotPresent(modelNodes, 'ng-model-options', 'options.modelOptions');
                            if (options.modelOptions.getterSetter) _angularFix2['default'].forEach(modelNodes, function (modelNode) {
                                modelNode.setAttribute('ng-model', 'options.value')
                            })
                        }
                    }
                    function addTemplateOptionsAttrs() {
                        if (options.templateOptions || options.expressionProperties) {
                            var to = options.templateOptions || {
                                },
                                ep = options.expressionProperties || {
                                },
                                ngModelAttributes = getBuiltInAttributes();
                            _angularFix2['default'].extend(ngModelAttributes, options.ngModelAttrs);
                            _angularFix2['default'].forEach(ngModelAttributes, function (val, name) {
                                var attrVal = void 0,
                                    attrName = void 0,
                                    ref = 'options.templateOptions[\'' + name + '\']',
                                    toVal = to[name],
                                    epVal = getEpValue(ep, name),
                                    inTo = _angularFix2['default'].isDefined(toVal),
                                    inEp = _angularFix2['default'].isDefined(epVal);
                                if (val.value) {
                                    attrName = val.value;
                                    attrVal = name
                                } else if (val.expression && inTo) {
                                    attrName = val.expression;
                                    if (_angularFix2['default'].isString(to[name])) attrVal = '$eval(' + ref + ')';
                                    else if (_angularFix2['default'].isFunction(to[name])) attrVal = '' + ref + '(model[options.key], options, this, $event)';
                                    else throw new Error('options.templateOptions.' + name + ' must be a string or function: ' + JSON.stringify(options))
                                } else if (val.bound && inEp) {
                                    attrName = val.bound;
                                    attrVal = ref
                                } else if ((val.attribute || val.boolean) && inEp) {
                                    attrName = val.attribute || val.boolean;
                                    attrVal = '' + $interpolate.startSymbol() + ref + $interpolate.endSymbol()
                                } else if (val.attribute && inTo) {
                                    attrName = val.attribute;
                                    attrVal = toVal
                                } else if (val.boolean) if (inTo && !inEp && toVal) {
                                    attrName = val.boolean;
                                    attrVal = true
                                } else ;
                                else if (val.bound && inTo) {
                                    attrName = val.bound;
                                    attrVal = ref
                                }
                                if (_angularFix2['default'].isDefined(attrName) && _angularFix2['default'].isDefined(attrVal)) addIfNotPresent(modelNodes, attrName, attrVal)
                            })
                        }
                    }
                    var node = document.createElement('div'),
                        data = options.data;
                    if (true === data.skipNgModelAttrsManipulator) return template;
                    node.innerHTML = template;
                    var modelNodes = getNgModelNodes(node, data.skipNgModelAttrsManipulator);
                    if (!modelNodes || !modelNodes.length) return template;
                    addIfNotPresent(modelNodes, 'id', scope.id);
                    addIfNotPresent(modelNodes, 'name', scope.name || scope.id);
                    addValidation();
                    addModelOptions();
                    addTemplateOptionsAttrs();
                    return node.innerHTML
                }
                function getNgModelNodes(node, skip) {
                    var selectorNot = _angularFix2['default'].isString(skip) ? ':not(' + skip + ')' : '',
                        skipNot = ':not([formly-skip-ng-model-attrs-manipulator])',
                        query = '[ng-model]' + selectorNot + skipNot + ', [data-ng-model]' + selectorNot + skipNot;
                    return node.querySelectorAll(query)
                }
                function getBuiltInAttributes() {
                    var ngModelAttributes = {
                            focus: {
                                attribute: 'formly-focus'
                            }
                        },
                        boundOnly = [
                        ],
                        bothBooleanAndBound = [
                            'required',
                            'disabled'
                        ],
                        bothAttributeAndBound = [
                            'pattern',
                            'minlength'
                        ],
                        expressionOnly = [
                            'change',
                            'keydown',
                            'keyup',
                            'keypress',
                            'click',
                            'focus',
                            'blur',
                            'touchstart',
                            'touchend',
                            'touchmove'
                        ],
                        attributeOnly = [
                            'placeholder',
                            'min',
                            'max',
                            'tabindex',
                            'type'
                        ];
                    if (formlyConfig.extras.ngModelAttrsManipulatorPreferUnbound) bothAttributeAndBound.push('maxlength');
                    else boundOnly.push('maxlength');
                    _angularFix2['default'].forEach(boundOnly, function (item) {
                        ngModelAttributes[item] = {
                            bound: 'ng-' + item
                        }
                    });
                    _angularFix2['default'].forEach(bothBooleanAndBound, function (item) {
                        ngModelAttributes[item] = {
                            boolean: item,
                            bound: 'ng-' + item
                        }
                    });
                    _angularFix2['default'].forEach(bothAttributeAndBound, function (item) {
                        ngModelAttributes[item] = {
                            attribute: item,
                            bound: 'ng-' + item
                        }
                    });
                    _angularFix2['default'].forEach(expressionOnly, function (item) {
                        var propName = 'on' + item.substr(0, 1).toUpperCase() + item.substr(1);
                        ngModelAttributes[propName] = {
                            expression: 'ng-' + item
                        }
                    });
                    _angularFix2['default'].forEach(attributeOnly, function (item) {
                        ngModelAttributes[item] = {
                            attribute: item
                        }
                    });
                    return ngModelAttributes
                }
                function getEpValue(ep, name) {
                    return ep['templateOptions.' + name] || ep['templateOptions[\'' + name + '\']'] || ep['templateOptions["' + name + '"]']
                }
                function addIfNotPresent(nodes, attr, val) {
                    _angularFix2['default'].forEach(nodes, function (node) {
                        if (!node.getAttribute(attr)) node.setAttribute(attr, val)
                    })
                }
                if (!formlyConfig.extras.disableNgModelAttrsManipulator) formlyConfig.templateManipulators.preWrapper.push(ngModelAttrsManipulator)
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = addFormlyNgModelAttrsManipulator;
            addFormlyNgModelAttrsManipulator.$inject = [
                'formlyConfig',
                '$interpolate'
            ];
            module.exports = exports['default']
        },
        function (module, exports, __webpack_require__) {
            'use strict';
            function _interopRequireDefault(obj) {
                return obj && obj.__esModule ? obj : {
                    default:
                    obj
                }
            }
            function addCustomTags($document) {
                if ($document && $document.get) !function () {
                    var document = $document.get(0),
                        div = document.createElement('div');
                    div.innerHTML = '<!--[if lt IE 9]><i></i><![endif]-->';
                    var isIeLessThan9 = 1 === div.getElementsByTagName('i').length;
                    if (isIeLessThan9) {
                        var customElements = [
                            'formly-field',
                            'formly-form',
                            'formly-custom-validation',
                            'formly-focus',
                            'formly-transpose'
                        ];
                        _angularFix2['default'].forEach(customElements, function (el) {
                            document.createElement(el)
                        })
                    }
                }()
            }
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            var _angularFix = __webpack_require__(3),
                _angularFix2 = _interopRequireDefault(_angularFix);
            exports['default'] = addCustomTags;
            addCustomTags.$inject = [
                '$document'
            ];
            module.exports = exports['default']
        }
    ])
});
if (window.jQuery) define('jquery', [
], function () {
    return jQuery
});
!function (f) {
    'use strict';
    'function' === typeof define && define.amd ? define('jquery-scrollto', [
        'jquery'
    ], f)  : 'undefined' !== typeof module && module.exports ? module.exports = f(require('jquery'))  : f(jQuery)
}(function ($) {
    'use strict';
    function n(a) {
        return !a.nodeName || - 1 !== $.inArray(a.nodeName.toLowerCase(), [
            'iframe',
            '#document',
            'html',
            'body'
        ])
    }
    function h(a) {
        return $.isFunction(a) || $.isPlainObject(a) ? a : {
            top: a,
            left: a
        }
    }
    var p = $.scrollTo = function (a, d, b) {
        return $(window).scrollTo(a, d, b)
    };
    p.defaults = {
        axis: 'xy',
        duration: 0,
        limit: !0
    };
    $.fn.scrollTo = function (a, d, b) {
        'object' === typeof d && (b = d, d = 0);
        'function' === typeof b && (b = {
            onAfter: b
        });
        'max' === a && (a = 9000000000);
        b = $.extend({
        }, p.defaults, b);
        d = d || b.duration;
        var u = b.queue && 1 < b.axis.length;
        u && (d /= 2);
        b.offset = h(b.offset);
        b.over = h(b.over);
        return this.each(function () {
            function k(a) {
                var k = $.extend({
                }, b, {
                    queue: !0,
                    duration: d,
                    complete: a && function () {
                        a.call(q, e, b)
                    }
                });
                r.animate(f, k)
            }
            if (null !== a) {
                var l = n(this),
                    q = l ? this.contentWindow || window : this,
                    r = $(q),
                    e = a,
                    f = {
                    },
                    t;
                switch (typeof e) {
                    case 'number':
                    case 'string':
                        if (/^([+-]=?)?\d+(\.\d+)?(px|%)?$/.test(e)) {
                            e = h(e);
                            break
                        }
                        e = l ? $(e)  : $(e, q);
                    case 'object':
                        if (0 === e.length) return;
                        if (e.is || e.style) t = (e = $(e)).offset()
                }
                var v = $.isFunction(b.offset) && b.offset(q, e) || b.offset;
                $.each(b.axis.split(''), function (a, c) {
                    var d = 'x' === c ? 'Left' : 'Top',
                        m = d.toLowerCase(),
                        g = 'scroll' + d,
                        h = r[g](),
                        n = p.max(q, c);
                    t ? (f[g] = t[m] + (l ? 0 : h - r.offset() [m]), b.margin && (f[g] -= parseInt(e.css('margin' + d), 10) || 0, f[g] -= parseInt(e.css('border' + d + 'Width'), 10) || 0), f[g] += v[m] || 0, b.over[m] && (f[g] += e['x' === c ? 'width' : 'height']() * b.over[m]))  : (d = e[m], f[g] = d.slice && '%' === d.slice( - 1) ? parseFloat(d) / 100 * n : d);
                    b.limit && /^\d+$/.test(f[g]) && (f[g] = 0 >= f[g] ? 0 : Math.min(f[g], n));
                    !a && 1 < b.axis.length && (h === f[g] ? f = {
                        }
                        : u && (k(b.onAfterFirst), f = {
                    }))
                });
                k(b.onAfter)
            }
        })
    };
    p.max = function (a, d) {
        var b = 'x' === d ? 'Width' : 'Height',
            h = 'scroll' + b;
        if (!n(a)) return a[h] - $(a) [b.toLowerCase()]();
        var b = 'client' + b,
            k = a.ownerDocument || a.document,
            l = k.documentElement,
            k = k.body;
        return Math.max(l[h], k[h]) - Math.min(l[b], k[b])
    };
    $.Tween.propHooks.scrollLeft = $.Tween.propHooks.scrollTop = {
        get: function (a) {
            return $(a.elem) [a.prop]()
        },
        set: function (a) {
            var d = this.get(a);
            if (a.options.interrupt && a._last && a._last !== d) return $(a.elem).stop();
            var b = Math.round(a.now);
            d !== b && ($(a.elem) [a.prop](b), a._last = this.get(a))
        }
    };
    return p
}); /*!
* TableSorter 2.17.8 min - Client-side table sorting with ease!
* Copyright (c) 2007 Christian Bach
*/
!function (h) {
    h.extend({
        tablesorter: new function () {
            function d() {
                var b = arguments[0],
                    a = 1 < arguments.length ? Array.prototype.slice.call(arguments)  : b;
                if ('undefined' !== typeof console && 'undefined' !== typeof console.log);
                else alert(a)
            }
            function q(b, a) {
                d(b + ' (' + ((new Date).getTime() - a.getTime()) + 'ms)')
            }
            function p(b) {
                for (var a in b) return !1;
                return !0
            }
            function r(b, a, c) {
                if (!a) return '';
                var f,
                    e = b.config,
                    l = e.textExtraction || '',
                    d = '',
                    d = 'basic' === l ? h(a).attr(e.textAttribute) || a.textContent || a.innerText || h(a).text() || '' : 'function' === typeof l ? l(a, b, c)  : 'function' === typeof (f = g.getColumnData(b, l, c)) ? f(a, b, c)  : a.textContent || a.innerText || h(a).text() || '';
                return h.trim(d)
            }
            function v(b) {
                var a,
                    c,
                    f = b.config,
                    e = f.$tbodies = f.$table.children('tbody:not(.' + f.cssInfoBlock + ')'),
                    l,
                    x,
                    k,
                    h,
                    m,
                    B,
                    u,
                    s,
                    t,
                    p = 0,
                    v = '',
                    w = e.length;
                if (0 === w) return f.debug ? d('Warning: *Empty table!* Not building a parser cache')  : '';
                f.debug && (t = new Date, d('Detecting parsers for each column'));
                a = [
                ];
                for (c = [
                ]; p < w; ) {
                    l = e[p].rows;
                    if (l[p]) for (x = f.columns, k = 0; k < x; k++) {
                        h = f.$headers.filter('[data-column="' + k + '"]:last');
                        m = g.getColumnData(b, f.headers, k);
                        s = g.getParserById(g.getData(h, m, 'extractor'));
                        u = g.getParserById(g.getData(h, m, 'sorter'));
                        B = 'false' === g.getData(h, m, 'parser');
                        f.empties[k] = (g.getData(h, m, 'empty') || f.emptyTo || (f.emptyToBottom ? 'bottom' : 'top')).toLowerCase();
                        f.strings[k] = (g.getData(h, m, 'string') || f.stringTo || 'max').toLowerCase();
                        B && (u = g.getParserById('no-parser'));
                        s || (s = !1);
                        if (!u) a: {
                            h = b;
                            m = l;
                            B = - 1;
                            u = k;
                            for (var A = void 0, K = g.parsers.length, G = !1, z = '', A = !0; '' === z && A; ) B++,
                                m[B] ? (G = m[B].cells[u], z = r(h, G, u), h.config.debug && d('Checking if value was empty on row ' + B + ', column: ' + u + ': "' + z + '"'))  : A = !1;
                            for (; 0 <= --K; ) if ((A = g.parsers[K]) && 'text' !== A.id && A.is && A.is(z, h, G)) {
                                u = A;
                                break a
                            }
                            u = g.getParserById('text')
                        }
                        f.debug && (v += 'column:' + k + '; extractor:' + s.id + '; parser:' + u.id + '; string:' + f.strings[k] + '; empty: ' + f.empties[k] + '\n');
                        c[k] = u;
                        a[k] = s
                    }
                    p += c.length ? w : 1
                }
                f.debug && (d(v ? v : 'No parsers detected'), q('Completed detecting parsers', t));
                f.parsers = c;
                f.extractors = a
            }
            function w(b) {
                var a,
                    c,
                    f,
                    e,
                    l,
                    x,
                    k,
                    n,
                    m,
                    p,
                    u,
                    s = b.config,
                    t = s.$table.children('tbody'),
                    v = s.extractors,
                    w = s.parsers;
                s.cache = {
                };
                s.totalRows = 0;
                if (!w) return s.debug ? d('Warning: *Empty table!* Not building a cache')  : '';
                s.debug && (n = new Date);
                s.showProcessing && g.isProcessing(b, !0);
                for (l = 0; l < t.length; l++) if (u = [
                ], a = s.cache[l] = {
                    normalized: [
                    ]
                }, !t.eq(l).hasClass(s.cssInfoBlock)) {
                    m = t[l] && t[l].rows.length || 0;
                    for (f = 0; f < m; ++f) if (p = {
                        child: [
                        ]
                    }, x = h(t[l].rows[f]), k = [
                    ], x.hasClass(s.cssChildRow) && 0 !== f) c = a.normalized.length - 1,
                        a.normalized[c][s.columns].$row = a.normalized[c][s.columns].$row.add(x),
                    x.prev().hasClass(s.cssChildRow) || x.prev().addClass(g.css.cssHasChild),
                        p.child[c] = h.trim(x[0].textContent || x[0].innerText || x.text() || '');
                    else {
                        p.$row = x;
                        p.order = f;
                        for (e = 0; e < s.columns; ++e) 'undefined' === typeof w[e] ? s.debug && d('No parser found for cell:', x[0].cells[e], 'does it have a header?')  : (c = r(b, x[0].cells[e], e), c = 'undefined' === typeof v[e].id ? c : v[e].format(c, b, x[0].cells[e], e), c = 'no-parser' === w[e].id ? '' : w[e].format(c, b, x[0].cells[e], e), k.push(s.ignoreCase && 'string' === typeof c ? c.toLowerCase()  : c), 'numeric' === (w[e].type || '').toLowerCase() && (u[e] = Math.max(Math.abs(c) || 0, u[e] || 0)));
                        k[s.columns] = p;
                        a.normalized.push(k)
                    }
                    a.colMax = u;
                    s.totalRows += a.normalized.length
                }
                s.showProcessing && g.isProcessing(b);
                s.debug && q('Building cache for ' + m + ' rows', n)
            }
            function z(b, a) {
                var c = b.config,
                    f = c.widgetOptions,
                    e = b.tBodies,
                    l = [
                    ],
                    d = c.cache,
                    k,
                    n,
                    m,
                    r,
                    u,
                    s;
                if (p(d)) return c.appender ? c.appender(b, l)  : b.isUpdating ? c.$table.trigger('updateComplete', b)  : '';
                c.debug && (s = new Date);
                for (u = 0; u < e.length; u++) if (k = h(e[u]), k.length && !k.hasClass(c.cssInfoBlock)) {
                    m = g.processTbody(b, k, !0);
                    k = d[u].normalized;
                    n = k.length;
                    for (r = 0; r < n; r++) l.push(k[r][c.columns].$row),
                    c.appender && (!c.pager || c.pager.removeRows && f.pager_removeRows || c.pager.ajax) || m.append(k[r][c.columns].$row);
                    g.processTbody(b, m, !1)
                }
                c.appender && c.appender(b, l);
                c.debug && q('Rebuilt table', s);
                a || c.appender || g.applyWidget(b);
                b.isUpdating && c.$table.trigger('updateComplete', b)
            }
            function D(b) {
                return /^d/i.test(b) || 1 === b
            }
            function E(b) {
                var a,
                    c,
                    f,
                    e,
                    l,
                    x,
                    k,
                    n = b.config;
                n.headerList = [
                ];
                n.headerContent = [
                ];
                n.debug && (k = new Date);
                n.columns = g.computeColumnIndex(n.$table.children('thead, tfoot').children('tr'));
                e = n.cssIcon ? '<i class="' + (n.cssIcon === g.css.icon ? g.css.icon : n.cssIcon + ' ' + g.css.icon) + '"></i>' : '';
                n.$headers = h(b).find(n.selectorHeaders).each(function (k) {
                    c = h(this);
                    a = g.getColumnData(b, n.headers, k, !0);
                    n.headerContent[k] = h(this).html();
                    '' !== n.headerTemplate && (l = n.headerTemplate.replace(/\{content\}/g, h(this).html()).replace(/\{icon\}/g, e), n.onRenderTemplate && (f = n.onRenderTemplate.apply(c, [
                        k,
                        l
                    ])) && 'string' === typeof f && (l = f), h(this).html('<div class="' + g.css.headerIn + '">' + l + '</div>'));
                    n.onRenderHeader && n.onRenderHeader.apply(c, [
                        k
                    ]);
                    this.column = parseInt(h(this).attr('data-column'), 10);
                    this.order = D(g.getData(c, a, 'sortInitialOrder') || n.sortInitialOrder) ? [
                        1,
                        0,
                        2
                    ] : [
                        0,
                        1,
                        2
                    ];
                    this.count = - 1;
                    this.lockedOrder = !1;
                    x = g.getData(c, a, 'lockedOrder') || !1;
                    'undefined' !== typeof x && !1 !== x && (this.order = this.lockedOrder = D(x) ? [
                        1,
                        1,
                        1
                    ] : [
                        0,
                        0,
                        0
                    ]);
                    c.addClass(g.css.header + ' ' + n.cssHeader);
                    n.headerList[k] = this;
                    c.parent().addClass(g.css.headerRow + ' ' + n.cssHeaderRow).attr('role', 'row');
                    n.tabIndex && c.attr('tabindex', 0)
                }).attr({
                    scope: 'col',
                    role: 'columnheader'
                });
                H(b);
                n.debug && (q('Built headers:', k), d(n.$headers))
            }
            function C(b, a, c) {
                var f = b.config;
                f.$table.find(f.selectorRemove).remove();
                v(b);
                w(b);
                I(f.$table, a, c)
            }
            function H(b) {
                var a,
                    c,
                    f,
                    e = b.config;
                e.$headers.each(function (l, d) {
                    c = h(d);
                    f = g.getColumnData(b, e.headers, l, !0);
                    a = 'false' === g.getData(d, f, 'sorter') || 'false' === g.getData(d, f, 'parser');
                    d.sortDisabled = a;
                    c[a ? 'addClass' : 'removeClass']('sorter-false').attr('aria-disabled', '' + a);
                    b.id && (a ? c.removeAttr('aria-controls')  : c.attr('aria-controls', b.id))
                })
            }
            function F(b) {
                var a,
                    c,
                    f = b.config,
                    e = f.sortList,
                    l = e.length,
                    d = g.css.sortNone + ' ' + f.cssNone,
                    k = [
                        g.css.sortAsc + ' ' + f.cssAsc,
                        g.css.sortDesc + ' ' + f.cssDesc
                    ],
                    n = [
                        'ascending',
                        'descending'
                    ],
                    m = h(b).find('tfoot tr').children().add(f.$extraHeaders).removeClass(k.join(' '));
                f.$headers.removeClass(k.join(' ')).addClass(d).attr('aria-sort', 'none');
                for (a = 0; a < l; a++) if (2 !== e[a][1] && (b = f.$headers.not('.sorter-false').filter('[data-column="' + e[a][0] + '"]' + (1 === l ? ':last' : '')), b.length)) {
                    for (c = 0; c < b.length; c++) b[c].sortDisabled || b.eq(c).removeClass(d).addClass(k[e[a][1]]).attr('aria-sort', n[e[a][1]]);
                    m.length && m.filter('[data-column="' + e[a][0] + '"]').removeClass(d).addClass(k[e[a][1]])
                }
                f.$headers.not('.sorter-false').each(function () {
                    var b = h(this),
                        a = this.order[(this.count + 1) % (f.sortReset ? 3 : 2)],
                        a = b.text() + ': ' + g.language[b.hasClass(g.css.sortAsc) ? 'sortAsc' : b.hasClass(g.css.sortDesc) ? 'sortDesc' : 'sortNone'] + g.language[0 === a ? 'nextAsc' : 1 === a ? 'nextDesc' : 'nextNone'];
                    b.attr('aria-label', a)
                })
            }
            function O(b) {
                var a,
                    c,
                    f = b.config;
                f.widthFixed && 0 === f.$table.find('colgroup').length && (a = h('<colgroup>'), c = h(b).width(), h(b.tBodies).not('.' + f.cssInfoBlock).find('tr:first').children(':visible').each(function () {
                    a.append(h('<col>').css('width', parseInt(h(this).width() / c * 1000, 10) / 10 + '%'))
                }), f.$table.prepend(a))
            }
            function P(b, a) {
                var c,
                    f,
                    e,
                    l,
                    g,
                    k = b.config,
                    d = a || k.sortList;
                k.sortList = [
                ];
                h.each(d, function (b, a) {
                    l = parseInt(a[0], 10);
                    if (e = k.$headers.filter('[data-column="' + l + '"]:last') [0]) {
                        f = (f = ('' + a[1]).match(/^(1|d|s|o|n)/)) ? f[0] : '';
                        switch (f) {
                            case '1':
                            case 'd':
                                f = 1;
                                break;
                            case 's':
                                f = g || 0;
                                break;
                            case 'o':
                                c = e.order[(g || 0) % (k.sortReset ? 3 : 2)];
                                f = 0 === c ? 1 : 1 === c ? 0 : 2;
                                break;
                            case 'n':
                                e.count += 1;
                                f = e.order[e.count % (k.sortReset ? 3 : 2)];
                                break;
                            default:
                                f = 0
                        }
                        g = 0 === b ? f : g;
                        c = [
                            l,
                            parseInt(f, 10) || 0
                        ];
                        k.sortList.push(c);
                        f = h.inArray(c[1], e.order);
                        e.count = 0 <= f ? f : c[1] % (k.sortReset ? 3 : 2)
                    }
                })
            }
            function Q(b, a) {
                return b && b[a] ? b[a].type || '' : ''
            }
            function L(b, a, c) {
                if (b.isUpdating) return setTimeout(function () {
                    L(b, a, c)
                }, 50);
                var f,
                    e,
                    l,
                    d,
                    k = b.config,
                    n = !c[k.sortMultiSortKey],
                    m = k.$table;
                m.trigger('sortStart', b);
                a.count = c[k.sortResetKey] ? 2 : (a.count + 1) % (k.sortReset ? 3 : 2);
                k.sortRestart && (e = a, k.$headers.each(function () {
                    this === e || !n && h(this).is('.' + g.css.sortDesc + ',.' + g.css.sortAsc) || (this.count = - 1)
                }));
                e = a.column;
                if (n) {
                    k.sortList = [
                    ];
                    if (null !== k.sortForce) for (f = k.sortForce, l = 0; l < f.length; l++) f[l][0] !== e && k.sortList.push(f[l]);
                    f = a.order[a.count];
                    if (2 > f && (k.sortList.push([e,
                        f]), 1 < a.colSpan)) for (l = 1; l < a.colSpan; l++) k.sortList.push([e + l,
                        f])
                } else {
                    if (k.sortAppend && 1 < k.sortList.length) for (l = 0; l < k.sortAppend.length; l++) d = g.isValueInArray(k.sortAppend[l][0], k.sortList),
                    0 <= d && k.sortList.splice(d, 1);
                    if (0 <= g.isValueInArray(e, k.sortList)) for (l = 0; l < k.sortList.length; l++) d = k.sortList[l],
                        f = k.$headers.filter('[data-column="' + d[0] + '"]:last') [0],
                    d[0] === e && (d[1] = f.order[a.count], 2 === d[1] && (k.sortList.splice(l, 1), f.count = - 1));
                    else if (f = a.order[a.count], 2 > f && (k.sortList.push([e,
                        f]), 1 < a.colSpan)) for (l = 1; l < a.colSpan; l++) k.sortList.push([e + l,
                        f])
                }
                if (null !== k.sortAppend) for (f = k.sortAppend, l = 0; l < f.length; l++) f[l][0] !== e && k.sortList.push(f[l]);
                m.trigger('sortBegin', b);
                setTimeout(function () {
                    F(b);
                    J(b);
                    z(b);
                    m.trigger('sortEnd', b)
                }, 1)
            }
            function J(b) {
                var a,
                    c,
                    f,
                    e,
                    l,
                    d,
                    k,
                    h,
                    m,
                    r,
                    u,
                    s = 0,
                    t = b.config,
                    v = t.textSorter || '',
                    w = t.sortList,
                    y = w.length,
                    z = b.tBodies.length;
                if (!t.serverSideSorting && !p(t.cache)) {
                    t.debug && (l = new Date);
                    for (c = 0; c < z; c++) d = t.cache[c].colMax,
                        k = t.cache[c].normalized,
                        k.sort(function (c, l) {
                            for (a = 0; a < y; a++) {
                                e = w[a][0];
                                h = w[a][1];
                                s = 0 === h;
                                if (t.sortStable && c[e] === l[e] && 1 === y) break;
                                (f = /n/i.test(Q(t.parsers, e))) && t.strings[e] ? (f = 'boolean' === typeof t.string[t.strings[e]] ? (s ? 1 : - 1) * (t.string[t.strings[e]] ? - 1 : 1)  : t.strings[e] ? t.string[t.strings[e]] || 0 : 0, m = t.numberSorter ? t.numberSorter(c[e], l[e], s, d[e], b)  : g['sortNumeric' + (s ? 'Asc' : 'Desc')](c[e], l[e], f, d[e], e, b))  : (r = s ? c : l, u = s ? l : c, m = 'function' === typeof v ? v(r[e], u[e], s, e, b)  : 'object' === typeof v && v.hasOwnProperty(e) ? v[e](r[e], u[e], s, e, b)  : g['sortNatural' + (s ? 'Asc' : 'Desc')](c[e], l[e], e, b, t));
                                if (m) return m
                            }
                            return c[t.columns].order - l[t.columns].order
                        });
                    t.debug && q('Sorting on ' + w.toString() + ' and dir ' + h + ' time', l)
                }
            }
            function M(b, a) {
                var c = b[0];
                c.isUpdating && b.trigger('updateComplete', c);
                h.isFunction(a) && a(b[0])
            }
            function I(b, a, c) {
                var f = b[0].config.sortList;
                !1 !== a && !b[0].isProcessing && f.length ? b.trigger('sorton', [
                    f,
                    function () {
                        M(b, c)
                    },
                    !0
                ])  : (M(b, c), g.applyWidget(b[0], !1))
            }
            function N(b) {
                var a = b.config,
                    c = a.$table;
                c.unbind('sortReset update updateRows updateCell updateAll addRows updateComplete sorton appendCache updateCache applyWidgetId applyWidgets refreshWidgets destroy mouseup mouseleave '.split(' ').join(a.namespace + ' ')).bind('sortReset' + a.namespace, function (f, e) {
                    f.stopPropagation();
                    a.sortList = [
                    ];
                    F(b);
                    J(b);
                    z(b);
                    h.isFunction(e) && e(b)
                }).bind('updateAll' + a.namespace, function (f, e, c) {
                    f.stopPropagation();
                    b.isUpdating = !0;
                    g.refreshWidgets(b, !0, !0);
                    g.restoreHeaders(b);
                    E(b);
                    g.bindEvents(b, a.$headers, !0);
                    N(b);
                    C(b, e, c)
                }).bind('update' + a.namespace + ' updateRows' + a.namespace, function (a, e, c) {
                    a.stopPropagation();
                    b.isUpdating = !0;
                    H(b);
                    C(b, e, c)
                }).bind('updateCell' + a.namespace, function (f, e, l, g) {
                    f.stopPropagation();
                    b.isUpdating = !0;
                    c.find(a.selectorRemove).remove();
                    var d,
                        n,
                        m;
                    n = c.find('tbody');
                    m = h(e);
                    f = n.index(h.fn.closest ? m.closest('tbody')  : m.parents('tbody').filter(':first'));
                    d = h.fn.closest ? m.closest('tr')  : m.parents('tr').filter(':first');
                    e = m[0];
                    n.length && 0 <= f && (n = n.eq(f).find('tr').index(d), m = m.index(), a.cache[f].normalized[n][a.columns].$row = d, d = 'undefined' === typeof a.extractors[m].id ? r(b, e, m)  : a.extractors[m].format(r(b, e, m), b, e, m), e = 'no-parser' === a.parsers[m].id ? '' : a.parsers[m].format(d, b, e, m), a.cache[f].normalized[n][m] = a.ignoreCase && 'string' === typeof e ? e.toLowerCase()  : e, 'numeric' === (a.parsers[m].type || '').toLowerCase() && (a.cache[f].colMax[m] = Math.max(Math.abs(e) || 0, a.cache[f].colMax[m] || 0)), I(c, l, g))
                }).bind('addRows' + a.namespace, function (f, e, l, g) {
                    f.stopPropagation();
                    b.isUpdating = !0;
                    if (p(a.cache)) H(b),
                        C(b, l, g);
                    else {
                        e = h(e).attr('role', 'row');
                        var d,
                            n,
                            m,
                            q,
                            u,
                            s = e.filter('tr').length,
                            t = c.find('tbody').index(e.parents('tbody').filter(':first'));
                        a.parsers && a.parsers.length || v(b);
                        for (f = 0; f < s; f++) {
                            n = e[f].cells.length;
                            u = [
                            ];
                            q = {
                                child: [
                                ],
                                $row: e.eq(f),
                                order: a.cache[t].normalized.length
                            };
                            for (d = 0; d < n; d++) m = 'undefined' === typeof a.extractors[d].id ? r(b, e[f].cells[d], d)  : a.extractors[d].format(r(b, e[f].cells[d], d), b, e[f].cells[d], d),
                                m = 'no-parser' === a.parsers[d].id ? '' : a.parsers[d].format(m, b, e[f].cells[d], d),
                                u[d] = a.ignoreCase && 'string' === typeof m ? m.toLowerCase()  : m,
                            'numeric' === (a.parsers[d].type || '').toLowerCase() && (a.cache[t].colMax[d] = Math.max(Math.abs(u[d]) || 0, a.cache[t].colMax[d] || 0));
                            u.push(q);
                            a.cache[t].normalized.push(u)
                        }
                        I(c, l, g)
                    }
                }).bind('updateComplete' + a.namespace, function () {
                    b.isUpdating = !1
                }).bind('sorton' + a.namespace, function (a, e, d, x) {
                    var k = b.config;
                    a.stopPropagation();
                    c.trigger('sortStart', this);
                    P(b, e);
                    F(b);
                    k.delayInit && p(k.cache) && w(b);
                    c.trigger('sortBegin', this);
                    J(b);
                    z(b, x);
                    c.trigger('sortEnd', this);
                    g.applyWidget(b);
                    h.isFunction(d) && d(b)
                }).bind('appendCache' + a.namespace, function (a, e, c) {
                    a.stopPropagation();
                    z(b, c);
                    h.isFunction(e) && e(b)
                }).bind('updateCache' + a.namespace, function (c, e) {
                    a.parsers && a.parsers.length || v(b);
                    w(b);
                    h.isFunction(e) && e(b)
                }).bind('applyWidgetId' + a.namespace, function (c, e) {
                    c.stopPropagation();
                    g.getWidgetById(e).format(b, a, a.widgetOptions)
                }).bind('applyWidgets' + a.namespace, function (a, c) {
                    a.stopPropagation();
                    g.applyWidget(b, c)
                }).bind('refreshWidgets' + a.namespace, function (a, c, d) {
                    a.stopPropagation();
                    g.refreshWidgets(b, c, d)
                }).bind('destroy' + a.namespace, function (a, c, d) {
                    a.stopPropagation();
                    g.destroy(b, c, d)
                }).bind('resetToLoadState' + a.namespace, function () {
                    g.refreshWidgets(b, !0, !0);
                    a = h.extend(!0, g.defaults, a.originalSettings);
                    b.hasInitialized = !1;
                    g.setup(b, a)
                })
            }
            var g = this;
            g.version = '2.17.8';
            g.parsers = [
            ];
            g.widgets = [
            ];
            g.defaults = {
                theme: 'default',
                widthFixed: !1,
                showProcessing: !1,
                headerTemplate: '{content}',
                onRenderTemplate: null,
                onRenderHeader: null,
                cancelSelection: !0,
                tabIndex: !0,
                dateFormat: 'mmddyyyy',
                sortMultiSortKey: 'shiftKey',
                sortResetKey: 'ctrlKey',
                usNumberFormat: !0,
                delayInit: !1,
                serverSideSorting: !1,
                headers: {
                },
                ignoreCase: !0,
                sortForce: null,
                sortList: [
                ],
                sortAppend: null,
                sortStable: !1,
                sortInitialOrder: 'asc',
                sortLocaleCompare: !1,
                sortReset: !1,
                sortRestart: !1,
                emptyTo: 'bottom',
                stringTo: 'max',
                textExtraction: 'basic',
                textAttribute: 'data-text',
                textSorter: null,
                numberSorter: null,
                widgets: [
                ],
                widgetOptions: {
                    zebra: [
                        'even',
                        'odd'
                    ]
                },
                initWidgets: !0,
                initialized: null,
                tableClass: '',
                cssAsc: '',
                cssDesc: '',
                cssNone: '',
                cssHeader: '',
                cssHeaderRow: '',
                cssProcessing: '',
                cssChildRow: 'tablesorter-childRow',
                cssIcon: 'tablesorter-icon',
                cssInfoBlock: 'tablesorter-infoOnly',
                selectorHeaders: '> thead th, > thead td',
                selectorSort: 'th, td',
                selectorRemove: '.remove-me',
                debug: !1,
                headerList: [
                ],
                empties: {
                },
                strings: {
                },
                parsers: [
                ]
            };
            g.css = {
                table: 'tablesorter',
                cssHasChild: 'tablesorter-hasChildRow',
                childRow: 'tablesorter-childRow',
                header: 'tablesorter-header',
                headerRow: 'tablesorter-headerRow',
                headerIn: 'tablesorter-header-inner',
                icon: 'tablesorter-icon',
                info: 'tablesorter-infoOnly',
                processing: 'tablesorter-processing',
                sortAsc: 'tablesorter-headerAsc',
                sortDesc: 'tablesorter-headerDesc',
                sortNone: 'tablesorter-headerUnSorted'
            };
            g.language = {
                sortAsc: 'Ascending sort applied, ',
                sortDesc: 'Descending sort applied, ',
                sortNone: 'No sort applied, ',
                nextAsc: 'activate to apply an ascending sort',
                nextDesc: 'activate to apply a descending sort',
                nextNone: 'activate to remove the sort'
            };
            g.log = d;
            g.benchmark = q;
            g.construct = function (b) {
                return this.each(function () {
                    var a = h.extend(!0, {
                    }, g.defaults, b);
                    a.originalSettings = b;
                    !this.hasInitialized && g.buildTable && 'TABLE' !== this.tagName ? g.buildTable(this, a)  : g.setup(this, a)
                })
            };
            g.setup = function (b, a) {
                if (!b || !b.tHead || 0 === b.tBodies.length || !0 === b.hasInitialized) return a.debug ? d('ERROR: stopping initialization! No table, thead, tbody or tablesorter has already been initialized')  : '';
                var c = '',
                    f = h(b),
                    e = h.metadata;
                b.hasInitialized = !1;
                b.isProcessing = !0;
                b.config = a;
                h.data(b, 'tablesorter', a);
                a.debug && h.data(b, 'startoveralltimer', new Date);
                a.supportsDataObject = function (a) {
                    a[0] = parseInt(a[0], 10);
                    return 1 < a[0] || 1 === a[0] && 4 <= parseInt(a[1], 10)
                }(h.fn.jquery.split('.'));
                a.string = {
                    max: 1,
                    min: - 1,
                    emptymin: 1,
                    emptymax: - 1,
                    zero: 0,
                    none: 0,
                    null: 0,
                    top: !0,
                    bottom: !1
                };
                a.emptyTo = a.emptyTo.toLowerCase();
                a.stringTo = a.stringTo.toLowerCase();
                /tablesorter\-/.test(f.attr('class')) || (c = '' !== a.theme ? ' tablesorter-' + a.theme : '');
                a.table = b;
                a.$table = f.addClass(g.css.table + ' ' + a.tableClass + c).attr('role', 'grid');
                a.$headers = f.find(a.selectorHeaders);
                a.namespace = a.namespace ? '.' + a.namespace.replace(/\W/g, '')  : '.tablesorter' + Math.random().toString(16).slice(2);
                a.$table.children().children('tr').attr('role', 'row');
                a.$tbodies = f.children('tbody:not(.' + a.cssInfoBlock + ')').attr({
                    'aria-live': 'polite',
                    'aria-relevant': 'all'
                });
                a.$table.find('caption').length && a.$table.attr('aria-labelledby', 'theCaption');
                a.widgetInit = {
                };
                a.textExtraction = a.$table.attr('data-text-extraction') || a.textExtraction || 'basic';
                E(b);
                O(b);
                v(b);
                a.totalRows = 0;
                a.delayInit || w(b);
                g.bindEvents(b, a.$headers, !0);
                N(b);
                a.supportsDataObject && 'undefined' !== typeof f.data().sortlist ? a.sortList = f.data().sortlist : e && f.metadata() && f.metadata().sortlist && (a.sortList = f.metadata().sortlist);
                g.applyWidget(b, !0);
                0 < a.sortList.length ? f.trigger('sorton', [
                    a.sortList,
                    {
                    },
                    !a.initWidgets,
                    !0
                ])  : (F(b), a.initWidgets && g.applyWidget(b, !1));
                a.showProcessing && f.unbind('sortBegin' + a.namespace + ' sortEnd' + a.namespace).bind('sortBegin' + a.namespace + ' sortEnd' + a.namespace, function (c) {
                    clearTimeout(a.processTimer);
                    g.isProcessing(b);
                    'sortBegin' === c.type && (a.processTimer = setTimeout(function () {
                        g.isProcessing(b, !0)
                    }, 500))
                });
                b.hasInitialized = !0;
                b.isProcessing = !1;
                a.debug && g.benchmark('Overall initialization time', h.data(b, 'startoveralltimer'));
                f.trigger('tablesorter-initialized', b);
                'function' === typeof a.initialized && a.initialized(b)
            };
            g.getColumnData = function (b, a, c, f) {
                if ('undefined' !== typeof a && null !== a) {
                    b = h(b) [0];
                    var e,
                        d = b.config;
                    if (a[c]) return f ? a[c] : a[d.$headers.index(d.$headers.filter('[data-column="' + c + '"]:last'))];
                    for (e in a) if ('string' === typeof e && (b = f ? d.$headers.eq(c).filter(e)  : d.$headers.filter('[data-column="' + c + '"]:last').filter(e), b.length)) return a[e]
                }
            };
            g.computeColumnIndex = function (b) {
                var a = [
                    ],
                    c = 0,
                    f,
                    e,
                    d,
                    g,
                    k,
                    n,
                    m,
                    p,
                    q,
                    s;
                for (f = 0; f < b.length; f++) for (k = b[f].cells, e = 0; e < k.length; e++) {
                    d = k[e];
                    g = h(d);
                    n = d.parentNode.rowIndex;
                    g.index();
                    m = d.rowSpan || 1;
                    p = d.colSpan || 1;
                    'undefined' === typeof a[n] && (a[n] = [
                    ]);
                    for (d = 0; d < a[n].length + 1; d++) if ('undefined' === typeof a[n][d]) {
                        q = d;
                        break
                    }
                    c = Math.max(q, c);
                    g.attr({
                        'data-column': q
                    });
                    for (d = n; d < n + m; d++) for ('undefined' === typeof a[d] && (a[d] = [
                    ]), s = a[d], g = q; g < q + p; g++) s[g] = 'x'
                }
                return c + 1
            };
            g.isProcessing = function (b, a, c) {
                b = h(b);
                var f = b[0].config,
                    e = c || b.find('.' + g.css.header);
                a ? ('undefined' !== typeof c && 0 < f.sortList.length && (e = e.filter(function () {
                    return this.sortDisabled ? !1 : 0 <= g.isValueInArray(parseFloat(h(this).attr('data-column')), f.sortList)
                })), b.add(e).addClass(g.css.processing + ' ' + f.cssProcessing))  : b.add(e).removeClass(g.css.processing + ' ' + f.cssProcessing)
            };
            g.processTbody = function (b, a, c) {
                b = h(b) [0];
                if (c) return b.isProcessing = !0,
                    a.before('<span class="tablesorter-savemyplace"/>'),
                    c = h.fn.detach ? a.detach()  : a.remove();
                c = h(b).find('span.tablesorter-savemyplace');
                a.insertAfter(c);
                c.remove();
                b.isProcessing = !1
            };
            g.clearTableBody = function (b) {
                h(b) [0].config.$tbodies.children().detach()
            };
            g.bindEvents = function (b, a, c) {
                b = h(b) [0];
                var f,
                    e = b.config;
                !0 !== c && (e.$extraHeaders = e.$extraHeaders ? e.$extraHeaders.add(a)  : a);
                a.find(e.selectorSort).add(a.filter(e.selectorSort)).unbind(['mousedown',
                    'mouseup',
                    'sort',
                    'keyup',
                    ''].join(e.namespace + ' ')).bind(['mousedown',
                    'mouseup',
                    'sort',
                    'keyup',
                    ''].join(e.namespace + ' '), function (c, d) {
                    var g;
                    g = c.type;
                    if (!(1 !== (c.which || c.button) && !/sort|keyup/.test(g) || 'keyup' === g && 13 !== c.which || 'mouseup' === g && !0 !== d && 250 < (new Date).getTime() - f)) {
                        if ('mousedown' === g) return f = (new Date).getTime(),
                            /(input|select|button|textarea)/i.test(c.target.tagName) ? '' : !e.cancelSelection;
                        e.delayInit && p(e.cache) && w(b);
                        g = h.fn.closest ? h(this).closest('th, td') [0] : /TH|TD/.test(this.tagName) ? this : h(this).parents('th, td') [0];
                        g = e.$headers[a.index(g)];
                        g.sortDisabled || L(b, g, c)
                    }
                });
                e.cancelSelection && a.attr('unselectable', 'on').bind('selectstart', !1).css({
                    'user-select': 'none',
                    MozUserSelect: 'none'
                })
            };
            g.restoreHeaders = function (b) {
                var a = h(b) [0].config;
                a.$table.find(a.selectorHeaders).each(function (b) {
                    h(this).find('.' + g.css.headerIn).length && h(this).html(a.headerContent[b])
                })
            };
            g.destroy = function (b, a, c) {
                b = h(b) [0];
                if (b.hasInitialized) {
                    g.refreshWidgets(b, !0, !0);
                    var f = h(b),
                        e = b.config,
                        d = f.find('thead:first'),
                        q = d.find('tr.' + g.css.headerRow).removeClass(g.css.headerRow + ' ' + e.cssHeaderRow),
                        k = f.find('tfoot:first > tr').children('th, td');
                    !1 === a && 0 <= h.inArray('uitheme', e.widgets) && (f.trigger('applyWidgetId', [
                        'uitheme'
                    ]), f.trigger('applyWidgetId', [
                        'zebra'
                    ]));
                    d.find('tr').not(q).remove();
                    f.removeData('tablesorter').unbind('sortReset update updateAll updateRows updateCell addRows updateComplete sorton appendCache updateCache applyWidgetId applyWidgets refreshWidgets destroy mouseup mouseleave keypress sortBegin sortEnd resetToLoadState '.split(' ').join(e.namespace + ' '));
                    e.$headers.add(k).removeClass([g.css.header,
                        e.cssHeader,
                        e.cssAsc,
                        e.cssDesc,
                        g.css.sortAsc,
                        g.css.sortDesc,
                        g.css.sortNone].join(' ')).removeAttr('data-column').removeAttr('aria-label').attr('aria-disabled', 'true');
                    q.find(e.selectorSort).unbind(['mousedown',
                        'mouseup',
                        'keypress',
                        ''].join(e.namespace + ' '));
                    g.restoreHeaders(b);
                    f.toggleClass(g.css.table + ' ' + e.tableClass + ' tablesorter-' + e.theme, !1 === a);
                    b.hasInitialized = !1;
                    delete b.config.cache;
                    'function' === typeof c && c(b)
                }
            };
            g.regex = {
                chunk: /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,
                chunks: /(^\\0|\\0$)/,
                hex: /^0x[0-9a-f]+$/i
            };
            g.sortNatural = function (b, a) {
                if (b === a) return 0;
                var c,
                    f,
                    e,
                    d,
                    h,
                    k;
                f = g.regex;
                if (f.hex.test(a)) {
                    c = parseInt(b.match(f.hex), 16);
                    e = parseInt(a.match(f.hex), 16);
                    if (c < e) return - 1;
                    if (c > e) return 1
                }
                c = b.replace(f.chunk, '\\0$1\\0').replace(f.chunks, '').split('\\0');
                f = a.replace(f.chunk, '\\0$1\\0').replace(f.chunks, '').split('\\0');
                k = Math.max(c.length, f.length);
                for (h = 0; h < k; h++) {
                    e = isNaN(c[h]) ? c[h] || 0 : parseFloat(c[h]) || 0;
                    d = isNaN(f[h]) ? f[h] || 0 : parseFloat(f[h]) || 0;
                    if (isNaN(e) !== isNaN(d)) return isNaN(e) ? 1 : - 1;
                    typeof e !== typeof d && (e += '', d += '');
                    if (e < d) return - 1;
                    if (e > d) return 1
                }
                return 0
            };
            g.sortNaturalAsc = function (b, a, c, f, e) {
                if (b === a) return 0;
                c = e.string[e.empties[c] || e.emptyTo];
                return '' === b && 0 !== c ? 'boolean' === typeof c ? c ? - 1 : 1 : - c || - 1 : '' === a && 0 !== c ? 'boolean' === typeof c ? c ? 1 : - 1 : c || 1 : g.sortNatural(b, a)
            };
            g.sortNaturalDesc = function (b, a, c, f, e) {
                if (b === a) return 0;
                c = e.string[e.empties[c] || e.emptyTo];
                return '' === b && 0 !== c ? 'boolean' === typeof c ? c ? - 1 : 1 : c || 1 : '' === a && 0 !== c ? 'boolean' === typeof c ? c ? 1 : - 1 : - c || - 1 : g.sortNatural(a, b)
            };
            g.sortText = function (b, a) {
                return b > a ? 1 : b < a ? - 1 : 0
            };
            g.getTextValue = function (b, a, c) {
                if (c) {
                    var f = b ? b.length : 0,
                        e = c + a;
                    for (c = 0; c < f; c++) e += b.charCodeAt(c);
                    return a * e
                }
                return 0
            };
            g.sortNumericAsc = function (b, a, c, f, e, d) {
                if (b === a) return 0;
                d = d.config;
                e = d.string[d.empties[e] || d.emptyTo];
                if ('' === b && 0 !== e) return 'boolean' === typeof e ? e ? - 1 : 1 : - e || - 1;
                if ('' === a && 0 !== e) return 'boolean' === typeof e ? e ? 1 : - 1 : e || 1;
                isNaN(b) && (b = g.getTextValue(b, c, f));
                isNaN(a) && (a = g.getTextValue(a, c, f));
                return b - a
            };
            g.sortNumericDesc = function (b, a, c, f, e, d) {
                if (b === a) return 0;
                d = d.config;
                e = d.string[d.empties[e] || d.emptyTo];
                if ('' === b && 0 !== e) return 'boolean' === typeof e ? e ? - 1 : 1 : e || 1;
                if ('' === a && 0 !== e) return 'boolean' === typeof e ? e ? 1 : - 1 : - e || - 1;
                isNaN(b) && (b = g.getTextValue(b, c, f));
                isNaN(a) && (a = g.getTextValue(a, c, f));
                return a - b
            };
            g.sortNumeric = function (b, a) {
                return b - a
            };
            g.characterEquivalents = {
                a: 'áàâãäąå',
                A: 'ÁÀÂÃÄĄÅ',
                c: 'çćč',
                C: 'ÇĆČ',
                e: 'éèêëěę',
                E: 'ÉÈÊËĚĘ',
                i: 'íìİîïı',
                I: 'ÍÌİÎÏ',
                o: 'óòôõö',
                O: 'ÓÒÔÕÖ',
                ss: 'ß',
                SS: 'ẞ',
                u: 'úùûüů',
                U: 'ÚÙÛÜŮ'
            };
            g.replaceAccents = function (b) {
                var a,
                    c = '[',
                    d = g.characterEquivalents;
                if (!g.characterRegex) {
                    g.characterRegexArray = {
                    };
                    for (a in d) 'string' === typeof a && (c += d[a], g.characterRegexArray[a] = new RegExp('[' + d[a] + ']', 'g'));
                    g.characterRegex = new RegExp(c + ']')
                }
                if (g.characterRegex.test(b)) for (a in d) 'string' === typeof a && (b = b.replace(g.characterRegexArray[a], a));
                return b
            };
            g.isValueInArray = function (b, a) {
                var c,
                    d = a.length;
                for (c = 0; c < d; c++) if (a[c][0] === b) return c;
                return - 1
            };
            g.addParser = function (b) {
                var a,
                    c = g.parsers.length,
                    d = !0;
                for (a = 0; a < c; a++) g.parsers[a].id.toLowerCase() === b.id.toLowerCase() && (d = !1);
                d && g.parsers.push(b)
            };
            g.getParserById = function (b) {
                if ('false' == b) return !1;
                var a,
                    c = g.parsers.length;
                for (a = 0; a < c; a++) if (g.parsers[a].id.toLowerCase() === b.toString().toLowerCase()) return g.parsers[a];
                return !1
            };
            g.addWidget = function (b) {
                g.widgets.push(b)
            };
            g.hasWidget = function (b, a) {
                b = h(b);
                return b.length && b[0].config && b[0].config.widgetInit[a] || !1
            };
            g.getWidgetById = function (b) {
                var a,
                    c,
                    d = g.widgets.length;
                for (a = 0; a < d; a++) if ((c = g.widgets[a]) && c.hasOwnProperty('id') && c.id.toLowerCase() === b.toLowerCase()) return c
            };
            g.applyWidget = function (b, a) {
                b = h(b) [0];
                var c = b.config,
                    d = c.widgetOptions,
                    e = [
                    ],
                    l,
                    p,
                    k;
                !1 !== a && b.hasInitialized && (b.isApplyingWidgets || b.isUpdating) || (c.debug && (l = new Date), c.widgets.length && (b.isApplyingWidgets = !0, c.widgets = h.grep(c.widgets, function (a, b) {
                    return h.inArray(a, c.widgets) === b
                }), h.each(c.widgets || [
                ], function (a, b) {
                    (k = g.getWidgetById(b)) && k.id && (k.priority || (k.priority = 10), e[a] = k)
                }), e.sort(function (a, b) {
                    return a.priority < b.priority ? - 1 : a.priority === b.priority ? 0 : 1
                }), h.each(e, function (e, g) {
                    if (g) {
                        if (a || !c.widgetInit[g.id]) c.widgetInit[g.id] = !0,
                        g.hasOwnProperty('options') && (d = b.config.widgetOptions = h.extend(!0, {
                        }, g.options, d)),
                        g.hasOwnProperty('init') && g.init(b, g, c, d);
                        !a && g.hasOwnProperty('format') && g.format(b, c, d, !1)
                    }
                })), setTimeout(function () {
                    b.isApplyingWidgets = !1
                }, 0), c.debug && (p = c.widgets.length, q('Completed ' + (!0 === a ? 'initializing ' : 'applying ') + p + ' widget' + (1 !== p ? 's' : ''), l)))
            };
            g.refreshWidgets = function (b, a, c) {
                b = h(b) [0];
                var f,
                    e = b.config,
                    l = e.widgets,
                    q = g.widgets,
                    k = q.length;
                for (f = 0; f < k; f++) q[f] && q[f].id && (a || 0 > h.inArray(q[f].id, l)) && (e.debug && d('Refeshing widgets: Removing "' + q[f].id + '"'), q[f].hasOwnProperty('remove') && e.widgetInit[q[f].id] && (q[f].remove(b, e, e.widgetOptions), e.widgetInit[q[f].id] = !1));
                !0 !== c && g.applyWidget(b, a)
            };
            g.getData = function (b, a, c) {
                var d = '';
                b = h(b);
                var e,
                    g;
                if (!b.length) return '';
                e = h.metadata ? b.metadata()  : !1;
                g = ' ' + (b.attr('class') || '');
                'undefined' !== typeof b.data(c) || 'undefined' !== typeof b.data(c.toLowerCase()) ? d += b.data(c) || b.data(c.toLowerCase())  : e && 'undefined' !== typeof e[c] ? d += e[c] : a && 'undefined' !== typeof a[c] ? d += a[c] : ' ' !== g && g.match(' ' + c + '-') && (d = g.match(new RegExp('\\s' + c + '-([\\w-]+)')) [1] || '');
                return h.trim(d)
            };
            g.formatFloat = function (b, a) {
                if ('string' !== typeof b || '' === b) return b;
                var c;
                b = (a && a.config ? !1 !== a.config.usNumberFormat : 'undefined' !== typeof a ? a : 1) ? b.replace(/,/g, '')  : b.replace(/[\s|\.]/g, '').replace(/,/g, '.');
                /^\s*\([.\d]+\)/.test(b) && (b = b.replace(/^\s*\(([.\d]+)\)/, '-$1'));
                c = parseFloat(b);
                return isNaN(c) ? h.trim(b)  : c
            };
            g.isDigit = function (b) {
                return isNaN(b) ? /^[\-+(]?\d+[)]?$/.test(b.toString().replace(/[,.'"\s]/g, ''))  : !0
            }
        }
    }); var r = h.tablesorter; h.fn.extend({
        tablesorter: r.construct
    }); r.addParser({
        id: 'no-parser',
        is: function () {
            return !1
        },
        format: function () {
            return ''
        },
        type: 'text'
    }); r.addParser({
        id: 'text',
        is: function () {
            return !0
        },
        format: function (d, q) {
            var p = q.config;
            d && (d = h.trim(p.ignoreCase ? d.toLocaleLowerCase()  : d), d = p.sortLocaleCompare ? r.replaceAccents(d)  : d);
            return d
        },
        type: 'text'
    }); r.addParser({
        id: 'digit',
        is: function (d) {
            return r.isDigit(d)
        },
        format: function (d, q) {
            var p = r.formatFloat((d || '').replace(/[^\w,. \-()]/g, ''), q);
            return d && 'number' === typeof p ? p : d ? h.trim(d && q.config.ignoreCase ? d.toLocaleLowerCase()  : d)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'currency',
        is: function (d) {
            return /^\(?\d+[\u00a3$\u20ac\u00a4\u00a5\u00a2?.]|[\u00a3$\u20ac\u00a4\u00a5\u00a2?.]\d+\)?$/.test((d || '').replace(/[+\-,. ]/g, ''))
        },
        format: function (d, q) {
            var p = r.formatFloat((d || '').replace(/[^\w,. \-()]/g, ''), q);
            return d && 'number' === typeof p ? p : d ? h.trim(d && q.config.ignoreCase ? d.toLocaleLowerCase()  : d)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'ipAddress',
        is: function (d) {
            return /^\d{1,3}[\.]\d{1,3}[\.]\d{1,3}[\.]\d{1,3}$/.test(d)
        },
        format: function (d, h) {
            var p,
                y = d ? d.split('.')  : '',
                v = '',
                w = y.length;
            for (p = 0; p < w; p++) v += ('00' + y[p]).slice( - 3);
            return d ? r.formatFloat(v, h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'url',
        is: function (d) {
            return /^(https?|ftp|file):\/\//.test(d)
        },
        format: function (d) {
            return d ? h.trim(d.replace(/(https?|ftp|file):\/\//, ''))  : d
        },
        parsed: !0,
        type: 'text'
    }); r.addParser({
        id: 'isoDate',
        is: function (d) {
            return /^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}/.test(d)
        },
        format: function (d, h) {
            return d ? r.formatFloat('' !== d ? new Date(d.replace(/-/g, '/')).getTime() || d : '', h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'percent',
        is: function (d) {
            return /(\d\s*?%|%\s*?\d)/.test(d) && 15 > d.length
        },
        format: function (d, h) {
            return d ? r.formatFloat(d.replace(/%/g, ''), h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'usLongDate',
        is: function (d) {
            return /^[A-Z]{3,10}\.?\s+\d{1,2},?\s+(\d{4})(\s+\d{1,2}:\d{2}(:\d{2})?(\s+[AP]M)?)?$/i.test(d) || /^\d{1,2}\s+[A-Z]{3,10}\s+\d{4}/i.test(d)
        },
        format: function (d, h) {
            return d ? r.formatFloat(new Date(d.replace(/(\S)([AP]M)$/i, '$1 $2')).getTime() || d, h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'shortDate',
        is: function (d) {
            return /(^\d{1,2}[\/\s]\d{1,2}[\/\s]\d{4})|(^\d{4}[\/\s]\d{1,2}[\/\s]\d{1,2})/.test((d || '').replace(/\s+/g, ' ').replace(/[\-.,]/g, '/'))
        },
        format: function (d, h, p, y) {
            if (d) {
                p = h.config;
                var v = p.$headers.filter('[data-column=' + y + ']:last');
                y = v.length && v[0].dateFormat || r.getData(v, r.getColumnData(h, p.headers, y), 'dateFormat') || p.dateFormat;
                d = d.replace(/\s+/g, ' ').replace(/[\-.,]/g, '/');
                'mmddyyyy' === y ? d = d.replace(/(\d{1,2})[\/\s](\d{1,2})[\/\s](\d{4})/, '$3/$1/$2')  : 'ddmmyyyy' === y ? d = d.replace(/(\d{1,2})[\/\s](\d{1,2})[\/\s](\d{4})/, '$3/$2/$1')  : 'yyyymmdd' === y && (d = d.replace(/(\d{4})[\/\s](\d{1,2})[\/\s](\d{1,2})/, '$1/$2/$3'))
            }
            return d ? r.formatFloat(new Date(d).getTime() || d, h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'time',
        is: function (d) {
            return /^(([0-2]?\d:[0-5]\d)|([0-1]?\d:[0-5]\d\s?([AP]M)))$/i.test(d)
        },
        format: function (d, h) {
            return d ? r.formatFloat(new Date('2000/01/01 ' + d.replace(/(\S)([AP]M)$/i, '$1 $2')).getTime() || d, h)  : d
        },
        type: 'numeric'
    }); r.addParser({
        id: 'metadata',
        is: function () {
            return !1
        },
        format: function (d, q, p) {
            d = q.config;
            d = d.parserMetadataName ? d.parserMetadataName : 'sortValue';
            return h(p).metadata() [d]
        },
        type: 'numeric'
    }); r.addWidget({
        id: 'zebra',
        priority: 90,
        format: function (d, q, p) {
            var y,
                v,
                w,
                z,
                D,
                E = new RegExp(q.cssChildRow, 'i'),
                C = q.$tbodies;
            q.debug && (D = new Date);
            for (d = 0; d < C.length; d++) w = 0,
                y = C.eq(d),
                y = y.children('tr:visible').not(q.selectorRemove),
                y.each(function () {
                    v = h(this);
                    E.test(this.className) || w++;
                    z = 0 === w % 2;
                    v.removeClass(p.zebra[z ? 1 : 0]).addClass(p.zebra[z ? 0 : 1])
                });
            q.debug && r.benchmark('Applying Zebra widget', D)
        },
        remove: function (d, q, p) {
            var r;
            q = q.$tbodies;
            var v = (p.zebra || [
                'even',
                'odd'
            ]).join(' ');
            for (p = 0; p < q.length; p++) r = h.tablesorter.processTbody(d, q.eq(p), !0),
                r.children().removeClass(v),
                h.tablesorter.processTbody(d, r, !1)
        }
    })
}(jQuery);
define('jquery-tablesorter', [
    'jquery'
], function () {
}); /*! js-cookie v2.2.1 | MIT */
!function (a) {
    var b;
    if ('function' == typeof define && define.amd && (define('js-cookie', a), b = !0), 'object' == typeof exports && (module.exports = a(), b = !0), !b) {
        var c = window.Cookies,
            d = window.Cookies = a();
        d.noConflict = function () {
            return window.Cookies = c,
                d
        }
    }
}(function () {
    function a() {
        for (var a = 0, b = {
        }; a < arguments.length; a++) {
            var c = arguments[a];
            for (var d in c) b[d] = c[d]
        }
        return b
    }
    function b(a) {
        return a.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent)
    }
    function c(d) {
        function e() {
        }
        function f(b, c, f) {
            if ('undefined' != typeof document) {
                f = a({
                    path: '/'
                }, e.defaults, f),
                'number' == typeof f.expires && (f.expires = new Date(1 * new Date + 86400000 * f.expires)),
                    f.expires = f.expires ? f.expires.toUTCString()  : '';
                try {
                    var g = JSON.stringify(c);
                    /^[\{\[]/.test(g) && (c = g)
                } catch (j) {
                }
                c = d.write ? d.write(c, b)  : encodeURIComponent(c + '').replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent),
                    b = encodeURIComponent(b + '').replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);
                var h = '';
                for (var i in f) f[i] && (h += '; ' + i, !0 !== f[i] && (h += '=' + f[i].split(';') [0]));
                return document.cookie = b + '=' + c + h
            }
        }
        function g(a, c) {
            if ('undefined' != typeof document) {
                for (var e = {
                }, f = document.cookie ? document.cookie.split('; ')  : [
                ], g = 0; g < f.length; g++) {
                    var h = f[g].split('='),
                        i = h.slice(1).join('=');
                    c || '"' !== i.charAt(0) || (i = i.slice(1, - 1));
                    try {
                        var j = b(h[0]);
                        if (i = (d.read || d) (i, j) || b(i), c) try {
                            i = JSON.parse(i)
                        } catch (k) {
                        }
                        if (e[j] = i, a === j) break
                    } catch (k) {
                    }
                }
                return a ? e[a] : e
            }
        }
        return e.set = f,
            e.get = function (a) {
                return g(a, !1)
            },
            e.getJSON = function (a) {
                return g(a, !0)
            },
            e.remove = function (b, c) {
                f(b, '', a(c, {
                    expires: - 1
                }))
            },
            e.defaults = {
            },
            e.withConverter = c,
            e
    }
    return c(function () {
    })
}); /*! iFrame Resizer (iframeSizer.min.js ) - v3.6.3 - 2018-10-28
 *  Desc: Force cross domain iframes to size to content.
 *  Requires: iframeResizer.contentWindow.min.js to be loaded into the target frame.
 *  Copyright: (c) 2018 David J. Bradshaw - dave@bradshaw.net
 *  License: MIT
 */
!function (a) {
    'use strict';
    function b(a, b, c) {
        'addEventListener' in window ? a.addEventListener(b, c, !1)  : 'attachEvent' in window && a.attachEvent('on' + b, c)
    }
    function c(a, b, c) {
        'removeEventListener' in window ? a.removeEventListener(b, c, !1)  : 'detachEvent' in window && a.detachEvent('on' + b, c)
    }
    function d() {
        var a,
            b = [
                'moz',
                'webkit',
                'o',
                'ms'
            ];
        for (a = 0; a < b.length && !P; a += 1) P = window[b[a] + 'RequestAnimationFrame'];
        P || h('setup', 'RequestAnimationFrame not supported')
    }
    function e(a) {
        var b = 'Host page: ' + a;
        return window.top !== window.self && (b = window.parentIFrame && window.parentIFrame.getId ? window.parentIFrame.getId() + ': ' + a : 'Nested host page: ' + a),
            b
    }
    function f(a) {
        return M + '[' + e(a) + ']'
    }
    function g(a) {
        return R[a] ? R[a].log : I
    }
    function h(a, b) {
        k('log', a, b, g(a))
    }
    function i(a, b) {
        k('info', a, b, g(a))
    }
    function j(a, b) {
        k('warn', a, b, !0)
    }
    function k(a, b, c, d) {
        !0 === d && 'object' == typeof window.console && void 0
    }
    function l(a) {
        function d() {
            function a() {
                t(U),
                    q(V),
                    I('resizedCallback', U)
            }
            f('Height'),
                f('Width'),
                u(a, U, 'init')
        }
        function e() {
            var a = S.substr(N).split(':');
            return {
                iframe: R[a[0]] && R[a[0]].iframe,
                id: a[0],
                height: a[1],
                width: a[2],
                type: a[3]
            }
        }
        function f(a) {
            var b = Number(R[V]['max' + a]),
                c = Number(R[V]['min' + a]),
                d = a.toLowerCase(),
                e = Number(U[d]);
            h(V, 'Checking ' + d + ' is in range ' + c + '-' + b),
            e < c && (e = c, h(V, 'Set ' + d + ' to min value')),
            e > b && (e = b, h(V, 'Set ' + d + ' to max value')),
                U[d] = '' + e
        }
        function g() {
            function b() {
                function a() {
                    var a = 0,
                        b = !1;
                    for (h(V, 'Checking connection is from allowed list of origins: ' + d); a < d.length; a++) if (d[a] === c) {
                        b = !0;
                        break
                    }
                    return b
                }
                function b() {
                    var a = R[V] && R[V].remoteHost;
                    return h(V, 'Checking connection is from: ' + a),
                    c === a
                }
                return d.constructor === Array ? a()  : b()
            }
            var c = a.origin,
                d = R[V] && R[V].checkOrigin;
            if (d && '' + c != 'null' && !b()) throw new Error('Unexpected message received from: ' + c + ' for ' + U.iframe.id + '. Message was: ' + a.data + '. This error can be disabled by setting the checkOrigin: false option or by providing of array of trusted domains.');
            return !0
        }
        function k() {
            return M === ('' + S).substr(0, N) && S.substr(N).split(':') [0] in R
        }
        function l() {
            var a = U.type in {
                true: 1,
                false: 1,
                undefined: 1
            };
            return a && h(V, 'Ignoring init message from meta parent page'),
                a
        }
        function n(a) {
            return S.substr(S.indexOf(':') + L + a)
        }
        function x(a) {
            h(V, 'MessageCallback passed: {iframe: ' + U.iframe.id + ', message: ' + a + '}'),
                I('messageCallback', {
                    iframe: U.iframe,
                    message: JSON.parse(a)
                }),
                h(V, '--')
        }
        function y() {
            var a = document.body.getBoundingClientRect(),
                b = U.iframe.getBoundingClientRect();
            return JSON.stringify({
                iframeHeight: b.height,
                iframeWidth: b.width,
                clientHeight: Math.max(document.documentElement.clientHeight, window.innerHeight || 0),
                clientWidth: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),
                offsetTop: parseInt(b.top - a.top, 10),
                offsetLeft: parseInt(b.left - a.left, 10),
                scrollTop: window.pageYOffset,
                scrollLeft: window.pageXOffset
            })
        }
        function A(a, b) {
            function c() {
                v('Send Page Info', 'pageInfo:' + y(), a, b)
            }
            z(c, 32, b)
        }
        function B() {
            function a(a, b) {
                function c() {
                    R[f] ? A(R[f].iframe, f)  : d()
                }
                [
                    'scroll',
                    'resize'
                ].forEach(function (d) {
                    h(f, a + d + ' listener for sendPageInfo'),
                        b(window, d, c)
                })
            }
            function d() {
                a('Remove ', c)
            }
            function e() {
                a('Add ', b)
            }
            var f = V;
            e(),
            R[f] && (R[f].stopPageInfo = d)
        }
        function C() {
            R[V] && R[V].stopPageInfo && (R[V].stopPageInfo(), delete R[V].stopPageInfo)
        }
        function D() {
            var a = !0;
            return null === U.iframe && (j(V, 'IFrame (' + U.id + ') not found'), a = !1),
                a
        }
        function E(a) {
            var b = a.getBoundingClientRect();
            return p(V),
                {
                    x: Math.floor(Number(b.left) + Number(O.x)),
                    y: Math.floor(Number(b.top) + Number(O.y))
                }
        }
        function F(a) {
            function b() {
                O = f,
                    G(),
                    h(V, '--')
            }
            function c() {
                return {
                    x: Number(U.width) + e.x,
                    y: Number(U.height) + e.y
                }
            }
            function d() {
                window.parentIFrame ? window.parentIFrame['scrollTo' + (a ? 'Offset' : '')](f.x, f.y)  : j(V, 'Unable to scroll to requested position, window.parentIFrame not found')
            }
            var e = a ? E(U.iframe)  : {
                    x: 0,
                    y: 0
                },
                f = c();
            h(V, 'Reposition requested from iFrame (offset x:' + e.x + ' y:' + e.y + ')'),
                window.top !== window.self ? d()  : b()
        }
        function G() {
            !1 !== I('scrollCallback', O) ? q(V)  : r()
        }
        function H(a) {
            function b() {
                var a = E(f);
                h(V, 'Moving to in page link (#' + d + ') at x: ' + a.x + ' y: ' + a.y),
                    O = {
                        x: a.x,
                        y: a.y
                    },
                    G(),
                    h(V, '--')
            }
            function c() {
                window.parentIFrame ? window.parentIFrame.moveToAnchor(d)  : h(V, 'In page link #' + d + ' not found and window.parentIFrame not found')
            }
            var d = a.split('#') [1] || '',
                e = decodeURIComponent(d),
                f = document.getElementById(e) || document.getElementsByName(e) [0];
            f ? b()  : window.top !== window.self ? c()  : h(V, 'In page link #' + d + ' not found')
        }
        function I(a, b) {
            return m(V, a, b)
        }
        function J() {
            switch (R[V] && R[V].firstRun && Q(), U.type) {
                case 'close':
                    R[V].closeRequestCallback ? m(V, 'closeRequestCallback', R[V].iframe)  : o(U.iframe);
                    break;
                case 'message':
                    x(n(6));
                    break;
                case 'scrollTo':
                    F(!1);
                    break;
                case 'scrollToOffset':
                    F(!0);
                    break;
                case 'pageInfo':
                    A(R[V] && R[V].iframe, V),
                        B();
                    break;
                case 'pageInfoStop':
                    C();
                    break;
                case 'inPageLink':
                    H(n(9));
                    break;
                case 'reset':
                    s(U);
                    break;
                case 'init':
                    d(),
                        I('initCallback', U.iframe);
                    break;
                default:
                    d()
            }
        }
        function K(a) {
            var b = !0;
            return R[a] || (b = !1, j(U.type + ' No settings for ' + a + '. Message was: ' + S)),
                b
        }
        function P() {
            for (var a in R) v('iFrame requested init', w(a), document.getElementById(a), a)
        }
        function Q() {
            R[V] && (R[V].firstRun = !1)
        }
        var S = a.data,
            U = {
            },
            V = null;
        '[iFrameResizerChild]Ready' === S ? P()  : k() ? (U = e(), V = T = U.id, R[V] && (R[V].loaded = !0), !l() && K(V) && (h(V, 'Received: ' + S), D() && g() && J()))  : i(V, 'Ignored: ' + S)
    }
    function m(a, b, c) {
        var d = null,
            e = null;
        if (R[a]) {
            if ('function' != typeof (d = R[a][b])) throw new TypeError(b + ' on iFrame[' + a + '] is not a function');
            e = d(c)
        }
        return e
    }
    function n(a) {
        var b = a.id;
        delete R[b]
    }
    function o(a) {
        var b = a.id;
        h(b, 'Removing iFrame: ' + b);
        try {
            a.parentNode && a.parentNode.removeChild(a)
        } catch (c) {
        }
        m(b, 'closedCallback', b),
            h(b, '--'),
            n(a)
    }
    function p(b) {
        null === O && (O = {
            x: window.pageXOffset !== a ? window.pageXOffset : document.documentElement.scrollLeft,
            y: window.pageYOffset !== a ? window.pageYOffset : document.documentElement.scrollTop
        }, h(b, 'Get page position: ' + O.x + ',' + O.y))
    }
    function q(a) {
        null !== O && (window.scrollTo(O.x, O.y), h(a, 'Set page position: ' + O.x + ',' + O.y), r())
    }
    function r() {
        O = null
    }
    function s(a) {
        function b() {
            t(a),
                v('reset', 'reset', a.iframe, a.id)
        }
        h(a.id, 'Size reset requested by ' + ('init' === a.type ? 'host page' : 'iFrame')),
            p(a.id),
            u(b, a, 'reset')
    }
    function t(a) {
        function b(b) {
            if (!a.id) return void h('undefined', 'messageData id not set');
            a.iframe.style[b] = a[b] + 'px',
                h(a.id, 'IFrame (' + e + ') ' + b + ' set to ' + a[b] + 'px')
        }
        function c(b) {
            J || '0' !== a[b] || (J = !0, h(e, 'Hidden iFrame detected, creating visibility listener'), A())
        }
        function d(a) {
            b(a),
                c(a)
        }
        var e = a.iframe.id;
        R[e] && (R[e].sizeHeight && d('height'), R[e].sizeWidth && d('width'))
    }
    function u(a, b, c) {
        c !== b.type && P ? (h(b.id, 'Requesting animation frame'), P(a))  : a()
    }
    function v(a, b, c, d, e) {
        function f() {
            var e = R[d] && R[d].targetOrigin;
            h(d, '[' + a + '] Sending msg to iframe[' + d + '] (' + b + ') targetOrigin: ' + e),
                c.contentWindow.postMessage(M + b, e)
        }
        function g() {
            j(d, '[' + a + '] IFrame(' + d + ') not found')
        }
        function i() {
            c && 'contentWindow' in c && null !== c.contentWindow ? f()  : g()
        }
        function k() {
            function a() {
                !R[d] || R[d].loaded || l || (l = !0, j(d, 'IFrame has not responded within ' + R[d].warningTimeout / 1000 + ' seconds. Check iFrameResizer.contentWindow.js has been loaded in iFrame. This message can be ignored if everything is working, or you can set the warningTimeout option to a higher value or zero to suppress this warning.'))
            }
            e && R[d] && R[d].warningTimeout && (R[d].msgTimeout = setTimeout(a, R[d].warningTimeout))
        }
        var l = !1;
        d = d || c.id,
        R[d] && (i(), k())
    }
    function w(a) {
        return a + ':' + R[a].bodyMarginV1 + ':' + R[a].sizeWidth + ':' + R[a].log + ':' + R[a].interval + ':' + R[a].enablePublicMethods + ':' + R[a].autoResize + ':' + R[a].bodyMargin + ':' + R[a].heightCalculationMethod + ':' + R[a].bodyBackground + ':' + R[a].bodyPadding + ':' + R[a].tolerance + ':' + R[a].inPageLinks + ':' + R[a].resizeFrom + ':' + R[a].widthCalculationMethod
    }
    function x(c, d) {
        function e() {
            function a(a) {
                1 / 0 !== R[y][a] && 0 !== R[y][a] && (c.style[a] = R[y][a] + 'px', h(y, 'Set ' + a + ' = ' + R[y][a] + 'px'))
            }
            function b(a) {
                if (R[y]['min' + a] > R[y]['max' + a]) throw new Error('Value for min' + a + ' can not be greater than max' + a)
            }
            b('Height'),
                b('Width'),
                a('maxHeight'),
                a('minHeight'),
                a('maxWidth'),
                a('minWidth')
        }
        function f() {
            var a = d && d.id || U.id + H++;
            return null !== document.getElementById(a) && (a += H++),
                a
        }
        function g(a) {
            return T = a,
            '' === a && (c.id = a = f(), I = (d || {
            }).log, T = a, h(a, 'Added missing iframe ID: ' + a + ' (' + c.src + ')')),
                a
        }
        function i() {
            switch (h(y, 'IFrame scrolling ' + (R[y] && R[y].scrolling ? 'enabled' : 'disabled') + ' for ' + y), c.style.overflow = !1 === (R[y] && R[y].scrolling) ? 'hidden' : 'auto', R[y] && R[y].scrolling) {
                case 'omit':
                    break;
                case !0:
                    c.scrolling = 'yes';
                    break;
                case !1:
                    c.scrolling = 'no';
                    break;
                default:
                    c.scrolling = R[y] ? R[y].scrolling : 'no'
            }
        }
        function k() {
            'number' != typeof (R[y] && R[y].bodyMargin) && '0' !== (R[y] && R[y].bodyMargin) || (R[y].bodyMarginV1 = R[y].bodyMargin, R[y].bodyMargin = R[y].bodyMargin + 'px')
        }
        function l() {
            var a = R[y] && R[y].firstRun,
                b = R[y] && R[y].heightCalculationMethod in Q;
            !a && b && s({
                iframe: c,
                height: 0,
                width: 0,
                type: 'init'
            })
        }
        function m() {
            Function.prototype.bind && R[y] && (R[y].iframe.iFrameResizer = {
                close: o.bind(null, R[y].iframe),
                removeListeners: n.bind(null, R[y].iframe),
                resize: v.bind(null, 'Window resize', 'resize', R[y].iframe),
                moveToAnchor: function (a) {
                    v('Move to anchor', 'moveToAnchor:' + a, R[y].iframe, y)
                },
                sendMessage: function (a) {
                    a = JSON.stringify(a),
                        v('Send Message', 'message:' + a, R[y].iframe, y)
                }
            })
        }
        function p(d) {
            function e() {
                v('iFrame.onload', d, c, a, !0),
                    l()
            }
            b(c, 'load', e),
                v('init', d, c, a, !0)
        }
        function q(a) {
            if ('object' != typeof a) throw new TypeError('Options is not an object')
        }
        function r(a) {
            for (var b in U) U.hasOwnProperty(b) && (R[y][b] = a.hasOwnProperty(b) ? a[b] : U[b])
        }
        function t(a) {
            return '' === a || 'file://' === a ? '*' : a
        }
        function u(a) {
            a = a || {
            },
                R[y] = {
                    firstRun: !0,
                    iframe: c,
                    remoteHost: c.src.split('/').slice(0, 3).join('/')
                },
                q(a),
                r(a),
            R[y] && (R[y].targetOrigin = !0 === R[y].checkOrigin ? t(R[y].remoteHost)  : '*')
        }
        function x() {
            return y in R && 'iFrameResizer' in c
        }
        var y = g(c.id);
        x() ? j(y, 'Ignored iFrame, already setup.')  : (u(d), i(), e(), k(), p(w(y)), m())
    }
    function y(a, b) {
        null === S && (S = setTimeout(function () {
            S = null,
                a()
        }, b))
    }
    function z(a, b, c) {
        V[c] || (V[c] = setTimeout(function () {
            V[c] = null,
                a()
        }, b))
    }
    function A() {
        function a() {
            function a(a) {
                function b(b) {
                    return '0px' === (R[a] && R[a].iframe.style[b])
                }
                function c(a) {
                    return null !== a.offsetParent
                }
                R[a] && c(R[a].iframe) && (b('height') || b('width')) && v('Visibility change', 'resize', R[a].iframe, a)
            }
            for (var b in R) a(b)
        }
        function b(b) {
            h('window', 'Mutation observed: ' + b[0].target + ' ' + b[0].type),
                y(a, 16)
        }
        function c() {
            var a = document.querySelector('body'),
                c = {
                    attributes: !0,
                    attributeOldValue: !1,
                    characterData: !0,
                    characterDataOldValue: !1,
                    childList: !0,
                    subtree: !0
                };
            new d(b).observe(a, c)
        }
        var d = window.MutationObserver || window.WebKitMutationObserver;
        d && c()
    }
    function B(a) {
        function b() {
            D('Window ' + a, 'resize')
        }
        h('window', 'Trigger event: ' + a),
            y(b, 16)
    }
    function C() {
        function a() {
            D('Tab Visable', 'resize')
        }
        'hidden' !== document.visibilityState && (h('document', 'Trigger event: Visiblity change'), y(a, 16))
    }
    function D(a, b) {
        function c(a) {
            return R[a] && 'parent' === R[a].resizeFrom && R[a].autoResize && !R[a].firstRun
        }
        for (var d in R) c(d) && v(a, b, document.getElementById(d), d)
    }
    function E() {
        b(window, 'message', l),
            b(window, 'resize', function () {
                B('resize')
            }),
            b(document, 'visibilitychange', C),
            b(document, '-webkit-visibilitychange', C),
            b(window, 'focusin', function () {
                B('focus')
            }),
            b(window, 'focus', function () {
                B('focus')
            })
    }
    function F() {
        function b(a, b) {
            function c() {
                if (!b.tagName) throw new TypeError('Object is not a valid DOM element');
                if ('IFRAME' !== b.tagName.toUpperCase()) throw new TypeError('Expected <IFRAME> tag, found <' + b.tagName + '>')
            }
            b && (c(), x(b, a), e.push(b))
        }
        function c(a) {
            a && a.enablePublicMethods && j('enablePublicMethods option has been removed, public methods are now always available in the iFrame')
        }
        var e;
        return d(),
            E(),
            function (d, f) {
                switch (e = [
                ], c(d), typeof f) {
                    case 'undefined':
                    case 'string':
                        Array.prototype.forEach.call(document.querySelectorAll(f || 'iframe'), b.bind(a, d));
                        break;
                    case 'object':
                        b(d, f);
                        break;
                    default:
                        throw new TypeError('Unexpected data type (' + typeof f + ')')
                }
                return e
            }
    }
    function G(a) {
        a.fn ? a.fn.iFrameResize || (a.fn.iFrameResize = function (a) {
            function b(b, c) {
                x(c, a)
            }
            return this.filter('iframe').each(b).end()
        })  : i('', 'Unable to bind to jQuery, it is not fully loaded.')
    }
    if ('undefined' != typeof window) {
        var H = 0,
            I = !1,
            J = !1,
            K = 'message',
            L = K.length,
            M = '[iFrameSizer]',
            N = M.length,
            O = null,
            P = window.requestAnimationFrame,
            Q = {
                max: 1,
                scroll: 1,
                bodyScroll: 1,
                documentElementScroll: 1
            },
            R = {
            },
            S = null,
            T = 'Host Page',
            U = {
                autoResize: !0,
                bodyBackground: null,
                bodyMargin: null,
                bodyMarginV1: 8,
                bodyPadding: null,
                checkOrigin: !0,
                inPageLinks: !1,
                enablePublicMethods: !0,
                heightCalculationMethod: 'bodyOffset',
                id: 'iFrameResizer',
                interval: 32,
                log: !1,
                maxHeight: 1 / 0,
                maxWidth: 1 / 0,
                minHeight: 0,
                minWidth: 0,
                resizeFrom: 'parent',
                scrolling: !1,
                sizeHeight: !0,
                sizeWidth: !1,
                warningTimeout: 5000,
                tolerance: 0,
                widthCalculationMethod: 'scroll',
                closedCallback: function () {
                },
                initCallback: function () {
                },
                messageCallback: function () {
                    j('MessageCallback function not defined')
                },
                resizedCallback: function () {
                },
                scrollCallback: function () {
                    return !0
                }
            },
            V = {
            };
        window.jQuery && G(window.jQuery),
            'function' == typeof define && define.amd ? define('iframe-resizer', [
            ], F)  : 'object' == typeof module && 'object' == typeof module.exports ? module.exports = F()  : window.iFrameResize = window.iFrameResize || F()
    }
}();
define('infrastructure', [
    'text',
    'domReady',
    'moment',
    'angular',
    'lodash',
    'angular-aria',
    'angular-route',
    'angular-messages',
    'angular-dynamic-module',
    'angular-aria-extended',
    'angular-ui-router',
    'ne',
    'bignumber',
    'api-check',
    'angular-formly',
    'jquery-scrollto',
    'jquery-tablesorter',
    'js-cookie',
    'iframe-resizer'
], function () {
    'use strict';
    return true
});
!function () {
    'use strict';
    define('directive-account_label', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                bindToController: {
                    theId: '@',
                    account: '=',
                    twoLine: '=',
                    showBalance: '=',
                    noBold: '=',
                    noAlias: '='
                },
                controller: _.noop,
                controllerAs: 'vm',
                scope: {
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/accountLabel/accountLabel.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.account_label',
            directiveName = 'accountLabel';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/accountLabel/account-label', function () {
});
!function () {
    'use strict';
    define('directive-action_menu', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-translator'
    ], function (require) {
        function ActionMenuController($scope) {
            var actionMenu = this,
                buildActions = function () {
                    actionMenu.actions = [
                    ];
                    actionMenu.button = null;
                    _.forEach(actionMenu.actionEntries, function (action) {
                        if (action.isPrimaryAction && !actionMenu.isMobile && !actionMenu.button) actionMenu.button = action;
                        else actionMenu.actions.push(action);
                        if (!action.titleText && action.titleKey) action.titleText = translator.translate(action.titleKey);
                        if (!action.labelText && action.labelKey) action.labelText = translator.translate(action.labelKey)
                    })
                };
            this.$onInit = function () {
                if (!actionMenu.textKey) actionMenu.textKey = 'global';
                if (actionMenu.isLarge) actionMenu.isMobile = false;
                else actionMenu.isMobile = platform.isMobile();
                buildActions();
                $scope.$watch('actionMenu.actionEntries', buildActions);
                actionMenu.callback = function (action, $event) {
                    if (_.isFunction(action.actionCallback)) action.actionCallback(action.key, $event, actionMenu.replacementObj);
                    else actionMenu.actionCallback(action.key, $event, actionMenu.replacementObj)
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            translator = require('pf-shared-modules-translator'),
            moduleName = 'directive.action_menu',
            directiveName = 'actionMenu';
        ActionMenuController.$inject = [
            '$scope'
        ];
        var implementation = {
            transclude: true,
            bindings: {
                id: '@',
                textKey: '@',
                actionEntries: '=',
                replacementObj: '=',
                actionCallback: '=',
                isLarge: '=',
                indentButton: '='
            },
            controller: ActionMenuController,
            controllerAs: directiveName,
            templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/actionMenu/actionMenu.html'
        };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/actionMenu/action-menu', function () {
});
!function () {
    'use strict';
    define('directive-balance_history_chart', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-numbers',
        'pf-shared-modules-charts',
        'pf-shared-modules-platform'
    ], function (require) {
        function implementation($filter, $window, $timeout) {
            return {
                restrict: 'E',
                scope: {
                    ariaLabelTable: '@',
                    introductionText: '@',
                    data: '=',
                    tickInterval: '=',
                    symbols: '=',
                    tooltip: '&'
                },
                replace: true,
                compile: function compileFn() {
                    var xFilter = $filter('date'),
                        xFilterArg = pf.globals.formats.js.LOCALIZED_DATE,
                        yFilter = numbers.filterAmount;
                    return function linkFn(scope) {
                        function reflowChart() {
                            chartElement.removeAttribute('style');
                            chart.reflow()
                        }
                        function createChart(data) {
                            var plotLines = [
                            ];
                            if (data.lines) plotLines = _.map(data.lines, function (line) {
                                return {
                                    color: pf.globals.chartColors.line.border,
                                    width: 1,
                                    value: line.value,
                                    label: {
                                        text: line.text
                                    }
                                }
                            });
                            plotLines.unshift({
                                color: pf.globals.chartColors.line.border,
                                width: 1,
                                value: 0
                            });
                            var settings = {
                                    chart: {
                                        type: 'line',
                                        height: Math.min($window.document.documentElement.clientHeight, $window.document.documentElement.clientWidth, 500),
                                        style: {
                                            fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                        },
                                        plotBorderColor: pf.globals.chartColors.line.border,
                                        plotBorderWidth: 1,
                                        marginTop: 15
                                    },
                                    title: {
                                        text: null
                                    },
                                    scrollbar: {
                                        enabled: false
                                    },
                                    rangeSelector: {
                                        enabled: false
                                    },
                                    navigator: {
                                        enabled: false
                                    },
                                    credits: {
                                        enabled: false
                                    },
                                    exporting: {
                                        enabled: false
                                    },
                                    legend: {
                                        enabled: false
                                    },
                                    series: [
                                        {
                                            data: data.points,
                                            negativeColor: pf.globals.chartColors.line.negative,
                                            name: data.seriesName
                                        }
                                    ],
                                    tooltip: {
                                        formatter: function formatter() {
                                            var p = this.point;
                                            return [xFilter(this.x, xFilterArg),
                                                '<br/>',
                                                '<span style="color:',
                                                p.color,
                                                '">',
                                                p.yPrefix,
                                                ' ',
                                                yFilter(this.y, 'plusAndMinus'),
                                                '</span>'].join('')
                                        },
                                        useHTML: true,
                                        borderColor: pf.globals.chartColors.line.border,
                                        backgroundColor: '#FFFFFF',
                                        style: {
                                            fontSize: '13px',
                                            padding: '5px'
                                        },
                                        crosshairs: [
                                            {
                                                color: pf.globals.chartColors.line.border
                                            },
                                            false
                                        ]
                                    },
                                    colors: [
                                        '#806f60'
                                    ],
                                    plotOptions: {
                                        line: {
                                            marker: {
                                                enabled: false
                                            }
                                        }
                                    },
                                    xAxis: {
                                        type: 'datetime',
                                        tickInterval: scope.tickInterval,
                                        lineColor: pf.globals.chartColors.line.positive,
                                        tickWidth: 0,
                                        gridLineColor: pf.globals.chartColors.line.grid,
                                        gridLineDashStyle: 'Dot',
                                        gridLineWidth: 1,
                                        title: {
                                            text: null
                                        },
                                        labels: {
                                            formatter: function formatter() {
                                                return xFilter(this.value, xFilterArg)
                                            }
                                        }
                                    },
                                    yAxis: {
                                        lineColor: pf.globals.chartColors.line.border,
                                        lineWidth: 1,
                                        tickWidth: 0,
                                        gridLineColor: pf.globals.chartColors.line.grid,
                                        gridLineDashStyle: 'Dot',
                                        gridLineWidth: 1,
                                        labels: {
                                            formatter: chartConfig.valueFormatter,
                                            enabled: !platform.isMobile()
                                        },
                                        plotLines: plotLines,
                                        title: {
                                            text: platform.isMobile() ? null : data.currency,
                                            align: 'high',
                                            offset: 15,
                                            rotation: 0,
                                            y: - 15
                                        }
                                    }
                                },
                                firstValue = data.points[0].y,
                                allValuesEqual = _.every(data.points, [
                                    'y',
                                    firstValue
                                ]);
                            if (allValuesEqual) if (firstValue > 0) {
                                settings.yAxis.min = firstValue / - 4;
                                settings.yAxis.max = 2 * firstValue
                            } else if (firstValue < 0) {
                                settings.yAxis.max = Math.abs(1.5 * firstValue);
                                settings.yAxis.min = 1.5 * firstValue
                            }
                            settings.chart.renderTo = chartElement;
                            requireAsync(['highcharts',
                                'highcharts/modules/exporting',
                                'highcharts/modules/export-data',
                                'highcharts/modules/accessibility'], function (Highcharts) {
                                Highcharts.setOptions({
                                    lang: {
                                        numericSymbols: scope.symbols,
                                        thousandsSep: '\''
                                    }
                                });
                                chart = new Highcharts.Chart(settings, function (renderedChart) {
                                    charts.addAccessibilityTable(renderedChart, tableElement, {
                                        formatter: {
                                            dates: data.accessibility.xFormatter
                                        },
                                        headers: data.tableHeaders
                                    })
                                });
                                chart.redraw();
                                $timeout(function () {
                                    reflowChart()
                                })
                            })
                        }
                        var chart,
                            chartElement = document.getElementById('chartContainer'),
                            tableElement = document.getElementById('tableContainer'),
                            chartConfig = charts.createConfig(scope.symbols, 2, function (value) {
                                return numbers.formatAmountWithCurrency(value, scope.data.currency, numbers.indicator.plusAndMinus)
                            }),
                            unbind = scope.$on(pf.globals.events.REFLOW_HIGHCHARTS, function () {
                                reflowChart()
                            });
                        scope.$on('$destroy', unbind);
                        if ($window.matchMedia) {
                            var mediaQueryList = $window.matchMedia('print');
                            mediaQueryList.addListener(function () {
                                chart.reflow()
                            })
                        }
                        var originalSize;
                        $window.addEventListener('beforeprint', function () {
                            chart._hasUserSize = chart.hasUserSize;
                            originalSize = [
                                chart.chartWidth,
                                chart.chartHeight,
                                false
                            ];
                            chart.setSize(800, 400, false)
                        });
                        $window.addEventListener('afterprint', function () {
                            chart.setSize.apply(chart, originalSize);
                            chart.hasUserSize = chart._hasUserSize
                        });
                        var unwatch = scope.$watch('data', function (newData, oldData) {
                            if (!(chart && newData === oldData)) if (newData) createChart(newData)
                        });
                        scope.$on('$destroy', unwatch)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/balanceHistoryChart/balanceHistoryChart.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            numbers = require('pf-shared-modules-numbers'),
            charts = require('pf-shared-modules-charts'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'directive.balance_history_chart',
            directiveName = 'balanceHistoryChart',
            directiveImplementation = [
                '$filter',
                '$window',
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/balanceHistoryChart/balance-history-chart', function () {
});
!function () {
    'use strict';
    define('directive-balance_pie_chart', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-numbers',
        'highcharts',
        'pf-shared-modules-currencies'
    ], function (require) {
        function implementation($timeout) {
            var createId = function (id) {
                return id + '-efBalancePieChart'
            };
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    data: '='
                },
                replace: true,
                compile: function compileFn() {
                    return {
                        pre: function (scope, element) {
                            element[0].querySelector('#chartContainer').id = createId(scope.theId)
                        },
                        post: function (scope) {
                            function reflowChart() {
                                chartElement.removeAttribute('style');
                                chart.reflow()
                            }
                            var chart,
                                chartElement = document.getElementById(createId(scope.theId)),
                                unbind = scope.$on(pf.globals.events.REFLOW_HIGHCHARTS, function () {
                                    reflowChart()
                                });
                            scope.$on('$destroy', unbind);
                            var createChart = function (data) {
                                    var settings = {
                                        chart: {
                                            type: 'pie',
                                            style: {
                                                fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                            },
                                            backgroundColor: null,
                                            plotBackgroundColor: 'transparent',
                                            plotBorderWidth: null,
                                            plotShadow: false
                                        },
                                        title: {
                                            text: null
                                        },
                                        legend: {
                                            enabled: true,
                                            labelFormatter: function () {
                                                return (this.name ? this.name + ': ' : '') + numbers.formatAmountWithCurrency(this.y, pf.globals.types.currency.CHF, 'plusAndMinus')
                                            }
                                        },
                                        credits: {
                                            enabled: false
                                        },
                                        yAxis: {
                                            title: {
                                                text: null
                                            }
                                        },
                                        exporting: {
                                            enabled: false
                                        },
                                        plotOptions: {
                                            pie: {
                                                allowPointSelect: true,
                                                cursor: 'pointer',
                                                dataLabels: {
                                                    enabled: false,
                                                    distance: 2,
                                                    connectorColor: '#333',
                                                    style: {
                                                        fontSize: '12px'
                                                    }
                                                },
                                                slicedOffset: 0,
                                                showInLegend: true
                                            }
                                        },
                                        tooltip: {
                                            enabled: true
                                        }
                                    };
                                    if ('CURRENCY' === data.type) {
                                        settings.series = [
                                            {
                                                data: _.map(_.keys(data.currencyTotals), function (value, index) {
                                                    return {
                                                        name: '',
                                                        currency: _.parseInt(value),
                                                        y: data.currencyTotals[value],
                                                        color: data.chartColors[index]
                                                    }
                                                })
                                            }
                                        ];
                                        settings.legend.labelFormatter = function () {
                                            return numbers.formatAmountWithCurrency(this.y, this.currency, 'plusAndMinus')
                                        };
                                        settings.tooltip.formatter = function () {
                                            return numbers.formatAmountWithCurrency(this.y, this.point.currency, 'plusAndMinus')
                                        }
                                    } else {
                                        settings.series = [
                                            {
                                                data: _.map(_.keys(data.typeTotals), function (value, index) {
                                                    return {
                                                        name: value,
                                                        y: data.typeTotals[value],
                                                        color: data.chartColors[index]
                                                    }
                                                })
                                            }
                                        ];
                                        settings.legend.labelFormatter = function () {
                                            return this.name + ': ' + numbers.formatAmountWithCurrency(this.y, pf.globals.types.currency.CHF, 'plusAndMinus')
                                        };
                                        settings.tooltip.formatter = function () {
                                            return this.key + '<br/><b>' + numbers.formatAmountWithCurrency(this.y, pf.globals.types.currency.CHF, 'plusAndMinus') + '</b>'
                                        }
                                    }
                                    settings.chart.renderTo = chartElement;
                                    chartElement.removeAttribute('style');
                                    chart = new Highcharts.Chart(settings)
                                },
                                unwatch = scope.$watch('data', function (newData, oldData) {
                                    if (!(chart && newData === oldData)) if (newData) {
                                        createChart(newData);
                                        $timeout(function () {
                                            reflowChart()
                                        })
                                    }
                                }, true);
                            scope.$on('$destroy', unwatch)
                        }
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/balanceHistoryChart/balanceHistoryChart.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            numbers = require('pf-shared-modules-numbers'),
            Highcharts = require('highcharts'),
            currencies = require('pf-shared-modules-currencies'),
            moduleName = 'directive.balance_pie_chart',
            directiveName = 'balancePieChart',
            directiveImplementation = [
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/balancePieChart/balance-pie-chart', function () {
});
!function () {
    'use strict';
    define('directive-calendar', [
        'angular',
        'lodash',
        'moment'
    ], function () {
        function implementation() {
            return {
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/calendar/calendar.html',
                restrict: 'E',
                scope: {
                    startDate: '@?',
                    endDate: '@?',
                    theId: '@',
                    options: '=',
                    model: '=',
                    onChange: '&'
                },
                link: function linkFn(scope) {
                    function updateModel() {
                        var startDate,
                            endDate;
                        if (scope.options && !_.isEmpty(scope.options)) _.forEach(scope.options, function (option) {
                            startDate = !startDate || startDate.isAfter(option.date) ? moment(option.date)  : startDate;
                            endDate = !endDate || endDate.isBefore(option.date) ? moment(option.date)  : endDate
                        });
                        else {
                            startDate = moment(scope.startDate);
                            endDate = moment(scope.endDate)
                        }
                        vm.data.calendarModel = buildCalendarModel(startDate, endDate, scope.options)
                    }
                    function buildCalendarModel(startDate, endDate, options) {
                        var calendarModel = {
                            },
                            day = moment(0).year(startDate.year()).month(startDate.month()).hour(0);
                        while (day.diff(endDate, 'months', true) <= 0) {
                            var monthModel = {
                                month: day.month(),
                                weekDayOffset: (day.day() + 6) % 7,
                                weeks: [
                                ]
                            };
                            calendarModel[day.format('YYYY-MM')] = monthModel;
                            for (var weekModel = [
                            ], i = 0; i < monthModel.weekDayOffset; i++) weekModel.push({
                            });
                            while (day.month() === monthModel.month) {
                                weekModel.push({
                                    moment: moment(day),
                                    date: day.format('YYYY-MM-DD'),
                                    dayOfMonth: day.date(),
                                    isToday: day.isSame(moment(), 'day'),
                                    isAvailable: !options || options && options[day.format('YYYY-MM-DD')],
                                    value: options ? options[day.format('YYYY-MM-DD')] : day.format('YYYY-MM-DD')
                                });
                                if (0 === day.day()) {
                                    monthModel.weeks.push(weekModel);
                                    weekModel = [
                                    ]
                                }
                                day.add(1, 'day')
                            }
                            while (weekModel.length < 7) weekModel.push({
                            });
                            monthModel.weeks.push(weekModel)
                        }
                        return calendarModel
                    }
                    var vm = {
                        data: {
                        },
                        helpers: {
                            dateChanged: scope.onChange
                        }
                    };
                    updateModel();
                    var unwatch = scope.$watchGroup(['startDate',
                        'endDate',
                        'options'], updateModel);
                    scope.$on('$destroy', function () {
                        unwatch()
                    });
                    scope.vm = vm
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            moment = require('moment'),
            moduleName = 'directive.calendar',
            directiveName = 'calendar';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/calendar/calendar', function () {
});
define('fipo/lib/shared/directives/cockpit/_modules', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_additional_info', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.cockpit.ec_additional_info',
            directiveName = 'ecAdditionalInfo',
            implementation = {
                bindings: {
                    firstLine: '<',
                    secondLine: '<'
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecAdditionalInfo/ecAdditionalInfo.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecAdditionalInfo/ec-additional-info', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_budget_chart', [
        'require',
        'angular'
    ], function (require) {
        function implementation($timeout) {
            var createId = function (id) {
                return id + '-ecBudgetChart'
            };
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    data: '='
                },
                compile: function compileFn() {
                    return {
                        pre: function pre(scope) {
                            document.getElementById('chartContainer').setAttribute('id', createId(scope.theId))
                        },
                        post: function post(scope) {
                            function reflowChart() {
                                chartElement.removeAttribute('style');
                                chart.reflow()
                            }
                            var chart,
                                chartElement = document.getElementById(createId(scope.theId)),
                                unbind = scope.$on(pf.globals.events.REFLOW_HIGHCHARTS, function () {
                                    reflowChart()
                                });
                            scope.$on('$destroy', unbind);
                            var drawChart = function drawChart(data) {
                                    var settings = {
                                        chart: {
                                            type: 'bar',
                                            style: {
                                                fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                            },
                                            backgroundColor: 'transparent',
                                            plotBackgroundColor: 'transparent',
                                            plotBorderWidth: null,
                                            plotShadow: false,
                                            spacing: [
                                                0,
                                                0,
                                                0,
                                                0
                                            ]
                                        },
                                        title: {
                                            text: null
                                        },
                                        legend: {
                                            enabled: false
                                        },
                                        credits: {
                                            enabled: false
                                        },
                                        exporting: {
                                            enabled: false
                                        },
                                        xAxis: {
                                            tickLength: 0,
                                            lineWidth: 0,
                                            gridLineWidth: 0,
                                            minorGridLineWidth: 0,
                                            lineColor: 'transparent',
                                            minorTickLength: 0,
                                            labels: {
                                                enabled: false
                                            }
                                        },
                                        yAxis: {
                                            tickLength: 0,
                                            lineWidth: 0,
                                            gridLineWidth: 0,
                                            minorGridLineWidth: 0,
                                            lineColor: 'transparent',
                                            minorTickLength: 0,
                                            min: 0,
                                            max: 100,
                                            title: {
                                                text: null
                                            },
                                            labels: {
                                                enabled: false
                                            }
                                        },
                                        tooltip: {
                                            enabled: false
                                        },
                                        plotOptions: {
                                            series: {
                                                stacking: 'normal',
                                                animation: {
                                                    duration: 1000
                                                }
                                            },
                                            bar: {
                                                allowPointSelect: false,
                                                states: {
                                                    hover: {
                                                        enabled: false
                                                    }
                                                }
                                            }
                                        },
                                        series: data.values
                                    };
                                    settings.chart.renderTo = chartElement;
                                    requireAsync(['highcharts',
                                        'highcharts/modules/exporting',
                                        'highcharts/modules/accessibility'], function (Highcharts) {
                                        chart = new Highcharts.Chart(settings);
                                        chart.redraw()
                                    })
                                },
                                unwatch = scope.$watch('data', function (newData, oldData) {
                                    if (newData !== oldData) drawChart(newData)
                                });
                            scope.$on('$destroy', unwatch);
                            $timeout(function () {
                                drawChart(scope.data)
                            })
                        }
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecBudgetChart/ecBudgetChart.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.cockpit.ec_budget_chart',
            directiveName = 'ecBudgetChart',
            directiveImplementation = [
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecBudgetChart/ec-budget-chart', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_column_chart', [
        'require',
        'lodash',
        'jquery',
        'angular',
        'pf-shared-modules-charts'
    ], function (require) {
        function implementation() {
            var createId = function (id) {
                return id + '-ecColumnChart'
            };
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    data: '=',
                    symbols: '='
                },
                compile: function compileFn() {
                    return {
                        pre: function pre(scope, element) {
                            jQuery(element).find('#chartContainer').attr('id', createId(scope.theId))
                        },
                        post: function post(scope) {
                            function reflowChart() {
                                chartElement.removeAttribute('style');
                                chart.reflow()
                            }
                            var chart,
                                chartElement = document.getElementById(createId(scope.theId)),
                                data = scope.data,
                                chartConfig = charts.createConfig(scope.symbols, void 0, data.yAxisFormatter),
                                unbind = scope.$on(pf.globals.events.REFLOW_HIGHCHARTS, function () {
                                    reflowChart()
                                });
                            scope.$on('$destroy', unbind);
                            var drawChart = function drawChart(chartData) {
                                    var allNegative = _.every(chartData.values, function (item) {
                                            return item.y <= 0
                                        }),
                                        lastColumn = chartData.values[chartData.values.length - 1],
                                        lastIsNegative = lastColumn.y <= 0 && !allNegative,
                                        settings = {
                                            chart: {
                                                type: 'column',
                                                style: {
                                                    fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                                },
                                                plotBackgroundColor: null,
                                                plotBorderWidth: null,
                                                plotShadow: false
                                            },
                                            title: {
                                                text: null
                                            },
                                            legend: {
                                                enabled: false
                                            },
                                            credits: {
                                                enabled: false
                                            },
                                            exporting: {
                                                enabled: false
                                            },
                                            xAxis: {
                                                categories: chartData.categories,
                                                tickLength: 0,
                                                lineWidth: 0
                                            },
                                            yAxis: {
                                                title: {
                                                    text: null
                                                },
                                                gridLineDashStyle: 'ShortDot',
                                                plotLines: [
                                                    {
                                                        color: pf.globals.chartColors.column.grid,
                                                        width: 1,
                                                        value: 0
                                                    }
                                                ],
                                                labels: {
                                                    formatter: chartConfig.valueFormatter,
                                                    useHTML: true
                                                }
                                            },
                                            tooltip: {
                                                enabled: false,
                                                formatter: chartData.tooltipFormatter,
                                                useHTML: true,
                                                backgroundColor: chartData.colors.positive,
                                                borderColor: chartData.colors.positive,
                                                borderRadius: 10,
                                                borderWidth: 3
                                            },
                                            plotOptions: {
                                                column: {
                                                    pointPadding: 0.12,
                                                    borderWidth: 0,
                                                    negativeColor: chartData.colors.negative,
                                                    groupPadding: 0.1,
                                                    stacking: lastIsNegative ? 'normal' : null,
                                                    dataLabels: {
                                                        enabled: false,
                                                        formatter: function () {
                                                            if (this.x === chartData.lastCategory) {
                                                                var numericSymbolDetector = this.series.yAxis.tickInterval,
                                                                    numericSymbols = scope.symbols;
                                                                return charts.shortenValues(this.y, numericSymbolDetector, numericSymbols, 0)
                                                            }
                                                            return null
                                                        },
                                                        crop: !lastIsNegative,
                                                        overflow: lastIsNegative ? 'none' : 'justify',
                                                        verticalAlign: lastIsNegative ? 'top' : void 0,
                                                        y: lastIsNegative ? - 25 : 0,
                                                        style: {
                                                            fontSize: '0.8125rem'
                                                        }
                                                    }
                                                }
                                            },
                                            series: [
                                                {
                                                    data: chartData.values,
                                                    states: {
                                                        hover: {
                                                            enabled: false
                                                        }
                                                    }
                                                }
                                            ]
                                        };
                                    settings.chart.renderTo = document.getElementById(createId(scope.theId));
                                    requireAsync(['highcharts',
                                        'highcharts/modules/exporting',
                                        'highcharts/modules/accessibility'], function (Highcharts) {
                                        Highcharts.setOptions({
                                            lang: {
                                                numericSymbols: scope.symbols,
                                                thousandsSep: '\''
                                            }
                                        });
                                        chart = new Highcharts.Chart(settings);
                                        chart.redraw()
                                    })
                                },
                                unwatchData = scope.$watch('data', function (newData, oldData) {
                                    if (newData !== oldData) drawChart(newData)
                                });
                            scope.$on('$destroy', unwatchData);
                            drawChart(data)
                        }
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecColumnChart/ecColumnChart.html'
            }
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            charts = require('pf-shared-modules-charts'),
            moduleName = 'directive.cockpit.ec_column_chart',
            directiveName = 'ecColumnChart';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecColumnChart/ec-column-chart', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_pie_chart', [
        'require',
        'jquery',
        'angular'
    ], function (require) {
        function implementation() {
            var createId = function (id) {
                return id + '-ecPieChart'
            };
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    data: '=',
                    isMobile: '='
                },
                compile: function compileFn() {
                    return {
                        pre: function pre(scope, element) {
                            jQuery(element).find('#chartContainer').attr('id', createId(scope.theId))
                        },
                        post: function post(scope) {
                            var drawChart = function (data) {
                                    var settings = {
                                        chart: {
                                            type: 'pie',
                                            style: {
                                                fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                            },
                                            plotBackgroundColor: null,
                                            plotBorderWidth: null,
                                            plotShadow: false,
                                            spacing: [
                                                0,
                                                0,
                                                0,
                                                0
                                            ]
                                        },
                                        title: {
                                            text: null
                                        },
                                        legend: {
                                            enabled: false
                                        },
                                        credits: {
                                            enabled: false
                                        },
                                        exporting: {
                                            enabled: false
                                        },
                                        yAxis: {
                                            title: {
                                                text: null
                                            }
                                        },
                                        tooltip: {
                                            enabled: false
                                        },
                                        plotOptions: {
                                            pie: {
                                                allowPointSelect: false,
                                                dataLabels: {
                                                    enabled: true,
                                                    alignTo: 'plotEdges',
                                                    connectorShape: 'crookedLine',
                                                    connectorColor: '#333',
                                                    connectorPadding: 5,
                                                    crop: false,
                                                    distance: 5,
                                                    padding: 0,
                                                    margin: 0,
                                                    style: {
                                                        fontSize: '12px'
                                                    }
                                                }
                                            },
                                            series: {
                                                enableMouseTracking: false
                                            }
                                        },
                                        series: [
                                            {
                                                type: 'pie',
                                                states: {
                                                    hover: {
                                                        enabled: false
                                                    }
                                                }
                                            }
                                        ]
                                    };
                                    settings = angular.merge(settings, data.settings);
                                    settings.chart.renderTo = document.getElementById(createId(scope.theId));
                                    requireAsync(['highcharts',
                                        'highcharts/modules/exporting',
                                        'highcharts/modules/accessibility'], function (Highcharts) {
                                        var chart = new Highcharts.Chart(settings);
                                        chart.redraw()
                                    })
                                },
                                unwatchData = scope.$watch('data', function (newData, oldData) {
                                    if (newData !== oldData) drawChart(newData)
                                });
                            scope.$on('$destroy', unwatchData);
                            drawChart(scope.data)
                        }
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecPieChart/ecPieChart.html'
            }
        }
        var jQuery = require('jquery'),
            angular = require('angular'),
            moduleName = 'directive.cockpit.ec_pie_chart',
            directiveName = 'ecPieChart';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecPieChart/ec-pie-chart', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_simple_list', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.cockpit.ec_simple_list',
            directiveName = 'ecSimpleList',
            implementation = {
                bindings: {
                    items: '<'
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecSimpleList/ecSimpleList.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecSimpleList/ec-simple-list', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_budget_select', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-cockpit-subselect'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    defaultLabel: '@',
                    cancelLabel: '@',
                    items: '=',
                    selectedItems: '=',
                    updateSelected: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecSubSelect/ecSubSelect.html',
                replace: true,
                compile: function compileFn() {
                    var subselectService = new subselect.Service,
                        removeFromOthers = function removeFromOthers(others, selected) {
                            _.forEach(others, function (otherArray) {
                                var itemIndex = - 1;
                                _.forEach(otherArray, function (item, index) {
                                    if (subselectService.equals(item, selected)) itemIndex = index
                                });
                                if (itemIndex >= 0) otherArray.splice(itemIndex, 1)
                            })
                        };
                    return function linkFn(scope) {
                        var resetCallback = function resetCallback() {
                            removeFromOthers([scope.secondItems,
                                scope.thirdItems], scope.selectedItems[0]);
                            removeFromOthers([scope.firstItems,
                                scope.thirdItems], scope.selectedItems[1]);
                            removeFromOthers([scope.firstItems,
                                scope.secondItems], scope.selectedItems[2])
                        };
                        subselectService.init(scope, resetCallback);
                        scope.firstSelected = function firstSelected(item) {
                            scope.selectedItems[0] = item.entry;
                            subselectService.updateSelectedItems()
                        };
                        scope.secondSelected = function secondSelected(item) {
                            scope.selectedItems[1] = item.entry;
                            subselectService.updateSelectedItems()
                        };
                        scope.thirdSelected = function thirdSelected(item) {
                            scope.selectedItems[2] = item.entry;
                            subselectService.updateSelectedItems()
                        }
                    }
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            subselect = require('pf-shared-modules-cockpit-subselect'),
            moduleName = 'directive.cockpit.ec_budget_select',
            directiveName = 'ecBudgetSelect',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecSubSelect/ec-budget-select', function () {
});
!function () {
    'use strict';
    define('directive-cockpit-ec_target_select', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-cockpit-subselect'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    defaultLabel: '@',
                    cancelLabel: '@',
                    items: '=',
                    selectedItems: '=',
                    updateSelected: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/cockpit/ecSubSelect/ecSubSelect.html',
                replace: true,
                compile: function compileFn() {
                    var subselectService = new subselect.Service,
                        getIndex = function getIndex(items, itemToFind) {
                            var indexToFind = - 1;
                            _.forEach(items, function (item, index) {
                                if (subselectService.equals(item, itemToFind)) indexToFind = index
                            });
                            return indexToFind
                        },
                        removeItem = function removeItem(items, item) {
                            var itemIndex = getIndex(items, item);
                            if (itemIndex >= 0) items.splice(itemIndex, 1)
                        };
                    return function linkFn(scope) {
                        var findNextUnselectedForIndex = function findNextUnselectedForIndex(indexToReplace) {
                                var availableItems = scope.items.slice();
                                _.forEach(scope.selectedItems, function (selectedItem, selectedItemIndex) {
                                    if (selectedItemIndex !== indexToReplace) removeItem(availableItems, selectedItem)
                                });
                                return availableItems[0]
                            },
                            checkCollision = function checkCollision(selectedIndex, selectedItem) {
                                _.forEach(scope.selectedItems, function (item, index) {
                                    if (index !== selectedIndex && subselectService.equals(item, selectedItem)) scope.selectedItems[index] = findNextUnselectedForIndex(index)
                                })
                            };
                        subselectService.init(scope);
                        var handleSelection = function handleSelection(index, item) {
                            scope.selectedItems[index] = item.entry;
                            checkCollision(index, item.entry);
                            subselectService.updateSelectedItems()
                        };
                        scope.firstSelected = function firstSelected(item) {
                            handleSelection(0, item)
                        };
                        scope.secondSelected = function secondSelected(item) {
                            handleSelection(1, item)
                        };
                        scope.thirdSelected = function thirdSelected(item) {
                            handleSelection(2, item)
                        }
                    }
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            subselect = require('pf-shared-modules-cockpit-subselect'),
            moduleName = 'directive.cockpit.ec_target_select',
            directiveName = 'ecTargetSelect',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/cockpit/ecSubSelect/ec-target-select', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-ng_attr'
    ];
    define('directive-countdown', [
        'require',
        'angular',
        'directive-ng_attr'
    ], function (require) {
        function implementation() {
            return {
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/countdown/countdown.html',
                restrict: 'E',
                require: 'ngModel',
                scope: {
                    theId: '@',
                    textKey: '@',
                    duration: '='
                },
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    $(element).on('countdownFinished', function () {
                        ngModelCtrl.$setViewValue(true);
                        ngModelCtrl.$commitViewValue()
                    })
                }
            }
        }
        var angular = require('angular'),
            directiveNgAttr = require('directive-ng_attr'),
            moduleName = 'directive.countdown',
            directiveName = 'countdown';
        angular.module(moduleName, [
            directiveNgAttr.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/countdown/countdown', function () {
});
!function () {
    'use strict';
    define('directive-csv_export_button', [
        'require',
        'angular',
        'pf-widget-functions'
    ], function (require) {
        function implementation() {
            var CsvExportButtonController = function CsvExportButtonController() {
                this.$onInit = function () {
                    var urlObj = pfWidgetFunctions.getActionUrlForDetailPage(this.detailPageInstance, 'ExportCSV');
                    this.url = urlObj.url;
                    this.exportToCsv = function exportToCsv($event) {
                        this.prepareExportData({
                            $event: $event
                        })
                    }
                }
            };
            return {
                restrict: 'E',
                replace: true,
                require: 'ngModel',
                bindToController: {
                    prepareExportData: '&prepareExportData',
                    csvData: '=',
                    buttonDisabled: '=',
                    detailPageInstance: '='
                },
                controller: CsvExportButtonController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/csvExportButton/csv-export-button.html'
            }
        }
        var angular = require('angular'),
            pfWidgetFunctions = require('pf-widget-functions'),
            moduleName = 'directive.csv_export_button',
            directiveName = 'csvExportButton';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/csvExportButton/csv-export-button', function () {
});
!function () {
    'use strict';
    define('directive-currency_rate_chart', [
        'require',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-charts',
        'highcharts'
    ], function (require) {
        function implementation($window, $timeout) {
            return {
                restrict: 'E',
                scope: {
                    ariaLabelTable: '@',
                    data: '=',
                    functions: '='
                },
                replace: true,
                link: function linkFn(scope) {
                    function reflowChart() {
                        chartElement.removeAttribute('style');
                        chart.reflow()
                    }
                    function createChart(data) {
                        Highcharts.setOptions({
                            lang: {
                                noData: data.noDataLabel
                            }
                        });
                        var settings = {
                            chart: {
                                type: 'line',
                                height: Math.min($window.document.documentElement.clientHeight, $window.document.documentElement.clientWidth, chartElement.offsetWidth, 500),
                                style: {
                                    fontFamily: 'Frutiger,Helvetica,sans-serif;'
                                },
                                plotBorderColor: pf.globals.chartColors.line.border,
                                plotBorderWidth: 1,
                                marginTop: 30
                            },
                            title: {
                                text: null
                            },
                            credits: {
                                enabled: false
                            },
                            exporting: {
                                enabled: false
                            },
                            legend: {
                                enabled: false
                            },
                            series: [
                                {
                                    data: data.points,
                                    name: data.seriesName
                                }
                            ],
                            tooltip: {
                                formatter: scope.functions.tooltipFormatter,
                                useHTML: true,
                                borderColor: pf.globals.chartColors.line.border,
                                backgroundColor: '#FFFFFF',
                                style: {
                                    fontSize: '13px',
                                    padding: '5px'
                                },
                                crosshairs: [
                                    {
                                        color: pf.globals.chartColors.line.border
                                    },
                                    false
                                ]
                            },
                            colors: [
                                '#806f60'
                            ],
                            plotOptions: {
                                line: {
                                    marker: {
                                        enabled: false
                                    }
                                }
                            },
                            xAxis: {
                                type: 'datetime',
                                tickWidth: 0,
                                gridLineWidth: 0,
                                title: {
                                    text: null
                                },
                                labels: {
                                    formatter: scope.functions.xFormatter
                                }
                            },
                            yAxis: {
                                tickWidth: 0,
                                gridLineColor: pf.globals.chartColors.line.grid,
                                gridLineDashStyle: 'Dot',
                                gridLineWidth: 1,
                                labels: {
                                    formatter: scope.functions.yFormatter,
                                    enabled: !platform.isMobile()
                                },
                                title: {
                                    text: null
                                }
                            }
                        };
                        settings.chart.renderTo = chartElement;
                        requireAsync(['highcharts',
                            'highcharts/modules/exporting',
                            'highcharts/modules/export-data',
                            'highcharts/modules/accessibility'], function (Highcharts) {
                            chart = new Highcharts.Chart(settings, function (renderedChart) {
                                charts.addAccessibilityTable(renderedChart, tableElement, {
                                    formatter: {
                                        dates: scope.functions.accessibility.xFormatter
                                    },
                                    headers: data.tableHeaders
                                })
                            });
                            chart.redraw();
                            $timeout(function () {
                                reflowChart()
                            })
                        })
                    }
                    var chart,
                        chartElement = document.getElementById('chartContainer'),
                        tableElement = document.getElementById('tableContainer'),
                        unbind = scope.$on(pf.globals.events.REFLOW_HIGHCHARTS, function () {
                            reflowChart()
                        });
                    scope.$on('$destroy', unbind);
                    if ($window.matchMedia) {
                        var mediaQueryList = $window.matchMedia('print');
                        mediaQueryList.addListener(function () {
                            chart.reflow()
                        })
                    }
                    var originalSize;
                    $window.addEventListener('beforeprint', function () {
                        chart._hasUserSize = chart.hasUserSize;
                        originalSize = [
                            chart.chartWidth,
                            chart.chartHeight,
                            false
                        ];
                        chart.setSize(800, 400, false)
                    });
                    $window.addEventListener('afterprint', function () {
                        chart.setSize.apply(chart, originalSize);
                        chart.hasUserSize = chart._hasUserSize
                    });
                    var unwatch = scope.$watch('data', function (newData, oldData) {
                        if (!(chart && newData === oldData)) if (newData) createChart(newData)
                    }, true);
                    scope.$on('$destroy', unwatch)
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/currencyRateChart/currencyRateChart.html'
            }
        }
        var angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            charts = require('pf-shared-modules-charts'),
            Highcharts = require('highcharts'),
            moduleName = 'directive.currency_rate_chart',
            directiveName = 'currencyRateChart',
            directiveImplementation = [
                '$window',
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/currencyRateChart/currency-rate-chart', function () {
});
!function () {
    'use strict';
    define('directive-detail_loader', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.detail_loader',
            directiveName = 'detailLoader',
            implementation = {
                bindings: {
                    loadingLabel: '@',
                    hideContentPane: '<?',
                    transparentBackground: '@',
                    serviceConfig: '=',
                    isLoading: '='
                },
                controller: function () {
                    this.transparentBackground = 'true' === this.transparentBackground;
                    this.hasContentPane = function hasContentPane() {
                        return !_.isUndefined(this.hideContentPane) ? !this.hideContentPane : true
                    };
                    this.showDetailLoader = function showDetailLoader() {
                        if (!_.isUndefined(this.isLoading)) return this.isLoading;
                        else return !this.serviceConfig || this.serviceConfig.isLoading && this.serviceConfig.showSpinner
                    }
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/detailLoader/detailLoader.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/detailLoader/detail-loader', function () {
});
!function () {
    'use strict';
    define('pf-angular-directives-detailpages', [
        'require',
        'angular',
        'directive-detail_loader',
        'directive-widget-messages',
        'directive-form-submit',
        'directive-pf_translate',
        'pf-angular-directives-templates',
        'directive-tabs_navigation'
    ], function (require) {
        var angular = require('angular'),
            directiveDetailLoader = require('directive-detail_loader'),
            directiveMessages = require('directive-widget-messages'),
            directiveSubmit = require('directive-form-submit'),
            directivePfTranslate = require('directive-pf_translate'),
            pfAngularDirectivesTemplates = require('pf-angular-directives-templates'),
            directiveTabsNavigation = require('directive-tabs_navigation'),
            moduleName = 'postfinance.shared.directives.detailpages';
        angular.module(moduleName, [
            directiveDetailLoader.moduleName,
            directiveMessages.moduleName,
            directiveSubmit.moduleName,
            directivePfTranslate.moduleName,
            pfAngularDirectivesTemplates.moduleName,
            directiveTabsNavigation.moduleName
        ]);
        return {
            moduleName: moduleName
        }
    })
}();
define('fipo/lib/shared/directives/directives-detailpages', function () {
});
!function () {
    'use strict';
    define('pf-angular-directives-templates', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        var angular = require('angular'),
            _ = require('lodash'),
            moduleName = 'postfinance.shared.directives.templates',
            module = angular.module(moduleName, [
            ]),
            keyBinder = function keyBinder(keycode, attrName) {
                return function (scope, element, attrs) {
                    var keyFn = function keyFn(event) {
                        if (event.which === keycode) {
                            scope.$apply(function () {
                                scope.$eval(attrs[attrName], {
                                    $event: event
                                })
                            });
                            event.preventDefault()
                        }
                    };
                    element.on('keydown keypress', keyFn);
                    scope.$on('$destroy', function () {
                        element.off('keydown keypress', keyFn)
                    })
                }
            };
        module.directive('ngEnter', function () {
            return keyBinder(pf.globals.keycodes.ENTER, 'ngEnter')
        });
        module.directive('ngSpace', function () {
            return keyBinder(pf.globals.keycodes.SPACE, 'ngSpace')
        });
        module.directive('ngEscape', function () {
            return keyBinder(pf.globals.keycodes.ESCAPE, 'ngEscape')
        });
        module.directive('disableCopyPaste', function () {
            return function (scope, element) {
                element.on('cut copy paste', function (event) {
                    event.preventDefault()
                })
            }
        });
        _.forEach(['touchstart',
            'touchend'], function (eventName) {
            var directiveName = 'ng' + eventName.slice(0, 1).toUpperCase() + eventName.slice(1);
            module.directive(directiveName, [
                '$parse',
                function ($parse) {
                    return {
                        restrict: 'A',
                        compile: function ($element, attr) {
                            var fn = $parse(attr[directiveName], null, true);
                            return function ngEventHandler(scope, element) {
                                document.delegate(eventName, 'label[for^=' + element[0].name + ']', function (event) {
                                    var callback = function () {
                                        fn(scope, {
                                            $event: event
                                        })
                                    };
                                    scope.$apply(callback)
                                });
                                element.on(eventName, function (event) {
                                    var callback = function () {
                                        fn(scope, {
                                            $event: event
                                        })
                                    };
                                    scope.$apply(callback)
                                })
                            }
                        }
                    }
                }
            ])
        });
        return {
            moduleName: moduleName
        }
    })
}();
define('fipo/lib/shared/directives/directives-templates', function () {
});
!function () {
    'use strict';
    define('pf-angular-directives', [
        'require',
        'angular',
        'directive-pf_translate',
        'pf-angular-directives-templates'
    ], function (require) {
        var angular = require('angular'),
            directivePfTranslate = require('directive-pf_translate'),
            pfAngularDirectivesTemplates = require('pf-angular-directives-templates'),
            moduleName = 'postfinance.shared.directives';
        angular.module(moduleName, [
            pfAngularDirectivesTemplates.moduleName,
            directivePfTranslate.moduleName
        ]);
        return {
            moduleName: moduleName
        }
    })
}();
define('fipo/lib/shared/directives/directives', function () {
});
!function () {
    'use strict';
    define('directive-filter_by', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                scope: true,
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.checkFunctions = [
                        ];
                        this.register = function register(checkFunc) {
                            $scope.checkFunctions.push(checkFunc)
                        }
                    }
                ],
                link: function linkFn(scope, element, attrs) {
                    var unwatch = scope.$watch(function () {
                        return scope.$eval(attrs.filterBy)
                    }, function (newVal, oldVal) {
                        if (newVal !== oldVal) {
                            var newVal2 = void 0 !== newVal ? newVal.toLowerCase()  : '',
                                matched = false;
                            _.forEach(scope.checkFunctions, function (func) {
                                if (func(newVal2)) matched = true
                            });
                            if (matched) element[0].style.display = 'initial';
                            else element[0].style.display = 'none'
                        }
                    });
                    scope.$on('$destroy', unwatch)
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.filter_by',
            directiveName = 'filterBy',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/filter/filter-by', function () {
});
!function () {
    'use strict';
    define('directive-filter_content', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: '^filterBy',
                link: function linkFn(scope, element, attrs, filterBy) {
                    function mark(indexFrom, length) {
                        if (indexFrom >= 0) {
                            var text = element[0].innerHTML;
                            element[0].innerHTML = text.substr(0, indexFrom) + '<span class="pf-highlight">' + text.substr(indexFrom, length) + '</span>' + text.substr(indexFrom + length, text.length - indexFrom)
                        }
                    }
                    var hasMatch = function hasMatch(valToCheck) {
                        element[0].innerHTML = element[0].innerHTML.replace(/<[^>]*>/g, '');
                        var ix = element[0].innerHTML.toLowerCase().indexOf(valToCheck),
                            hasAMatch = ix >= 0;
                        if (hasAMatch) mark(ix, valToCheck.length);
                        return hasAMatch
                    };
                    filterBy.register(hasMatch)
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.filter_content',
            directiveName = 'filterContent',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/filter/filter-content', function () {
});
define('fipo/lib/shared/directives/form/_modules', function () {
});
!function () {
    'use strict';
    define('directive-account_input', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-formatter',
        'pf-shared-modules-validator'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, $element, $attrs, ngModelCtrl) {
                    var blurFn = function blurFn() {
                        for (var modelValue = ngModelCtrl.$modelValue, i = 0, len = ngModelCtrl.$formatters.length; i < len; i++) modelValue = ngModelCtrl.$formatters[i](modelValue);
                        ngModelCtrl.$viewValue = modelValue;
                        ngModelCtrl.$render()
                    };
                    $element.on('blur', blurFn);
                    ngModelCtrl.$validators.account = function (viewValue) {
                        if (viewValue) return validator.isValidSwissAccount(viewValue) || validator.isValidForeignAccount(viewValue);
                        ngModelCtrl.$setPristine();
                        return true
                    };
                    ngModelCtrl.$formatters.push(function (modelValue) {
                        if (!modelValue) return '';
                        else if (ngModelCtrl.$valid && validator.isIban(modelValue)) return formatter.formatIban(modelValue);
                        else if (ngModelCtrl.$valid && validator.isValidSwissAccount(modelValue)) return formatter.formatAccountNumber(modelValue);
                        return modelValue
                    });
                    ngModelCtrl.$render = function () {
                        var value = ngModelCtrl.$viewValue;
                        $element.val(value);
                        _.set($scope, $attrs.ngModel, value);
                        $scope.value = value
                    };
                    $scope.$watch('isForeignCurrency', function () {
                        var oldModelValue = ngModelCtrl.$modelValue;
                        ngModelCtrl.$setViewValue(oldModelValue)
                    });
                    $scope.$on('$destroy', function () {
                        $element.off('blur', blurFn)
                    })
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            formatter = require('pf-shared-modules-formatter'),
            validator = require('pf-shared-modules-validator'),
            moduleName = 'directive.account_input',
            directiveName = 'accountInput',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/accountInput/account-input', function () {
});
!function () {
    'use strict';
    define('directive-amount_with_currency', [
        'require',
        'angular',
        'directive-currency_input',
        'directive-form-form_validation-amount_range'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    amountInputName: '@',
                    currencyInputName: '@',
                    maxLength: '@',
                    placeholder: '@',
                    required: '<',
                    currencyDisabled: '<',
                    canBeNegative: '<',
                    enterPressed: '&',
                    currencies: '=',
                    amountModel: '=',
                    currencyModel: '=',
                    minValue: '=',
                    maxValue: '='
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/amountWithCurrency/amountWithCurrency.html',
                replace: true,
                require: '^form',
                compile: function compileFn() {
                    return function linkFn(scope, element, attrs, formCtrl) {
                        scope.hasInputError = function hasInputError() {
                            return formCtrl[scope.amountInputName].$dirty && !formCtrl[scope.amountInputName].$valid
                        };
                        scope.hasValue = function hasValue() {
                            return formCtrl[scope.amountInputName].$viewValue
                        }
                    }
                }
            }
        }
        var angular = require('angular'),
            directiveCurrencyInput = require('directive-currency_input'),
            directiveAmountRange = require('directive-form-form_validation-amount_range'),
            moduleName = 'directive.amount_with_currency',
            directiveName = 'amountWithCurrency';
        angular.module(moduleName, [
            directiveCurrencyInput.moduleName,
            directiveAmountRange.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-currency_input',
                'directive-form-form_validation-amount_range'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/amountWithCurrency/amount-with-currency', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-email_validation_attr',
        'directive-form-form_validation-is_equal_validation',
        'directive-form-input_errors'
    ];
    define('directive-form-contact-email_with_validation', [
        'require',
        'angular',
        'lodash',
        'pf-angular-filters-format',
        'directive-email_validation_attr',
        'directive-form-form_validation-is_equal_validation',
        'directive-tooltips'
    ], function (require) {
        function implementation() {
            function EmailWithValidationController($scope) {
                this.$onInit = function () {
                    function hasError(name, mustBeDirty) {
                        var element = vm[formName][name];
                        return !element.$valid && (mustBeDirty ? element.$dirty : true) && !!vm.email
                    }
                    function resetFields() {
                        vm.email = '';
                        resetValidation()
                    }
                    function resetValidation() {
                        vm.emailValidation = ''
                    }
                    var vm = this,
                        formName = _.camelCase(vm.instanceId);
                    vm.inputName = vm.instanceId + '-input';
                    vm.validationName = vm.instanceId + '-validation';
                    var startInEditMode = 'true' === vm.startInEditMode,
                        state;
                    if (startInEditMode) state = states.EDIT;
                    else state = states.READ;
                    vm.formId = formName;
                    vm.inputHasError = function () {
                        return hasError(vm.inputName, true)
                    };
                    vm.validationHasError = function () {
                        return hasError(vm.validationName, false)
                    };
                    vm.showValidation = function () {
                        var inputElement = vm[formName][vm.inputName];
                        return inputElement.$dirty && inputElement.$valid && vm.email
                    };
                    vm.isValid = function () {
                        return !vm.inputHasError() && !vm.validationHasError()
                    };
                    vm.isEditMode = function () {
                        return state === states.EDIT
                    };
                    vm.isReadMode = function () {
                        return state === states.READ
                    };
                    vm.goToEditMode = function () {
                        state = states.EDIT
                    };
                    vm.goToReadMode = function () {
                        state = states.READ
                    };
                    vm.delete = function () {
                        resetFields();
                        vm.goToReadMode();
                        $scope.$emit(pf.globals.events.FORM_FIELD_REMOVED)
                    };
                    vm.changeNumber = function () {
                        resetValidation()
                    };
                    var unbindFormBeforeSaveFn = $scope.$on(pf.globals.events.FORM_BEFORE_SAVE, vm.goToReadMode),
                        unbindFormSavedFn = $scope.$on(pf.globals.events.FORM_SAVED, function () {
                            vm.emailValidation = '';
                            vm.goToReadMode()
                        });
                    $scope.$on('$destroy', function () {
                        unbindFormBeforeSaveFn();
                        unbindFormSavedFn()
                    })
                }
            }
            var states = {
                READ: 'read',
                EDIT: 'edit'
            };
            EmailWithValidationController.$inject = [
                '$scope'
            ];
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    instanceId: '@',
                    inputLabel: '@',
                    validationLabel: '@',
                    addLabel: '@',
                    editLabel: '@',
                    deleteLabel: '@',
                    startInEditMode: '@',
                    noDelete: '=',
                    isRequired: '=',
                    email: '='
                },
                controller: EmailWithValidationController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/contact/emailWithValidation/emailWithValidation.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            postfinanceSharedFiltersFormat = require('pf-angular-filters-format'),
            directiveEmailValidationAttr = require('directive-email_validation_attr'),
            directiveFormFormValidationIsEqualValidation = require('directive-form-form_validation-is_equal_validation'),
            directiveTooltips = require('directive-tooltips'),
            moduleName = 'directive.form.contact.email_with_validation',
            directiveName = 'emailWithValidation',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            postfinanceSharedFiltersFormat.moduleName,
            directiveEmailValidationAttr.moduleName,
            directiveFormFormValidationIsEqualValidation.moduleName,
            directiveTooltips.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/contact/emailWithValidation/email-with-validation', function () {
});
!function () {
    'use strict';
    define('directive-form-contact-phone_with_challenge', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-phone',
        'pf-angular-filters-format',
        'directive-form-form_validation-challenge_validation',
        'directive-ng_attr'
    ], function (require) {
        function implementation() {
            var states = {
                    READ: 'read',
                    EDIT: 'edit'
                },
                PhoneWithChallengeController = function PhoneWithChallengeController($scope) {
                    this.$onInit = function () {
                        function hasError(name, mustBeDirty) {
                            var element = vm[formName][name];
                            return !element.$valid && (mustBeDirty ? element.$dirty : true)
                        }
                        function resetFields() {
                            vm.number = vm.prefix = ''
                        }
                        var vm = this,
                            formName = _.camelCase(vm.instanceId);
                        vm.inputName = vm.instanceId + '-inputNumber';
                        var startInEditMode = 'true' === vm.startInEditMode,
                            state;
                        if (startInEditMode || vm.required && !vm.number) state = states.EDIT;
                        else state = states.READ;
                        vm.formId = formName;
                        vm.numberLength = pf.globals.settings.PHONE_NUMBER_LENGTH;
                        vm.inputHasError = function () {
                            return hasError(vm.inputName, true)
                        };
                        vm.isEditMode = function () {
                            return state === states.EDIT
                        };
                        vm.isReadMode = function () {
                            return state === states.READ
                        };
                        vm.goToEditMode = function () {
                            state = states.EDIT;
                            vm.checkDefaultPrefix()
                        };
                        vm.goToReadMode = function () {
                            state = states.READ
                        };
                        vm.format = function (prefix, number) {
                            return phone.formatPhoneNumber(prefix, number, phone.separators.SPACE)
                        };
                        vm.delete = function () {
                            resetFields();
                            vm.goToReadMode();
                            $scope.$emit(pf.globals.events.FORM_FIELD_REMOVED)
                        };
                        vm.checkDefaultPrefix = function () {
                            if (!vm.prefix && vm.availablePrefixes) vm.prefix = phone.getDefaultPrefix(vm.availablePrefixes)
                        };
                        var unbindFormBeforeSaveFn = $scope.$on(pf.globals.events.FORM_BEFORE_SAVE, vm.goToReadMode),
                            unbindFormSavedFn = $scope.$on(pf.globals.events.FORM_SAVED, function () {
                                vm.validationNumber = '';
                                vm.goToReadMode()
                            });
                        $scope.$on('$destroy', function () {
                            unbindFormBeforeSaveFn();
                            unbindFormSavedFn()
                        });
                        vm.checkDefaultPrefix()
                    }
                };
            PhoneWithChallengeController.$inject = [
                '$scope'
            ];
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    required: '=',
                    instanceId: '@',
                    inputLabel: '@',
                    addLabel: '@',
                    editLabel: '@',
                    deleteLabel: '@',
                    startInEditMode: '@',
                    availablePrefixes: '=',
                    prefix: '=',
                    number: '='
                },
                controller: PhoneWithChallengeController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/contact/phoneWithChallenge/phoneWithChallenge.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            phone = require('pf-shared-modules-phone'),
            pfAngularFiltersFormat = require('pf-angular-filters-format'),
            directiveFormFormValidationChallengeValidation = require('directive-form-form_validation-challenge_validation'),
            directiveNgAttr = require('directive-ng_attr'),
            moduleName = 'directive.form.contact.phone_with_challenge',
            directiveName = 'phoneWithChallenge',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            pfAngularFiltersFormat.moduleName,
            directiveFormFormValidationChallengeValidation.moduleName,
            directiveNgAttr.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-form-form_validation-challenge_validation',
                'directive-ng_attr'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/contact/phoneWithChallenge/phone-with-challenge', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-form-form_validation-is_equal_validation',
        'directive-form-form_validation-phone_with_prefix_validation',
        'directive-form-input_errors'
    ];
    define('directive-form-contact-phone_with_validation', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-phone',
        'pf-angular-filters-format',
        'directive-form-form_validation-is_equal_validation',
        'directive-form-form_validation-phone_with_prefix_validation',
        'directive-tooltips'
    ], function (require) {
        function implementation() {
            var states = {
                    READ: 'read',
                    EDIT: 'edit'
                },
                PhoneWithValidationController = function PhoneWithValidationController($scope) {
                    this.$onInit = function () {
                        function hasError(name, mustBeDirty) {
                            var element = vm[formName][name];
                            return !element.$valid && (mustBeDirty ? element.$dirty : true)
                        }
                        function resetFields() {
                            vm.number = vm.prefix = '';
                            resetValidation()
                        }
                        function resetValidation() {
                            vm.validationNumber = ''
                        }
                        var vm = this,
                            formName = _.camelCase(vm.instanceId);
                        vm.inputName = vm.instanceId + '-inputNumber';
                        vm.validationName = vm.instanceId + '-validationNumber';
                        var hideCountryPrefix = 'true' === vm.hideCountryPrefix,
                            startInEditMode = 'true' === vm.startInEditMode,
                            state;
                        vm.inputHasError = function () {
                            return hasError(vm.inputName, true)
                        };
                        vm.validationHasError = function () {
                            return hasError(vm.validationName, false)
                        };
                        vm.showValidation = function () {
                            var inputElement = vm[formName][vm.inputName];
                            return inputElement.$dirty && inputElement.$valid
                        };
                        vm.isValid = function () {
                            return !vm.inputHasError() && !vm.validationHasError()
                        };
                        vm.isEditMode = function () {
                            return state === states.EDIT
                        };
                        vm.isReadMode = function () {
                            return state === states.READ
                        };
                        vm.goToEditMode = function () {
                            state = states.EDIT;
                            vm.checkDefaultPrefix()
                        };
                        vm.goToReadMode = function () {
                            state = states.READ
                        };
                        vm.format = function (prefix, number) {
                            return phone.formatPhoneNumber(prefix, number, phone.separators.SPACE, hideCountryPrefix)
                        };
                        vm.delete = function () {
                            resetFields();
                            vm.goToReadMode();
                            $scope.$emit(pf.globals.events.FORM_FIELD_REMOVED)
                        };
                        vm.changeNumber = function () {
                            resetValidation()
                        };
                        vm.checkDefaultPrefix = function () {
                            if (!vm.prefix && vm.availablePrefixes) vm.prefix = phone.getDefaultPrefix(vm.availablePrefixes)
                        };
                        if (startInEditMode || vm.isRequired && !vm.number) vm.goToEditMode();
                        else state = states.READ;
                        vm.formId = formName;
                        vm.numberLength = pf.globals.settings.PHONE_NUMBER_LENGTH;
                        var unbindFormBeforeSaveFn = $scope.$on(pf.globals.events.FORM_BEFORE_SAVE, vm.goToReadMode),
                            unbindFormSavedFn = $scope.$on(pf.globals.events.FORM_SAVED, function () {
                                vm.validationNumber = '';
                                vm.goToReadMode()
                            });
                        $scope.$on('$destroy', function () {
                            unbindFormBeforeSaveFn();
                            unbindFormSavedFn()
                        });
                        vm.checkDefaultPrefix()
                    }
                };
            PhoneWithValidationController.$inject = [
                '$scope'
            ];
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    isRequired: '=',
                    instanceId: '@',
                    inputLabel: '@',
                    validationLabel: '@',
                    addLabel: '@',
                    editLabel: '@',
                    deleteLabel: '@',
                    startInEditMode: '@',
                    hideCountryPrefix: '@',
                    availablePrefixes: '=',
                    prefix: '=',
                    number: '='
                },
                controller: PhoneWithValidationController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/contact/phoneWithValidation/phoneWithValidation.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            phone = require('pf-shared-modules-phone'),
            postfinanceSharedFiltersFormat = require('pf-angular-filters-format'),
            directiveFormFormValidationIsEqualValidation = require('directive-form-form_validation-is_equal_validation'),
            directiveFormFormValidationPhoneWithPrefixValidation = require('directive-form-form_validation-phone_with_prefix_validation'),
            directiveTooltips = require('directive-tooltips'),
            moduleName = 'directive.form.contact.phone_with_validation',
            directiveName = 'phoneWithValidation',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            postfinanceSharedFiltersFormat.moduleName,
            directiveFormFormValidationIsEqualValidation.moduleName,
            directiveFormFormValidationPhoneWithPrefixValidation.moduleName,
            directiveTooltips.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/contact/phoneWithValidation/phone-with-validation', function () {
});
!function () {
    'use strict';
    define('directive-form-contact_data', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-platform'
    ], function (require) {
        function implementation() {
            function ContactDataController() {
                this.$onInit = function () {
                    var vm = {
                        data: {
                            isMobile: platform.isMobile()
                        }
                    };
                    _.assignIn(this, vm)
                }
            }
            return {
                restrict: 'E',
                replace: true,
                scope: {
                },
                bindToController: {
                    instanceId: '@',
                    fieldName: '@',
                    addLabel: '@',
                    editLabel: '@',
                    deleteLabel: '@',
                    model: '=',
                    isLastElement: '=',
                    onAdd: '&',
                    onEdit: '&',
                    onDelete: '&'
                },
                controller: ContactDataController,
                controllerAs: 'contactData',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/contactData/contactData.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'directive.form.contact_data',
            directiveName = 'contactData',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/contactData/contact-data', function () {
});
!function () {
    'use strict';
    define('directive-currency_input', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-numbers',
        'pf-angular-common'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, $element, $attrs, ngModelCtrl) {
                    var negativeValueAllowed = 'canBeNegative' === $attrs.currencyInput;
                    if ('false' !== $attrs.isNumberInput) angularCommon.configureNegativeAmountInput($element);
                    ngModelCtrl.$parsers.push(function (viewValue) {
                        var normalizedValue = numbers.normalizeNumber(viewValue),
                            isValid = numbers.isCurrencyValue(normalizedValue, negativeValueAllowed);
                        ngModelCtrl.$setValidity('currency', isValid);
                        if (!viewValue) {
                            ngModelCtrl.$setPristine();
                            ngModelCtrl.$setValidity('currency', null)
                        }
                        return normalizedValue
                    });
                    ngModelCtrl.$render = function () {
                        var viewValue = ngModelCtrl.$viewValue;
                        if (viewValue) viewValue = numbers.normalizeNumber(viewValue);
                        var isValid = viewValue && !isNaN(viewValue) && numbers.isCurrencyValue(viewValue, negativeValueAllowed);
                        ngModelCtrl.$setValidity('currency', isValid);
                        if (isValid) {
                            var formattedValue = numbers.formatNegativeNumber(viewValue);
                            $element.val(formattedValue)
                        } else $element.val(viewValue)
                    };
                    $element.on('blur', function () {
                        ngModelCtrl.$viewValue = $element.val();
                        ngModelCtrl.$modelValue = $element.val();
                        _.set($scope, $attrs.ngModel, numbers.normalizeNumber($element.val()))
                    })
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            numbers = require('pf-shared-modules-numbers'),
            angularCommon = require('pf-angular-common'),
            moduleName = 'directive.currency_input',
            directiveName = 'currencyInput',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/currencyInput/currency-input', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-ng_attr'
    ];
    define('directive-widget-dropdown', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-util',
        'directive-ng_attr',
        'pf-shared-modules-dropdowns'
    ], function (require) {
        function implementation() {
            return {
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/dropdown/dropdown.html',
                restrict: 'E',
                require: 'ngModel',
                scope: {
                    theId: '@',
                    describedby: '@',
                    label: '@',
                    defaultLabel: '@',
                    name: '@',
                    enumKey: '@',
                    setDefault: '@',
                    entries: '=?',
                    required: '=',
                    showListAlways: '=',
                    disabledExpression: '=',
                    fullSize: '=',
                    allowedValues: '=?',
                    onChange: '&'
                },
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    function updateSelected() {
                        if (scope.entries && 0 !== scope.entries.length && !util.isNaN(ngModelCtrl.$modelValue)) {
                            if (scope.entries.length > 1) {
                                scope.selected = _.find(scope.entries, function (item) {
                                    return item.value == ngModelCtrl.$modelValue
                                });
                                if (!scope.selected && scope.defaultLabel) scope.selected = defaultOption
                            } else if (!scope.showListAlways) if (!_.isNil(ngModelCtrl.$modelValue)) scope.selected = scope.entries[0];
                            else scope.selectionChanged(scope.entries[0], 0)
                        } else if (!_.isUndefined(attrs.setDefault)) scope.selectionChanged(scope.entries[0], 0)
                    }
                    var defaultOption = {
                        name: scope.defaultLabel,
                        value: null
                    };
                    scope.selected = null;
                    if (!_.isEmpty(attrs.enumKey)) scope.entries = dropdowns.getWcmsEnumOptions(attrs.enumKey);
                    var unwatch1 = scope.$watch(function () {
                            return ngModelCtrl.$modelValue
                        }, function () {
                            updateSelected()
                        }),
                        unwatch2 = scope.$watch('entries', function () {
                            if (scope.entries) {
                                if (scope.selected && !util.isInArray(scope.selected, scope.entries)) scope.selected = null;
                                if (1 === scope.entries.length && scope.showListAlways) scope.entries.unshift(defaultOption);
                                updateSelected()
                            }
                        }),
                        unwatch3 = _.noop;
                    if (!_.isNil(attrs.allowedValues)) unwatch3 = scope.$watch('allowedValues', function () {
                        if (!_.isEmpty(scope.allowedValues) && scope.entries) scope.entries = _.filter(scope.entries, function (entry) {
                            return _.includes(scope.allowedValues, entry.value)
                        })
                    });
                    scope.$on('$destroy', function () {
                        unwatch1();
                        unwatch2();
                        unwatch3()
                    });
                    scope.selectionChanged = function (entry, index) {
                        if (scope.selected !== entry) {
                            ngModelCtrl.$setViewValue(entry.value);
                            ngModelCtrl.$commitViewValue();
                            scope.selected = entry;
                            scope.onChange({
                                entry: entry,
                                index: index
                            })
                        }
                    };
                    updateSelected()
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            directiveNgAttr = require('directive-ng_attr'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            moduleName = 'directive.widget.dropdown',
            directiveName = 'dropdown';
        angular.module(moduleName, [
            directiveNgAttr.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/dropdown/dropdown', function () {
});
!function () {
    'use strict';
    define('directive-form-editable_input', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-platform'
    ], function (require) {
        function implementation() {
            function EditableInputController($scope) {
                var editableInput = this;
                this.$onInit = function () {
                    var vm = {
                        actions: {
                        },
                        helpers: {
                        },
                        data: {
                            isMobile: platform.isMobile(),
                            mode: 'readonly'
                        }
                    };
                    vm.actions.onAddClicked = function onAddClicked() {
                        vm.data.mode = 'edit';
                        editableInput.onAdd()
                    };
                    vm.actions.onEditClicked = function onEditClicked() {
                        vm.data.mode = 'edit';
                        editableInput.onEdit()
                    };
                    vm.actions.onDeleteClicked = function onDeleteClicked() {
                        vm.data.mode = 'readonly';
                        editableInput.model = '';
                        editableInput.onDelete();
                        $scope.$emit(pf.globals.events.FORM_FIELD_REMOVED)
                    };
                    vm.helpers.showAddButton = function showAddButton() {
                        return 'readonly' === vm.data.mode && _.isEmpty(editableInput.model)
                    };
                    vm.helpers.showEditButton = function showEditButton() {
                        return 'readonly' === vm.data.mode && !_.isEmpty(editableInput.model)
                    };
                    _.assignIn(this, vm)
                }
            }
            EditableInputController.$inject = [
                '$scope'
            ];
            return {
                restrict: 'E',
                replace: true,
                scope: {
                },
                bindToController: {
                    theId: '@',
                    fieldName: '@',
                    inputFieldName: '@',
                    addLabel: '@',
                    editLabel: '@',
                    deleteLabel: '@',
                    model: '=',
                    isLastElement: '=',
                    isRequired: '=',
                    noAdd: '=',
                    noEdit: '=',
                    noDelete: '=',
                    onAdd: '&',
                    onEdit: '&',
                    onDelete: '&'
                },
                controller: EditableInputController,
                controllerAs: 'editableInput',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/editableInput/editableInput.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'directive.form.editable_input',
            directiveName = 'editableInput',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/editableInput/editable-input', function () {
});
!function () {
    'use strict';
    define('directive-email_validation_attr', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                require: 'ngModel',
                restrict: '',
                link: function linkFn(scope, elm, attrs, ngModelCtrl) {
                    if (_.has(ngModelCtrl, '$validators.email')) ngModelCtrl.$validators.email = function (modelValue) {
                        return ngModelCtrl.$isEmpty(modelValue) || !_.startsWith(modelValue, '.') && new RegExp(pf.globals.regexp.EMAIL_PATTERN).test(modelValue)
                    }
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.email_validation_attr',
            directiveName = 'emailValidationAttr',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/emailValidationAttr/email-validation-attr', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-form-input_errors'
    ];
    define('directive-form-file', [
        'require',
        'lodash'
    ], function (require) {
        function implementation() {
            var FileController = function FileController($scope, $element) {
                this.$onInit = function () {
                    function fileTypeValid(file) {
                        var fileType = _.lowerCase(_.last(_.split(file.name, '.')));
                        return _.includes(acceptedFileTypes, fileType)
                    }
                    this.show = _.join(this.showTypes, ',');
                    this.showTooltip = this.tooltip || false;
                    this.prefix = this.translatePrefix ? this.translatePrefix : '';
                    var acceptedFileTypes = this.acceptTypes;
                    $element.find('input').on('change', function () {
                        var fileInput = $scope.fileForm,
                            input = document.getElementById(this.theId),
                            files = input.files,
                            f = files[0];
                        if (_.isUndefined(f)) {
                            fileInput.$setValidity('fileType', true);
                            fileInput.$setValidity('fileSize', true);
                            this.value.name = null;
                            if (_.isFunction(this.fileChanged)) this.fileChanged({
                                file: null
                            })
                        } else if (this.maxSize && f.size > this.maxSize) {
                            fileInput.$setValidity('fileType', true);
                            fileInput.$setValidity('fileSize', false);
                            this.value.name = null
                        } else if (!fileTypeValid(f)) {
                            fileInput.$setValidity('fileType', false);
                            fileInput.$setValidity('fileSize', true);
                            this.value.name = null
                        } else {
                            fileInput.$setValidity('fileType', true);
                            fileInput.$setValidity('fileSize', true);
                            fileInput.$setDirty();
                            this.value.name = f.name;
                            var r = new FileReader;
                            r.onloadend = function (e) {
                                this.value.content = e.target.result;
                                if (_.isFunction(this.fileChanged)) this.fileChanged({
                                    file: f
                                })
                            }.bind(this);
                            r.readAsDataURL(f)
                        }
                        $scope.$applyAsync()
                    }.bind(this))
                }
            };
            FileController.$inject = [
                '$scope',
                '$element'
            ];
            return {
                restrict: 'E',
                replace: true,
                require: 'ngModel',
                bindToController: {
                    fileChanged: '&fileChanged',
                    value: '=',
                    showTypes: '=',
                    acceptTypes: '=',
                    maxSize: '=',
                    required: '=',
                    hideLabel: '=',
                    tooltip: '=',
                    theId: '@',
                    translatePrefix: '@',
                    translateValues: '='
                },
                controller: FileController,
                controllerAs: 'vm',
                scope: true,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/file/file.html'
            }
        }
        var _ = require('lodash'),
            moduleName = 'directive.form.file',
            directiveName = 'file';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/file/file', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-amount_range', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-numbers'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    function watchAndSet(propName) {
                        var unwatch = scope.$watch(function () {
                            return scope.$eval(attrs[propName])
                        }, function (newVal, oldVal) {
                            limits[propName] = parseFloat(newVal);
                            if (newVal !== oldVal) revalidate()
                        });
                        scope.$on('$destroy', unwatch)
                    }
                    function revalidate() {
                        _.forEach(ngModelCtrl.$parsers, function (parser) {
                            parser(ngModelCtrl.$viewValue)
                        })
                    }
                    function setValidity(validityName, propName, value) {
                        ngModelCtrl.$setValidity(validityName, _.isFinite(limits[propName]) ? value : true)
                    }
                    var limits = {
                    };
                    watchAndSet('minValue');
                    watchAndSet('maxValue');
                    ngModelCtrl.$parsers.unshift(function (viewValue) {
                        var normalizedValue = numbers.normalizeNumber(viewValue);
                        setValidity(pf.globals.form.validations.AMOUNT_RANGE_MIN, 'minValue', normalizedValue >= limits.minValue);
                        setValidity(pf.globals.form.validations.AMOUNT_RANGE_MAX, 'maxValue', normalizedValue <= limits.maxValue);
                        return viewValue
                    })
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            numbers = require('pf-shared-modules-numbers'),
            moduleName = 'directive.amount_range',
            directiveName = 'amountRange',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/amountRange/amount-range', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-challenge_validation', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: '^ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    ngModelCtrl.$parsers.unshift(function (viewValue) {
                        ngModelCtrl.$setValidity(pf.globals.form.validations.CHALLENGE, true);
                        return viewValue
                    })
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.challenge_validation',
            directiveName = 'challengeValidation',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/challengeValidation/challenge-validation', function () {
});
!function () {
    'use strict';
    define('directive-form_validation-char_limit', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    var limit = attrs.charLimit,
                        selectionActive = false;
                    element.bind('keyup', function () {
                        var validity = element.val().length <= limit;
                        ngModelCtrl.$setValidity('charLimit', validity)
                    });
                    element.bind('keypress', function (event) {
                        if (!selectionActive) {
                            if (element.val().length >= limit) if (8 !== event.keyCode) event.preventDefault()
                        } else selectionActive = false
                    });
                    element.bind('select', function () {
                        selectionActive = true
                    });
                    element.bind('blur', function () {
                        selectionActive = false
                    })
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.form_validation.char_limit',
            directiveName = 'charLimit';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/charLimit/char-limit', function () {
});
!function () {
    'use strict';
    define('directive-form_validation-date_validation', [
        'require',
        'angular',
        'moment'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    function watchAndSet(propName) {
                        var unwatch = scope.$watch(function () {
                            return attrs[propName]
                        }, function (newVal) {
                            if (!!newVal) if ('minDate' === propName) {
                                minDate = moment(newVal, pf.globals.formats.moment.ISO_DATE);
                                ngModelCtrl.$validate()
                            } else if ('maxDate' === propName) {
                                maxDate = moment(newVal, pf.globals.formats.moment.ISO_DATE);
                                ngModelCtrl.$validate()
                            }
                        });
                        scope.$on('$destroy', unwatch)
                    }
                    var minDate,
                        maxDate;
                    if (attrs.minDate) minDate = moment(attrs.minDate, pf.globals.formats.moment.ISO_DATE);
                    if (attrs.maxDate) maxDate = moment(attrs.maxDate, pf.globals.formats.moment.ISO_DATE);
                    watchAndSet('minDate');
                    watchAndSet('maxDate');
                    ngModelCtrl.$validators.date = function (value) {
                        var hasValue = !!(value && '' !== value),
                            validity = true;
                        if (hasValue) {
                            var parsedDate = moment(value, pf.globals.formats.moment.LOCALIZED_DATE);
                            validity = !!value.match(/^(\d\d\.){2}\d{4}$/) && parsedDate.isValid();
                            if (validity && minDate) {
                                var minValidity = parsedDate.diff(minDate, 'days') >= 0;
                                ngModelCtrl.$setValidity('minDate', minValidity)
                            }
                            if (validity && maxDate) {
                                var maxValidity = parsedDate.diff(maxDate, 'days') <= 0;
                                ngModelCtrl.$setValidity('maxDate', maxValidity)
                            }
                        } else {
                            ngModelCtrl.$setValidity('maxDate', validity);
                            ngModelCtrl.$setValidity('minDate', validity)
                        }
                        return validity
                    }
                }
            }
        }
        var angular = require('angular'),
            moment = require('moment'),
            moduleName = 'directive.form_validation.date_validation',
            directiveName = 'dateValidation',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/dateValidation/date-validation', function () {
});
!function () {
    'use strict';
    define('directive-form_validation-disable_and_ignore', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: '^form',
                link: function (scope, element, attrs, formCtrl) {
                    var control = formCtrl[attrs.name],
                        unwatch = scope.$watch(function () {
                            return scope.$eval(attrs.disableAndIgnore)
                        }, function (newVal) {
                            if (newVal) {
                                element.prop('disabled', true);
                                formCtrl.$removeControl(control)
                            } else {
                                element.prop('disabled', false);
                                formCtrl.$addControl(control);
                                _.forEach(control.$error, function (validity, validationToken) {
                                    formCtrl.$setValidity(validationToken, !validity, control)
                                })
                            }
                        });
                    scope.$on('$destroy', unwatch)
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            moduleName = 'directive.form_validation.disable_and_ignore',
            directiveName = 'disableAndIgnore',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/disableAndIgnore/disable-and-ignore', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-integer_only', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-numbers'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    ngModelCtrl.$parsers.unshift(function (viewValue) {
                        var numberValue = _.toNumber(numbers.normalizeNumber(viewValue));
                        ngModelCtrl.$setValidity('integer', _.isInteger(numberValue));
                        return viewValue
                    })
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            numbers = require('pf-shared-modules-numbers'),
            moduleName = 'directive.integer_only',
            directiveName = 'integerOnly',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/integerOnly/integer-only', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-is_equal_validation', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                require: '^form',
                restrict: '',
                link: function linkFn(scope, elm, attrs, formCtrl) {
                    function controlsChanged() {
                        var validity = true,
                            validInput = inputControl.$modelValue,
                            validValidation = validationControl.$modelValue;
                        if (validInput && validValidation) validity = validInput === validValidation;
                        validationControl.$setValidity('validation', validity)
                    }
                    function initialize() {
                        inputControl.$viewChangeListeners.push(controlsChanged);
                        validationControl.$viewChangeListeners.push(controlsChanged)
                    }
                    var alreadyInitialized = false,
                        inputControl = null,
                        validationControl = null,
                        unwatch1 = scope.$watch(function () {
                            return formCtrl[attrs.equalityInput]
                        }, function (newVal) {
                            if (newVal) {
                                inputControl = newVal;
                                if (validationControl && !alreadyInitialized) initialize()
                            }
                        }),
                        unwatch2 = scope.$watch(function () {
                            return formCtrl[attrs.equalityValidation]
                        }, function (newVal) {
                            if (newVal) {
                                validationControl = newVal;
                                if (inputControl && !alreadyInitialized) initialize()
                            }
                        });
                    scope.$on('$destroy', function () {
                        unwatch1();
                        unwatch2()
                    })
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.form.form_validation.is_equal_validation',
            directiveName = 'isEqualValidation',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/isEqualValidation/is-equal-validation', function () {
});
!function () {
    'use strict';
    define('directive-form_validation-lower_bigger', [
        'require',
        'angular',
        'bignumber',
        'pf-shared-modules-numbers',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        function implementation($timeout) {
            return {
                restrict: 'A',
                require: '^form',
                link: function linkFn(scope, element, attrs, formCtrl) {
                    function isValid(value) {
                        return value && !window.isNaN(value)
                    }
                    function initialize() {
                        fromControl.$validators.lowerBigger = controlsChanged(toControl);
                        toControl.$validators.lowerBigger = controlsChanged(fromControl);
                        alreadyInitialized = true
                    }
                    var alreadyInitialized = false,
                        fromControl = null,
                        toControl = null,
                        controlsChanged = function controlsChanged(compareControl) {
                            return function () {
                                var validity = true;
                                try {
                                    var fromValue = numbers.normalizeNumber(fromControl.$viewValue),
                                        toValue = numbers.normalizeNumber(toControl.$viewValue);
                                    if (isValid(fromValue) && isValid(toValue)) validity = new Bignumber(fromValue.toString()).lte(new Bignumber(toValue.toString()));
                                    if (validity !== compareControl.$valid) $timeout(function () {
                                        compareControl.$validate()
                                    })
                                } catch (e) {
                                    LOG.error('Bignumber threw an error on an invalid value. {0} for params [{1}] and [{2}]', [
                                        e,
                                        fromControl.$modelValue,
                                        toControl.$modelValue
                                    ]);
                                    validity = true
                                }
                                return validity
                            }
                        },
                        unwatch1 = scope.$watch(function () {
                            return formCtrl[attrs.numberFromName]
                        }, function (newVal) {
                            if (newVal) {
                                fromControl = newVal;
                                if (toControl && !alreadyInitialized) initialize()
                            }
                        }),
                        unwatch2 = scope.$watch(function () {
                            return formCtrl[attrs.numberToName]
                        }, function (newVal) {
                            if (newVal) {
                                toControl = newVal;
                                if (fromControl && !alreadyInitialized) initialize()
                            }
                        });
                    scope.$on('$destroy', function () {
                        unwatch1();
                        unwatch2()
                    })
                }
            }
        }
        var angular = require('angular'),
            Bignumber = require('bignumber'),
            numbers = require('pf-shared-modules-numbers'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            LOG = loggerFactory.getLogger('directive-form_validation-lower_bigger'),
            moduleName = 'directive.form_validation.lower_bigger',
            directiveName = 'lowerBigger',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        implementation.$inject = [
            '$timeout'
        ];
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/lowerBigger/lower-bigger', function () {
});
!function () {
    'use strict';
    define('directive-form_validation-period_validation', [
        'require',
        'angular',
        'moment',
        'lodash'
    ], function (require) {
        function implementation($timeout) {
            return {
                restrict: 'A',
                require: 'form',
                link: function linkFn(scope, element, attrs, formCtrl) {
                    function controlsChanged(compareControl) {
                        return function () {
                            var validity = true,
                                validFrom = !_.isEmpty(fromControl.$viewValue) && _.get(fromControl, '$validators.date', _.noop) (fromControl.$viewValue),
                                validTo = !_.isEmpty(toControl.$viewValue) && _.get(toControl, '$validators.date', _.noop) (toControl.$viewValue);
                            if (validFrom && validTo) validity = moment(toControl.$viewValue, format).diff(moment(fromControl.$viewValue, format), 'days') >= minDiff;
                            if (validity !== compareControl.$valid) $timeout(function () {
                                compareControl.$validate()
                            });
                            return validity
                        }
                    }
                    function initialize() {
                        fromControl.$validators.period = controlsChanged(toControl);
                        toControl.$validators.period = controlsChanged(fromControl)
                    }
                    var alreadyInitialized = false,
                        minDiff = attrs.minDiff >= 0 ? parseInt(attrs.minDiff, 10)  : 1,
                        format = pf.globals.formats.moment.LOCALIZED_DATE,
                        fromControl = null,
                        toControl = null,
                        unwatch1 = scope.$watch(function () {
                            return formCtrl[attrs.dateFromName]
                        }, function (newVal) {
                            if (newVal) {
                                fromControl = newVal;
                                if (toControl && !alreadyInitialized) initialize()
                            }
                        }),
                        unwatch2 = scope.$watch(function () {
                            return formCtrl[attrs.dateToName]
                        }, function (newVal) {
                            if (newVal) {
                                toControl = newVal;
                                if (fromControl && !alreadyInitialized) initialize()
                            }
                        });
                    scope.$on('$destroy', function () {
                        unwatch1();
                        unwatch2()
                    })
                }
            }
        }
        var angular = require('angular'),
            moment = require('moment'),
            _ = require('lodash'),
            moduleName = 'directive.form_validation.period_validation',
            directiveName = 'periodValidation',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        implementation.$inject = [
            '$timeout'
        ];
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/periodValidation/period-validation', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-phone_validation', [
        'require',
        'angular',
        'pf-shared-modules-phone'
    ], function (require) {
        function implementation() {
            return {
                require: 'ngModel',
                restrict: '',
                link: function linkFn(scope, elm, attrs, ngModelCtrl) {
                    ngModelCtrl.$validators.phone = function (modelValue) {
                        var number = _.replace(modelValue, /\s/g, '');
                        return ngModelCtrl.$isEmpty(number) || phone.isValidPhoneNumber(number)
                    }
                }
            }
        }
        var angular = require('angular'),
            phone = require('pf-shared-modules-phone'),
            moduleName = 'directive.form.form_validation.phone_validation',
            directiveName = 'phoneValidation',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/phoneValidation/phone-validation', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-phone_with_prefix_validation', [
        'require',
        'angular',
        'pf-shared-modules-phone'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                scope: {
                    phonePrefix: '='
                },
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    ngModelCtrl.$validators.phoneNumber = function validatePhoneNumber() {
                        var isDirty = ngModelCtrl.$dirty,
                            validity = true;
                        if (isDirty) {
                            var combinedPhone = phone.combinePhoneParts({
                                prefix: scope.phonePrefix,
                                number: ngModelCtrl.$viewValue
                            });
                            validity = phone.isSwissMobileNumber(combinedPhone) || phone.isLiechtensteinianNumber(combinedPhone);
                            ngModelCtrl.$setValidity('phoneNumber', validity)
                        } else ngModelCtrl.$setValidity('phoneNumber', validity);
                        return validity
                    };
                    var unwatch = scope.$watch('phonePrefix', function () {
                        ngModelCtrl.$validators.phoneNumber()
                    });
                    scope.$on('$destroy', unwatch)
                }
            }
        }
        var angular = require('angular'),
            phone = require('pf-shared-modules-phone'),
            moduleName = 'directive.form_validation.phone_with_prefix_validation',
            directiveName = 'phoneWithPrefixValidation',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/phoneWithPrefixValidation/phone-with-prefix-validation', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-positive_only', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-numbers'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    ngModelCtrl.$parsers.unshift(function (viewValue) {
                        var numberValue = _.toNumber(numbers.normalizeNumber(viewValue));
                        ngModelCtrl.$setValidity('positive', numberValue >= 0);
                        return viewValue
                    })
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            numbers = require('pf-shared-modules-numbers'),
            moduleName = 'directive.positive_only',
            directiveName = 'positiveOnly',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/positiveOnly/positive-only', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-post_account', [
        'require',
        'angular',
        'pf-shared-modules-validator'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, element, $attrs, ngModelCtrl) {
                    function parseIban(viewValue) {
                        if (void 0 === viewValue) return '';
                        else return viewValue.replace(/\s/g, '').toUpperCase()
                    }
                    ngModelCtrl.$validators.postAccount = function (modelValue) {
                        var val = parseIban(modelValue);
                        if (val) return validator.isValidPostAccount(val) || validator.isValidPostIban(val);
                        ngModelCtrl.$setPristine();
                        return true
                    }
                }
            }
        }
        var angular = require('angular'),
            validator = require('pf-shared-modules-validator'),
            moduleName = 'directive.post_account',
            directiveName = 'postAccount',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/postAccount/post-account', function () {
});
!function () {
    'use strict';
    define('directive-form-form_validation-reference_number', [
        'require',
        'angular',
        'pf-shared-modules-validator'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, element, $attrs, ngModelCtrl) {
                    ngModelCtrl.$validators.referenceNumber = function (modelValue) {
                        return validator.isValidReferenceNumber(modelValue)
                    }
                }
            }
        }
        var angular = require('angular'),
            validator = require('pf-shared-modules-validator'),
            moduleName = 'directive.reference_number',
            directiveName = 'referenceNumber',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/formValidation/referenceNumber/reference-number', function () {
});
!function () {
    'use strict';
    define('directive-form-iban', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, element, $attrs, ngModelCtrl) {
                    function formatIban(modelValue) {
                        if (!_.isUndefined(modelValue)) {
                            var input = modelValue.toString().replace(/\s/g, '');
                            if (input.substr(0, 4).match(/^[A-Za-z]{2}([0-9]{2})$/g)) return input.replace(/(.{4})/g, '$1 ');
                            else return input
                        }
                        return modelValue
                    }
                    element.bind('keydown', function (event) {
                        var cursor = element[0].selectionStart,
                            length = element.val().length,
                            isCursorAtEnd = cursor === length,
                            viewValue = ngModelCtrl.$viewValue.replace(/\s/g, '');
                        if (event.keyCode === pf.globals.keycodes.BACKSPACE) {
                            if (_.endsWith(viewValue, ' ')) {
                                viewValue = viewValue.substr(0, viewValue.length - 1);
                                ngModelCtrl.$viewValue = viewValue;
                                ngModelCtrl.$render()
                            }
                        } else if (/^[A-Za-z0-9]$/.test(event.key) && !event.ctrlKey) {
                            viewValue = formatIban(viewValue);
                            ngModelCtrl.$viewValue = viewValue;
                            ngModelCtrl.$render();
                            if (!isCursorAtEnd) {
                                element[0].selectionStart = cursor;
                                element[0].selectionEnd = cursor
                            }
                        }
                    });
                    element.bind('blur', function () {
                        var viewValue = ngModelCtrl.$viewValue.replace(/\s/g, '');
                        viewValue = formatIban(viewValue);
                        ngModelCtrl.$viewValue = viewValue;
                        ngModelCtrl.$render()
                    });
                    ngModelCtrl.$formatters.push(formatIban)
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.iban',
            directiveName = 'iban',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/iban/iban', function () {
});
!function () {
    'use strict';
    define('directive-form-input_error', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                require: '^inputErrors',
                scope: {
                    when: '=',
                    text: '@'
                },
                link: function linkFn(scope, element, attrs, inputErrorsCtrl) {
                    scope.hasCondition = !!attrs.when;
                    inputErrorsCtrl.registerInputError(scope)
                },
                replace: true,
                template: '<span ng-show=\'showElement\' role=\'alert\' data-ng-bind=\'text\'></span>'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.form.input_error',
            directiveName = 'inputError';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/inputError/input-error', function () {
});
!function () {
    'use strict';
    define('directive-form-input_errors', [
        'require',
        'angular',
        'lodash',
        'jquery',
        'directive-form-input_error'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                transclude: true,
                scope: {
                    theId: '@'
                },
                link: function linkFn(scope, ele) {
                    var $element = jQuery(ele);
                    $element.attr('id', scope.theId);
                    scope.checkErrors()
                },
                controller: [
                    '$scope',
                    function controllerFn($scope) {
                        $scope.errors = [
                        ];
                        this.registerInputError = function registerInputError(error) {
                            $scope.errors.push(error);
                            if (error.hasCondition) {
                                var unwatch = $scope.$watch(function () {
                                    return error.when
                                }, function (newVal, oldVal) {
                                    if (newVal !== oldVal) $scope.checkErrors()
                                });
                                $scope.$on('$destroy', unwatch)
                            }
                        };
                        $scope.checkErrors = function checkErrors() {
                            var isElementShown = false;
                            _.forEach($scope.errors, function (item) {
                                if (item.when && !isElementShown) {
                                    item.showElement = true;
                                    isElementShown = true
                                } else item.showElement = false
                            })
                        }
                    }
                ],
                template: '<div class=\'pf-form_input_error\'><ng-transclude></ng-transclude><div>'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            jQuery = require('jquery'),
            directiveInputError = require('directive-form-input_error'),
            moduleName = 'directive.form.input_errors',
            directiveName = 'inputErrors',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            directiveInputError.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-form-input_error'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/inputError/input-errors', function () {
});
!function () {
    'use strict';
    define('directive-form-input_info', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                require: '^inputInfos',
                scope: {
                    when: '=',
                    text: '@'
                },
                link: function linkFn(scope, element, attrs, inputInfosCtrl) {
                    scope.hasCondition = !!attrs.when;
                    inputInfosCtrl.registerInputInfo(scope)
                },
                replace: true,
                template: '<span ng-show=\'showElement\' ng-bind-html=\'text|unsafe\'></span>'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.form.input_info',
            directiveName = 'inputInfo';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/inputInfo/input-info', function () {
});
!function () {
    'use strict';
    define('directive-form-input_infos', [
        'require',
        'lodash',
        'angular',
        'directive-form-input_info',
        'jquery'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                transclude: true,
                scope: {
                    theId: '@'
                },
                link: function linkFn(scope, ele) {
                    var $element = jQuery(ele);
                    $element.attr('id', scope.theId);
                    scope.checkInfos()
                },
                controller: [
                    '$scope',
                    function controllerFn($scope) {
                        $scope.infos = [
                        ];
                        this.registerInputInfo = function registerInputInfo(info) {
                            $scope.infos.push(info);
                            if (info.hasCondition) {
                                var unwatch = $scope.$watch(function () {
                                    return info.when
                                }, function (newVal, oldVal) {
                                    if (newVal !== oldVal) $scope.checkInfos()
                                });
                                $scope.$on('$destroy', unwatch)
                            }
                        };
                        $scope.checkInfos = function checkInfos() {
                            var isElementShown = false;
                            _.forEach($scope.infos, function (item) {
                                if ((item.when || !item.hasCondition) && !isElementShown) {
                                    item.showElement = true;
                                    isElementShown = true
                                } else item.showElement = false
                            })
                        }
                    }
                ],
                template: '<div class=\'pf-form_input_additional\'><ng-transclude></ng-transclude><div>'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            directiveInputInfo = require('directive-form-input_info'),
            jQuery = require('jquery'),
            moduleName = 'directive.form.input_infos',
            directiveName = 'inputInfos',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            directiveInputInfo.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-form-input_info'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/inputInfo/input-infos', function () {
});
!function () {
    'use strict';
    var directives = [
    ];
    define('directive-form-input_with_autocomplete', [
        'require',
        'angular',
        'lodash',
        'jquery',
        'pf-shared-modules-platform'
    ], function (require) {
        function implementation() {
            function InputWithAutocompleteController($scope, $timeout) {
                this.$onInit = function () {
                    function filter() {
                        $timeout(function () {
                            vm.filteredList = _.filter(vm.list, function (c) {
                                return platform.isDemo() || _.includes(_.toUpper(c.textLeft), _.toUpper(vm.inputModel))
                            })
                        });
                        vm.isLoading = false
                    }
                    function focusRelativeOption(number) {
                        var $suggestionList = jQuery('.autocomplete-suggestionlist--item:visible');
                        if ($suggestionList.length > 0) {
                            var index = $suggestionList.index($(document.activeElement)),
                                newIndex = index + number,
                                element = $suggestionList.eq(newIndex);
                            if (newIndex < 0 || newIndex > $suggestionList.length) element = null;
                            if (element && element.length > 0) element.focus();
                            else jQuery(elements.INPUT_FIELD).focus()
                        }
                    }
                    var vm = this;
                    vm.threshold = vm.threshold || 2;
                    vm.list = [
                    ];
                    vm.isLoading = false;
                    var keyCodes = [
                            pf.globals.keycodes.ENTER,
                            pf.globals.keycodes.SPACE,
                            pf.globals.keycodes.UP_ARROW,
                            pf.globals.keycodes.TAB,
                            pf.globals.keycodes.SHIFT
                        ],
                        elements = {
                            INSTANCE: '#' + vm.instanceId + '-parent',
                            INPUT_FIELD: '#' + vm.instanceId + '-input'
                        };
                    vm.reset = function () {
                        vm.inputModel = '';
                        vm.list = [
                        ];
                        vm.filteredList = [
                        ];
                        this.onReset();
                        jQuery(elements.INPUT_FIELD).focus()
                    };
                    vm.update = function (event) {
                        if (!_.includes(keyCodes, event.keyCode)) {
                            vm.isLoading = true;
                            if (vm.inputModel && vm.inputModel.length >= vm.threshold) if (vm.inputModel.length > vm.threshold && !_.isEmpty(vm.list)) filter();
                            else this.updateList({
                                    filter: vm.inputModel
                                }).then(function (data) {
                                    $timeout(function () {
                                        vm.list = data;
                                        filter()
                                    })
                                });
                            else {
                                vm.list = [
                                ];
                                vm.filteredList = [
                                ]
                            }
                        }
                    }.bind(this);
                    vm.selectEntry = function (entry, setFocus) {
                        vm.inputModel = entry.textLeft;
                        this.onSelectEntry({
                            entry: entry
                        });
                        vm.list = [
                        ];
                        vm.filteredList = [
                        ];
                        if (setFocus) jQuery(elements.INPUT_FIELD).focus()
                    }.bind(this);
                    vm.showResetButton = function () {
                        return !!vm.inputModel
                    };
                    vm.showList = function () {
                        return !_.isEmpty(vm.list) && !vm.isLoading
                    };
                    $(document).ready(function () {
                        var instance = jQuery(elements.INSTANCE);
                        instance.on('keydown', function (event) {
                            switch (event.keyCode) {
                                case pf.globals.keycodes.DOWN_ARROW:
                                    focusRelativeOption(1);
                                    event.preventDefault();
                                    break;
                                case pf.globals.keycodes.UP_ARROW:
                                    focusRelativeOption( - 1);
                                    event.preventDefault()
                            }
                        })
                    }); vm.blur = function (event) {
                        $timeout(function () {
                            var target = event.relatedTarget;
                            if (null === target) target = document.activeElement;
                            if (_.isNil(target) || 0 === $(target).closest('.autocomplete-suggestionlist--item').length) if (_.isArray(vm.filteredList) && 1 === vm.filteredList.length) vm.selectEntry(vm.filteredList[0], false);
                            else vm.list = [
                                ]
                        }, 100)
                    }; $scope.$on('$destroy', function () {
                        var instance = jQuery(elements.INSTANCE);
                        instance.off('keydown')
                    })
                }
            }
            InputWithAutocompleteController.$inject = [
                '$scope',
                '$timeout'
            ];
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    instanceId: '@',
                    placeholderKey: '@',
                    threshold: '@',
                    disabled: '=ngDisabled',
                    inputModel: '=?',
                    updateList: '&',
                    onSelectEntry: '&',
                    onReset: '&'
                },
                controller: InputWithAutocompleteController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/inputWithAutocomplete/inputWithAutocomplete.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            jQuery = require('jquery'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'directive.form.input_with_autocomplete',
            directiveName = 'inputWithAutocomplete',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/inputWithAutocomplete/input-with-autocomplete', function () {
});
!function () {
    'use strict';
    define('directive-form-numeric_range', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    function calculateValue(value) {
                        if (isValid(value)) {
                            if (isValid(minValue) && value < minValue) return minValue;
                            if (isValid(maxValue) && value > maxValue) return maxValue;
                            else return value
                        }
                        return ngModelCtrl.$modelValue
                    }
                    function isValid(num) {
                        return _.isFinite(num)
                    }
                    var minValue = parseInt(attrs.minValue, 10),
                        maxValue = parseInt(attrs.maxValue, 10);
                    ngModelCtrl.$parsers.push(function (viewValue) {
                        var value = parseInt(viewValue, 10),
                            effectiveValue = calculateValue(value);
                        element.val(effectiveValue);
                        return effectiveValue
                    })
                }
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            moduleName = 'directive.numeric_range',
            directiveName = 'numericRange',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/numericRange/numeric-range', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-pf_translate'
    ];
    define('directive-form-submit', [
        'require',
        'angular',
        'pf-shared-modules-util',
        'lodash'
    ], function (require) {
        function implementation() {
            var SubmitCtrl = function SubmitCtrl($timeout) {
                this.$onInit = function () {
                    var vm = {
                        actions: {
                        },
                        data: {
                            buttonDisabled: false
                        }
                    };
                    vm.actions.submit = function submit($event) {
                        if (!this.isDisabled && !vm.data.buttonDisabled) {
                            vm.data.buttonDisabled = true;
                            var promise = this.onSubmit({
                                $event: $event
                            });
                            if (_.isUndefined(promise) || !util.isPromise(promise)) {
                                if (!this.noPromise);
                                $timeout(pf.globals.settings.DOUBLE_CLICK_DELAY).then(function () {
                                    vm.data.buttonDisabled = false
                                })
                            } else promise.finally (function () {
                                $timeout(function () {
                                    vm.data.buttonDisabled = false
                                })
                            })
                        }
                    }.bind(this);
                    _.assignIn(this, vm)
                }
            };
            SubmitCtrl.$inject = [
                '$timeout'
            ];
            return {
                restrict: 'E',
                replace: true,
                scope: {
                },
                bindToController: {
                    isDisabled: '=',
                    isPrimary: '=',
                    noPromise: '=',
                    onSubmit: '&',
                    label: '@'
                },
                controller: SubmitCtrl,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/submit/submit.html'
            }
        }
        var angular = require('angular'),
            util = require('pf-shared-modules-util'),
            _ = require('lodash'),
            moduleName = 'directive.form.submit',
            directiveName = 'submit';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/submit/submit', function () {
});
!function () {
    'use strict';
    var directives = [
    ];
    define('directive-form-text_input_option', [
        'require',
        'angular',
        'lodash',
        'pf-angular-filters-format'
    ], function (require) {
        function implementation() {
            function TextInputOption($scope, $window, $timeout) {
                this.$onInit = function () {
                    function hasError(name, mustBeDirty) {
                        var element = vm[formName][name];
                        return !element.$valid && (mustBeDirty ? element.$dirty : true)
                    }
                    function resetFields() {
                        vm.value = ''
                    }
                    var vm = this,
                        formName = _.camelCase(vm.instanceId),
                        inputName = vm.instanceId + '-input',
                        startInEditMode = 'true' === vm.startInEditMode,
                        state;
                    if (startInEditMode) state = states.EDIT;
                    else state = states.READ;
                    vm.formId = formName;
                    vm.inputHasError = function () {
                        return hasError(inputName, true)
                    };
                    vm.isEditMode = function () {
                        return state === states.EDIT
                    };
                    vm.isReadMode = function () {
                        return state === states.READ
                    };
                    vm.goToEditMode = function () {
                        state = states.EDIT;
                        $timeout(function () {
                            var element = $window.document.getElementById(inputName);
                            if (element) element.focus()
                        })
                    };
                    vm.goToReadMode = function () {
                        state = states.READ
                    };
                    vm.delete = function () {
                        resetFields();
                        vm.goToReadMode();
                        $scope.$emit(pf.globals.events.FORM_FIELD_REMOVED)
                    };
                    var unbindFormBeforeSaveFn = $scope.$on(pf.globals.events.FORM_BEFORE_SAVE, vm.goToReadMode),
                        unbindFormSavedFn = $scope.$on(pf.globals.events.FORM_SAVED, function () {
                            vm.goToReadMode()
                        });
                    $scope.$on('$destroy', function () {
                        unbindFormBeforeSaveFn();
                        unbindFormSavedFn()
                    })
                }
            }
            var states = {
                READ: 'read',
                EDIT: 'edit'
            };
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    instanceId: '@',
                    inputLabel: '@',
                    inputAriaLabel: '@',
                    addLabel: '@',
                    addAriaLabel: '@',
                    editLabel: '@',
                    editAriaLabel: '@',
                    deleteLabel: '@',
                    deleteAriaLabel: '@',
                    startInEditMode: '@',
                    value: '=',
                    size: '=',
                    maxLength: '=',
                    noBold: '='
                },
                controller: [
                    '$scope',
                    '$window',
                    '$timeout',
                    TextInputOption
                ],
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/textInputOption/textInputOption.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            postfinanceSharedFiltersFormat = require('pf-angular-filters-format'),
            moduleName = 'directive.form.text_input_option',
            directiveName = 'textInputOption';
        angular.module(moduleName, [
            postfinanceSharedFiltersFormat.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/textInputOption/text-input-option', function () {
});
!function () {
    'use strict';
    define('directive-form-toggle_buttons', [
        'require',
        'angular',
        'lodash',
        'pf-shared-modules-dropdowns'
    ], function (require) {
        function implementation() {
            function ToggleButtonsController() {
                this.$onInit = function () {
                    if (!_.isEmpty(this.enumKey)) this.buttons = dropdowns.getWcmsEnumOptions(this.enumKey)
                }
            }
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    theId: '@',
                    labelledBy: '@',
                    ngModel: '=',
                    onChange: '&',
                    buttons: '=?',
                    enumKey: '@'
                },
                controller: ToggleButtonsController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/toggleButtons/toggleButtons.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            moduleName = 'directive.form.toggleButtons',
            directiveName = 'toggleButtons';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/toggleButtons/toggle-buttons', function () {
});
!function () {
    'use strict';
    define('directive-form-toggle_grid', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        function implementation() {
            function ToggleGridController() {
                this.$onInit = function () {
                    if (!_.isEmpty(this.enumKey)) this.options = dropdowns.getWcmsEnumOptions(this.enumKey)
                }
            }
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    theId: '@',
                    labelKey: '@',
                    labelLarge: '=',
                    ngModel: '=',
                    options: '=?',
                    enumKey: '@'
                },
                controller: ToggleGridController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/form/toggleGrid/toggleGrid.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            moduleName = 'directive.form.toggleGrid',
            directiveName = 'toggleGrid';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/form/toggleGrid/toggle-grid', function () {
});
!function () {
    'use strict';
    define('directive-form-track_changes', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            var TrackChangesController = function TrackChangesController($element) {
                this.$onInit = function () {
                    var ngModelCtrl = $element.controller('ngModel'),
                        initialValue = null;
                    ngModelCtrl.$validators.changed = function (modelValue, viewValue) {
                        var value = modelValue || viewValue;
                        if (_.isNil(initialValue)) initialValue = value;
                        if (this.changeset && this.name) this.changeset[this.name] = !_.isEqual(value, initialValue);
                        return true
                    }.bind(this)
                }
            };
            TrackChangesController.$inject = [
                '$element'
            ];
            return {
                require: 'ngModel',
                restrict: '',
                bindToController: {
                    name: '@',
                    changeset: '='
                },
                controller: TrackChangesController
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.form.track_changes',
            directiveName = 'trackChanges',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/form/trackChanges/track-changes', function () {
});
!function () {
    'use strict';
    define('directive-iframe_auto_resize', [
        'require',
        'angular',
        'iframe-resizer',
        'pf-shared-modules-platform'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'A',
                link: function (scope, element) {
                    iframeResizer({
                        checkOrigin: [
                            platform.getLocationOrigin()
                        ]
                    }, element[0])
                }
            }
        }
        var angular = require('angular'),
            iframeResizer = require('iframe-resizer'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'directive.iframe_auto_resize',
            directiveName = 'iframeAutoResize';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/iframeAutoResize/iframe-auto-resize', function () {
});
!function () {
    'use strict';
    define('directive-interest_terms', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    data: '=',
                    textKey: '='
                },
                controller: angular.noop,
                controllerAs: 'interestTerms',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/interestTerms/interestTerms.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.interest_terms',
            directiveName = 'interestTerms';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/interestTerms/interest-terms', function () {
});
!function () {
    'use strict';
    define('directive-ng_attr', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation() {
            var ATTR_MATCH = /\s*([^=]+)(=\s*(\S+))?/,
                selector = true,
                name = 'ngAttr';
            return {
                restrict: 'A',
                compile: function compileFn() {
                    var splitAttr = function splitAttr(value) {
                            var m = ATTR_MATCH.exec(value);
                            return m && [
                                m[1].replace(/\s+$/, ''),
                                m[3]
                            ]
                        },
                        attrWorker = function attrWorker(attrVal, action) {
                            if (_.isString(attrVal)) attrVal = attrVal.split(/\s+/);
                            if (_.isArray(attrVal)) _.forEach(attrVal, function (v) {
                                v = splitAttr(v);
                                action(v)
                            });
                            else if (_.isObject(attrVal)) _.forEach(attrVal, function (v, k) {
                                k = splitAttr(k);
                                if (v) action(k)
                            })
                        };
                    return function linkFn(scope, element, attr) {
                        function ngAttrWatchAction(newVal) {
                            if (true === selector || scope.$index % 2 === selector) {
                                if (oldVal && !angular.equals(newVal, oldVal)) attrWorker(oldVal, removeAttr);
                                attrWorker(newVal, setAttr)
                            }
                            oldVal = angular.copy(newVal)
                        }
                        function setAttr(value) {
                            if (value) {
                                if (_.isUndefined(value[0]) || 'null' === value[0]) return;
                                element.attr(value[0], !_.isUndefined(value[1]) ? value[1] : '')
                            }
                        }
                        function removeAttr(value) {
                            if (value) element.removeAttr(value[0])
                        }
                        var oldVal,
                            unwatch = scope.$watch(attr[name], function () {
                                ngAttrWatchAction(scope.$eval(attr[name]))
                            }, true);
                        scope.$on('$destroy', unwatch);
                        attr.$observe(name, function () {
                            ngAttrWatchAction(scope.$eval(attr[name]))
                        })
                    }
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.ng_attr',
            directiveName = 'ngAttr';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/ngAttr/ng-attr', function () {
});
!function () {
    'use strict';
    define('directive-emit_on_ngrepeat_end', [
        'require',
        'angular'
    ], function (require) {
        function implementation($timeout) {
            return {
                restrict: 'A',
                link: function linkFn(scope) {
                    if (true === scope.$last) $timeout(function () {
                        scope.$emit('ngRepeatFinished')
                    })
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.emit_on_ngrepeat_end',
            directiveName = 'onFinishRenderFilters',
            directiveImplementation = [
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/onFinishRenderFilters/on-finish-render-filters', function () {
});
!function () {
    'use strict';
    define('directive-pf_translate', [
        'require',
        'lodash',
        'angular',
        'pf-angular-filters',
        'pf-shared-modules-translator'
    ], function (require) {
        function updateTranslations(translationIds, scope, iElement, iAttr) {
            var keys = Object.keys(translationIds),
                len = keys.length,
                index;
            for (index = 0; index < len; ++index) {
                var key = keys[index];
                if (translationIds.hasOwnProperty(key) && !_.isUndefined(translationIds[key])) _updateTranslation(key, translationIds[key], scope, scope.interpolateParams, scope.translateNamespace, iElement, iAttr)
            }
        }
        function _updateTranslation(translateAttr, translationId, scope, interpolateParams, translateNamespace, iElement, iAttr) {
            if (translationId) {
                if (translateNamespace && '.' === translationId.charAt(0)) translationId = translateNamespace + translationId;
                var translation = translator.translate(translationId, null, interpolateParams),
                    successfull = translation !== translationId;
                _applyTranslation(translation, scope, successfull, translateAttr, iElement, iAttr)
            } else _applyTranslation(translationId, scope, false, translateAttr, iElement, iAttr)
        }
        function _applyTranslation(value, scope, successful, translateAttr, iElement, iAttr) {
            if ('translate' === translateAttr) {
                if (successful || !successful && _.isUndefined(iAttr.translateKeepContent)) iElement.empty().append(scope.preText + value + scope.postText)
            } else {
                var attributeName = iAttr.$attr[translateAttr];
                if ('data-' === attributeName.substr(0, 5)) attributeName = attributeName.substr(5);
                attributeName = attributeName.substr(15);
                iElement.attr(attributeName, value)
            }
        }
        function implementation($interpolate, $parse, $rootScope) {
            var interpolateRegExp = '^(.*)(' + $interpolate.startSymbol() + '.*' + $interpolate.endSymbol() + ')(.*)',
                watcherRegExp = '^(.*)' + $interpolate.startSymbol() + '(.*)' + $interpolate.endSymbol() + '(.*)';
            return {
                restrict: 'AE',
                scope: true,
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.interpolateParams = {
                        };
                        $scope.preText = '';
                        $scope.postText = ''
                    }
                ],
                compile: function compileFn(tElement, tAttr) {
                    var translateValuesExist = tAttr.translateValues ? tAttr.translateValues : void 0,
                        translateValueExist = tElement[0].outerHTML.match(/translate-value-+/i);
                    return function linkFn(scope, iElement, iAttr) {
                        var translationIds = {
                            },
                            initInterpolationParams = function initInterpolationParams(interpolateParams, iAttr, tAttr) {
                                if (iAttr.translateValues) _.assign(interpolateParams, $parse(iAttr.translateValues) (scope.$parent));
                                if (translateValueExist) {
                                    var keys = Object.keys(tAttr),
                                        len = keys.length,
                                        index;
                                    for (index = 0; index < len; ++index) {
                                        var attr = keys[index];
                                        if (Object.prototype.hasOwnProperty.call(iAttr, attr) && 'translateValue' === attr.substr(0, 14) && 'translateValues' !== attr) {
                                            var attributeName = _.lowerCase(attr.substr(14, 1)) + attr.substr(15);
                                            interpolateParams[attributeName] = tAttr[attr]
                                        }
                                    }
                                }
                            },
                            observeElementTranslation = function observeElementTranslation(translationId) {
                                if (_.isFunction(observeElementTranslation._unwatchOld)) {
                                    observeElementTranslation._unwatchOld();
                                    observeElementTranslation._unwatchOld = null
                                }
                                if (_.isEqual(translationId, '') || _.isUndefined(translationId)) {
                                    var iElementText = _.trim(iElement.text()),
                                        interpolateMatches = iElementText.match(interpolateRegExp);
                                    if (_.isArray(interpolateMatches)) {
                                        scope.preText = interpolateMatches[1];
                                        scope.postText = interpolateMatches[3];
                                        translationIds.translate = $interpolate(interpolateMatches[2]) (scope.$parent);
                                        var watcherMatches = iElementText.match(watcherRegExp);
                                        if (_.isArray(watcherMatches) && watcherMatches[2] && watcherMatches[2].length) observeElementTranslation._unwatchOld = scope.$watch(watcherMatches[2], function (newValue) {
                                            translationIds.translate = newValue;
                                            updateTranslations(translationIds, scope, iElement, iAttr)
                                        })
                                    } else translationIds.translate = !iElementText ? void 0 : iElementText
                                } else translationIds.translate = translationId;
                                updateTranslations(translationIds, scope, iElement, iAttr)
                            };
                        initInterpolationParams(scope.interpolateParams, iAttr, tAttr);
                        var firstAttributeChangedEvent = true;
                        iAttr.$observe('pfTranslate', function (translationId) {
                            if (_.isUndefined(translationId)) observeElementTranslation('');
                            else if (_.isString(translationId) && !_.isEmpty(translationId) || !firstAttributeChangedEvent) {
                                translationIds.translate = translationId;
                                updateTranslations(translationIds, scope, iElement, iAttr)
                            }
                            firstAttributeChangedEvent = false
                        });
                        if (translateValuesExist) iAttr.$observe('translateValues', function (interpolateParams) {
                            if (interpolateParams) scope.$parent.$watch(function () {
                                _.assign(scope.interpolateParams, $parse(interpolateParams) (scope.$parent))
                            })
                        });
                        if (translateValueExist) {
                            var observeValueAttribute = function observeValueAttribute(attrName) {
                                iAttr.$observe(attrName, function (value) {
                                    var attributeName = _.lowerCase(attrName.substr(14, 1)) + attrName.substr(15);
                                    scope.interpolateParams[attributeName] = value
                                })
                            };
                            for (var attr in iAttr) if (Object.prototype.hasOwnProperty.call(iAttr, attr) && 'translateValue' === attr.substr(0, 14) && 'translateValues' !== attr) observeValueAttribute(attr)
                        }
                        if (translateValuesExist || translateValueExist) {
                            var unwatchInterpolation = scope.$watch('interpolateParams', updateTranslations.bind(this, translationIds, scope, iElement, iAttr), true);
                            scope.$on('$destroy', unwatchInterpolation)
                        }
                        var unbind = $rootScope.$onRootScope('$translateChangeSuccess', updateTranslations.bind(this, translationIds, scope, iElement, iAttr));
                        if (iElement.text().length) if (iAttr.pfTranslate) observeElementTranslation(iAttr.pfTranslate);
                        else observeElementTranslation('');
                        else if (iAttr.pfTranslate) observeElementTranslation(iAttr.pfTranslate);
                        updateTranslations(translationIds, scope, iElement, iAttr);
                        scope.$on('$destroy', function () {
                            unbind()
                        })
                    }
                }
            }
        }
        function watchAttribute(scope, attribute, valueCallback, changeCallback) {
            if (attribute) {
                if ('::' === attribute.substr(0, 2)) attribute = attribute.substr(2);
                else scope.$watch(attribute, function (newValue) {
                    valueCallback(newValue);
                    changeCallback()
                }, true);
                valueCallback(scope.$eval(attribute))
            }
        }
        function implementation2($rootScope) {
            return {
                restrict: 'A',
                link: function linkFn(scope, element, attr) {
                    var translateAttr,
                        translateValues,
                        previousAttributes = {
                        },
                        updateTranslations2 = function () {
                            angular.forEach(translateAttr, function (translationId, attributeName) {
                                if (translationId) {
                                    previousAttributes[attributeName] = true;
                                    if (scope.translateNamespace && '.' === translationId.charAt(0)) translationId = scope.translateNamespace + translationId;
                                    var translation = translator.translate(translationId, translateValues, attr.translateInterpolation, void 0, scope.translateLanguage);
                                    element.attr(attributeName, translation)
                                }
                            });
                            angular.forEach(previousAttributes, function (flag, attributeName) {
                                if (!translateAttr[attributeName]) {
                                    element.removeAttr(attributeName);
                                    delete previousAttributes[attributeName]
                                }
                            })
                        };
                    watchAttribute(scope, attr.translateAttr, function (newValue) {
                        translateAttr = newValue
                    }, updateTranslations2);
                    watchAttribute(scope, attr.translateValues, function (newValue) {
                        translateValues = newValue
                    }, updateTranslations2);
                    if (attr.translateValues) scope.$watch(attr.translateValues, updateTranslations2, true);
                    scope.$on('translateLanguageChanged', updateTranslations2);
                    var unbind = $rootScope.$on('$translateChangeSuccess', updateTranslations2);
                    updateTranslations2();
                    scope.$on('$destroy', unbind)
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfAngularFilters = require('pf-angular-filters'),
            translator = require('pf-shared-modules-translator'),
            moduleName = 'directive.pf_translate',
            directiveName = 'pfTranslate',
            directiveImplementation = [
                '$interpolate',
                '$parse',
                '$rootScope',
                implementation
            ],
            directiveName2 = 'translateAttr',
            directiveImplementation2 = [
                '$rootScope',
                implementation2
            ];
        angular.module(moduleName, [
            'ng',
            pfAngularFilters.moduleName
        ]).directive(directiveName, directiveImplementation).directive(directiveName2, directiveImplementation2);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/pfTranslate/pf-translate', function () {
});
!function () {
    'use strict';
    define('directive-reset_width', [
        'require',
        'angular'
    ], function (require) {
        function implementation($timeout) {
            return {
                restrict: 'A',
                require: 'ngModel',
                link: function linkFn($scope, $element) {
                    $timeout(function () {
                        $element.css('width', '')
                    })
                }
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.reset_width',
            directiveName = 'resetWidth',
            directiveImplementation = [
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/resetWidth/reset-width', function () {
});
!function () {
    'use strict';
    define('directive-screen_key', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function implementation($sce, $parse) {
            return function linkFn(scope, element, attrs) {
                function getScreenKeyValue() {
                    if (_.isNil(attrs.skipParse)) {
                        var parsed = $parse(attrs.screenKey);
                        return parsed(scope)
                    }
                    return attrs.screenKey
                }
                function getStringValue() {
                    return (getScreenKeyValue() || '').toString()
                }
                element.addClass('ng-binding').data('$binding', attrs.screenKey);
                element.addClass('wcms');
                var unwatch = scope.$watch(getStringValue, function ngBindHtmlWatchAction() {
                    element.html($sce.getTrustedHtml($sce.trustAsHtml(getScreenKeyValue())) || '')
                });
                scope.$on('$destroy', unwatch)
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moduleName = 'directive.screen_key',
            directiveName = 'screenKey',
            directiveImplementation = [
                '$sce',
                '$parse',
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/screenKey/screen-key', function () {
});
!function () {
    'use strict';
    define('directive-scroll_into_view', [
        'require',
        'angular',
        'jquery',
        'pf-shared-modules-scrolling'
    ], function (require) {
        function implementation() {
            var scrollIntoView = function scrollIntoView(el) {
                var $target = jQuery(el);
                scrolling.scrollToElement($target, 100)
            };
            return {
                restrict: 'EA',
                link: function linkFn(scope, element) {
                    scrollIntoView(element)
                }
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            scrolling = require('pf-shared-modules-scrolling'),
            moduleName = 'directive.scroll_into_view',
            directiveName = 'scrollIntoView',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/scrollIntoView/scroll-into-view', function () {
});
!function () {
    'use strict';
    define('directive-step_navigation_caption', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                bindToController: {
                    number: '@',
                    text: '@',
                    isHidden: '@',
                    isActive: '@',
                    hasSubsteps: '@'
                },
                controller: _.noop,
                controllerAs: 'caption',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/stepNavigation/stepNavigationCaption.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.step_navigation_caption',
            directiveName = 'stepNavigationCaption';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/stepNavigation/step-navigation-caption', function () {
});
!function () {
    'use strict';
    define('directive-step_navigation', [
        'require',
        'lodash',
        'angular',
        'directive-step_navigation_caption'
    ], function (require) {
        function implementation() {
            function StepNavigationController() {
                this.handleClick = function (phaseNumber, stepNumber) {
                    this.onClick({
                        phaseIndex: _.defaultTo(phaseNumber - 1, 0),
                        stepIndex: _.defaultTo(stepNumber - 1, 0)
                    })
                }
            }
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    phases: '=',
                    onClick: '&'
                },
                controller: StepNavigationController,
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/stepNavigation/stepNavigation.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            directiveStepNavigationCaption = require('directive-step_navigation_caption'),
            moduleName = 'directive.step_navigation',
            directiveName = 'stepNavigation';
        angular.module(moduleName, [
            directiveStepNavigationCaption.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-step_navigation_caption'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/stepNavigation/step-navigation', function () {
});
!function () {
    'use strict';
    define('directive-table-multi_table', [
        'require',
        'lodash',
        'angular',
        'directive-tooltips'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                bindToController: {
                    theId: '@',
                    columns: '='
                },
                controller: _.noop,
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/table/multiTable/multiTable.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            directiveTooltips = require('directive-tooltips'),
            moduleName = 'directive.table.multi_table',
            directiveName = 'multiTable',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            directiveTooltips.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation,
            dependencies: [
                'directive-tooltips'
            ]
        }
    })
}();
define('fipo/lib/shared/directives/table/multiTable/multi-table', function () {
});
!function () {
    'use strict';
    define('directive-table-sortable_table_header', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                scope: {
                },
                bindToController: {
                    headerLabel: '@',
                    sortProperty: '=',
                    sortName: '@'
                },
                controller: angular.noop,
                controllerAs: directiveName,
                restrict: 'A',
                replace: true,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/table/sortableTableHeader/sortableTableHeader.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.table.sortable_table_header',
            directiveName = 'sortableTableHeader';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/table/sortableTableHeader/sortable-table-header', function () {
});
!function () {
    'use strict';
    define('directive-table-table_filter', [
        'require',
        'angular',
        'jquery',
        'lodash'
    ], function (require) {
        function implementation($timeout) {
            var ESCAPE_EVENT = 'keydown';
            return {
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/table/tableFilter/tableFilter.html',
                restrict: 'E',
                scope: {
                    tableId: '@',
                    textfieldLabel: '@',
                    hideFooter: '=?',
                    onChange: '&',
                    filterArg: '=',
                    resultsLength: '=?'
                },
                link: function linkFn(scope, element) {
                    function hideFooter(show) {
                        var table = jQuery('#' + scope.tableId).find('tfoot');
                        if (show) table.addClass('is-visuallyhidden');
                        else table.removeClass('is-visuallyhidden')
                    }
                    scope.filterArg = scope.filterArg || '';
                    scope.filteredLength = 0;
                    scope.data = {
                        inputNotEmpty: true,
                        id: 'filterInput'
                    };
                    scope.reset = function reset() {
                        $timeout(function () {
                            scope.filterArg = '';
                            element.find('input') [0].focus();
                            hideFooter(false)
                        })
                    };
                    var unwatchFilterArg = scope.$watch('filterArg', function (newVal, oldVal) {
                            if (_.isEmpty(newVal) && !_.isEmpty(oldVal)) {
                                var resetBtn = element.find('button') [0];
                                if (!!resetBtn) $timeout(function () {
                                    resetBtn.trigger('click')
                                })
                            }
                        }),
                        escapeListener = function escapeListener(e) {
                            if (e.keyCode === pf.globals.keycodes.ESCAPE) {
                                scope.reset();
                                e.preventDefault();
                                e.stopPropagation()
                            }
                        };
                    scope.onFocus = function onFocus($event) {
                        $event.target.addEventListener(ESCAPE_EVENT, escapeListener)
                    };
                    scope.onBlur = function onBlur($event) {
                        $event.target.removeEventListener(ESCAPE_EVENT, escapeListener)
                    };
                    if (scope.hideFooter) element.find('input').on('input', function () {
                        hideFooter(!!this.value)
                    });
                    scope.$on('$destroy', function () {
                        element.find('input').off();
                        unwatchFilterArg()
                    })
                }
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            _ = require('lodash'),
            moduleName = 'directive.table.table_filter',
            directiveName = 'tableFilter';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        implementation.$inject = [
            '$timeout'
        ];
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/table/tableFilter/table-filter', function () {
});
!function () {
    'use strict';
    define('directive-content_wrapper', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.tabs_navigation',
            directiveName = 'contentWrapper',
            directiveController = function () {
                var vm = this;
                vm.panelActivation = function checkPanelActivation() {
                    vm.isActive = false;
                    if (vm.tabId === vm.parent.getActiveTabId()) vm.isActive = true
                };
                this.$onInit = function () {
                    vm.tabId = vm.parent.getTabId(vm.contentId);
                    vm.panelId = vm.parent.getPanelId(vm.contentId);
                    vm.isActive = vm.tabId === vm.parent.getActiveTabId() || vm.parent.singleContent ? true : false;
                    vm.parent.panelActivations.push(vm.panelActivation)
                };
                this.$onDestroy = function onDestroy() {
                    vm.parent.panelActivations = vm.parent.panelActivations.filter(function (i) {
                        return i !== vm.panelActivation
                    });
                    vm.parent.activeTabInit()
                }
            };
        directiveController.$inject = [
        ];
        var implementation = function () {
                return {
                    bindToController: {
                        contentId: '@?'
                    },
                    controller: directiveController,
                    controllerAs: directiveName,
                    require: {
                        parent: '^tabsNavigation'
                    },
                    restrict: 'E',
                    scope: {
                    },
                    templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/tabsNavigation/contentWrapper.html',
                    transclude: true
                }
            },
            init = function init() {
                angular.module(moduleName).directive(directiveName, implementation)
            };
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: false,
            init: init
        }
    })
}();
define('fipo/lib/shared/directives/tabsNavigation/content-wrapper', function () {
});
!function () {
    'use strict';
    define('directive-tab_wrapper', [
        'require',
        'angular',
        'jquery'
    ], function (require) {
        var angular = require('angular'),
            jQuery = require('jquery'),
            moduleName = 'directive.tabs_navigation',
            directiveName = 'tabWrapper',
            directiveController = function ($element) {
                var vm = this;
                vm.isTabActive = false;
                var processTabActivation = function processTabActivation(initialize) {
                        vm.isTabActive = false;
                        if (vm.tabId === vm.parent.getActiveTabId()) {
                            vm.isTabActive = true;
                            vm.parent.updateDropdownValues(jQuery($element).find('.js-widget_tabs--link--text').html(), jQuery($element).find('.icon').attr('class'))
                        }
                        if (vm.parent.isErrorState()) vm.isTabActive = vm.isActive
                    },
                    prozessClickFunction = function prozessClickFunction(tabId) {
                        if (tabId === vm.tabId) vm.clickFunction()
                    };
                this.$onInit = function onInit() {
                    vm.tabId = vm.parent.getTabId(vm.contentId);
                    vm.parent.tabIds.push(vm.tabId);
                    vm.panelId = vm.parent.getPanelId(vm.contentId);
                    if (vm.isActive) vm.parent.setActiveTabId(vm.tabId);
                    vm.parent.tabActivations.push({
                        click: prozessClickFunction,
                        activate: processTabActivation
                    })
                };
                this.$onDestroy = function onDestroy() {
                    vm.parent.tabIds = vm.parent.tabIds.filter(function (i) {
                        return i !== vm.tabId
                    });
                    vm.parent.tabActivations = vm.parent.tabActivations.filter(function (i) {
                        return i !== processTabActivation
                    });
                    vm.parent.activeTabInit()
                }
            };
        directiveController.$inject = [
            '$element'
        ];
        var implementation = function () {
                return {
                    bindToController: {
                        contentId: '@',
                        isActive: '<?',
                        clickFunction: '&'
                    },
                    controller: directiveController,
                    controllerAs: directiveName,
                    link: function (scope, element, attrs, tabsNavigation) {
                        var tN = tabsNavigation.parent;
                        ++tN.linkedTabs;
                        tN.loaded()
                    },
                    require: {
                        parent: '^tabsNavigation'
                    },
                    restrict: 'E',
                    scope: {
                    },
                    templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/tabsNavigation/tabWrapper.html',
                    transclude: true
                }
            },
            init = function init() {
                angular.module(moduleName).directive(directiveName, implementation)
            };
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: false,
            init: init
        }
    })
}();
define('fipo/lib/shared/directives/tabsNavigation/tab-wrapper', function () {
});
!function () {
    'use strict';
    define('directive-tabs_navigation_init', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.tabs_navigation',
            init = function init() {
                angular.module(moduleName, [
                ])
            };
        return {
            moduleName: moduleName,
            init: init
        }
    })
}();
define('fipo/lib/shared/directives/tabsNavigation/tabs-navigation-init', function () {
});
!function () {
    'use strict';
    define('directive-tabs_navigation', [
        'require',
        'angular',
        'pf-shared-modules-platform',
        'directive-tabs_navigation_init',
        'directive-tab_wrapper',
        'directive-content_wrapper'
    ], function (require) {
        var angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            moduleInit = require('directive-tabs_navigation_init'),
            tab = require('directive-tab_wrapper'),
            content = require('directive-content_wrapper');
        moduleInit.init();
        tab.init();
        content.init();
        var moduleName = 'directive.tabs_navigation',
            directiveName = 'tabsNavigation',
            directiveController;
        directiveController = function ($rootScope, $scope, $timeout) {
            var tabsNavigation = this;
            this.isMobile = platform.isMobile();
            this.tabActivations = [
            ];
            this.panelActivations = [
            ];
            this.tabIds = [
            ];
            this.linkedTabs = 0;
            this.staticContentName = 'tab-content-pane';
            this.activeTabId = '';
            this.tabsLoaded = false;
            this.initDone = false;
            this.activeIconClass = '';
            this.activeText = '';
            this.dropdownStyle = {
            };
            this.dropdownVisible = false;
            this.getPanelId = function getPanelId(id) {
                return tabsNavigation.hasSingleContentPane ? tabsNavigation.staticContentName : [
                    id,
                    'panel'
                ].join('-')
            };
            this.getTabId = function getTabId(id) {
                return [id,
                    'tab'].join('-')
            };
            this.doesTabExist = function doesTabExist(tabId) {
                return !!_.find(tabsNavigation.tabIds, function (e) {
                    return e === tabId
                })
            };
            this.getActiveTabId = function getActiveTabId() {
                return tabsNavigation.activeTabId
            };
            this.setActiveTabId = function setActiveTabId(tabId) {
                tabsNavigation.activeTabId = tabId
            };
            this.activateTab = function activateTab(tabId, isInit) {
                tabsNavigation.setActiveTabId(tabId);
                if (_.isUndefined(tabsNavigation.activateTabIdLazy)) tabsNavigation.changeTab(isInit);
                if (!isInit) tabsNavigation.callClickFunction()
            };
            this.callClickFunction = function callClickFunction() {
                _.forEach(tabsNavigation.tabActivations, function (t) {
                    t.click(tabsNavigation.getActiveTabId())
                })
            };
            this.changeTab = function changeTab(isInit) {
                _.forEach(tabsNavigation.tabActivations, function (t) {
                    t.activate(isInit)
                });
                if (!tabsNavigation.hasSingleContentPane) _.forEach(tabsNavigation.panelActivations, function (t) {
                    t()
                });
                if (tabsNavigation.dropdownVisible) tabsNavigation.closeDropdown()
            };
            this.activeTabInit = function activeTabInit() {
                var activateTab;
                if (!tabsNavigation.doesTabExist(tabsNavigation.getActiveTabId()) && tabsNavigation.tabIds.length > 1) {
                    if (tabsNavigation.defaultTab && tabsNavigation.doesTabExist(tabsNavigation.defaultTab)) activateTab = tabsNavigation.getTabId(tabsNavigation.defaultTab);
                    else activateTab = tabsNavigation.tabIds[0];
                    tabsNavigation.activateTab(activateTab, true);
                    tabsNavigation.initDone = true
                }
            };
            this.loaded = function loaded() {
                $timeout(function () {
                    tabsNavigation.tabsLoaded = true;
                    if (!tabsNavigation.initDone && tabsNavigation.doesTabExist(tabsNavigation.activeTabId)) {
                        tabsNavigation.activateTab(tabsNavigation.activeTabId, true);
                        tabsNavigation.initDone = true
                    }
                    tabsNavigation.activeTabInit()
                })
            };
            this.isErrorState = function () {
                return tabsNavigation.getTabId(pf.globals.states.detailpage.error) === tabsNavigation.getActiveTabId()
            };
            this.isOverlay = function () {
                return 'OVERLAY' === $scope.displayType
            };
            this.updateDropdownValues = function updateDropdownValues(text, classes) {
                tabsNavigation.activeIconClass = classes;
                tabsNavigation.activeText = text
            };
            this.toggleDropdown = function toggleDropdown() {
                tabsNavigation.dropdownVisible ? tabsNavigation.closeDropdown()  : tabsNavigation.openDropdown()
            };
            this.openDropdown = function openDropdown() {
                tabsNavigation.dropdownVisible = true;
                tabsNavigation.dropdownStyle = {
                    display: 'block'
                }
            };
            this.closeDropdown = function closeDropdown() {
                tabsNavigation.dropdownVisible = false;
                tabsNavigation.dropdownStyle = {
                }
            };
            var unsubscribeStart = $rootScope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams) {
                    history.replaceState(null, document.title, window.location.pathname + window.location.search)
                }),
                unsubscribeSuccess = $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {
                    var tabId = tabsNavigation.getTabId(toState.name);
                    if (!tabsNavigation.initDone || tabsNavigation.activeTabId !== tabId) tabsNavigation.activateTab(tabId, true);
                    tabsNavigation.initDone = true
                });
            this.$onInit = function onInitTabsNavigation() {
                tabsNavigation.hasSingleContentPane = tabsNavigation.singleContent || false
            };
            this.$onDestroy = function onDestroy() {
                unsubscribeStart();
                unsubscribeSuccess()
            };
            this.$onChanges = function (changeObject) {
                if (_.exists(this.activateTabIdLazy) && '' !== tabsNavigation.activateTabIdLazy) {
                    tabsNavigation.setActiveTabId(tabsNavigation.getTabId(tabsNavigation.activateTabIdLazy));
                    tabsNavigation.changeTab(true)
                }
            }
        };
        directiveController.$inject = [
            '$rootScope',
            '$scope',
            '$timeout'
        ];
        var implementation = function () {
            return {
                bindToController: {
                    singleContent: '<?',
                    defaultTab: '<?',
                    showTabs: '=?',
                    activeTabId: '=?',
                    activateTabIdLazy: '<?'
                },
                controller: directiveController,
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/tabsNavigation/tabsNavigation.html',
                restrict: 'E',
                link: {
                    post: function (scope, element, attrs) {
                        window.trigger('resize')
                    }
                },
                transclude: {
                    nav: 'tabWrapper',
                    content: 'contentWrapper'
                }
            }
        };
        angular.module(moduleName).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/tabsNavigation/tabs-navigation', function () {
});
!function () {
    'use strict';
    define('directive-tooltip', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            var tooltipController = function ($transclude) {
                var tooltip = this;
                tooltip.transclude = $transclude
            };
            return {
                restrict: 'E',
                require: '^tooltips',
                transclude: true,
                replace: true,
                bindToController: {
                    when: '=',
                    type: '@',
                    caption: '@?',
                    text: '@?'
                },
                scope: {
                    catchFocus: '='
                },
                link: function linkFn(scope, element, attrs, tooltipsCtrl) {
                    scope.tooltip.hasCondition = !!attrs.when;
                    scope.tooltip.type = attrs.type || 'info';
                    tooltipsCtrl.registerTooltip(scope.tooltip);
                    var unwatch = scope.$watch(function () {
                        return scope.catchFocus
                    }, function (newVal) {
                        if (newVal) tooltipsCtrl.catchFocus()
                    });
                    scope.$on('$destroy', unwatch)
                },
                controller: [
                    '$transclude',
                    tooltipController
                ],
                controllerAs: 'tooltip'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.tooltip',
            directiveName = 'tooltip',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/tooltip/tooltip', function () {
});
!function () {
    'use strict';
    define('directive-tooltips', [
        'require',
        'angular',
        'pf-shared-modules-focus',
        'jquery',
        'pf-shared-modules-tooltips',
        'directive-tooltip'
    ], function (require) {
        function implementation() {
            var tooltipTemplate = '<div class=js-tooltip--content><div class=tooltip--inner>TEXT</div></div>',
                tooltipIconTemplate = '<span class=\'js-tooltip\'><span aria-hidden=true class=\'tooltip-icon js-tooltip--icon\'></span></span>',
                types = {
                    error: 'error',
                    info: 'info',
                    attention: 'attention'
                },
                typeClassesIcon = {
                    error: 'has-tooltip-error',
                    attention: 'has-tooltip-attention',
                    info: 'has-tooltip'
                },
                typeClassForTooltip = {
                    error: 'tooltip-error',
                    attention: 'tooltip-attention',
                    info: 'tooltip'
                },
                typeClassesForTooltip = _.join(_.values(typeClassForTooltip), ' ');
            return {
                restrict: 'E',
                transclude: true,
                scope: {
                    theId: '@'
                },
                compile: function compileFn(element) {
                    var $tooltipIcon = jQuery(tooltipIconTemplate);
                    $tooltipIcon.hide();
                    var $tooltip = jQuery(tooltipTemplate);
                    $tooltip.hide();
                    var $element = jQuery(element);
                    $element.after($tooltipIcon);
                    $tooltipIcon.after($tooltip);
                    return function linkFn(scope, ele) {
                        var $ele = jQuery(ele);
                        $tooltip.attr('id', scope.theId);
                        scope.$tooltipIcon = $ele.next();
                        scope.$tooltip = scope.$tooltipIcon.next();
                        scope.checkTooltips()
                    }
                },
                controller: [
                    '$scope',
                    function controllerFn($scope) {
                        function setTooltipContent(type, tooltipContent) {
                            $scope.$tooltip.children().html(tooltipContent);
                            $scope.$tooltip.removeClass(typeClassesForTooltip).addClass(typeClassForTooltip[type]);
                            $scope.$tooltip.show()
                        }
                        function createSimpleTooltip(tooltip) {
                            var tooltipJoiner = tooltip.caption && tooltip.text ? '<br>' : '',
                                tooltipCaption;
                            if (tooltip.caption) tooltipCaption = [
                                '<span class=\'t-strong\'>',
                                tooltip.caption,
                                '</span>'
                            ].join('');
                            var tooltipContent = [
                                tooltipCaption,
                                tooltip.text
                            ].join(tooltipJoiner);
                            setTooltipContent(tooltip.type, tooltipContent)
                        }
                        function createTranscludedTooltip(tooltip) {
                            tooltip.transclude(function (transcludedContent, transclusionScope) {
                                setTooltipContent(tooltip.type, transcludedContent);
                                $scope.$on('$destroy', function () {
                                    transclusionScope.$destroy()
                                })
                            })
                        }
                        $scope.tooltips = [
                        ];
                        var lastType = '';
                        this.catchFocus = function catchFocus() {
                            focus.focusElement($scope.$tooltip)
                        };
                        this.registerTooltip = function registerTooltip(tooltip) {
                            if (!(globallyDisabled && tooltip.type === types.info)) {
                                $scope.tooltips.push(tooltip);
                                if (tooltip.hasCondition) {
                                    var unwatch = $scope.$watch(function () {
                                        return tooltip.when
                                    }, function (newVal, oldVal) {
                                        if (newVal !== oldVal) $scope.checkTooltips()
                                    });
                                    $scope.$on('$destroy', unwatch)
                                }
                            }
                        };
                        $scope.checkTooltips = function checkTooltips() {
                            for (var tooltip = null, i = 0, len = $scope.tooltips.length; i < len; i++) {
                                var item = $scope.tooltips[i];
                                if (!item.hasCondition) tooltip = item;
                                else if (item.when) {
                                    tooltip = item;
                                    break
                                }
                            }
                            if ('' !== lastType) $scope.$tooltipIcon.removeClass(typeClassesIcon[lastType]);
                            if (tooltip) {
                                $scope.$tooltipIcon.addClass(typeClassesIcon[tooltip.type]);
                                $scope.$tooltipIcon.show();
                                if (tooltip.caption || tooltip.text) createSimpleTooltip(tooltip);
                                else if (tooltip.transclude) createTranscludedTooltip(tooltip);
                                lastType = tooltip.type
                            } else {
                                $scope.$tooltip.hide();
                                $scope.$tooltipIcon.hide()
                            }
                        }
                    }
                ],
                template: '<ng-transclude></ng-transclude>'
            }
        }
        var angular = require('angular'),
            focus = require('pf-shared-modules-focus'),
            jQuery = require('jquery'),
            tooltips = require('pf-shared-modules-tooltips'),
            directiveTooltip = require('directive-tooltip'),
            moduleName = 'directive.tooltips',
            directiveName = 'tooltips',
            globallyDisabled = tooltips.isDisabled(),
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            directiveTooltip.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-tooltip'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/tooltip/tooltips', function () {
});
!function () {
    'use strict';
    define('directive-widget-accessibility_focus', [
        'require',
        'angular',
        'jquery',
        'pf-shared-modules-focus'
    ], function (require) {
        function implementation() {
            var removeTabIndex = function removeTabIndex(event) {
                    var $target = jQuery(event.currentTarget);
                    $target.removeAttr('tabindex');
                    $target.off('blur', removeTabIndex)
                },
                focus = function focus(el) {
                    var $target = jQuery(el);
                    Focus.focusElement($target[0])
                };
            return {
                restrict: 'A',
                link: function linkFn(scope, element) {
                    focus(element);
                    scope.$on('$destroy', function () {
                        element.off('blur', removeTabIndex)
                    })
                }
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            Focus = require('pf-shared-modules-focus'),
            moduleName = 'directive.widget.accessibility_focus',
            directiveName = 'accessibilityFocus',
            directiveImplementation = implementation;
        angular.module(moduleName, [
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/accessibilityFocus/accessibility-focus', function () {
});
!function () {
    'use strict';
    define('directive-widget-account_info', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                },
                bindToController: {
                    widgetInstanceId: '@',
                    accountIban: '@',
                    accountName: '@'
                },
                controller: angular.noop,
                controllerAs: 'accountInfo',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/accountInfo/accountInfo.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.account_info',
            directiveName = 'accountInfo';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/accountInfo/account-info', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-widget-more_actions'
    ];
    define('directive-widget-account_overview', [
        'require',
        'angular',
        'directive-widget-more_actions'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    amountSuffix: '@',
                    account: '=',
                    moreActions: '=',
                    mappingKey: '=',
                    actionUrlReplacementObj: '='
                },
                compile: function compileFn() {
                    var showMoreActions = function showMoreActions() {
                        return 'true' === this.moreActions
                    };
                    return function linkFn(scope) {
                        scope.showMoreActions = showMoreActions.bind(scope)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/accountOverview/accountOverview.html',
                replace: true
            }
        }
        var angular = require('angular'),
            directiveWidgetMoreActions = require('directive-widget-more_actions'),
            moduleName = 'directive.widget.account_overview',
            directiveName = 'accountOverview';
        angular.module(moduleName, [
            directiveWidgetMoreActions.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/accountOverview/account-overview', function () {
});
!function () {
    'use strict';
    define('directive-widget-amount_input', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-numbers',
        'pf-angular-filters-format',
        'directive-currency_input',
        'directive-ng_attr',
        'directive-form-form_validation-amount_range'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                require: '^form',
                transclude: false,
                scope: {
                    theId: '@',
                    defaultValue: '@',
                    minValue: '@',
                    maxValue: '@',
                    theName: '@',
                    describedBy: '@',
                    config: '=',
                    decimals: '<',
                    isNumberInput: '='
                },
                link: function linkFn(scope, element, attrs, formCtrl) {
                    function formatAmount() {
                        if (scope.control && scope.control.$valid) {
                            var normalizedVal = numbers.normalizeNumber(scope.config.model);
                            scope.outputValue = numbers.filterAmount(normalizedVal, numbers.indicator.none, false, false, scope.decimals)
                        } else scope.outputValue = numbers.filterAmount(scope.config.model, numbers.indicator.none, false, false, scope.decimals)
                    }
                    scope.$form = formCtrl;
                    scope.inline = 'true' === attrs.inline;
                    scope.decimals = scope.decimals || 0 === scope.decimals ? scope.decimals : 2;
                    scope.focus = function focus() {
                        scope.isActive = true
                    };
                    scope.inputBlurred = function inputBlurred() {
                        scope.isActive = false;
                        if (_.has(scope.config, 'model') && ('' === scope.config.model || null === scope.config.model || !_.isFinite(Number(scope.config.model)))) scope.config.model = scope.defaultValue;
                        else scope.config.model = Number(scope.config.model).toFixed(scope.decimals);
                        formatAmount()
                    };
                    scope.outputValue = scope.config.model;
                    formatAmount()
                },
                controller: [
                    '$scope',
                    '$timeout',
                    function ($scope, $timeout) {
                        $scope.isActive = false;
                        $timeout(function () {
                            $scope.control = $scope.$form[$scope.theName]
                        })
                    }
                ],
                replace: true,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/amountInput/amountInput.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            numbers = require('pf-shared-modules-numbers'),
            pfAngularFiltersFormat = require('pf-angular-filters-format'),
            directiveCurrencyInput = require('directive-currency_input'),
            directiveNgAttr = require('directive-ng_attr'),
            amountRange = require('directive-form-form_validation-amount_range'),
            moduleName = 'directive.widget.amount_input',
            directiveName = 'amountInput',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            pfAngularFiltersFormat.moduleName,
            directiveCurrencyInput.moduleName,
            directiveNgAttr.moduleName,
            amountRange.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-currency_input',
                'directive-ng_attr',
                'directive-form-form_validation-amount_range'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/amountInput/amount-input', function () {
});
!function () {
    'use strict';
    define('directive-widget-buttonbar_dynamic', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    callToActionLabel: '@',
                    detailActionLabel: '@',
                    detailUrls: '=',
                    isButtonDisabled: '=',
                    isValid: '&',
                    onCallToActionClick: '&',
                    onDetailActionClick: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/buttonbarDynamic/buttonBarDynamic.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.buttonbar_dynamic',
            directiveName = 'buttonBarDynamic';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/buttonbarDynamic/buttonbar-dynamic', function () {
});
!function () {
    'use strict';
    var directives = [
        'directive-widget-more_actions'
    ];
    define('directive-widget-buttonbar_static', [
        'require',
        'angular',
        'jquery',
        'directive-widget-more_actions'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                transclude: true,
                scope: {
                    widgetInstanceId: '@',
                    detailSingleLabel: '@',
                    detailMultipleLabel: '@',
                    callToActionLabel: '@',
                    callToActionType: '@',
                    detailLinkType: '@',
                    mappingKey: '=',
                    actionEntries: '=',
                    showDetailLink: '=',
                    showCallToAction: '=',
                    callToActionShowsDetailPage: '=',
                    actionUrlReplacementObj: '='
                },
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.viewConfig = {
                        }
                    }
                ],
                compile: function compileFn() {
                    var emitOpenDetail = function emitOpenDetail($event) {
                            this.$emit(pf.globals.events.GO_TO_DETAIL_PAGE, {
                                mappingKey: this.mappingKey,
                                actionType: this.callToActionType,
                                actionUrlReplacementObj: this.actionUrlReplacementObj,
                                source: $event.currentTarget
                            })
                        },
                        updateCallToActionButton = function updateCallToActionButton() {
                            var opensDetailPage = !!this.callToActionShowsDetailPage,
                                isCorrectlySpecified = !!(this.showCallToAction && this.callToActionLabel && this.callToActionType);
                            this.viewConfig.doShowCallToAction = opensDetailPage || isCorrectlySpecified
                        },
                        closeEfMoreActionsMenu = function closeEfMoreActionsMenu() {
                            var esc = jQuery.Event('keydown', {
                                keyCode: pf.globals.keycodes.ESCAPE
                            });
                            jQuery(this).find('.ef_more_actions--menu.js-ef_more_actions--menu').trigger(esc)
                        };
                    return function linkFn(scope, element) {
                        updateCallToActionButton.bind(scope) ();
                        var unwatch = scope.$watch('showCallToAction', function () {
                            updateCallToActionButton.bind(scope) ()
                        });
                        scope.$on('$destroy', unwatch);
                        var hasSingleDetailButton = !!scope.showDetailLink,
                            hasMultipleDetailButton = !!(scope.actionEntries && scope.actionEntries.length);
                        scope.viewConfig.doShowSingleDetailButton = hasSingleDetailButton;
                        scope.viewConfig.doShowMultipleDetailButton = hasMultipleDetailButton;
                        scope.viewConfig.hasDetailAction = hasSingleDetailButton || hasMultipleDetailButton;
                        if (scope.viewConfig.doShowMultipleDetailButton) scope.closeEfMoreActionsMenu = closeEfMoreActionsMenu.bind(element);
                        scope.emitOpenDetail = emitOpenDetail.bind(scope)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/buttonbarStatic/buttonBarStatic.html'
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            directiveWidgetMoreActions = require('directive-widget-more_actions'),
            moduleName = 'directive.widget.buttonbar_static',
            directiveName = 'buttonBarStatic';
        angular.module(moduleName, [
            directiveWidgetMoreActions.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: directives,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/buttonbarStatic/buttonbar-static', function () {
});
!function () {
    'use strict';
    define('directive-widget-common-accessible_sorter', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.widget.common.accessible_sorter',
            directiveName = 'accessibleSorter',
            implementation = {
                bindings: {
                    widgetInstanceId: '@',
                    label: '@'
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/common/accessibleSorter/accessibleSorter.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/accessibleSorter/accessible-sorter', function () {
});
!function () {
    'use strict';
    define('directive-widget-common', [
        'require',
        'angular',
        'directive-widget-common-header',
        'directive-widget-common-help',
        'directive-widget-common-settings',
        'directive-widget-common-accessible_sorter',
        'directive-widget-common-widget_loader'
    ], function (require) {
        var angular = require('angular'),
            directiveWidgetCommonHeader = require('directive-widget-common-header'),
            directiveWidgetCommonHelp = require('directive-widget-common-help'),
            directiveWidgetCommonSettings = require('directive-widget-common-settings'),
            directiveWidgetCommonAccessibleSorter = require('directive-widget-common-accessible_sorter'),
            directiveWidgetCommonWidgetLoader = require('directive-widget-common-widget_loader'),
            moduleName = 'directive.widget.common';
        angular.module(moduleName, [
            directiveWidgetCommonHeader.moduleName,
            directiveWidgetCommonHelp.moduleName,
            directiveWidgetCommonSettings.moduleName,
            directiveWidgetCommonAccessibleSorter.moduleName,
            directiveWidgetCommonWidgetLoader.moduleName
        ]);
        return {
            moduleName: moduleName
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/common', function () {
});
!function () {
    'use strict';
    define('directive-widget-common-header', [
        'require',
        'lodash',
        'jquery',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    textKey: '@',
                    labelCustomTitle: '@',
                    labelAccount: '@',
                    widgetSubTitle: '@',
                    widgetInstance: '=',
                    hasWidgetSettings: '=',
                    isShortcut: '=',
                    showWidgetSettings: '&',
                    onHeaderClick: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/common/header/widgetHeader.html',
                replace: true,
                compile: function compileFn() {
                    var showWidgetSettings = function showWidgetSettings() {
                        this.$emit(pf.globals.events.WIDGET_SETTINGS_OPEN)
                    };
                    return function linkFn(scope) {
                        if (bd.designMode) jQuery('.bp-widget .widget--title').removeClass('widget--title');
                        scope.callHeaderFn = function callHeaderFn($event) {
                            if ('true' !== $event.target.getAttribute('data-editmode') && _.isFunction(scope.onHeaderClick)) scope.onHeaderClick()
                        };
                        scope.showWidgetSettings = showWidgetSettings.bind(scope)
                    }
                }
            }
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            moduleName = 'directive.widget.common.header',
            directiveName = 'widgetHeader';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/header/header', function () {
});
!function () {
    'use strict';
    define('directive-widget-common-help', [
        'require',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-urls',
        'directive-detail_loader'
    ], function (require) {
        var angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            urls = require('pf-shared-modules-urls'),
            directiveDetailLoader = require('directive-detail_loader'),
            moduleName = 'directive.widget.common.help',
            directiveName = 'help',
            implementation = {
                bindings: {
                    widgetInstanceId: '@',
                    labelTitle: '@',
                    labelClose: '@',
                    labelAdditionalHelp: '@',
                    description: '@',
                    widgetHelp: '='
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/common/help/widgetHelp.html',
                controller: function () {
                    this.isMobile = platform.isMobile();
                    this.openHelpUrl = function openHelpUrl() {
                        urls.openHelpUrl(this.widgetHelp.url)
                    }
                },
                controllerAs: directiveName
            };
        angular.module(moduleName, [
            directiveDetailLoader.moduleName
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/help/help', function () {
});
!function () {
    'use strict';
    define('directive-widget-common-settings', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    labelTitle: '@',
                    labelClose: '@',
                    labelSave: '@',
                    labelCancel: '@',
                    widgetTitle: '@'
                },
                compile: function compileFn() {
                    var saveSettings = function saveSettings() {
                        this.$emit(pf.globals.events.WIDGET_SETTINGS_SAVE)
                    };
                    return function linkFn(scope) {
                        scope.saveSettings = saveSettings.bind(scope)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/common/settings/widgetSettings.html',
                replace: true,
                transclude: true
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.common.settings',
            directiveName = 'settings';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/settings/settings', function () {
});
!function () {
    'use strict';
    define('directive-widget-common-widget_loader', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.widget.common.widget_loader',
            directiveName = 'widgetLoader',
            implementation = {
                controller: function () {
                    this.labelLoading = b$.portal.loadingMessage
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/common/widgetLoader/widgetLoader.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/common/widgetLoader/widget-loader', function () {
});
!function () {
    'use strict';
    define('directive-widget-content_pane_collapsible', [
        'require',
        'angular',
        'pf-shared-modules-util'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                transclude: true,
                scope: {
                    text: '@',
                    notCollapsible: '=?',
                    open: '=?',
                    hideContentPane: '@'
                },
                compile: function compileFn() {
                    return function linkFn(scope, element, attrs) {
                        scope.id = utils.generateId();
                        scope.lightBackground = 'true' === attrs.lightBackground;
                        if (scope.notCollapsible) scope.isOpen = true;
                        else scope.isOpen = scope.open || false;
                        var unwatchOpen = scope.$watch('open', function (newVal, oldVal) {
                            if (newVal !== oldVal && newVal !== scope.isOpen) {
                                scope.isOpen = newVal;
                                getCollapsible().toggle(newVal)
                            }
                        });
                        scope.toggleOpen = function toggleOpen() {
                            if (!scope.notCollapsible) {
                                scope.isOpen = !scope.isOpen;
                                scope.open = scope.isOpen;
                                getCollapsible().toggle(open)
                            }
                        };
                        var unwatchCollapsible = scope.$watch('notCollapsible', function () {
                            if (!!scope.notCollapsible) getCollapsible().toggle(true)
                        });
                        scope.$on('$destroy', function () {
                            unwatchOpen();
                            unwatchCollapsible()
                        });
                        var getCollapsible = function () {
                            var collapsible = pf.ui.getCollapsible(element[0]);
                            if (collapsible) {
                                getCollapsible = function () {
                                    return collapsible
                                };
                                return collapsible
                            }
                            return {
                                toggle: angular.noop
                            }
                        }
                    }
                },
                replace: true,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/contentPaneCollapsible/contentPaneCollapsible.html'
            }
        }
        var angular = require('angular'),
            utils = require('pf-shared-modules-util'),
            moduleName = 'directive.widget.content_pane_collapsible',
            directiveName = 'contentPaneCollapsible';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/contentPaneCollapsible/content-pane-collapsible', function () {
});
!function () {
    'use strict';
    define('directive-widget-date_range', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    startMonth: '@',
                    startYear: '@',
                    endMonth: '@',
                    endYear: '@',
                    additionalInfo: '@'
                },
                replace: true,
                link: function linkFn(scope) {
                    var hasEndDate = scope.endMonth && scope.endYear,
                        notSameMonth = scope.startMonth !== scope.endMonth || scope.startYear !== scope.endYear;
                    scope.isRange = hasEndDate && notSameMonth;
                    scope.hasStartYear = scope.startYear !== scope.endYear || scope.startYear && !scope.isRange
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/dateRange/dateRange.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.date_range',
            directiveName = 'dateRange';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/dateRange/date-range', function () {
});
!function () {
    'use strict';
    define('directive-widget-datepicker', [
        'require',
        'lodash',
        'angular',
        'jquery',
        'moment',
        'pf-shared-modules-formatter',
        'directive-form_validation-disable_and_ignore',
        'directive-form_validation-date_validation',
        'directive-ng_attr'
    ], function (require) {
        function implementation($timeout) {
            return {
                restrict: 'E',
                require: '^form',
                transclude: false,
                replace: true,
                scope: {
                    config: '=',
                    required: '=',
                    disabledExpression: '=?',
                    defaultValue: '=',
                    disallowWeekend: '=',
                    disallowPast: '=',
                    disallowPastAndToday: '=',
                    disallowFuture: '=',
                    disallowFutureAndToday: '=',
                    minDate: '@',
                    maxDate: '@',
                    theId: '@',
                    theName: '@',
                    describedBy: '@?',
                    onChangeMethod: '&'
                },
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.isActive = false
                    }
                ],
                link: function linkFn(scope, element, attrs, formCtrl) {
                    function setDatePickerConfig() {
                        var datePickerConfig = {
                        };
                        if (scope.minDate) datePickerConfig.rangeLow = moment(scope.minDate).format('YYYYMMDD');
                        if (scope.maxDate) datePickerConfig.rangeHigh = moment(scope.maxDate).format('YYYYMMDD');
                        if (scope.disallowWeekend) datePickerConfig.disabledDays = [
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            1
                        ];
                        if (scope.disallowPast) {
                            datePickerConfig.rangeLow = today;
                            scope.minDate = today
                        }
                        if (scope.disallowPastAndToday) {
                            datePickerConfig.rangeLow = nextDay;
                            scope.minDate = nextDay
                        }
                        if (scope.disallowFuture) {
                            datePickerConfig.rangeHigh = today;
                            scope.maxDate = today
                        }
                        if (scope.disallowFutureAndToday) {
                            datePickerConfig.rangeHigh = previousDay;
                            scope.maxDate = previousDay
                        }
                        scope.rangeLow = datePickerConfig.rangeLow;
                        scope.rangeHigh = datePickerConfig.rangeHigh;
                        scope.datePickerConfig = angular.toJson(datePickerConfig)
                    }
                    var unwatch = scope.$watch(function () {
                            return formCtrl[scope.theName]
                        }, function (newVal) {
                            if (newVal) scope.control = formCtrl[scope.theName]
                        }),
                        unwatchRequired = scope.$watch('required', function () {
                            scope.required = !!scope.required
                        });
                    $timeout(function () {
                        var inputElement = element.find('input') [0];
                        inputElement.on('change', function (event) {
                            scope.config.model = event.target.value
                        })
                    });
                    if (_.isUndefined(scope.disabledExpression)) scope.disabledExpression = false;
                    var today = moment().format('YYYYMMDD'),
                        nextDay = moment().add(1, 'days').format('YYYYMMDD'),
                        previousDay = moment().subtract(1, 'days').format('YYYYMMDD');
                    if (scope.disallowPast) scope.minDate = today;
                    if (scope.disallowPastAndToday) scope.minDate = nextDay;
                    if (scope.disallowFuture) scope.maxDate = today;
                    if (scope.disallowFutureAndToday) scope.maxDate = previousDay;
                    setDatePickerConfig();
                    scope.isInline = 'true' === attrs.inline;
                    var button,
                        unwatchButton = scope.$watch(function () {
                            return scope.disabledExpression
                        }, function (newVal) {
                            if (!button || !button.length) button = jQuery(element).find('.date-picker-control');
                            if (newVal) button.prop('disabled', true);
                            else button.prop('disabled', false);
                            button.attr('aria-disabled', newVal)
                        }),
                        unwatchMinDate = scope.$watch(function () {
                            return scope.minDate
                        }, function () {
                            setDatePickerConfig()
                        }),
                        unwatchMaxDate = scope.$watch(function () {
                            return scope.maxDate
                        }, function () {
                            setDatePickerConfig()
                        });
                    scope.$on('$destroy', function () {
                        unwatch();
                        unwatchRequired();
                        unwatchButton();
                        unwatchMinDate();
                        unwatchMaxDate()
                    });
                    scope.getDisabledExpression = function getDisabledExpression() {
                        return scope.disabledExpression
                    };
                    scope.focus = function focus() {
                        if (!scope.disabledExpression) scope.isActive = true
                    };
                    scope.inputBlurred = function inputBlurred() {
                        scope.isActive = false;
                        scope.config.model = scope.config.model.trim();
                        if ((_.isUndefined(scope.config.model) || '' === scope.config.model) && scope.defaultValue) scope.config.model = scope.defaultValue;
                        scope.formatOutput()
                    };
                    scope.inputChanged = function inputChanged() {
                        scope.checkDate();
                        if (_.isFunction(scope.onChangeMethod)) scope.onChangeMethod()
                    };
                    scope.formatOutput = function formatOutput() {
                        if (!_.isEmpty(scope.config.model)) {
                            var dateFormat;
                            if (!!scope.config.model.match(/^(\d?\d\.){2}\d{2}$/)) dateFormat = 'DD.MM.YY';
                            else if (!!scope.config.model.match(/^(\d?\d\.){2}\d{4}$/)) dateFormat = 'DD.MM.YYYY';
                            if (!!dateFormat) scope.config.model = formatter.formatDate(scope.config.model, dateFormat, 'DD.MM.YYYY')
                        }
                    };
                    scope.checkDate = function checkDate() {
                        scope.control.$setValidity('weekend', true);
                        if (scope.config.model && scope.config.model.match(/^(\d?\d\.){2}\d{4}$/) && scope.disallowWeekend) {
                            var date = moment(scope.config.model, 'DD.MM.YYYY');
                            if (6 === date.isoWeekday() || 7 === date.isoWeekday()) scope.control.$setValidity('weekend', false)
                        }
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/datepicker/datepicker.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            jQuery = require('jquery'),
            moment = require('moment'),
            formatter = require('pf-shared-modules-formatter'),
            directiveFormValidationDisableAndIgnore = require('directive-form_validation-disable_and_ignore'),
            directiveFormValidationDateValidation = require('directive-form_validation-date_validation'),
            directiveNgAttr = require('directive-ng_attr'),
            moduleName = 'directive.widget.datepicker',
            directiveName = 'datepicker',
            directiveImplementation = [
                '$timeout',
                implementation
            ];
        angular.module(moduleName, [
            directiveFormValidationDisableAndIgnore.moduleName,
            directiveFormValidationDateValidation.moduleName,
            directiveNgAttr.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-form_validation-disable_and_ignore',
                'directive-form_validation-date_validation',
                'directive-ng_attr'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/datepicker/datepicker', function () {
});
!function () {
    'use strict';
    define('directive-widget-dynamic_list', [
        'require',
        'angular',
        'pf-shared-modules-platform',
        'directive-widget-dropdown',
        'directive-widget-selection_list'
    ], function (require) {
        var angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            moduleName = 'directive.widget.dynamic_list',
            directiveName = 'dynamicList',
            implementation = {
                bindings: {
                    widgetInstanceId: '@',
                    defaultLabel: '@',
                    describedby: '@',
                    items: '=',
                    maxListItems: '=',
                    currentSelection: '=',
                    onItemSelected: '&',
                    onItemSelectedDirect: '&'
                },
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.isMobile = platform.isMobile
                    }
                ],
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/dynamicList/dynamicList.html'
            };
        angular.module(moduleName, [
            directiveDropdown.moduleName,
            directiveWidgetSelectionList.moduleName
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-widget-dropdown',
                'directive-widget-selection_list'
            ],
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/dynamicList/dynamic-list', function () {
});
!function () {
    'use strict';
    define('directive-widget-file_upload', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    theName: '@',
                    fileChanged: '='
                },
                replace: true,
                link: function linkFn(scope, element) {
                    element.attr('name', scope.theName);
                    element.bind('change', function () {
                        if (this.files.length) {
                            var file = this.files[0],
                                r = new FileReader;
                            r.onloadend = function (e) {
                                var fileContent = e.target.result;
                                if (_.isFunction(scope.fileChanged)) scope.fileChanged(file, fileContent)
                            };
                            r.readAsDataURL(file)
                        } else scope.fileChanged()
                    })
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/fileUpload/fileUpload.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            moduleName = 'directive.widget.file_upload',
            directiveName = 'fileUpload';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/fileUpload/file-upload', function () {
});
!function () {
    'use strict';
    define('directive-widget-icon_bar', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.widget.icon_bar',
            directiveName = 'iconBar',
            implementation = {
                bindings: {
                    icons: '=',
                    onItem: '&'
                },
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/iconBar/iconBar.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/iconBar/icon-bar', function () {
});
!function () {
    'use strict';
    define('directive-widget-messages', [
        'require',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng_detailpages',
        'angular',
        'pf-shared-modules-scrolling',
        'directive-scroll_into_view',
        'lodash',
        'bluebird',
        'pf-shared-modules-translator'
    ], function (require) {
        function implementation() {
            return {
                transclude: false,
                restrict: 'E',
                scope: {
                    textKey: '@',
                    messages: '=?',
                    error: '=?',
                    hasAutofocus: '@'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/messages/messages.html',
                controller: [
                    '$scope',
                    '$templateCache',
                    function ($scope, $templateCache) {
                        translate = translator.translate;
                        templateCache = $templateCache
                    }
                ],
                compile: function compileFn() {
                    function scrollToNotifications() {
                        var el = jQuery('.pf-notification--message');
                        scrolling.scrollToElement(el, 100);
                        el.focus()
                    }
                    function createMessageList(messages, textKey) {
                        var messageList = [
                        ];
                        _.forEach(_.keys(messages), function (type) {
                            var messagesByType = messages[type];
                            _.forEach(messagesByType, function (message) {
                                var messageContent;
                                if (!message.translated) messageContent = translateMessage(message, textKey);
                                else messageContent = message.message;
                                var messageContentId = messageContent.hashCode();
                                templateCache.put('messageContent-' + messageContentId, messageContent);
                                var messageType = MESSAGE_TYPES[type];
                                messageList.push({
                                    priority: messageType.priority,
                                    className: messageType.className,
                                    iconName: messageType.iconName,
                                    content: message,
                                    contentId: messageContentId
                                })
                            })
                        });
                        return _.sortBy(messageList, [
                            'priority'
                        ])
                    }
                    function applyMessages(scope, messages) {
                        scope.messageList = createMessageList(messages, scope.textKey)
                    }
                    function translateMessage(message, textKey) {
                        var translateKey = message.fullKey ? message.message : textKey + '.messages.' + message.message;
                        return translate(translateKey, null, message.data)
                    }
                    return function linkFn(scope, element, attrs) {
                        function getUrlObject(action, params) {
                            switch (action) {
                                case 'DomesticPendingPayments':
                                    return pfWidgetFunctions.getActionUrlForDetailPage('efdomesticpayment', action, params);
                                case 'ForeignPendingPayments':
                                    return pfWidgetFunctions.getActionUrlForDetailPage('efforeignpayment', action, params);
                                default:
                                    return null
                            }
                        }
                        scope.k = scope.textKey + '.messages.';
                        if (attrs.hasAutofocus) scope.autofocus = 'true' === attrs.hasAutofocus;
                        else scope.autofocus = true;
                        if (attrs.wrapper) scope.wrapper = 'true' === attrs.wrapper;
                        else scope.wrapper = false;
                        scope.eBillerDirectReg = function (billerId, esrRefNr, esrTnr) {
                            var params = {
                                    billerId: billerId,
                                    referenceNumber: esrRefNr,
                                    teilnahmeNr: esrTnr
                                },
                                errorHandler = function (response) {
                                    var urlObject = {
                                        url: 'pf-detail-fipomessage',
                                        type: 'JSON'
                                    };
                                    urlObject.data = response;
                                    urlObject.data.pageTitle = translate('ErrDomesticPaymentTitle', scope);
                                    pfWidgetFunctions.processUrlObject(urlObject);
                                    return _Promise.reject()
                                },
                                urlObj = pfWidgetFunctions.getActionUrlForDetailPage('efdomesticpayment', 'EBillerDirectRegistration', params),
                                config = {
                                    scope: scope,
                                    errorHandler: errorHandler,
                                    showSpinner: true,
                                    showLoader: false
                                };
                            restngDetailpages.postFormData2Json(config, urlObj.url, urlObj.params).then(function (response) {
                                scope.messages = response.messages;
                                applyMessages(scope, scope.messages)
                            })
                        };
                        scope.goToDetailPage = function (action, params) {
                            var urlObj = getUrlObject(action, params);
                            pfWidgetFunctions.processUrlObject(urlObj)
                        };
                        var unwatchGroup = scope.$watchGroup(['messages',
                                'error'], function (newValues, oldValues) {
                                for (var i = 0; i < newValues.length; i++) if (newValues[i] && newValues[i] !== oldValues[i] && scope.autofocus) scrollToNotifications()
                            }),
                            unwatchError = scope.$watch('error', function (error) {
                                if (!_.isUndefined(error)) {
                                    var errorContent;
                                    if (!error.message.translated) errorContent = translate(error.message.fullKey ? error.message.message : scope.textKey + '.messages.' + error.message.message, null, error.message.data);
                                    else errorContent = error.message.message;
                                    templateCache.put('errorContent', errorContent)
                                }
                            }),
                            unwatchMessages = scope.$watchCollection('messages', function (messages) {
                                applyMessages(scope, messages)
                            });
                        scope.$on('$destroy', function () {
                            unwatchGroup();
                            unwatchError();
                            unwatchMessages()
                        });
                        applyMessages(scope, scope.messages)
                    }
                },
                replace: true
            }
        }
        var pfWidgetFunctions = require('pf-widget-functions'),
            restngDetailpages = require('pf-shared-modules-rest_ng_detailpages'),
            angular = require('angular'),
            scrolling = require('pf-shared-modules-scrolling'),
            directiveScrollIntoView = require('directive-scroll_into_view'),
            _ = require('lodash'),
            _Promise = require('bluebird'),
            translator = require('pf-shared-modules-translator'),
            translate,
            templateCache,
            MESSAGE_TYPES = {
                errors: {
                    priority: 1,
                    className: 'pf-notification-error',
                    iconName: 'error'
                },
                success: {
                    priority: 2,
                    className: 'pf-notification-success',
                    iconName: 'success'
                },
                infos: {
                    priority: 3,
                    className: 'pf-notification-info',
                    iconName: 'info'
                }
            },
            moduleName = 'directive.widget.messages',
            directiveName = 'messages';
        angular.module(moduleName, [
            directiveScrollIntoView.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-scroll_into_view'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/messages/messages', function () {
});
!function () {
    'use strict';
    define('directive-widget-more_actions', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-translator'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    instanceId: '@',
                    detailSingleLabel: '@',
                    detailMultipleLabel: '@',
                    detailLinkType: '@',
                    mappingKey: '=',
                    actionEntries: '=',
                    actionUrlReplacementObj: '=',
                    showDetailLink: '=',
                    showCallToAction: '=',
                    callToActionShowsDetailPage: '=',
                    isMobile: '=',
                    smallButton: '=',
                    inStaticBar: '='
                },
                controller: [
                    '$scope',
                    function ($scope) {
                        _.forEach($scope.actionEntries, function (action) {
                            action.translatedTitle = translator.translate(action.aria || action.title || action.text);
                            action.translatedAriaLabel = action.aria ? action.translatedTitle.concat(' - ', translator.translate(action.text))  : action.translatedTitle
                        });
                        $scope.isInitialized = true
                    }
                ],
                compile: function compileFn() {
                    var emitOpenDetail = function emitOpenDetail(element) {
                        return function (actionType) {
                            this.$emit(pf.globals.events.GO_TO_DETAIL_PAGE, {
                                mappingKey: this.mappingKey,
                                actionType: actionType,
                                actionUrlReplacementObj: this.actionUrlReplacementObj,
                                source: element[0].querySelector('a')
                            })
                        }
                    };
                    return function linkFn(scope, element) {
                        scope.emitOpenDetail = emitOpenDetail(element).bind(scope)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/moreActions/moreActions.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            translator = require('pf-shared-modules-translator'),
            moduleName = 'directive.widget.more_actions',
            directiveName = 'moreActions';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/moreActions/more-actions', function () {
});
!function () {
    'use strict';
    define('directive-widget-orderoverview_settings', [
        'require',
        'angular',
        'lodash',
        'directive-form_validation-disable_and_ignore',
        'directive-form_validation-char_limit'
    ], function (require) {
        function implementation() {
            return {
                transclude: true,
                restrict: 'E',
                require: '^form',
                bindToController: {
                    widgetInstanceId: '@',
                    labelPeriod: '@',
                    labelNext: '@',
                    labelDays: '@',
                    labelEndOfMonth: '@',
                    labelUpTo: '@',
                    labelMonth: '@',
                    settingsDaysMin: '@',
                    settingsDaysMax: '@',
                    numDropdownDays: '@',
                    settingData: '=',
                    settingValues: '='
                },
                controller: function controllerFn() {
                    this.$onInit = function () {
                        this.dropdownDays = [
                        ];
                        var numDropdownDays = _.parseInt(this.numDropdownDays, 10);
                        if (_.isFinite(numDropdownDays) && numDropdownDays > 0) this.dropdownDays = _.range(1, numDropdownDays + 1)
                    }
                },
                controllerAs: 'vm',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/orderoverviewSettings/orderoverviewSettings.html'
            }
        }
        var angular = require('angular'),
            _ = require('lodash'),
            directiveFormValidationDisableAndIgnore = require('directive-form_validation-disable_and_ignore'),
            directiveFormValidationCharLimit = require('directive-form_validation-char_limit'),
            moduleName = 'directive.widget.orderoverview_settings',
            directiveName = 'orderoverviewSettings';
        angular.module(moduleName, [
            directiveFormValidationDisableAndIgnore.moduleName,
            directiveFormValidationCharLimit.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-form_validation-disable_and_ignore',
                'directive-form_validation-char_limit'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/orderoverviewSettings/orderoverview-settings', function () {
});
!function () {
    'use strict';
    define('directive-widget-percent_input', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-numbers',
        'pf-angular-filters-format',
        'directive-currency_input',
        'directive-ng_attr'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                require: '^form',
                transclude: false,
                scope: {
                    theId: '@',
                    defaultValue: '@',
                    theName: '@',
                    describedBy: '@',
                    config: '=',
                    decimals: '@',
                    onChange: '&'
                },
                link: function linkFn(scope, element, attrs, formCtrl) {
                    scope.$form = formCtrl;
                    scope.inline = 'true' === attrs.inline;
                    scope.focus = function focus() {
                        scope.isActive = true
                    };
                    scope.$watch('config.model', function () {
                        if (!scope.isActive) scope.inputBlurred()
                    }, true);
                    scope.inputBlurred = function inputBlurred() {
                        if (scope.isActive && scope.outputValue !== scope.config.model) scope.onChange();
                        scope.isActive = false;
                        if (_.has(scope.config, 'model') && '' === scope.config.model) scope.config.model = scope.defaultValue;
                        if (scope.control && scope.control.$valid) {
                            var normalizedVal = numbers.normalizeNumber(scope.config.model);
                            if ('' === normalizedVal) normalizedVal = 0;
                            scope.outputValue = numbers.formatNumber(normalizedVal, numbers.indicator.none, '', scope.decimals)
                        } else scope.outputValue = scope.config.model
                    };
                    scope.outputValue = scope.config.model
                },
                controller: [
                    '$scope',
                    '$timeout',
                    function ($scope, $timeout) {
                        $scope.isActive = false;
                        $timeout(function () {
                            $scope.control = $scope.$form[$scope.theName]
                        })
                    }
                ],
                replace: true,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/percentInput/percentInput.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            numbers = require('pf-shared-modules-numbers'),
            pfAngularFiltersFormat = require('pf-angular-filters-format'),
            directiveCurrencyInput = require('directive-currency_input'),
            directiveNgAttr = require('directive-ng_attr'),
            moduleName = 'directive.widget.percent_input',
            directiveName = 'percentInput',
            directiveImplementation = [
                implementation
            ];
        angular.module(moduleName, [
            pfAngularFiltersFormat.moduleName,
            directiveCurrencyInput.moduleName,
            directiveNgAttr.moduleName
        ]).directive(directiveName, directiveImplementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-ng_attr'
            ],
            implementation: directiveImplementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/percentInput/percent-input', function () {
});
!function () {
    'use strict';
    define('directive-widget-selectable_table', [
        'require',
        'angular',
        'jquery',
        'directive-emit_on_ngrepeat_end'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    tableData: '=',
                    itemSelected: '=',
                    rowClicked: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/selectableTable/selectableTable.html',
                controller: [
                    '$scope',
                    function ($scope) {
                        $scope.model = {
                        }
                    }
                ],
                link: function linkFn(scope, element, attrs) {
                    if (!!attrs.rowClicked) {
                        var unbind = scope.$on('ngRepeatFinished', function () {
                            var $tableRows = jQuery(element).find('tbody > tr');
                            jQuery($tableRows).each(function (index, row) {
                                jQuery(row).on('click', function (event) {
                                    if ('LABEL' !== event.target.tagName) scope.rowClicked({
                                        index: index
                                    })
                                })
                            })
                        });
                        scope.$on('$destroy', function () {
                            unbind()
                        })
                    }
                    var unwatch = scope.$watch('tableData', function () {
                        scope.model = {
                        }
                    });
                    scope.$on('$destroy', unwatch)
                }
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            directiveEmitOnNgrepeatEnd = require('directive-emit_on_ngrepeat_end'),
            moduleName = 'directive.widget.selectable_table',
            directiveName = 'selectableTable';
        angular.module(moduleName, [
            directiveEmitOnNgrepeatEnd.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/selectableTable/selectable-table', function () {
});
!function () {
    'use strict';
    define('directive-widget-selection_list', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            function SelectionListController() {
                this.$onInit = function () {
                    this.noBorderTop = 'true' === this.noBorderTop;
                    this.showMoreLabel = !!this.showMoreLabel
                };
                this.isKeyValue = function (item) {
                    return item.info && !item.description
                }
            }
            return {
                restrict: 'E',
                bindToController: {
                    noBorderTop: '@',
                    items: '=',
                    showMoreLabel: '=?',
                    onItemSelected: '&'
                },
                controller: SelectionListController,
                controllerAs: 'selectionList',
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/selectionList/selectionList.html'
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.selection_list',
            directiveName = 'selectionList';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/selectionList/selection-list', function () {
});
!function () {
    'use strict';
    define('directive-widget-single_select', [
        'require',
        'angular'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    theId: '@',
                    describedby: '@',
                    cancel: '@',
                    defaultLabel: '@',
                    dropdownEntries: '=',
                    selectedValue: '=',
                    valueRenderingDisabled: '=',
                    methodSelectedEntry: '&'
                },
                compile: function compileFn() {
                    var updateDefaultLabel = function updateDefaultLabel() {
                        if (!this.selectedValue && this.defaultLabel) this.selectedValue = {
                            text: this.defaultLabel
                        }
                    };
                    return function linkFn(scope) {
                        scope.valueRenderingInactive = scope.valueRenderingDisabled || false;
                        var unwatch1 = scope.$watch('dropdownEntries', function () {
                            for (var i = 0; scope.dropdownEntries && i < scope.dropdownEntries.length; i++) if (scope.dropdownEntries[i].text === scope.selectedValue) {
                                scope.methodSelectedEntry({
                                    entry: scope.dropdownEntries[i]
                                });
                                return
                            }
                        });
                        scope.$on('$destroy', unwatch1);
                        var unwatch2 = scope.$watch('selectedValue', function () {
                            updateDefaultLabel.bind(scope) ()
                        });
                        scope.$on('$destroy', unwatch2)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/singleSelect/singleSelect.html',
                replace: true
            }
        }
        var angular = require('angular'),
            moduleName = 'directive.widget.single_select',
            directiveName = 'singleSelect';
        angular.module(moduleName, [
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/singleSelect/single-select', function () {
});
!function () {
    'use strict';
    define('directive-widget-teaser_slider', [
        'require',
        'lodash',
        'angular',
        'jquery',
        'pf-shared-modules-urls',
        'directive-widget-teaser_slider_controls'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                replace: true,
                link: function (scope, element, attrs) {
                    function clickHandler(event) {
                        event.preventDefault();
                        event.stopPropagation();
                        var $slideItem = jQuery(event.target).closest('.widget_slider--container--slide_list--item'),
                            $slideLinks = $slideItem.find('.slide_link');
                        if ($slideLinks.length > 0) urls.openAutoDetectUrl($slideLinks[0].dataset.mobilehref)
                    }
                    scope.sliderControls = attrs.controls ? JSON.parse(attrs.controls)  : true;
                    _.forEach(_.filter(scope.items, {
                        type: 'message'
                    }), function (item) {
                        item.bgColor = _.sample(BACKGROUND_CLASSES)
                    });
                    var $el = jQuery(element),
                        ns = '.ef_slider';
                    $el.on('click' + ns, '.widget_slider--container--slide_list--item.is-link, .widget_slider--container--slide_list--item.is-link .widget_slider--container--slide_list--item--content', clickHandler)
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/teaserSlider/teaserSlider.html'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            jQuery = require('jquery'),
            urls = require('pf-shared-modules-urls'),
            directiveWidgetTeaserSliderControls = require('directive-widget-teaser_slider_controls'),
            BACKGROUND_CLASSES = [
                'bg-pistachio',
                'bg-cerulean',
                'bg-tamarillo',
                'bg-orange'
            ],
            moduleName = 'directive.widget.teaser_slider',
            directiveName = 'teaserSlider';
        angular.module(moduleName, [
            directiveWidgetTeaserSliderControls.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/teaserSlider/teaser-slider', function () {
});
!function () {
    'use strict';
    define('directive-widget-teaser_slider_controls', [
        'require',
        'angular'
    ], function (require) {
        var angular = require('angular'),
            moduleName = 'directive.widget.teaser_slider_controls',
            directiveName = 'teaserSliderControls',
            implementation = {
                controllerAs: directiveName,
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/teaserSliderControls/teaserSliderControls.html'
            };
        angular.module(moduleName, [
        ]).component(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            implementation: implementation,
            component: true
        }
    })
}();
define('fipo/lib/shared/directives/widget/teaserSliderControls/teaser-slider-controls', function () {
});
!function () {
    'use strict';
    define('directive-widget-text_input_with_button', [
        'require',
        'angular',
        'directive-account_input',
        'directive-form-iban'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    inputLabel: '@',
                    inputName: '@',
                    buttonText: '@',
                    maxLength: '@',
                    ibanModel: '=',
                    isForeignCurrency: '=',
                    hideButton: '=',
                    buttonClick: '&',
                    enterPressed: '&'
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/textInputWithButton/textInputWithButton.html',
                replace: true,
                require: '^form',
                compile: function compileFn() {
                    return function linkFn(scope, element, attrs, formCtrl) {
                        scope.hasInputError = function hasInputError() {
                            return formCtrl.$dirty && !formCtrl.$valid
                        };
                        scope.hasValue = function hasValue() {
                            return formCtrl.$viewValue
                        }
                    }
                }
            }
        }
        var angular = require('angular'),
            directiveAccountInput = require('directive-account_input'),
            directiveFormIban = require('directive-form-iban'),
            moduleName = 'directive.widget.text_input_with_button',
            directiveName = 'textInputWithButton';
        angular.module(moduleName, [
            directiveAccountInput.moduleName,
            directiveFormIban.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-account_input',
                'directive-form-iban'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/textInputWithButton/text-input-with-button', function () {
});
!function () {
    'use strict';
    define('directive-widget-text_input_with_currency', [
        'require',
        'angular',
        'directive-currency_input',
        'directive-form-form_validation-amount_range'
    ], function (require) {
        function implementation() {
            return {
                restrict: 'E',
                scope: {
                    widgetInstanceId: '@',
                    amountLabel: '@',
                    amountInputName: '@',
                    currencyLabel: '@',
                    currencyInputName: '@',
                    maxLength: '@',
                    minValue: '@',
                    maxValue: '@',
                    enterPressed: '&',
                    currencies: '=',
                    amountModel: '=',
                    currencyModel: '=',
                    amountLabelTranslateValues: '='
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/textInputWithCurrency/textInputWithCurrency.html',
                replace: true,
                require: '^form',
                compile: function compileFn() {
                    return function linkFn(scope, element, attrs, formCtrl) {
                        scope.hasInputError = function hasInputError() {
                            return formCtrl.$dirty && !formCtrl.$valid
                        };
                        scope.hasValue = function hasValue() {
                            return formCtrl.$viewValue
                        }
                    }
                }
            }
        }
        var angular = require('angular'),
            directiveCurrencyInput = require('directive-currency_input'),
            directiveAmountRange = require('directive-form-form_validation-amount_range'),
            moduleName = 'directive.widget.text_input_with_currency',
            directiveName = 'textInputWithCurrency';
        angular.module(moduleName, [
            directiveCurrencyInput.moduleName,
            directiveAmountRange.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-currency_input'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/textInputWithCurrency/text-input-with-currency', function () {
});
!function () {
    'use strict';
    define('directive-widget-toggle', [
        'require',
        'lodash',
        'angular',
        'directive-ng_attr'
    ], function (require) {
        function implementation() {
            return {
                require: '?ngModel',
                restrict: 'E',
                scope: {
                    theId: '@',
                    name: '@',
                    describedBy: '@',
                    isRequired: '=',
                    isDisabled: '=',
                    onChange: '&'
                },
                link: function linkFn(scope, element, attrs, ngModelCtrl) {
                    scope.inputChanged = function inputChanged() {
                        if (ngModelCtrl) {
                            ngModelCtrl.$setViewValue(scope.model);
                            ngModelCtrl.$commitViewValue()
                        }
                        if (_.isFunction(scope.onChange)) scope.onChange({
                            value: scope.model
                        })
                    };
                    if (ngModelCtrl) {
                        scope.model = false;
                        var unwatch = scope.$watch(function () {
                            return ngModelCtrl.$modelValue;
                        }, function () {
                            scope.model = ngModelCtrl.$modelValue
                        });
                        scope.$on('$destroy', unwatch)
                    }
                },
                templateUrl: pf.globals.urlprefix.BUNDLE + '/lib/shared/directives/widget/toggle/toggle.html',
                replace: true
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            directiveNgAttr = require('directive-ng_attr'),
            moduleName = 'directive.widget.toggle',
            directiveName = 'toggle';
        angular.module(moduleName, [
            directiveNgAttr.moduleName
        ]).directive(directiveName, implementation);
        return {
            name: directiveName,
            moduleName: moduleName,
            dependencies: [
                'directive-ng_attr'
            ],
            implementation: implementation
        }
    })
}();
define('fipo/lib/shared/directives/widget/toggle/toggle', function () {
});
!function () {
    'use strict';
    define('pf-widget-ecanalysisoverview', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-cockpit-charts',
        'pf-angular-common',
        'directive-widget-buttonbar_static',
        'directive-cockpit-ec_pie_chart'
    ], function (require) {
        function EcAnalysisOverviewController($scope, $state, widget) {
            function dataLoaded() {
                var model = $scope.dynamic;
                if (!(enumMonth && enumCategory)) {
                    enumMonth = wcmsEnum.getEnumObject('month', $scope);
                    enumCategory = wcmsEnum.getEnumObject('categoryShort', $scope)
                }
                if (!$scope.errors || _.isEmpty($scope.errors)) if (!$scope.messages || !$scope.messages.errors || _.isEmpty($scope.messages.errors) || !$scope.messages.errors[0].message) {
                    if ($scope.chartData && !_.isEmpty($scope.chartData) && $scope.chartInfo && 0 !== $scope.chartInfo.totalAmount) {
                        var result = $scope.rawData,
                            chartData = _.map(result.chartData, function (item) {
                                var categoryName;
                                if (enumCategory && _.isFinite(item.category_id) && enumCategory[item.category_id] && util.hasValue(enumCategory[item.category_id].text)) categoryName = enumCategory[item.category_id].text;
                                else categoryName = item.category;
                                return {
                                    amount: item.amount,
                                    parentCatId: item.category_id,
                                    name: categoryName
                                }
                            });
                        model.chartData = charts.createPieChartRelativeData(chartData);
                        if ($scope.chartInfo) {
                            var chartInfo = $scope.chartInfo;
                            chartInfo.startMonthText = _.get(enumMonth[chartInfo.startMonth], 'text');
                            chartInfo.endMonthText = _.get(enumMonth[chartInfo.endMonth], 'text');
                            $scope.translationsDone = true
                        }
                    }
                } else {
                    $scope.message = $scope.messages.errors[0].message;
                    $scope.messages.translated = false;
                    $scope.messages.fullKey = false
                } else {
                    $scope.messages = {
                    };
                    $scope.messages.translated = false;
                    $scope.messages.fullKey = false;
                    $scope.messages.errors = [
                    ];
                    $scope.messages.errors[0] = {
                    };
                    $scope.messages.errors[0].message = $scope.errors[0].message
                }
            }
            function verifyData() {
                if ($scope.chartData) {
                    if (!$scope.chartData.length || !$scope.chartInfo || 0 === $scope.chartInfo.totalAmount) {
                        $scope.showCallToAction = true;
                        $scope.callToActionLabel = 'Action';
                        $scope.callToActionType = 'GoToCockpit';
                        return pf.globals.states.widget.empty
                    }
                    return pf.globals.states.widget.ready
                }
                return pf.globals.states.widget.error
            }
            $scope.widgetInstanceId = widget.id;
            $scope.dynamic = {
            };
            var enumMonth,
                enumCategory;
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                onVerifyData: verifyData,
                emptyWidgetUrl: pfWidgetFunctions.getWidgetPath(widgetName) + '/empty.html'
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            charts = require('pf-shared-modules-cockpit-charts'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveCockpitEcPieChart = require('directive-cockpit-ec_pie_chart');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ecanalysisoverview',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveCockpitEcPieChart.moduleName
            ]);
        module.controller('EcAnalysisOverviewController', EcAnalysisOverviewController);
        EcAnalysisOverviewController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ecanalysisoverview/js/ecanalysisoverview', function () {
});
!function () {
    'use strict';
    define('pf-widget-ecbudget', [
        'require',
        'lodash',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-dates',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-shared-modules-formatter',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-single_select',
        'directive-widget-dropdown',
        'directive-cockpit-ec_additional_info',
        'directive-cockpit-ec_budget_chart',
        'directive-cockpit-ec_budget_select',
        'directive-cockpit-ec_simple_list'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.graphic.name, {
                template: '<div ng-include="graphicWidgetUrl"></div>'
            }).state(states.simple.name, {
                template: '<div ng-include="simpleWidgetUrl"></div>'
            })
        }
        function EcBudgetController($scope, $state, widget) {
            function createBudgetTableColumns(budget) {
                var completion = budget.value.completion,
                    isOk = completion <= 100,
                    completed = isOk ? completion : 100,
                    remaining = isOk ? 100 - completion : 0;
                return [{
                    text: formatter.truncate(budget.text, 15)
                },
                    {
                        data: {
                            values: [
                                {
                                    name: 'Remaining',
                                    data: [
                                        remaining
                                    ],
                                    color: colors.remaining
                                },
                                {
                                    name: 'Completion',
                                    data: [
                                        completed
                                    ],
                                    color: isOk ? colors.positive : colors.negative
                                }
                            ]
                        }
                    },
                    {
                        text: completion + '%'
                    }
                ]
            }
            function createBudgets(budgets) {
                return _.map(budgets, function (budget) {
                    return {
                        text: budget.name,
                        value: budget,
                        key: budget.id
                    }
                })
            }
            function categorySorter(a, b) {
                var catA = a.catId,
                    catB = b.catId;
                if (catA > catB) return 1;
                if (catA < catB) return - 1;
                else return 0
            }
            function onDataLoaded() {
                if (!enumMonth) enumMonth = wcmsEnum.getEnumObject('month', $scope);
                var model = $scope.dynamic,
                    result = $scope.rawData;
                if (ecWidget.hasData()) {
                    model.budgets = model.selectedBudgets = [
                    ];
                    if (result.budgets) {
                        result.budgets.sort(categorySorter);
                        model.budgets = createBudgets(result.budgets);
                        model.selectedBudgets = [
                        ];
                        if ($scope.settingData.budgets) {
                            var restoreResult = ecService.getActiveItems(result.budgets, $scope.settingData.budgets);
                            model.selectedBudgets = createBudgets(restoreResult.items);
                            if (restoreResult.hasBeenModified) {
                                $scope.updateBudgets();
                                $scope.$emit(pf.globals.events.WIDGET_SETTINGS_SAVE)
                            }
                        } else model.selectedBudgets = model.budgets.slice(0, 3);
                        var tableData = {
                        };
                        tableData.colgroup = [
                            '40%',
                            '42%',
                            '18%'
                        ];
                        tableData.headers = [
                            {
                                text: 'MostImportantBudgets',
                                colspan: 2,
                                thClass: 'pf-align-left'
                            }
                        ];
                        tableData.rows = _.map(model.selectedBudgets, function (budget) {
                            return {
                                columns: createBudgetTableColumns(budget)
                            }
                        });
                        $scope.tableData = tableData
                    }
                    model.budgetsExceeded = result.budgetsExceeded;
                    model.budgetsOk = result.budgetsOk;
                    model.budgetsTotal = model.budgetsExceeded + model.budgetsOk;
                    var totalBudgetsMessage;
                    if (model.budgetsTotal > 1) totalBudgetsMessage = translate('TotalBudgetsMultiple', $scope, {
                        budgetsTotal: model.budgetsTotal
                    });
                    else if (1 === model.budgetsTotal) totalBudgetsMessage = translate('TotalBudgetsSingle', $scope);
                    model.totalBudgetsMessage = totalBudgetsMessage;
                    model.detailBudgetsMessage = translate('TotalBudgetsOverview', $scope, {
                        budgetsExceeded: model.budgetsExceeded,
                        budgetsOk: model.budgetsOk
                    });
                    model.items = [
                    ];
                    if (model.budgetsOk) model.items.push({
                        number: model.budgetsOk,
                        text: util.expandKey('BudgetsOk', $scope)
                    });
                    if (model.budgetsExceeded) model.items.push({
                        number: model.budgetsExceeded,
                        text: util.expandKey('BudgetsExceeded', $scope)
                    });
                    var startDate = dateService.extractFromIso(result.month);
                    ecService.fillDates(startDate, null, model, enumMonth, translator.createTranslator($scope))
                } else {
                    $scope.hasWidgetSettings = false;
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'Action';
                    $scope.callToActionType = 'GoToBudget'
                }
            }
            function onDataVerify() {
                $scope.hasWidgetSettings = true;
                $scope.actionItemIcon = void 0;
                var budgets = $scope.dynamic.budgets;
                if ($scope.dynamic.canActivateBudgets) {
                    $scope.infoTitle = 'ActivateBudgetTitle';
                    $scope.infoFirstLine = 'ActivateBudgetText';
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'ActivateBudgetAction';
                    $scope.callToActionType = 'GoToActivateBudget';
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                if ($scope.dynamic.canConfirmBudgets) {
                    $scope.infoTitle = 'ConfirmBudgetTitle';
                    $scope.infoFirstLine = 'ConfirmBudgetText';
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'ConfirmBudgetAction';
                    $scope.callToActionType = 'GoToConfirmBudget';
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                if (_.isEmpty(budgets)) {
                    $scope.infoTitle = 'CreateBudgetTitle';
                    $scope.infoFirstLine = 'CreateBudgetText';
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'CreateBudgetAction';
                    $scope.callToActionType = 'GoToCreateBudget';
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                return null
            }
            function showBudgetSelection() {
                var model = $scope.dynamic;
                if (model) return 'graphic' === model.selectedState.value && model.budgets && model.budgets.length > 3;
                else return false
            }
            function updateBudgets() {
                var selectedBudgets = $scope.dynamic.selectedBudgets;
                angular.extend($scope.settingData, {
                    budgets: _.map(selectedBudgets, 'value.id')
                })
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            $scope.hasWidgetSettings = true;
            $scope.showBudgetSelection = showBudgetSelection;
            $scope.updateBudgets = updateBudgets;
            var widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.graphicWidgetUrl = widgetPath + '/views/graphic.html';
            $scope.simpleWidgetUrl = widgetPath + '/views/simple.html';
            var enumMonth,
                translate = translator.translate,
                ecWidget = pfEcWidget.init({
                    scope: $scope,
                    state: $state,
                    module: module,
                    widget: widget,
                    widgetName: widgetName,
                    states: [
                        states.simple,
                        states.graphic
                    ],
                    onDataLoaded: onDataLoaded,
                    onDataVerify: onDataVerify,
                    detailPageWebtrends: 'Cockpit_Budget'
                })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            dateService = require('pf-shared-modules-dates'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            formatter = require('pf-shared-modules-formatter'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveCockpitEcAdditionalInfo = require('directive-cockpit-ec_additional_info'),
            directiveCockpitEcBudgetChart = require('directive-cockpit-ec_budget_chart'),
            directiveCockpitEcBudgetSelect = require('directive-cockpit-ec_budget_select'),
            directiveCockpitEcSimpleList = require('directive-cockpit-ec_simple_list');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ecbudget',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveDropdown.moduleName,
                directiveCockpitEcAdditionalInfo.moduleName,
                directiveCockpitEcBudgetChart.moduleName,
                directiveCockpitEcBudgetSelect.moduleName,
                directiveCockpitEcSimpleList.moduleName
            ]),
            states = pf.globals.states.cockpit,
            colors = pf.globals.chartColors.bar;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('EcBudgetController', EcBudgetController);
        EcBudgetController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ecbudget/js/ecbudget', function () {
});
!function () {
    'use strict';
    define('pf-widget-eccashflow', [
        'require',
        'lodash',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-cockpit-charts',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-selectable_table',
        'directive-widget-single_select',
        'directive-widget-dropdown',
        'directive-cockpit-ec_column_chart'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.graphic.name, {
                template: '<div ng-include="graphicWidgetUrl"></div>'
            }).state(states.list.name, {
                template: '<div ng-include="listWidgetUrl"></div>'
            })
        }
        function EcCashFlowController($scope, $state, widget) {
            function onDataLoaded() {
                if (!(enumMonth && enumMonthFull)) {
                    enumMonth = wcmsEnum.getEnumObject('month', $scope);
                    enumMonthFull = wcmsEnum.getEnumObject('monthfull', $scope)
                }
                var model = $scope.dynamic;
                if (ecWidget.hasData()) {
                    var result = $scope.rawData;
                    ecService.fillMissingDates(result, dates);
                    ecService.extendArrayWithDate(result);
                    ecService.fillDatesFromCurrent(model, enumMonth, translator.createTranslator($scope));
                    var tableData = {
                    };
                    tableData.tableClass = 'widget_bar_charts--info_table';
                    tableData.colgroup = [
                        '50%',
                        '50%'
                    ];
                    tableData.headers = [
                    ];
                    tableData.headers[0] = {
                        text: 'Month',
                        columnClass: pf.globals.classes.VISUALLY_HIDDEN
                    };
                    tableData.headers[1] = {
                        text: 'Balance'
                    };
                    tableData.rows = _.map(result, function (cashflow) {
                        var spanClass = 'widget_state_table_list--row--value';
                        spanClass += cashflow.amount < 0 ? ' negative_val' : '';
                        var month = cashflow.date.month;
                        return {
                            columns: [
                                {
                                    type: 'text',
                                    text: translate(enumMonthFull[month].key, $scope)
                                },
                                {
                                    type: 'amount',
                                    amount: cashflow.amount,
                                    currency: pf.globals.types.currency.CHF,
                                    spanClass: spanClass
                                }
                            ]
                        }
                    });
                    $scope.tableData = tableData;
                    var chartData = _.map(result, function (item) {
                        return angular.extend(item, {
                            name: translate(enumMonth[item.date.month].key, $scope)
                        })
                    });
                    model.chartData = charts.createColumnChartData(chartData)
                } else {
                    $scope.showCallToAction = !$scope.isMobile;
                    $scope.callToActionLabel = 'Action';
                    $scope.callToActionType = 'GoToCashFlow'
                }
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            $scope.hasWidgetSettings = true;
            var enumMonth,
                enumMonthFull,
                widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.graphicWidgetUrl = widgetPath + '/views/graphic.html';
            $scope.listWidgetUrl = widgetPath + '/views/list.html';
            var dates = ecService.getLastThreeMonths(),
                translate = translator.translate,
                ecWidget,
                dataUrlReplacementObj = {
                    'params.fromDate': dates.startDate,
                    'params.toDate': dates.endDate
                };
            ecWidget = pfEcWidget.init({
                scope: $scope,
                state: $state,
                module: module,
                widget: widget,
                widgetName: widgetName,
                states: [
                    states.graphic,
                    states.list
                ],
                onDataLoaded: onDataLoaded,
                dataUrlReplacementObj: dataUrlReplacementObj,
                detailPageWebtrends: 'Cockpit_Monatsbilanz'
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            charts = require('pf-shared-modules-cockpit-charts'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveCockpitEcColumnChart = require('directive-cockpit-ec_column_chart');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'eccashflow',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveDropdown.moduleName,
                directiveCockpitEcColumnChart.moduleName
            ]),
            states = pf.globals.states.cockpit;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('EcCashFlowController', EcCashFlowController);
        EcCashFlowController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/eccashflow/js/eccashflow', function () {
});
!function () {
    'use strict';
    define('pf-widget-ecexpenditure', [
        'require',
        'lodash',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-cockpit-charts',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-shared-modules-currencies',
        'pf-shared-modules-numbers',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-selectable_table',
        'directive-widget-account_overview',
        'directive-widget-single_select',
        'directive-widget-dropdown',
        'directive-cockpit-ec_pie_chart'
    ], function (require) {
        function stateProviderConfig($stateProvider) {
            $stateProvider.state(states.graphic.name, {
                template: '<div ng-include="graphicWidgetUrl"></div>'
            }).state(states.list.name, {
                template: '<div ng-include="listWidgetUrl"></div>'
            }).state(states.simple.name, {
                template: '<div ng-include="simpleWidgetUrl"></div>'
            })
        }
        function EcExpenditureController($scope, $state, widget) {
            function getCategoryName(item) {
                if (enumCategory && _.isFinite(item.parentCatId) && enumCategory[item.parentCatId] && util.hasValue(enumCategory[item.parentCatId].text)) return enumCategory[item.parentCatId].text;
                else return item.catName
            }
            function onDataLoaded() {
                var model = $scope.dynamic,
                    translate = translator.translate;
                if (!(enumMonth && enumCategory)) {
                    enumMonth = wcmsEnum.getEnumObject('month', $scope);
                    enumCategory = wcmsEnum.getEnumObject('category', $scope)
                }
                if (ecWidget.hasData()) {
                    var result = $scope.rawData;
                    ecService.fillDatesFromCurrent(model, enumMonth, translator.createTranslator($scope));
                    var chartData = _.map(result, function (item) {
                        return {
                            amount: item.amount,
                            parentCatId: item.parentCatId,
                            name: getCategoryName(item)
                        }
                    });
                    model.chartData = charts.createPieChartAbsoluteData(chartData);
                    var tableData = {
                    };
                    tableData.tableClass = 'widget_bar_charts--info_table';
                    tableData.colgroup = [
                        '60%',
                        'AUTO'
                    ];
                    tableData.headers = [
                    ];
                    tableData.headers[0] = {
                        text: 'Category',
                        columnClass: pf.globals.classes.VISUALLY_HIDDEN
                    };
                    tableData.headers[1] = {
                        text: 'Expenditures'
                    };
                    tableData.rows = _.map(result, function (expenditure) {
                        return {
                            columns: [
                                {
                                    type: 'text',
                                    text: getCategoryName(expenditure),
                                    tdClass: 'widget_state_table_list--row--title',
                                    spanClass: 'category' + expenditure.parentCatId
                                },
                                {
                                    type: 'amountNoSuffix',
                                    amount: Math.abs(expenditure.amount),
                                    currency: pf.globals.types.currency.CHF,
                                    tdClass: 'widget_state_table_list--row--value'
                                }
                            ]
                        }
                    });
                    tableData.footers = [
                    ];
                    model.tableData = tableData;
                    var totalAmount = _.reduce(result, function (prev, current) {
                            return prev + current.amount
                        }, 0),
                        absTotalAmount = Math.abs(totalAmount);
                    model.account = {
                        amount: absTotalAmount,
                        isNegative: false,
                        hasValidAmount: true,
                        info: {
                            content: {
                                left: {
                                    value: numbersModule.formatAmountValue(absTotalAmount),
                                    currency: currenciesModule.getLiteral(pf.globals.types.currency.CHF)
                                }
                            },
                            footers: [
                                {
                                    left: translate('TotalExpenditures', $scope)
                                }
                            ]
                        }
                    }
                } else {
                    $scope.showCallToAction = !$scope.isMobile;
                    $scope.callToActionLabel = 'ActionExpenditure';
                    $scope.callToActionType = 'GoToExpenditure'
                }
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            $scope.hasWidgetSettings = true;
            var enumMonth,
                enumCategory,
                widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.graphicWidgetUrl = widgetPath + '/views/graphic.html';
            $scope.listWidgetUrl = widgetPath + '/views/list.html';
            $scope.simpleWidgetUrl = widgetPath + '/views/simple.html';
            var dates = ecService.getLastThreeMonths(),
                ecWidget,
                dataUrlReplacementObj = {
                    'params.fromDate': dates.startDate,
                    'params.toDate': dates.endDate
                };
            ecWidget = pfEcWidget.init({
                scope: $scope,
                state: $state,
                module: module,
                widget: widget,
                widgetName: widgetName,
                states: [
                    states.graphic,
                    states.simple,
                    states.list
                ],
                onDataLoaded: onDataLoaded,
                dataUrlReplacementObj: dataUrlReplacementObj,
                detailPageWebtrends: 'Cockpit_Ausgaben'
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            charts = require('pf-shared-modules-cockpit-charts'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            currenciesModule = require('pf-shared-modules-currencies'),
            numbersModule = require('pf-shared-modules-numbers'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetAccountOverview = require('directive-widget-account_overview'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveCockpitEcPieChart = require('directive-cockpit-ec_pie_chart');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ecexpenditure',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetAccountOverview.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveDropdown.moduleName,
                directiveCockpitEcPieChart.moduleName
            ]),
            states = pf.globals.states.cockpit;
        stateProviderConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateProviderConfig);
        module.controller('EcExpenditureController', EcExpenditureController);
        EcExpenditureController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ecexpenditure/js/ecexpenditure', function () {
});
!function () {
    'use strict';
    define('pf-widget-ecreceipts', [
        'require',
        'lodash',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-numbers',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-cockpit-charts',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-selectable_table',
        'directive-widget-account_overview',
        'directive-widget-single_select',
        'directive-widget-dropdown',
        'directive-cockpit-ec_additional_info',
        'directive-cockpit-ec_column_chart'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.graphic.name, {
                template: '<div ng-include="graphicWidgetUrl"></div>'
            }).state(states.list.name, {
                template: '<div ng-include="listWidgetUrl"></div>'
            })
        }
        function EcReceiptsController($scope, $state, widget) {
            function onDataLoaded() {
                if (!(enumMonth && enumMonthFull)) {
                    enumMonth = wcmsEnum.getEnumObject('month', $scope);
                    enumMonthFull = wcmsEnum.getEnumObject('monthfull', $scope)
                }
                var model = $scope.dynamic,
                    translate = translator.translate;
                if (ecWidget.hasData()) {
                    var result = $scope.rawData;
                    ecService.fillMissingDates(result, dates);
                    ecService.extendArrayWithDate(result);
                    ecService.fillDatesFromCurrent(model, enumMonth, translator.createTranslator($scope));
                    var mostRecent = result[result.length - 1];
                    model.account = {
                        amount: mostRecent.amount,
                        isNegative: mostRecent.amount < 0,
                        hasValidAmount: true,
                        info: {
                            content: {
                                left: numbers.filterAmount(mostRecent.amount, numbers.indicator.none)
                            },
                            footers: [
                                {
                                    left: translate('TotalReceipts', $scope)
                                }
                            ]
                        }
                    };
                    if (result.length > 1) {
                        model.hasPreviousMonth = true;
                        var dataPreviousMonth = result[result.length - 2];
                        model.receiptsPreviousMonth = numbers.filterAmount(dataPreviousMonth.amount, numbers.indicator.none);
                        model.previousMonthMessage = translate('ReceiptsPreviousMonth', $scope, {
                            receiptsPreviousMonth: model.receiptsPreviousMonth
                        })
                    }
                    var tableData = {
                    };
                    tableData.tableClass = 'widget_bar_charts--info_table';
                    tableData.colgroup = [
                        '50%',
                        '50%'
                    ];
                    tableData.headers = [
                    ];
                    tableData.headers[0] = {
                        text: 'Month',
                        columnClass: pf.globals.classes.VISUALLY_HIDDEN
                    };
                    tableData.headers[1] = {
                        text: 'Receipts'
                    };
                    tableData.rows = _.map(result, function (receipt) {
                        return {
                            columns: [
                                {
                                    type: 'text',
                                    text: translate(enumMonthFull[receipt.date.month].key, $scope)
                                },
                                {
                                    type: 'amountNoSuffix',
                                    amount: receipt.amount,
                                    currency: pf.globals.types.currency.CHF,
                                    spanClass: 'widget_state_table_list--row--value'
                                }
                            ]
                        }
                    });
                    model.tableData = tableData;
                    var chartData = _.map(result, function (item) {
                        return angular.extend(item, {
                            name: translate(enumMonth[item.date.month].key, $scope)
                        })
                    });
                    model.chartData = charts.createColumnChartData(chartData)
                } else addActionButton()
            }
            function onDataVerify() {
                var noValidData = _.every($scope.rawData, function (item) {
                    return !item.amount
                });
                if (noValidData) {
                    addActionButton();
                    return pf.globals.states.widget.empty
                }
                return null
            }
            function addActionButton() {
                $scope.showCallToAction = !$scope.isMobile;
                $scope.callToActionLabel = 'Action';
                $scope.callToActionType = 'GoToReceipts'
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            $scope.hasWidgetSettings = true;
            var enumMonth,
                enumMonthFull,
                widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.graphicWidgetUrl = widgetPath + '/views/graphic.html';
            $scope.listWidgetUrl = widgetPath + '/views/list.html';
            $scope.static = {
            };
            var dates = ecService.getLastThreeMonths(),
                ecWidget,
                dataUrlReplacementObj = {
                    'params.fromDate': dates.startDate,
                    'params.toDate': dates.endDate
                };
            ecWidget = pfEcWidget.init({
                scope: $scope,
                state: $state,
                module: module,
                widget: widget,
                widgetName: widgetName,
                states: [
                    states.list,
                    states.graphic
                ],
                onDataLoaded: onDataLoaded,
                onDataVerify: onDataVerify,
                dataUrlReplacementObj: dataUrlReplacementObj,
                detailPageWebtrends: 'E-Cockpit_Einnahmen'
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            numbers = require('pf-shared-modules-numbers'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            charts = require('pf-shared-modules-cockpit-charts'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSelectabletable = require('directive-widget-selectable_table'),
            directiveWidgetAccountOverview = require('directive-widget-account_overview'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveCockpitEcAdditionalInfo = require('directive-cockpit-ec_additional_info'),
            directiveCockpitEcColumnchart = require('directive-cockpit-ec_column_chart');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ecreceipts',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSelectabletable.moduleName,
                directiveWidgetAccountOverview.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveDropdown.moduleName,
                directiveCockpitEcAdditionalInfo.moduleName,
                directiveCockpitEcColumnchart.moduleName
            ]),
            states = pf.globals.states.cockpit;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('EcReceiptsController', EcReceiptsController);
        EcReceiptsController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ecreceipts/js/ecreceipts', function () {
});
!function () {
    'use strict';
    define('pf-widget-ecsavingstargets', [
        'require',
        'lodash',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-numbers',
        'pf-shared-modules-util',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-platform',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-single_select',
        'directive-widget-dropdown',
        'directive-cockpit-ec_additional_info',
        'directive-cockpit-ec_simple_list',
        'directive-cockpit-ec_target_select'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.simple.name, {
                template: '<div ng-include="simpleWidgetUrl"></div>'
            }).state(states.savingstargets.name, {
                template: '<div ng-include="savingstargetsWidgetUrl"></div>'
            })
        }
        function EcSavingsTargetsController($scope, $state, widget) {
            function createSavingsTableColumns(target) {
                return [{
                    text: target.text
                },
                    {
                        text: util.hasValue(target.value.amount) ? numbers.formatAmountWithCurrency(target.value.amount, pf.globals.types.currency.CHF, numbers.indicator.none)  : '',
                        tdClass: 'pf-align-right'
                    },
                    {
                        text: util.hasValue(target.value.completion) ? target.value.completion + '%' : '',
                        tdClass: 'pf-align-right'
                    },
                    {
                        tdClass: _.get(target, 'value.isOnTrack', false) ? '' : 'icon icon-achtung_16px'
                    }
                ]
            }
            function prioritySorter(a, b) {
                var prioA = a.position,
                    prioB = b.position;
                if (prioA > prioB) return 1;
                if (prioA < prioB) return - 1;
                else return 0
            }
            function createTargets(targets) {
                return _.map(targets, function (target) {
                    return {
                        text: target.name,
                        value: target,
                        key: target.id
                    }
                })
            }
            function onDataLoaded() {
                var model = $scope.dynamic,
                    result = $scope.rawData;
                if (ecWidget.hasData()) {
                    model.targets = model.selectedTargets = [
                    ];
                    var savingsGoals = result.savingsGoals;
                    if (savingsGoals) {
                        savingsGoals.sort(prioritySorter);
                        model.targets = createTargets(savingsGoals);
                        model.selectedTargets = [
                        ];
                        if ($scope.settingData.targets) {
                            var restoreResult = ecService.getActiveItems(savingsGoals, $scope.settingData.targets);
                            model.selectedTargets = createTargets(restoreResult.items);
                            if (restoreResult.hasBeenModified) {
                                $scope.updateTargets();
                                $scope.$emit(pf.globals.events.WIDGET_SETTINGS_SAVE)
                            }
                        } else model.selectedTargets = model.targets.slice(0, 3);
                        var allOnTrack = _.reduce(model.selectedTargets, function (prev, current) {
                                return prev && current.value.isOnTrack
                            }, true),
                            tableData = {
                            };
                        if (allOnTrack) tableData.colgroup = [
                            '50%',
                            '30%',
                            '20%',
                            '0'
                        ];
                        else tableData.colgroup = [
                            '40%',
                            '30%',
                            '20%',
                            '10%'
                        ];
                        tableData.headers = [
                            {
                                text: 'MostImportantTargets',
                                colspan: 2
                            },
                            {
                                text: 'SavingsRealized'
                            }
                        ];
                        tableData.rows = _.map(model.selectedTargets, function (target) {
                            return {
                                columns: createSavingsTableColumns(target)
                            }
                        });
                        $scope.tableData = tableData
                    }
                    model.targetsBehind = result.targetsBehind;
                    model.targetsOk = result.targetsOk;
                    model.targetsTotal = model.targetsBehind + model.targetsOk;
                    model.savingsThisMonth = result.savingsThisMonth;
                    model.hasUsedSavingsAccount = result.hasUsedSavingsAccount;
                    model.hasNoSavingsAccount = result.hasNoSavingsAccount;
                    var totalTargetsMessage;
                    if (model.targetsTotal > 1) totalTargetsMessage = translate('TotalTargetsMultiple', $scope, {
                        targetsTotal: model.targetsTotal
                    });
                    else if (1 === model.targetsTotal) totalTargetsMessage = translate('TotalTargetsSingle', $scope);
                    model.totalTargetsMessage = totalTargetsMessage;
                    model.detailTargetsMessage = translate('TotalTargetsOverview', $scope, {
                        targetsBehind: model.targetsBehind,
                        targetsOk: model.targetsOk
                    });
                    model.items = [
                    ];
                    if (util.hasValue(model.targetsOk)) model.items.push({
                        number: model.targetsOk,
                        text: util.expandKey('TargetsOk', $scope)
                    });
                    if (util.hasValue(model.targetsBehind)) model.items.push({
                        number: model.targetsBehind,
                        text: util.expandKey('TargetsBehind', $scope)
                    });
                    var savingsAmount = {
                        savingsThisMonth: numbers.formatAmountWithCurrency(model.savingsThisMonth, pf.globals.types.currency.CHF, numbers.indicator.none)
                    };
                    model.additionalInfo = translate('SavingsThisMonth', $scope, savingsAmount)
                } else {
                    $scope.hasWidgetSettings = false;
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'Action';
                    $scope.callToActionType = 'GoToSavingsTargets'
                }
            }
            function onDataVerify() {
                var model = $scope.dynamic;
                $scope.hasWidgetSettings = true;
                $scope.actionItemIcon = null;
                if (model.hasNoSavingsAccount) {
                    $scope.infoTitle = 'NoSavingsAccountTitle';
                    $scope.infoFirstLine = 'NoSavingsAccountFirstText';
                    if (pfWidgetFunctions.hasActionUrl(widgetName, 'GoToCreateSavingsAccount')) {
                        $scope.showCallToAction = true;
                        $scope.callToActionLabel = 'NoSavingsAccountAction';
                        $scope.callToActionType = 'GoToCreateSavingsAccount'
                    }
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                if (model.hasUsedSavingsAccount) {
                    $scope.infoTitle = 'AdaptTargetTitle';
                    $scope.infoFirstLine = 'AdaptTargetText';
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'AdaptTargetAction';
                    $scope.callToActionType = 'GoToAdaptTarget';
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                if (!(model.targets && model.targets.length)) {
                    $scope.infoTitle = 'CreateTargetTitle';
                    $scope.infoFirstLine = 'CreateTargetText';
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'CreateTargetAction';
                    $scope.callToActionType = 'GoToCreateTarget';
                    $scope.hasWidgetSettings = false;
                    $scope.actionItemIcon = pf.globals.icons.HINT;
                    return pf.globals.states.widget.info
                }
                return null
            }
            function showTargetSelection() {
                var model = $scope.dynamic;
                if (_.has(model, 'targets')) return 'savingstargets' === model.selectedState.value && model.targets && model.targets.length > 3;
                else return false
            }
            function updateTargets() {
                var selectedTargets = $scope.dynamic.selectedTargets;
                angular.extend($scope.settingData, {
                    targets: _.map(selectedTargets, 'value.id')
                })
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            $scope.hasWidgetSettings = true;
            $scope.showTargetSelection = showTargetSelection;
            $scope.updateTargets = updateTargets;
            var widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.simpleWidgetUrl = widgetPath + '/views/simple.html';
            $scope.savingstargetsWidgetUrl = widgetPath + '/views/savingstargets.html';
            var translate = translator.translate,
                ecWidget;
            ecWidget = pfEcWidget.init({
                scope: $scope,
                state: $state,
                module: module,
                widget: widget,
                widgetName: widgetName,
                states: [
                    states.simple,
                    states.savingstargets
                ],
                infoWidgetUrl: pf.globals.urlprefix.BUNDLE + '/templates/ecInfoWidget.html',
                onDataLoaded: onDataLoaded,
                onDataVerify: onDataVerify,
                detailPageWebtrends: 'Cockpit_Sparziele'
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            numbers = require('pf-shared-modules-numbers'),
            util = require('pf-shared-modules-util'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            platform = require('pf-shared-modules-platform'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveCockpitEcAdditionalInfo = require('directive-cockpit-ec_additional_info'),
            directiveCockpitEcSimplelist = require('directive-cockpit-ec_simple_list'),
            directiveCockpitEcTargetselect = require('directive-cockpit-ec_target_select');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ecsavingstargets',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveDropdown.moduleName,
                directiveCockpitEcAdditionalInfo.moduleName,
                directiveCockpitEcSimplelist.moduleName,
                directiveCockpitEcTargetselect.moduleName
            ]),
            states = pf.globals.states.cockpit;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('EcSavingsTargetsController', EcSavingsTargetsController);
        EcSavingsTargetsController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ecsavingstargets/js/ecsavingstargets', function () {
});
!function () {
    'use strict';
    define('pf-widget-ectransactions', [
        'require',
        'angular',
        'pf-ecwidget',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-dynamic_css',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-dates',
        'pf-shared-modules-cockpit-ecservice',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-date_range',
        'directive-widget-buttonbar_static',
        'directive-widget-single_select',
        'directive-cockpit-ec_simple_list'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.simple.name, {
                template: '<div ng-include="simpleWidgetUrl"></div>'
            })
        }
        function EcTransactionsController($scope, $state, widget) {
            function onDataLoaded() {
                var data = $scope.rawData,
                    model = $scope.dynamic;
                enumMonth = wcmsEnum.getEnumObject('month', $scope);
                model.items = [
                ];
                if (data.countUncat) model.items.push({
                    number: data.countUncat,
                    text: util.expandKey('UncategorizedTransactions', $scope)
                });
                if (data.countTotal) model.items.push({
                    number: data.countTotal,
                    text: util.expandKey('TotalTransactions', $scope)
                });
                if (model.startDateStr && model.endDateStr) {
                    var startDate = dateService.extractFromIso(model.startDateStr),
                        endDate = dateService.extractFromIso(model.endDateStr);
                    model.startMonth = translate(enumMonth[startDate.month].key, $scope);
                    model.startYear = startDate.year;
                    model.endMonth = translate(enumMonth[endDate.month].key, $scope);
                    model.endYear = endDate.year
                }
            }
            function onVerifyData() {
                if (!$scope.dynamic.items.length) {
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'Action';
                    $scope.callToActionType = 'GoToTransactions';
                    return pf.globals.states.widget.empty
                }
                return null
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isDemo = platform.isDemo();
            var enumMonth,
                widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.simpleWidgetUrl = widgetPath + '/views/simple.html';
            $scope.dynamic = {
            };
            var dates = ecService.getLastThreeMonths();
            $scope.dynamic.startDateStr = dates.startDate;
            $scope.dynamic.endDateStr = dates.endDate;
            var translate = translator.translate,
                dataUrlReplacementObj = {
                    'params.fromDate': dates.startDate,
                    'params.toDate': dates.endDate
                };
            pfEcWidget.init({
                scope: $scope,
                state: $state,
                module: module,
                widget: widget,
                widgetName: widgetName,
                states: [
                    states.simple
                ],
                dataUrlReplacementObj: dataUrlReplacementObj,
                emptyWidgetUrl: pf.globals.urlprefix.BUNDLE + '/templates/ecEmptyWidget.html',
                onDataLoaded: onDataLoaded,
                onDataVerify: onVerifyData,
                detailPageWebtrends: 'Cockpit_Transaktionen'
            })
        }
        var angular = require('angular'),
            pfEcWidget = require('pf-ecwidget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            dynamicCss = require('pf-shared-modules-dynamic_css'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            dateService = require('pf-shared-modules-dates'),
            ecService = require('pf-shared-modules-cockpit-ecservice'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetDateRange = require('directive-widget-date_range'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSingleSelect = require('directive-widget-single_select'),
            directiveCockpitEcSimplelist = require('directive-cockpit-ec_simple_list');
        dynamicCss.inject('cockpit', 'cockpit.css');
        var widgetName = 'ectransactions',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetDateRange.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSingleSelect.moduleName,
                directiveCockpitEcSimplelist.moduleName
            ]),
            states = pf.globals.states.cockpit;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('EcTransactionsController', EcTransactionsController);
        EcTransactionsController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/ectransactions/js/ectransactions', function () {
});
!function () {
    'use strict';
    define('pf-widget-efaccounttransfer', [
        'require',
        'angular',
        'lodash',
        'ne',
        'pf-shared-modules-clientmessages',
        'pf-shared-services-dialogservice',
        'pf-shared-modules-dropdowns',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-productservice',
        'pf-shared-modules-rest_ng',
        'pf-angular-common',
        'directive-account_label',
        'directive-widget-dropdown',
        'directive-screen_key',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function EfAccountTransferController($scope, $state, widget, DialogService) {
            function findIndex(accountNumber, accountArr, defaultValue) {
                var index = _.findIndex(accountArr, {
                    value: accountNumber
                });
                return index >= 0 ? index : defaultValue
            }
            function dataLoaded() {
                if (vm.data[formName]) vm.data[formName].$setPristine();
                extendSuggestions($scope.debitAccounts);
                allDebitAccountsOptions = dropdowns.buildAccountOptions($scope.debitAccounts);
                allCreditAccountsOptions = dropdowns.buildAccountOptions($scope.creditAccounts);
                currentDebitAccount = $scope.debitAccounts[findIndex($scope.standardAccount.iban, allDebitAccountsOptions, 0)];
                updateFromSelectedDebitAccount();
                vm.data.debitAccounts = allDebitAccountsOptions.slice();
                vm.data.amount.value = '';
                vm.data.currencies = dropdowns.buildCurrencyOptions($scope.currencies);
                vm.data.buttonDisabled = false;
                $scope.$apply()
            }
            function signalSuccess(response) {
                if (_.has(response, 'messages.infos') || _.has(response, 'messages.errors')) {
                    var params = {
                            debitAccount: vm.data.selectedDebitAccount,
                            creditAccount: vm.data.selectedCreditAccount,
                            amount: vm.data.amount.value,
                            currency: vm.data.currency.value
                        },
                        urlObj = baseWidget.getDetailUrls(params);
                    urlObj.params.messages = response.messages;
                    pfWidgetFunctions.openDetailPage(urlObj)
                } else if (_.has(response, 'result.confirmationDialog')) handleConfirmationDialog(response.result.confirmationDialog);
                else if (_.has(response, 'messages.success')) {
                    $scope.messages = response.messages;
                    $scope.onConfirmation = function () {
                        gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                    };
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                }
            }
            function handleConfirmationDialog(confirmationDialog) {
                if (_.has(confirmationDialog, 'data.creditAccount')) productService.extendAccount(confirmationDialog.data.creditAccount);
                if (_.has(confirmationDialog, 'data.debitAccount')) productService.extendAccount(confirmationDialog.data.debitAccount);
                var configObj = {
                        templateUrl: 'exchangeRate' === confirmationDialog.type ? pf.globals.urlprefix.BUNDLE + '/templates/overlay/exchangeRateConfirmation.html' : void 0,
                        isSmall: false,
                        data: confirmationDialog.data,
                        context: $scope.widgetInstanceId + '-' + confirmationDialog.type
                    },
                    config = DialogService.getConfirmDialogConfig(_.upperFirst(confirmationDialog.type), $scope, null, configObj),
                    dialog = DialogService.confirm(config);
                if (dialog) dialog.result.then(function (value) {
                    if (value) {
                        vm.data.dialogType = confirmationDialog.type;
                        submit()
                    }
                })
            }
            function signalError() {
                $scope.onConfirmation = function onConfirmation() {
                    baseWidget.reloadData()
                };
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function isValid() {
                if (baseWidget.isBusy()) return false;
                else return vm.data[formName].$valid
            }
            function updateCurrency() {
                vm.data.currency.value = currentDebitAccount.currency
            }
            function updateAvailableCreditAccounts() {
                vm.data.creditAccounts = allCreditAccountsOptions.slice();
                var fromIndex = findIndex(currentDebitAccount.iban, allCreditAccountsOptions, - 1);
                if (fromIndex !== - 1) vm.data.creditAccounts.splice(fromIndex, 1)
            }
            function updateSelectedAccounts() {
                vm.data.selectedDebitAccount = currentDebitAccount.iban;
                vm.data.selectedCreditAccount = currentDebitAccount.suggestion.iban
            }
            function updateFromSelectedDebitAccount() {
                updateAvailableCreditAccounts();
                updateSelectedAccounts();
                updateCurrency()
            }
            function debitAccountChanged(item) {
                currentDebitAccount = _.find($scope.debitAccounts, {
                    iban: item.value
                });
                updateFromSelectedDebitAccount()
            }
            function createParams() {
                return {
                    debitAccount: vm.data.selectedDebitAccount,
                    creditAccount: vm.data.selectedCreditAccount,
                    amount: vm.data.amount.value,
                    currency: vm.data.currency.value,
                    dialogType: vm.data.dialogType
                }
            }
            function submit() {
                var actionUrl = baseWidget.getActionUrl('SubmitTransfer', createParams());
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_SubmitTransfer', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                baseWidget.setBusy(true);
                restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function (response) {
                    resetWidget();
                    signalSuccess(response)
                }, function () {
                    resetWidget();
                    signalError()
                })
            }
            function goToDetailPage() {
                $scope.showDetailPage(null, createParams())
            }
            function resetWidget() {
                vm.data.confirmDialogType = null;
                $scope.canGainFocus = true;
                baseWidget.setBusy(false)
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function extendSuggestions(accounts) {
                _.forEach(accounts, function (account) {
                    productService.extendAccount(account.suggestion)
                })
            }
            $scope.widgetInstanceId = widget.id;
            var baseWidget,
                formName = 'efaccounttransferForm',
                vm = {
                    data: {
                        amount: {
                            value: ''
                        },
                        currency: {
                            value: null
                        }
                    },
                    actions: {
                        isValid: isValid,
                        debitAccountChanged: debitAccountChanged,
                        submit: submit,
                        goToDetailPage: goToDetailPage
                    }
                },
                allDebitAccountsOptions,
                allCreditAccountsOptions,
                currentDebitAccount,
                wrapperFunction = productService.getWrapperFunctionForWidget(dataLoaded, errorCallback, [
                    'result.creditAccounts',
                    'result.debitAccounts'
                ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            });
            $scope.vm = vm
        }
        var angular = require('angular'),
            _ = require('lodash'),
            _ne = require('ne'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            dialogService = require('pf-shared-services-dialogservice'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            productService = require('pf-shared-modules-productservice'),
            restng = require('pf-shared-modules-rest_ng'),
            pfAngularCommon = require('pf-angular-common'),
            directiveAccountLabel = require('directive-account_label'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveScreenKey = require('directive-screen_key'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'efaccounttransfer',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveAccountLabel.moduleName,
                directiveDropdown.moduleName,
                directiveScreenKey.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('EfAccountTransferController', EfAccountTransferController);
        dialogService.register(module);
        EfAccountTransferController.$inject = [
            '$scope',
            '$state',
            'widget',
            dialogService.name
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efaccounttransfer/js/efaccounttransfer', function () {
});
!function () {
    'use strict';
    define('pf-widget-efapproveebills', [
        'require',
        'lodash',
        'ne',
        'angular',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-clientmessages',
        'pf-angular-common',
        'directive-widget-account_info',
        'directive-widget-buttonbar_dynamic',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfApproveEBillsController($scope, $state, widget) {
            function dataLoaded() {
            }
            function verifyData() {
                var hasData = !_.isEmpty($scope.invoices);
                if (!$scope.foreignInvoices && !$scope.partialInvoices && !$scope.forInformation && !hasData) {
                    $scope.showDetailLink = true;
                    return pf.globals.states.widget.empty
                } else if (($scope.partialInvoices || $scope.foreignInvoices || $scope.forInformation) && !hasData) {
                    $scope.showDetailLink = true;
                    $scope.dontShowOkButton = true;
                    $scope.message = clientMessages.createError('AdditionalEBillsAvailable').errors[0];
                    return pf.globals.states.widget.error
                }
                $scope.$applyAsync();
                return pf.globals.states.widget.ready
            }
            function resetWidget() {
                _.forEach($scope.invoices, function (item) {
                    item.checked = false
                });
                $scope.canGainFocus = true;
                baseWidget.setBusy(false)
            }
            function signalSuccess(response) {
                if (_.isUndefined(response.messages.infos)) {
                    $scope.messages = response.messages;
                    if ($scope.messages.errors) {
                        $scope.onConfirmation = function () {
                            baseWidget.reloadData()
                        };
                        $scope.message = $scope.messages.errors[0];
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                    } else if ($scope.messages.success || $scope.messages.infos) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                    } else if ($scope.messages.notices) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.notice)
                    }
                } else {
                    var urlObj = baseWidget.getDetailUrls();
                    urlObj.data = {
                        selectedEBills: {
                            response: response
                        }
                    };
                    baseWidget.openDetailPage(urlObj)
                }
            }
            function signalError(response) {
                if (!response.isDetailPage) {
                    $scope.onConfirmation = function onConfirmation() {
                        baseWidget.reloadData()
                    };
                    $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                } else gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, response)
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            $scope.isValid = function isValid() {
                if (baseWidget.isBusy()) return false;
                if ($scope.invoices) return !!_.find($scope.invoices, 'checked');
                else return false
            };
            $scope.callToAction = function callToAction() {
                var releasedInvoices = _.map(_.filter($scope.invoices, 'checked'), function (item) {
                    return {
                        id: item.id,
                        executionDate: item.executionDate,
                        amount: item.amount
                    }
                });
                if (!_.isEmpty(releasedInvoices)) {
                    baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_PayEBills', {
                        platform: platform.getPageName(),
                        mappingKey: baseWidget.i18n.mappingKey
                    }));
                    var params = {
                        iban: $scope.standardAccount.iban,
                        eBills: angular.toJson(releasedInvoices)
                    };
                    baseWidget.setBusy(true);
                    var actionUrl = baseWidget.getActionUrl('PayEBills', params);
                    restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function (response) {
                        resetWidget();
                        signalSuccess(response)
                    }, function (response) {
                        resetWidget();
                        signalError(response)
                    })
                }
            };
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                onVerifyData: verifyData
            })
        }
        var _ = require('lodash'),
            _ne = require('ne'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetAccountInfo = require('directive-widget-account_info'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efapproveebills',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetAccountInfo.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfApproveEBillsController', EfApproveEBillsController);
        EfApproveEBillsController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efapproveebills/js/efapproveebills', function () {
});
!function () {
    'use strict';
    define('pf-widget-efbalancesheet', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-shared-modules-numbers',
        'pf-sessiondata-userdata',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-selectable_table',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EFBalancesheetController($scope, $state, $timeout, widget) {
            function dataLoaded() {
                var translate = translator.translate,
                    tableData = {
                    };
                if ($scope.rawData.categories && !_.isEmpty($scope.rawData.categories)) {
                    tableData.headerClass = pf.globals.classes.VISUALLY_HIDDEN;
                    tableData.tableClass = 'widget_state_table widget_bar_charts--info_table';
                    tableData.colgroup = [
                        '50%',
                        'AUTO'
                    ];
                    tableData.headers = [
                        {
                            text: 'Type'
                        },
                        {
                            text: 'Amount'
                        }
                    ];
                    tableData.rows = [
                    ];
                    _.forEach($scope.rawData.categories, function (cat, index) {
                        tableData.rows[index] = {
                        };
                        tableData.rows[index].columns = {
                        };
                        tableData.rows[index].columns[0] = {
                            type: 'text',
                            text: translate(cat.text, $scope),
                            tdClass: 'widget_state_table_list--row--title'
                        };
                        tableData.rows[index].columns[1] = {
                            type: 'amount',
                            amount: cat.amount,
                            currency: pf.globals.types.currency.CHF,
                            tdClass: 'widget_state_table_list--row--value',
                            spanClass: cat.amount < 0 ? 'negative_val' : ''
                        }
                    });
                    var total = $scope.rawData.totalOverviewAssets;
                    tableData.footers = [
                        {
                            text: translate('TotalOverviewAssets', $scope),
                            tdClass: 'widget_state_table_list--row--title'
                        },
                        {
                            text: numbers.formatAmountWithCurrency(total, pf.globals.types.currency.CHF, numbers.indicator.plusAndMinus),
                            tdClass: 'widget_state_table_list--row--value',
                            spanClass: total < 0 ? 'negative_val' : ''
                        }
                    ]
                }
                $scope.tableData = tableData;
                checkDetailLink()
            }
            function setOnDetailPage(onDetailPage) {
                $timeout(function () {
                    $scope.isOnDetailPage = onDetailPage
                })
            }
            function openContainer() {
                setOnDetailPage(true)
            }
            function closeContainer() {
                setOnDetailPage(false)
            }
            function onError() {
                $scope.showDetailLink = false
            }
            function checkDetailLink() {
                $scope.showDetailLink = userData.uiAssetsView <= 0
            }
            $scope.widgetInstanceId = widget.id;
            angular.extend($scope, {
                isOnDetailPage: false,
                isOnHomePage: function () {
                    return widget.getPreference('onHomePage')
                },
                showBalanceSheet: function () {
                    return !$scope.isOnDetailPage
                }
            });
            if (platform.isMobile()) {
                gadgets.pubsub.subscribe(pf.globals.pubsub.OPEN_POPUP_CONTAINER, openContainer);
                gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, closeContainer);
                $scope.$on('$destroy', function () {
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.OPEN_POPUP_CONTAINER, openContainer);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, closeContainer)
                })
            }
            checkDetailLink();
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                onError: onError
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            numbers = require('pf-shared-modules-numbers'),
            userData = require('pf-sessiondata-userdata'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efbalancesheet',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfBalancesheetController', EFBalancesheetController);
        EFBalancesheetController.$inject = [
            '$scope',
            '$state',
            '$timeout',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            return angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efbalancesheet/js/efbalancesheet', function () {
});
!function () {
    'use strict';
    define('pf-widget-efcreditcardload', [
        'require',
        'angular',
        'lodash',
        'ne',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-productservice',
        'pf-shared-modules-translator',
        'pf-shared-modules-numbers',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function EfCreditCardLoadController($scope, $state, widget) {
            function findIndex(accountNumber, accountArr, defaultValue) {
                var index = _.findIndex(accountArr, {
                    value: accountNumber
                });
                return index >= 0 ? index : defaultValue
            }
            function dataLoaded() {
                if (vm.data[formName]) vm.data[formName].$setPristine();
                vm.data.translateValues = {
                    transactionLimit: $scope.transactionLimit
                };
                vm.data.debitAccounts = dropdowns.buildAccountOptions($scope.debitAccounts);
                vm.data.selectedDebitAccount = vm.data.debitAccounts[findIndex($scope.standardAccount.iban, vm.data.debitAccounts, 0)].value;
                vm.data.creditAccounts = _.map($scope.loadableAccounts, function (loadableAccount) {
                    productService.extendAccount(loadableAccount.topAccount);
                    return {
                        name: loadableAccount.topAccount.formatted.number,
                        description: createTopAccountDescription(loadableAccount.topAccount),
                        info: numbers.formatAmountWithCurrency(loadableAccount.topAccount.amountAvailable, loadableAccount.topAccount.currency, numbers.indicator.plusAndMinus),
                        value: loadableAccount.topAccount.nr
                    }
                });
                vm.data.selectedCreditAccount = vm.data.creditAccounts[0].value;
                vm.data.amount.value = '';
                $scope.$apply()
            }
            function signalSuccess(response) {
                if (_.has(response, 'messages.infos') || _.has(response, 'messages.errors')) {
                    $scope.onConfirmation = function () {
                        baseWidget.reloadData()
                    };
                    if (_.has(response, 'messages.infos')) $scope.message = response.messages.infos[0];
                    else if (_.has(response, 'messages.errors')) $scope.message = response.messages.errors[0];
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                } else if (_.has(response, 'messages.success')) {
                    $scope.onConfirmation = function () {
                        gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                    };
                    $scope.messages = response.messages;
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                }
            }
            function signalError() {
                $scope.onConfirmation = function onConfirmation() {
                    baseWidget.reloadData()
                };
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function isValid() {
                if (baseWidget.isBusy()) return false;
                else return vm.data[formName].$valid
            }
            function createParams() {
                return {
                    account: vm.data.selectedDebitAccount,
                    topAccount: vm.data.selectedCreditAccount,
                    amount: vm.data.amount.value
                }
            }
            function submit() {
                var actionUrl = baseWidget.getActionUrl('LoadCreditCardAccount', createParams());
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_SubmitTransfer', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                baseWidget.setBusy(true);
                restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function (response) {
                    resetWidget();
                    signalSuccess(response)
                }, function () {
                    resetWidget();
                    signalError()
                })
            }
            function goToDetailPage() {
                $scope.showDetailPage(null, createParams())
            }
            function resetWidget() {
                $scope.canGainFocus = true;
                baseWidget.setBusy(false)
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function createTopAccountDescription(topAccount) {
                var numAccounts = topAccount.additionalInfo.numberOfCards,
                    accountDescriptionKey = numAccounts > 1 ? 'AccountDescriptionMulti' : 'AccountDescriptionSingle',
                    params = {
                        cardType: topAccount.additionalInfo.productName,
                        amount: numAccounts - 1,
                        pan: topAccount.additionalInfo.pan
                    };
                return translate(accountDescriptionKey, $scope, params)
            }
            $scope.widgetInstanceId = widget.id;
            var baseWidget,
                formName = 'efcreditcardloadForm',
                translate = translator.translate,
                vm = {
                    data: {
                        amount: {
                            value: ''
                        },
                        currency: {
                            value: pf.globals.types.currency.CHF
                        },
                        currencies: dropdowns.buildCurrencyOptions([]),
                        translateValues: {
                        }
                    },
                    actions: {
                        isValid: isValid,
                        submit: submit,
                        goToDetailPage: goToDetailPage
                    }
                },
                wrapperFunction = productService.getWrapperFunctionForWidget(dataLoaded, errorCallback, [
                    'result.debitAccounts'
                ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            });
            $scope.vm = vm
        }
        var angular = require('angular'),
            _ = require('lodash'),
            _ne = require('ne'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            productService = require('pf-shared-modules-productservice'),
            translator = require('pf-shared-modules-translator'),
            numbers = require('pf-shared-modules-numbers'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'efcreditcardload',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('EfCreditCardLoadController', EfCreditCardLoadController);
        EfCreditCardLoadController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efcreditcardload/js/efcreditcardload', function () {
});
!function () {
    'use strict';
    define('pf-widget-efdigitalgoods', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-clientmessages',
        'pf-angular-common',
        'directive-widget-teaser_slider'
    ], function (require) {
        function EfDigitalGoodsController($scope, widget, $state, $timeout) {
            function dataLoaded(response) {
                function prepareItems(data) {
                    var teasers = _.get(data, 'result.teasers', [
                    ]);
                    if (_.isEmpty(teasers)) showErrorState();
                    else {
                        var dgItems = _.map(teasers, function (teaser) {
                            teaser.type = 'dgoffer';
                            return teaser
                        });
                        $timeout(function () {
                            $scope.items = dgItems;
                            $scope.teasersReady = true
                        })
                    }
                }
                switch (response.status) {
                    case 'activated':
                        $scope.showDetailButton = true;
                        detailPageType = 'Detail';
                        break;
                    case 'deactivated':
                        $scope.showDetailButton = false;
                        detailPageType = 'Settings';
                        break;
                    case 'pending':
                        $scope.showDetailButton = true;
                        detailPageType = 'Settings'
                }
                var numberOfTeasers = response[PAGE_ID].numberOfTeasers;
                if (numberOfTeasers > 0) {
                    var dgTeasers = response[PAGE_ID].teaserList,
                        wcmsIds = _.map(dgTeasers, 'wcmsId').join(','),
                        tURLs = $scope.widgetInstance.getActionUrl('Teasers', {
                            teaserid: wcmsIds
                        }),
                        tUrl = _.isArray(tURLs) ? tURLs[0] : tURLs;
                    restng.getJson(tUrl.url, tUrl.params).then(function success(data) {
                        prepareItems(data)
                    }, function failure(data) {
                        showErrorState(data.error.message)
                    })
                } else showErrorState()
            }
            function showErrorState(message) {
                $timeout(function () {
                    $scope.message = message ? message : clientMessages.createConnectionErrorResponse().error.message;
                    $state.go(pf.globals.states.widget.error)
                })
            }
            $scope.widgetInstanceId = widget.id;
            $scope.teasersReady = false;
            $scope.showDetailButton = false;
            var detailPageType;
            $scope.handleClick = function handleClick($event) {
                $scope.$emit(pf.globals.events.GO_TO_DETAIL_PAGE, {
                    actionType: detailPageType,
                    source: $event.currentTarget
                })
            };
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetTeaserSlider = require('directive-widget-teaser_slider'),
            widgetName = 'efdigitalgoods',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetTeaserSlider.moduleName
            ]);
        module.controller('EfDigitalGoodsController', EfDigitalGoodsController);
        EfDigitalGoodsController.$inject = [
            '$scope',
            'widget',
            '$state',
            '$timeout'
        ];
        var PAGE_ID = 'L3_P_FIPO_DigitalGoods';
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efdigitalgoods/js/efdigitalgoods', function () {
});
!function () {
    'use strict';
    define('pf-widget-efdomesticpayment', [
        'require',
        'angular',
        'ne',
        'pf-widget',
        'pf-shared-modules-productservice',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-cookies',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-text_input_with_button',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function EfDomesticPaymentController($scope, $state, widget) {
            function dataLoaded(response) {
                if ($scope.data[formName]) $scope.data[formName].$setPristine();
                var result = response.result;
                allAccounts = result.accounts;
                $scope.view.currencies = dropdowns.buildCurrencyOptions(result.currencies);
                $scope.view.accounts = dropdowns.buildAccountOptions(result.accounts);
                $scope.data.iban = '';
                $scope.data.amount = {
                    value: ''
                };
                $scope.data.config.account = {
                    model: result.accounts[result.activeAccount].iban
                };
                $scope.data.currency = {
                    value: result.accounts[result.activeAccount].currency
                };
                $scope.data.v01 = result.v01;
                $scope.data.v02 = result.v02;
                if (!$scope.view.hideSearchIcon) $scope.view.hideSearchIcon = !result.showAccountSearch;
                $scope.kprssd = false;
                $scope.$apply()
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            var formName = 'efdomesticpaymentForm',
                allAccounts = null;
            angular.extend($scope, {
                data: {
                    config: {
                    }
                },
                view: {
                    hideSearchIcon: widget.getPreference('hideSearchIcon'),
                    formName: formName
                },
                kprssd: false,
                isValid: function isValid() {
                    return $scope.data[formName].$valid
                },
                accountSelectionChanged: function accountSelectionChanged(itemIndex) {
                    $scope.data.currency.value = allAccounts[itemIndex].currency
                },
                isForeignCurrency: function isForeignCurrency() {
                    if ($scope.data.currency) return 'CHF' !== $scope.data.currency.value;
                    else return false
                },
                kp: function kp() {
                    $scope.kprssd = true
                },
                submitIfValid: function submitIfValid() {
                    if ($scope.isValid()) $scope.doSend()
                },
                doSend: function doSend() {
                    if ($scope.data.v01 && $scope.data.v02) {
                        var cookieData = $scope.kprssd ? $scope.data.v01 : $scope.data.v02;
                        cookies.setSecure(pf.globals.cookies.EF002, cookieData)
                    }
                    var params = {
                        amount: $scope.data.amount.value || '',
                        gutNr: $scope.data.iban || '',
                        lastIban: $scope.data.config.account.model,
                        currency: $scope.data.currency.value
                    };
                    $scope.showDetailPage('DomesticPaymentDetail', params)
                }
            });
            var wrapperFunction = productService.getWrapperFunctionForWidget(dataLoaded, errorCallback, [
                'result.accounts'
            ]);
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            })
        }
        var angular = require('angular'),
            _ne = require('ne'),
            pfWidget = require('pf-widget'),
            productService = require('pf-shared-modules-productservice'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            cookies = require('pf-shared-modules-cookies'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetTextInputWithButton = require('directive-widget-text_input_with_button'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'efdomesticpayment',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetTextInputWithButton.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('EfDomesticPaymentController', EfDomesticPaymentController);
        EfDomesticPaymentController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efdomesticpayment/js/efdomesticpayment', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericdetail', [
        'require',
        'angular-dynamic-module',
        'pf-shared-services-dialogservice',
        'pf-angular-common',
        'pf-angular-directives-detailpages',
        'directive-ng_attr',
        'directive-iframe_auto_resize',
        'directive-screen_key',
        'pf-widget-functions',
        'pf-shared-modules-detail_page_popup',
        'pf-shared-modules-detail_page_inline'
    ], function (require) {
        function EfGenericDetailController($scope, includePath, spinnerHeight) {
            $scope.includePath = includePath;
            if (spinnerHeight) {
                $scope.spinnerHeight = spinnerHeight;
                var unbind = $scope.$on('$stateChangeSuccess', function (event, targetState) {
                    if (targetState.name !== pf.globals.states.detailpage.initial) {
                        unbind();
                        $scope.spinnerHeight = null
                    }
                })
            }
        }
        var ExtensionUtils = require('angular-dynamic-module'),
            dialogService = require('pf-shared-services-dialogservice'),
            pfAngularCommon = require('pf-angular-common'),
            directivesDetailpages = require('pf-angular-directives-detailpages'),
            directiveNgAttr = require('directive-ng_attr'),
            directiveIframeAutoResize = require('directive-iframe_auto_resize'),
            directiveScreenKey = require('directive-screen_key'),
            pfWidgetFunctions = require('pf-widget-functions'),
            DetailPagePopup = require('pf-shared-modules-detail_page_popup'),
            DetailPageInline = require('pf-shared-modules-detail_page_inline');
        EfGenericDetailController.$inject = [
            '$scope',
            'includePath',
            'spinnerHeight'
        ];
        return function bootstrap(widget) {
            var isPopUp = 'template-popup' === widget.parentNode.nodeName,
                showDetailPageTitle = widget.getPreference('showDetailPageTitle') || false,
                spinnerHeight = widget.getPreference('initSpinnerHeight'),
                widgetName = 'efgenericdetail',
                widgetModuleName = 'postfinance.' + widgetName;
            if (!isPopUp) widgetModuleName = widgetModuleName + '.' + widget.getPreference('detailPageActionUrlKey').toLowerCase();
            var module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directivesDetailpages.moduleName,
                directiveNgAttr.moduleName,
                directiveIframeAutoResize.moduleName,
                directiveScreenKey.moduleName
            ]);
            dialogService.register(module);
            ExtensionUtils.enableDynamicCreation(module);
            var urlObj = null;
            if (isPopUp) {
                DetailPagePopup.init(module, widget, widgetName, showDetailPageTitle);
                module.value('includePath', DetailPagePopup.includePath)
            } else {
                urlObj = pfWidgetFunctions.getActionUrl(widgetName, widget.getPreference('detailPageActionUrlKey'));
                DetailPageInline.init(module, widget, widgetName, showDetailPageTitle, urlObj);
                module.value('includePath', DetailPageInline.includePath)
            }
            module.value('spinnerHeight', spinnerHeight);
            module.controller('EfGenericDetailController', EfGenericDetailController);
            return angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericdetail/js/efgenericdetail', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericdocuments', [
        'require',
        'lodash',
        'ne',
        'jquery',
        'angular',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-formatter',
        'pf-app-detect',
        'pf-shared-modules-productservice',
        'pf-shared-modules-file_downloads',
        'pf-shared-modules-clientmessages',
        'pf-sessiondata-userdata',
        'pf-angular-common',
        'directive-widget-selectable_table',
        'directive-widget-buttonbar_dynamic',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfGenericDocumentsController($scope, $rootElement, $timeout, widget, $state) {
            function onDataLoaded(data) {
                showActionButton = false;
                var enumMultiProduct = wcmsEnum.getEnumObject('multiProduct', $scope);
                $scope.files = data.result.doklist;
                var tableData = {
                };
                tableData.colgroup = cols;
                tableData.headers = headers;
                tableData.rows = [
                ];
                tableData.rows = _.map(data.result.doklist, function (file, index) {
                    var pdf = isPdf(file),
                        currentRow = {
                            id: index,
                            trDisabled: isApp && !pdf,
                            columns: [
                            ]
                        },
                        description = fileDownloads.getFileDescription(file, $scope, enumMultiProduct, true);
                    if (!isApp) currentRow.columns.push({
                        type: 'checkbox',
                        text: description
                    });
                    currentRow.columns.push({
                        type: isApp ? 'text' : 'label',
                        text: description
                    });
                    currentRow.columns.push({
                        tdClass: isApp ? 't-right' : null,
                        type: isApp ? 'text' : 'label',
                        text: formatter.isoDateToLocalized(file.creationDate),
                        title: userData.uiMarketSegment === pf.globals.uimarketsegment.BUSINESS_CUSTOMER ? formatter.isoDateToLocalizedWithTime(file.creationDate)  : void 0
                    });
                    if (isApp) {
                        currentRow.hasActionLink = true;
                        currentRow.columns.push({
                            type: pdf ? 'arrow' : null
                        })
                    }
                    return currentRow
                });
                $scope.tableData = tableData;
                $scope.additionalDocuments = data.result.hasMore;
                $scope.$applyAsync()
            }
            function verifyData() {
                var hasNoData = _.isEmpty(_.get($scope, 'tableData.rows'));
                if (hasNoData) {
                    $scope.showDetailLink = true;
                    return pf.globals.states.widget.empty
                }
                return pf.globals.states.widget.ready
            }
            function isValid() {
                return showActionButton
            }
            function getCheckboxes() {
                return jQuery($rootElement).find('.checkbox--field')
            }
            function downloadFiles(selectedFiles) {
                var action = null,
                    urlObj = null,
                    params = {
                    },
                    file = null,
                    pdf = false,
                    download = false;
                if (1 === selectedFiles.length) {
                    file = selectedFiles[0];
                    pdf = isPdf(file);
                    params = {
                        dokId: file.dokId
                    };
                    action = 'DownloadSingle';
                    urlObj = baseWidget.getActionUrl(action, params)
                } else {
                    download = true;
                    params = {
                        selectedFiles: '[' + _.join(_.map(selectedFiles, 'dokId'), ',') + ']'
                    };
                    action = 'DownloadMulti';
                    urlObj = baseWidget.getActionUrl(action, params)
                }
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_{action}', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey,
                    action: action
                }));
                fileDownloads.displayOrDownloadFile(urlObj, pdf, download);
                $timeout(baseWidget.reloadData, pf.globals.settings.FILE_DOWNLOAD_REFRESH_DELAY)
            }
            function callToAction() {
                var checkboxes = getCheckboxes(),
                    selectedFiles = [
                    ];
                jQuery.each(checkboxes, function (index, elem) {
                    if (jQuery(elem).is(':checked')) selectedFiles.push($scope.files[index])
                });
                downloadFiles(selectedFiles)
            }
            function itemSelected() {
                var checkboxes = jQuery($rootElement).find('.checkbox--field:checked');
                showActionButton = checkboxes.length > 0
            }
            function itemClicked(index) {
                if (isApp) {
                    var selectedFiles = _.slice($scope.files, index, index + 1);
                    downloadFiles(selectedFiles)
                }
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function isPdf(file) {
                return 1 === _.get(file, 'format')
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            $scope.isValid = isValid;
            $scope.callToAction = callToAction;
            $scope.itemSelected = itemSelected;
            $scope.itemClicked = itemClicked;
            var showActionButton = false,
                isApp = detect.isApp(),
                tableHeaders = _.trim(widget.getPreference('tableHeaders')),
                headers = [
                ];
            if (!_.isUndefined(tableHeaders)) {
                headers = tableHeaders.split(',');
                for (var i = 0, len = headers.length; i < len; i++) if ('EMPTY' !== headers[i]) headers[i] = {
                    text: headers[i]
                };
                if (isApp) {
                    headers[2].headerClass = 't-right';
                    headers[3] = 'EMPTY';
                    headers.shift()
                }
            }
            var colgroup = widget.getPreference('colgroup'),
                cols = [
                ];
            if (!_.isUndefined(colgroup)) {
                cols = colgroup.split(',');
                if (isApp) {
                    cols[3] = '21px';
                    cols.shift()
                }
            }
            var wrapperFunction = productService.getWrapperFunctionForWidget(onDataLoaded, errorCallback, [
                'result.doklist'
            ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction,
                aggregateRequests: false,
                onVerifyData: verifyData
            })
        }
        var _ = require('lodash'),
            _ne = require('ne'),
            jQuery = require('jquery'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            formatter = require('pf-shared-modules-formatter'),
            detect = require('pf-app-detect'),
            productService = require('pf-shared-modules-productservice'),
            fileDownloads = require('pf-shared-modules-file_downloads'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            userData = require('pf-sessiondata-userdata'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efgenericdocuments',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfGenericDocumentsController', EfGenericDocumentsController);
        EfGenericDocumentsController.$inject = [
            '$scope',
            '$rootElement',
            '$timeout',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericdocuments/js/efgenericdocuments', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericicondropdown', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-translator',
        'pf-shared-modules-util',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-selection_list',
        'directive-widget-buttonbar_dynamic',
        'directive-widget-buttonbar_static',
        'directive-widget-icon_bar'
    ], function (require) {
        function EfGenericIconDropdownController($scope, $state, $timeout, widget) {
            function dataLoaded() {
                var iconString = _.trim(widget.getPreference('instanceIcons'));
                vm.data.icons = createIcons(iconString);
                if (!_.isEmpty(vm.data.icons)) vm.data.defaultLabel = 'More';
                var actionString = _.trim(widget.getPreference('instanceActions'));
                vm.data.actions = createActions(actionString)
            }
            function openDetailPage(action) {
                $scope.showDetailPage(action)
            }
            function createIcons(iconString) {
                var icons = [
                ];
                if (!_.isUndefined(iconString)) {
                    var iconProperties = angular.fromJson('[' + iconString.replace(/([\w-]+):([\w-]+)/g, '{"value":"$1","cssClass":"$2"}') + ']'),
                        allowedActions = _.filter(iconProperties, function (item) {
                            return baseWidget.hasActionUrl(item.value) && isEligible(item.value)
                        });
                    icons = _.map(allowedActions, function (item) {
                        item.text = util.expandKey(item.value, $scope);
                        return item
                    })
                }
                return icons
            }
            function createActions(actionString) {
                var actions = [
                ];
                if (!_.isUndefined(actionString)) {
                    var actionProperties = actionString.split(','),
                        allowedActions = _.filter(actionProperties, function (item) {
                            return baseWidget.hasActionUrl(item) && isEligible(item)
                        });
                    actions = _.map(allowedActions, function (key) {
                        return {
                            name: translate(key, $scope),
                            value: key
                        }
                    })
                }
                return actions
            }
            function isEligible(key) {
                if (!_.isUndefined($scope.actions)) return _.includes($scope.actions, key);
                else return true
            }
            function verifyData() {
                if (_.isEmpty(vm.data.icons) && _.isEmpty(vm.data.actions)) {
                    $scope.showCallToAction = true;
                    $scope.callToActionLabel = 'MoreInformation';
                    $scope.callToActionType = 'MoreInformation';
                    return pf.globals.states.widget.empty
                }
                return pf.globals.states.widget.ready
            }
            function reloadWidgetsFn() {
                $timeout(function () {
                    vm.data.selected = null
                })
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            $scope.hideIconWhenEmpty = true;
            var translate = translator.translate,
                vm = {
                    data: {
                        defaultLabel: 'PleaseChoose',
                        selected: null
                    },
                    actions: {
                        itemSelected: function (item) {
                            openDetailPage(item.value)
                        },
                        openSelectedItem: function () {
                            openDetailPage(vm.data.selected)
                        }
                    }
                };
            $scope.vm = vm;
            gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn);
            $scope.$on('$destroy', function () {
                gadgets.pubsub.unsubscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn)
            });
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                onReady: dataLoaded,
                onVerifyData: verifyData
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            translator = require('pf-shared-modules-translator'),
            util = require('pf-shared-modules-util'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetIconBar = require('directive-widget-icon_bar'),
            widgetName = 'efgenericicondropdown',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetSelectionList.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetIconBar.moduleName
            ]);
        module.controller('EfGenericIconDropdownController', EfGenericIconDropdownController);
        EfGenericIconDropdownController.$inject = [
            '$scope',
            '$state',
            '$timeout',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericicondropdown/js/efgenericicondropdown', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericlistdynamic', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-util',
        'pf-shared-modules-numbers',
        'pf-shared-modules-translator',
        'pf-shared-modules-formatter',
        'pf-angular-common',
        'directive-widget-account_info',
        'directive-widget-dynamic_list',
        'directive-widget-selection_list',
        'directive-widget-buttonbar_dynamic',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfGenericListDynamicController($scope, widget, $state) {
            function dataLoaded() {
                $scope.dataModel.entries = _.map($scope.items, function (item, index) {
                    return {
                        name: extractEntry(item.mainEntry),
                        info: extractEntry(item.detailEntry),
                        description: extractEntry(item.subEntry),
                        params: item.params,
                        value: index
                    }
                })
            }
            function extractEntry(entry) {
                if (void 0 !== entry) switch (entry.type) {
                    case 'text':
                        return entry.value;
                    case 'formattableAccount':
                        return formatter.formatIban(entry.value);
                    case 'number':
                        var translateKey = 1 === entry.value ? 'PaymentsSingle' : 'PaymentsMultiple';
                        return translate(translateKey, $scope, {
                            amount: entry.value
                        });
                    case 'amount':
                        return '---' === entry.currency ? '' : numbers.filterAmount(entry.value, numbers.indicator.plusAndMinus, entry.currency);
                    case 'various':
                        return translate('VariousCurrencies', $scope)
                }
                return null
            }
            function verifyData() {
                if ($scope.items.length) return pf.globals.states.widget.ready;
                else return pf.globals.states.widget.empty
            }
            function openDetailPage(selectedItem) {
                $scope.showDetailPage($scope.actionType, selectedItem.params)
            }
            $scope.widgetInstanceId = widget.id;
            var translate = translator.translate;
            angular.extend($scope, {
                actionType: widget.getPreference('actionType'),
                viewModel: {
                    maxListItems: widget.getPreference('maxListItems'),
                    selectedIndex: - 1
                },
                dataModel: {
                },
                hideIconWhenEmpty: true,
                hideActionItem: _.endsWith(widget.model.extendedItemName, 'paymenttemplate'),
                actionItemIcon: pf.globals.icons.HINT,
                showCallToAction: function showCallToAction(emptyPreference) {
                    util.hasValue(emptyPreference)
                },
                callToActionLabel: widget.getPreference('actionWhenEmpty'),
                callToActionType: widget.getPreference('actionWhenEmpty'),
                onItemSelected: function onItemSelected(index) {
                    $scope.viewModel.selectedIndex = index
                },
                onItemSelectedDirect: function onItemSelectedDirect(selectedItem) {
                    openDetailPage(selectedItem)
                },
                isValid: function isValid() {
                    return $scope.viewModel.selectedIndex >= 0
                },
                callToAction: function callToAction() {
                    var selectedIndex = $scope.viewModel.selectedIndex;
                    if (selectedIndex >= 0) {
                        var selectedItem = $scope.dataModel.entries[selectedIndex];
                        openDetailPage(selectedItem);
                        $scope.viewModel.selectedIndex = - 1
                    }
                }
            });
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                onVerifyData: verifyData
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            util = require('pf-shared-modules-util'),
            numbers = require('pf-shared-modules-numbers'),
            translator = require('pf-shared-modules-translator'),
            formatter = require('pf-shared-modules-formatter'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetAccountInfo = require('directive-widget-account_info'),
            directiveWidgetDynamicList = require('directive-widget-dynamic_list'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efgenericlistdynamic',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetAccountInfo.moduleName,
                directiveWidgetDynamicList.moduleName,
                directiveWidgetSelectionList.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfGenericListDynamicController', EfGenericListDynamicController);
        EfGenericListDynamicController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericlistdynamic/js/efgenericlistdynamic', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericliststatic', [
        'require',
        'angular',
        'ne',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-selection_list'
    ], function (require) {
        function EfGenericListStaticController($scope, widget, $state) {
            function showDetailPageForObj(item) {
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_{itemKey}', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey,
                    itemKey: item.key
                }));
                baseWidget.openDetailPage(item.urlObj)
            }
            function onReady() {
                for (var i = 0, len = itemNames.length; i < len; i++) {
                    var urlObj = baseWidget.getActionUrl(itemNames[i]);
                    if (null !== urlObj) $scope.items.push({
                        urlObj: urlObj,
                        name: translator.translate(itemNames[i], $scope),
                        key: itemNames[i]
                    })
                }
            }
            $scope.widgetInstanceId = widget.id;
            $scope.showDetailPageForObj = showDetailPageForObj;
            var itemNames = _.trim(widget.getPreference('listItems')).split(',');
            $scope.items = [
            ];
            var baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onReady: onReady,
                callReadyOnlyOnce: true
            })
        }
        var angular = require('angular'),
            _ne = require('ne'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            widgetName = 'efgenericliststatic',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetSelectionList.moduleName
            ]);
        module.controller('EfGenericListStaticController', EfGenericListStaticController);
        EfGenericListStaticController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericliststatic/js/efgenericliststatic', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericmarketing', [
        'require',
        'lodash',
        'ne',
        'angular',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-rest_ng',
        'pf-sessiondata-teaserdata',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-storage',
        'pf-angular-common',
        'directive-widget-teaser_slider'
    ], function (require) {
        function EfGenericMarketingController($scope, widget, $state, $sce, $timeout) {
            function ready() {
                if (!initialized) initialize()
            }
            function initialize() {
                var pasLogoUrlObj = $scope.widgetInstance.getActionUrl('GetLogoImage');
                if (pasLogoUrlObj) $scope.logoBaseUrl = pasLogoUrlObj.url;
                $scope.rawData = angular.copy(teaserData);
                if ($scope.rawData && !_.isEmpty($scope.rawData)) {
                    $scope.noItems = false;
                    var myItems = [
                    ];
                    if ($scope.itemToShow === - 1) myItems.push.apply(myItems, $scope.rawData);
                    else myItems.push($scope.rawData[$scope.itemToShow]);
                    for (var teasers = [
                    ], i = 0, len = myItems.length; i < len; i++) {
                        var item = myItems[i];
                        if ('teaser' === item.type) teasers.push(item.wcmsId);
                        else if ('pasoffer' === item.type) pasOptIn = item.optIn
                    }
                    var sanitizeItems = function sanitizeItems() {
                        for (var webtrendsIds = [
                        ], k = 0, lenk = myItems.length; k < lenk; k++) {
                            var itemk = myItems[k];
                            itemk.text = $sce.trustAsHtml(itemk.text);
                            itemk.title = $sce.trustAsHtml(itemk.title);
                            if ('pasoffer' === itemk.type) {
                                for (var keys = Object.keys(itemk.offers), index = 0; index < keys.length; ++index) {
                                    var offerIndex = keys[index],
                                        offer = itemk.offers[offerIndex];
                                    webtrendsIds.push(_ne.template('EF_{platform}_Benefit_TE-{position}_{offer}', {
                                        platform: platform.getPageName(),
                                        position: k,
                                        offer: offer.customerOfferOid
                                    }))
                                }
                                webtrendsIds.push(_ne.template('EF_{platform}_Benefit_overview', {
                                    platform: platform.getPageName()
                                }))
                            } else webtrendsIds.push(itemk.trackingId)
                        }
                        $scope.widgetInstance.trackWebtrends('WT.ad', webtrendsIds.join(';'));
                        $timeout(function () {
                            $scope.items = myItems;
                            $scope.teasersReady = true
                        })
                    };
                    if (teasers.length) {
                        var mapResponse = function mapResponse(teaserObj) {
                                var teaserArr = teaserObj.teasers;
                                if (!_.isEmpty(teaserArr)) for (var j = 0, lenj = myItems.length; j < lenj; j++) {
                                    var itemj = myItems[j];
                                    if ('teaser' === itemj.type) angular.extend(itemj, _.find(teaserArr, [
                                        'id',
                                        itemj.wcmsId
                                    ]))
                                }
                            },
                            tURLs = $scope.widgetInstance.getActionUrl('Teasers', {
                                teaserid: teasers.join(',')
                            }),
                            tUrl = _.isArray(tURLs) ? tURLs[0] : tURLs;
                        restng.getJson(tUrl.url, tUrl.params).then(function success(data) {
                            if (_.has(data, 'result.teasers')) {
                                mapResponse(data.result);
                                sanitizeItems()
                            } else {
                                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                            }
                        }, function failure(data) {
                            $scope.message = data.error.message;
                            $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                        })
                    } else sanitizeItems()
                } else $timeout(function () {
                    $scope.noItems = true
                });
                initialized = true
            }
            $scope.widgetInstanceId = widget.id;
            $scope.teasersReady = false;
            var initialized = false,
                pasOptIn = false;
            angular.extend($scope, {
                itemToShow: parseInt(widget.getPreference('itemToShow'), 10),
                doNotReload: true,
                handleClick: function handleClick(item) {
                    $scope.widgetInstance.trackWebtrends('WT.mc_id', item.campaignId, 'WT.ac', item.trackingId)
                },
                simulateClick: function simulateClick(event) {
                    event.target.click()
                }
            });
            $scope.showPasOffer = function showPasOffer($event, pageIndex, offerIndex, id) {
                var detailPageUrl;
                if (id) detailPageUrl = $scope.widgetInstance.getActionUrl('GoToOfferDetail', {
                    customerOfferOid: id
                });
                else detailPageUrl = $scope.widgetInstance.getActionUrl('GoToOffersOverview');
                var webtrendsValue = _ne.template('EF_{platform}_Benefit{position}_{offer}', {
                    platform: platform.getPageName(),
                    position: !!id ? '_TE-' + pageIndex : '',
                    offer: id || 'overview'
                });
                $scope.widgetInstance.trackWebtrends('WT.ac', webtrendsValue, 'WT.mc_id', webtrendsValue);
                if (pasOptIn) pfWidgetFunctions.openDetailPage(detailPageUrl);
                else {
                    var activationUrlObj = $scope.widgetInstance.getActionUrl('GoToBenefitActivation');
                    activationUrlObj.data = {
                        detailpageUrlObj: detailPageUrl
                    };
                    pfWidgetFunctions.processUrlObject(activationUrlObj)
                }
            };
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onReady: ready
            });
            var loadOpenMessages = function loadOpenMessages() {
                    return storage.sessionStorage.getItem(pf.globals.keys.OPEN_MESSAGES)
                },
                unbind = $scope.$watch(loadOpenMessages, function (newValue) {
                    $scope.isOpen = $scope.isOpen && !Boolean(parseInt(newValue, 10))
                });
            $scope.$on('$destroy', unbind)
        }
        var _ = require('lodash'),
            _ne = require('ne'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            restng = require('pf-shared-modules-rest_ng'),
            teaserData = require('pf-sessiondata-teaserdata'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            storage = require('pf-shared-modules-storage'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetTeaserSlider = require('directive-widget-teaser_slider'),
            widgetName = 'efgenericmarketing',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetTeaserSlider.moduleName
            ]);
        module.controller('EfGenericMarketingController', EfGenericMarketingController);
        EfGenericMarketingController.$inject = [
            '$scope',
            'widget',
            '$state',
            '$sce',
            '$timeout'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericmarketing/js/efgenericmarketing', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericmarketingmobile', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-storage',
        'pf-sessiondata-teaserdata',
        'pf-angular-common'
    ], function (require) {
        function EfGenericMarketingMobileController($scope, widget, $state, $sce, $timeout, $rootElement) {
            function ready() {
                if (!$scope.isInitialized) {
                    $scope.rawData = angular.copy(teaserData);
                    var myItem = _.find($scope.rawData, {
                            type: 'teaser'
                        }),
                        sanitize = function sanitize(teaser, teaserItem) {
                            $scope.teaser = {
                                title: $sce.trustAsHtml(teaser.title),
                                text: $sce.trustAsHtml(teaser.text),
                                link: teaser.link,
                                colorscheme: teaser.colorscheme ? teaser.colorscheme : defaultColorScheme,
                                item: teaserItem
                            }
                        },
                        removeWidget = function () {
                            $timeout(function () {
                                $rootElement.parent('li').remove()
                            })
                        };
                    if (_.isNil(myItem)) removeWidget();
                    else {
                        var tURLs = $scope.widgetInstance.getActionUrl('Teasers', {
                                teaserid: myItem.wcmsId
                            }),
                            tUrl = _.isArray(tURLs) ? tURLs[0] : tURLs;
                        restng.getJson(tUrl.url, tUrl.params).then(function success(data) {
                            if (_.has(data, 'result.teasers[0]')) $timeout(function () {
                                sanitize(data.result.teasers[0], myItem);
                                $scope.isInitialized = true;
                                $scope.widgetInstance.trackWebtrends('WT.ad', myItem.trackingId)
                            });
                            else removeWidget()
                        }, function failure() {
                            removeWidget()
                        })
                    }
                }
            }
            function handleClick(teaser) {
                baseWidget.trackWebtrends('WT.mc_id', teaser.item.campaignId, 'WT.ac', teaser.item.trackingId);
                gadgets.pubsub.publish(pf.globals.pubsub.LOAD_URL_CONTENT_INTO_OVERLAY, teaser.link)
            }
            $scope.widgetInstanceId = widget.id;
            $scope.handleClick = handleClick;
            $scope.isInitialized = false;
            $scope.doNotReload = true;
            var baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    onReady: ready
                }),
                loadOpenMessages = function () {
                    return storage.sessionStorage.getItem(pf.globals.keys.OPEN_MESSAGES)
                };
            if (platform.isHomePage() && baseWidget.isCollapsible()) $scope.$watch(loadOpenMessages, function (newValue) {
                $scope.isOpen = $scope.isOpen && !Boolean(parseInt(newValue, 10))
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            storage = require('pf-shared-modules-storage'),
            teaserData = require('pf-sessiondata-teaserdata'),
            pfAngularCommon = require('pf-angular-common'),
            widgetName = 'efgenericmarketingmobile',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName
            ]),
            defaultColorScheme = 'yellow';
        module.controller('EfGenericMarketingMobileController', EfGenericMarketingMobileController);
        EfGenericMarketingMobileController.$inject = [
            '$scope',
            'widget',
            '$state',
            '$sce',
            '$timeout',
            '$rootElement'
        ];
        return function init(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericmarketingmobile/js/efgenericmarketingmobile', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericoverlay', [
        'require',
        'angular-dynamic-module',
        'pf-shared-services-dialogservice',
        'pf-angular-common',
        'pf-angular-directives-detailpages',
        'directive-ng_attr',
        'directive-iframe_auto_resize',
        'directive-screen_key',
        'pf-shared-modules-detail_page_overlay'
    ], function (require) {
        function EfGenericOverlayController($scope) {
            $scope.includePath = DetailPageOverlay.includePath
        }
        var ExtensionUtils = require('angular-dynamic-module'),
            dialogService = require('pf-shared-services-dialogservice'),
            pfAngularCommon = require('pf-angular-common'),
            directivesDetailpages = require('pf-angular-directives-detailpages'),
            directiveNgAttr = require('directive-ng_attr'),
            directiveIframeAutoResize = require('directive-iframe_auto_resize'),
            directiveScreenKey = require('directive-screen_key'),
            DetailPageOverlay = require('pf-shared-modules-detail_page_overlay');
        EfGenericOverlayController.$inject = [
            '$scope'
        ];
        return function bootstrap(widget) {
            var widgetName = 'efgenericoverlay',
                widgetModuleName = 'postfinance.' + widgetName,
                module = angular.module(widgetModuleName, [
                    pfAngularCommon.moduleName,
                    directivesDetailpages.moduleName,
                    directiveNgAttr.moduleName,
                    directiveIframeAutoResize.moduleName,
                    directiveScreenKey.moduleName
                ]);
            dialogService.register(module);
            ExtensionUtils.enableDynamicCreation(module);
            module.controller('EfGenericOverlayController', EfGenericOverlayController);
            DetailPageOverlay.init(module, widget, widgetName);
            return angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericoverlay/js/efgenericoverlay', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericoverview', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-polling',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-angular-common',
        'directive-widget-selectable_table',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfGenericOverviewController($scope, $state, widget) {
            function createTableData() {
                $scope.reload = false;
                enumStatus = wcmsEnum.getEnumObject('status', $scope);
                var tableData = {
                    colgroup: [
                        '30px',
                        'AUTO',
                        '100px'
                    ],
                    headers: [
                        {
                            text: null,
                            class: 'is-visuallyhidden'
                        },
                        {
                            text: 'Name'
                        },
                        {
                            text: 'State'
                        }
                    ],
                    bodyClass: 'widget_state_table_list'
                };
                tableData.rows = _.map($scope.rawData.files, function (file) {
                    var statusText = _.get(enumStatus[file.status], 'text'),
                        currentRow = {
                            columns: [
                            ]
                        };
                    if (hasDetail(file)) {
                        currentRow.hasActionLink = true;
                        currentRow.columns[0] = {
                            type: 'clickableIcon',
                            text: 'MoreInformation',
                            icon: 'icon-zoom_small'
                        }
                    } else currentRow.columns[0] = {
                        type: null
                    };
                    currentRow.columns[1] = {
                        type: 'text',
                        text: file.text
                    };
                    if (file.status === FILE_STATE.READY) currentRow.columns[2] = {
                        type: 'icon',
                        text: statusText,
                        translated: true,
                        icon: 'icon-checkmark'
                    };
                    else if (file.status === FILE_STATE.PENDING) {
                        if (!platform.isDemo()) $scope.reload = true;
                        currentRow.columns[2] = {
                            type: 'icon',
                            text: statusText,
                            translated: true,
                            icon: 'icon-time'
                        }
                    } else if (file.status === FILE_STATE.ERROR) currentRow.columns[2] = {
                        type: 'icon',
                        text: _.defaultTo(file.hoverMessage, statusText),
                        translated: true,
                        icon: 'icon-fehler_16px'
                    };
                    return currentRow
                });
                $scope.tableData = tableData
            }
            function dataLoaded() {
                createTableData();
                if ($scope.reload) poller.poll()
            }
            function iconClicked(index) {
                var file = $scope.rawData.files[index];
                if (hasDetail(file)) $scope.showDetailPage('FileDetail', {
                    interchangeId: file.interchId
                })
            }
            function hasDetail(file) {
                return file.status === FILE_STATE.READY || file.status === FILE_STATE.ERROR && _.isNil(file.hoverMessage)
            }
            var poller,
                enumStatus;
            $scope.widgetInstanceId = widget.id;
            $scope.iconClicked = iconClicked;
            var baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded
            });
            poller = new polling.WidgetPoller(baseWidget.reloadData, pf.globals.settings.OVERVIEW_RELOAD_DELAY)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            polling = require('pf-shared-modules-polling'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efgenericoverview',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfGenericOverviewController', EfGenericOverviewController);
        EfGenericOverviewController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        var FILE_STATE = {
            PENDING: 0,
            ERROR: 4,
            READY: 5
        };
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericoverview/js/efgenericoverview', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericproduct', [
        'require',
        'lodash',
        'pf-shared-modules-actions',
        'angular',
        'pf-widget',
        'pf-shared-modules-util',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-accounts',
        'pf-shared-modules-productservice',
        'pf-shared-modules-products',
        'pf-shared-modules-movements',
        'pf-shared-modules-translator',
        'bluebird',
        'pf-angular-common',
        'directive-widget-account_overview',
        'directive-widget-selection_list',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfGenericProductController($scope, $state, $timeout, widget) {
            function processData(accountObj) {
                var instanceType = $scope.widgetInstance.preference.instanceType,
                    account = products.createAccountStructure(accountObj, instanceType, translatorFn);
                if (util.hasValue(accountObj)) {
                    if (accountObj.alias) $scope.customTitle = accountObj.alias;
                    else $scope.accountNumber = accounts.formatAccountNumber(accountObj.nr, accountObj.type);
                    if ('lifeinsurance' === instanceType) $scope.widgetSubTitle = translatorFn(account.productTypeKey);
                    var actualActions = _.filter(accountObj.actions, function (item) {
                            return baseWidget.hasActionUrl(item)
                        }),
                        filteredActions = _.intersection(actualActions, products.getActions(accountObj, b$.portal.device, 'widget'));
                    if (filteredActions.length > 1) {
                        $scope.dataModel.actionEntries = actions.buildActionEntries(filteredActions, $scope);
                        $scope.viewModel.showDetailLink = false
                    } else if (1 === filteredActions.length) {
                        $scope.detailLinkType = filteredActions[0];
                        $scope.viewModel.showDetailLink = true
                    }
                    $scope.dataModel.account = account;
                    $scope.$evalAsync(function () {
                        $scope.viewModel.showCallToActionButton = _.includes(actualActions, $scope.productProperties.button)
                    })
                } else {
                    $scope.message = clientMessages.createError('ProductNotAvailable').errors[0];
                    $scope.dontShowOkButton = true;
                    state = pf.globals.states.widget.error
                }
            }
            function additionalDataLoaded(data) {
                var account = $scope.dataModel.urlReplacementObj,
                    movementsList = $scope.dataModel.additionalData = movements.createSelectionListEntries(account, _.get(data, 'result.movements'));
                $scope.viewModel.additionalDataAvailable = !_.isEmpty(movementsList);
                $scope.viewModel.hasMoreAdditionalData = data.result.additionalItems && !_.isEmpty(movementsList)
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function readyFunction() {
                productService.dataLoaded().then(function () {
                    var accountObj = productService.getByUniqueKey(productUniqueKey);
                    $timeout(function () {
                        $scope.dataModel.urlReplacementObj = accountObj
                    });
                    processData(accountObj);
                    this.state.goState(state)
                }.bind(this), errorCallback)
            }
            var baseWidget,
                translatorFn = translator.createTranslator($scope);
            $scope.widgetInstanceId = widget.id;
            $scope.additionalDataSelected = function (item) {
                movements.showDetailFromWidget($scope.mappingKey, item.params)
            };
            $scope.viewModel = {
                hasMoreAdditionalData: false,
                showCallToActionButton: false
            };
            $scope.dataModel = {
            };
            var state = pf.globals.states.widget.ready,
                productUniqueKey = widget.getPreference('productUniqueKey');
            $scope.productUniqueKey = productUniqueKey;
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                additionalDataUrlReplacementObj: function () {
                    return new _Promise(function (resolve) {
                        return productService.dataLoaded().then(function () {
                            var accountObj = productService.getByUniqueKey(productUniqueKey);
                            $timeout(function () {
                                $scope.dataModel.urlReplacementObj = accountObj
                            });
                            resolve(accountObj)
                        })
                    })
                },
                onAdditionalDataLoaded: additionalDataLoaded,
                aggregateRequests: true,
                readyFunction: readyFunction
            });
            $scope.productProperties = products.getProperties($scope.widgetInstance.preference.instanceType, b$.portal.device, 'widget')
        }
        var _ = require('lodash'),
            actions = require('pf-shared-modules-actions'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            util = require('pf-shared-modules-util'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            accounts = require('pf-shared-modules-accounts'),
            productService = require('pf-shared-modules-productservice'),
            products = require('pf-shared-modules-products'),
            movements = require('pf-shared-modules-movements'),
            translator = require('pf-shared-modules-translator'),
            _Promise = require('bluebird'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetAccountOverview = require('directive-widget-account_overview'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efgenericproduct',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetAccountOverview.moduleName,
                directiveWidgetSelectionList.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfGenericProductController', EfGenericProductController);
        EfGenericProductController.$inject = [
            '$scope',
            '$state',
            '$timeout',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericproduct/js/efgenericproduct', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericshortcut', [
        'require',
        'angular',
        'pf-widget',
        'pf-angular-common',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfGenericShortcutController($scope, widget, $state) {
            $scope.widgetInstanceId = widget.id;
            $scope.icon = widget.getPreference('icon');
            $scope.showDetailPageIfMobile = function showDetailPageIfMobile() {
                if ($scope.isMobile) $scope.showDetailPage()
            };
            pfWidget.BaseWidget(widgetName, widget, $scope, $state)
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efgenericshortcut',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfGenericShortcutController', EfGenericShortcutController);
        EfGenericShortcutController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericshortcut/js/efgenericshortcut', function () {
});
!function () {
    'use strict';
    define('pf-widget-efgenericupload', [
        'require',
        'lodash',
        'angular',
        'jquery',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-translator',
        'pf-shared-modules-formatter',
        'pf-angular-common',
        'directive-widget-buttonbar_dynamic',
        'directive-widget-file_upload'
    ], function (require) {
        function EfGenericUploadController($scope, widget, $state, $timeout) {
            function ready() {
            }
            function fileChanged(file) {
                $timeout(function () {
                    if (file) $scope.file = file;
                    else reset()
                })
            }
            function isValid() {
                return !!$scope.file
            }
            function callToAction() {
                baseWidget.setBusy(true);
                var persName = null;
                if ($scope.hasPersonalFilename) persName = getPersonalFilename();
                var fileName = clientMessages.escapeHtml(persName || $scope.file.name);
                fileName = shorten(fileName, pf.globals.widgets.efgenericupload.MAX_FILENAME_OUTPUT_LENGTH);
                $scope.confirmationPlaceholder = {
                    confirmationPlaceholder: fileName
                };
                var formData = new FormData;
                formData.append('p_extern_file_name', $scope.file);
                switch ($scope.instanceType) {
                    case 'epo':
                        formData.append('p_product_type', 9910);
                        break;
                    case 'chdd':
                        formData.append('p_product_type', 3);
                        break;
                    case 'sepadd':
                        formData.append('p_product_type', 1)
                }
                formData.append('p_user_file_ref', _.defaultTo(getPersonalFilename(), ''));
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_Upload', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                var actionUrl = baseWidget.getActionUrl('Upload');
                restng.postFormData2Json(actionUrl.url, formData).then(signalSuccess, signalError)
            }
            function signalSuccess(response) {
                baseWidget.setBusy(false);
                if (response.isDetailPage) gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, response);
                else if (response.result && response.result.showDetailPage) {
                    var urlObj = baseWidget.getActionUrl('UploadOptions');
                    urlObj.data = {
                        customerFileName: getPersonalFilename() || $scope.file.name,
                        internalFileName: response.result.internFileName,
                        showSalaryQuestion: response.result.showSalaryQuestion
                    };
                    pfWidgetFunctions.openDetailPage(urlObj)
                } else if (response.messages) {
                    $scope.messages = response.messages;
                    if ($scope.messages.errors) {
                        $scope.onConfirmation = errorConfirmation;
                        $scope.message = $scope.messages.errors[0];
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                    } else if ($scope.messages.success || $scope.messages.infos) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                    } else if ($scope.messages.notices) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.notice)
                    }
                }
            }
            function signalError(data) {
                baseWidget.setBusy(false);
                $scope.message = _.has(data, 'error.message') ? data.error.message : clientMessages.createError('GeneralError', $scope.confirmationPlaceholder).errors[0];
                $scope.onConfirmation = errorConfirmation;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function getForm() {
                var formName = $scope.widgetInstanceId + 'Form';
                return jQuery('form[name=\'' + formName + '\']')
            }
            function getFileInput() {
                return document.getElementById('ef-file-input-u' + $scope.widgetInstanceId + '-1')
            }
            function getFileInputLabel() {
                return getForm().find('.ef_file_input--label--text')
            }
            function getPersonalFilename() {
                return $scope.dynamic.personalFilename
            }
            function setDefaultFilename() {
                var defaultFilename = translate('DefaultValue', $scope);
                getFileInputLabel().html(defaultFilename)
            }
            function reset() {
                $scope.file = null;
                $scope.dynamic.personalFilename = null;
                setDefaultFilename();
                var fileInput = getFileInput();
                if (fileInput) fileInput.value = ''
            }
            function hasValidFilename() {
                return !!getPersonalFilename()
            }
            function errorConfirmation() {
                reset();
                $scope.widgetInstance.state.goState(pf.globals.states.widget.ready)
            }
            function reloadWidgetsFn(data) {
                if (!(data && data.reloadSource === widgetName)) $timeout(function () {
                    reset();
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.ready)
                })
            }
            $scope.widgetInstanceId = widget.id;
            $scope.fileChanged = fileChanged;
            $scope.callToAction = callToAction;
            $scope.hasValidFilename = hasValidFilename;
            $scope.isValid = isValid;
            $scope.hasPersonalFilename = widget.getPreference('hasPersonalFilename');
            $scope.dynamic = {
            };
            var translate = translator.translate,
                shorten = formatter.shortenString,
                baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    onReady: ready,
                    callReadyOnlyOnce: true
                });
            $scope.instanceType = $scope.widgetInstance.preference.instanceType;
            gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn);
            $scope.$on('$destroy', function () {
                gadgets.pubsub.unsubscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn)
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            jQuery = require('jquery'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            translator = require('pf-shared-modules-translator'),
            formatter = require('pf-shared-modules-formatter'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveWidgetFileUpload = require('directive-widget-file_upload'),
            widgetName = 'efgenericupload',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveWidgetFileUpload.moduleName
            ]);
        module.controller('EfGenericUploadController', EfGenericUploadController);
        EfGenericUploadController.$inject = [
            '$scope',
            'widget',
            '$state',
            '$timeout'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efgenericupload/js/efgenericupload', function () {
});
!function () {
    'use strict';
    define('pf-widget-efheadernotification', [
        'require',
        'angular',
        'jquery',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-angular-common'
    ], function (require) {
        function EfHeaderNotificationController($scope, $state, $rootElement, widget) {
            function closeOverlay() {
                closeNavigationDropdown()
            }
            function closeUserNavigation() {
                document.getElementById('userNavigationButton').trigger('click')
            }
            function dataLoaded() {
                if (platform.isCustomerTest()) $scope.notifications = [
                ];
                $scope.$apply();
                jQuery($rootElement).resize()
            }
            $scope.widgetInstanceId = widget.id;
            $scope.closeOverlay = closeOverlay;
            $scope.closeUserNavigation = closeUserNavigation;
            $scope.customerTest = platform.isCustomerTest();
            $scope.userName = platform.getUserName();
            $scope.notifications = [
            ];
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                errorWidgetUrl: pf.globals.urlprefix.BUNDLE + '/widgets/efheadernotification/error.html',
                onDataLoaded: dataLoaded
            });
            $state.go(pf.globals.states.widget.ready)
        }
        function directiveUserName($timeout) {
            return {
                restrict: 'E',
                link: function (scope, element) {
                    $timeout(function () {
                        jQuery(element).resize()
                    })
                },
                template: '<span class=\'news_nav--username\'>{{userName}}</span>',
                replace: true
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            pfAngularCommon = require('pf-angular-common'),
            widgetName = 'efheadernotification',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName
            ]);
        module.controller('EfHeaderNotificationController', EfHeaderNotificationController);
        EfHeaderNotificationController.$inject = [
            '$scope',
            '$state',
            '$rootElement',
            'widget'
        ];
        directiveUserName.$inject = [
            '$timeout'
        ];
        module.directive('userName', directiveUserName);
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efheadernotification/js/efheadernotification', function () {
});
!function () {
    'use strict';
    define('pf-widget-efheadernotificationmobile', [
        'require',
        'angular',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-angular-common'
    ], function (require) {
        function EfHeaderNotificationMobileController($scope, $state, widget) {
            function closeOverlay() {
                document.getElementById('servicebarButton').trigger('pointerdown')
            }
            function dataLoaded() {
                $scope.messageCounter = $scope.numberOfNotifications > 9 ? '9+' : $scope.numberOfNotifications;
                gadgets.pubsub.publish(pf.globals.pubsub.UPDATE_MESSAGE_COUNTER, $scope.messageCounter);
                $scope.$apply()
            }
            $scope.widgetInstanceId = widget.id;
            $scope.userName = platform.getUserName();
            $scope.closeOverlay = closeOverlay;
            if (platform.isCustomerTest()) $scope.customerTest = true;
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                errorWidgetUrl: pf.globals.urlprefix.BUNDLE + '/widgets/efheadernotificationmobile/error.html'
            })
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            pfAngularCommon = require('pf-angular-common'),
            widgetName = 'efheadernotificationmobile',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName
            ]);
        module.controller('EfHeaderNotificationMobileController', EfHeaderNotificationMobileController);
        EfHeaderNotificationMobileController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efheadernotificationmobile/js/efheadernotificationmobile', function () {
});
!function () {
    'use strict';
    define('pf-widget-efimportantmessages', [
        'require',
        'lodash',
        'angular',
        'moment',
        'pf-widget',
        'pf-shared-modules-urls',
        'pf-shared-modules-storage',
        'pf-shared-modules-uisettings',
        'pf-shared-modules-pubsub',
        'pf-angular-common'
    ], function (require) {
        function EfImportantMessagesController($scope, $state, $sce, $timeout, widget) {
            function getClosedMessages() {
                return uiSettings.getUiSettingsForWidget(widgetName).then(function (data) {
                    var uiSettingsValue = _.clone(data);
                    closedMessages = [
                    ];
                    if (!_.isUndefined(data)) {
                        var outdatedMessages = false;
                        _.forOwn(data, function (value, key) {
                            if (moment(value).add(180, 'days').isBefore(new Date)) {
                                outdatedMessages = true;
                                uiSettingsValue[key] = null
                            } else closedMessages.push(key)
                        });
                        if (outdatedMessages) uiSettings.storeUiSettingsForWidget(widgetName, uiSettingsValue)
                    }
                })
            }
            function saveClosedMessages(value) {
                uiSettings.storeUiSettingsForWidget(widgetName, value)
            }
            function dataLoaded() {
                var openMessages = false,
                    data = $scope.rawData;
                if (data) {
                    var webtrendsIds = [
                    ];
                    $scope.messages = [
                    ];
                    closedMessagesReceived.then(function () {
                        _.forEach(data, function (item) {
                            item.text = $sce.trustAsHtml(item.text);
                            if (!_.includes(closedMessages, item.messageId)) {
                                openMessages = true;
                                $scope.messages.push(item);
                                webtrendsIds.push(item.messageId)
                            }
                        });
                        if (!_.isEmpty(webtrendsIds)) baseWidget.trackWebtrends('WT.ad', webtrendsIds.join(';'))
                    })
                }
                if (openMessages) storage.sessionStorage.setItem(pf.globals.keys.OPEN_MESSAGES, 1)
            }
            function storeClosedMessages() {
                storage.sessionStorage.setItem(pf.globals.keys.OPEN_MESSAGES, 0)
            }
            function closeMessages() {
                var uiSettingsValue = {
                };
                _.forEach($scope.messages, function (message) {
                    uiSettingsValue[message.messageId] = moment(new Date).format(pf.globals.formats.moment.ISO_DATE)
                });
                saveClosedMessages(uiSettingsValue);
                storeClosedMessages()
            }
            function showMessages() {
                return !_.isEmpty($scope.messages) && !isOnDetailPage
            }
            function setIsOnDetailPage(onDetailPage) {
                $timeout(function () {
                    isOnDetailPage = onDetailPage
                })
            }
            function handleClick(message) {
                baseWidget.trackWebtrends('WT.mc_id', message.messageId, 'WT.mc_ev', 'click', 'WT.ac', message.messageId);
                urls.openAutoDetectUrl(message.url)
            }
            function openPopupContainerFn() {
                setIsOnDetailPage(true)
            }
            function closePopupContainerFn() {
                setIsOnDetailPage(false)
            }
            var baseWidget,
                isOnDetailPage = false;
            $scope.widgetInstanceId = widget.id;
            $scope.closeMessages = closeMessages;
            $scope.showMessages = showMessages;
            $scope.handleClick = handleClick;
            $scope.doNotReload = true;
            var closedMessages,
                closedMessagesReceived = getClosedMessages();
            pubsub.register($scope, pf.globals.pubsub.OPEN_POPUP_CONTAINER, openPopupContainerFn);
            pubsub.register($scope, pf.globals.pubsub.CLOSE_POPUP_CONTAINER, closePopupContainerFn);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moment = require('moment'),
            pfWidget = require('pf-widget'),
            urls = require('pf-shared-modules-urls'),
            storage = require('pf-shared-modules-storage'),
            uiSettings = require('pf-shared-modules-uisettings'),
            pubsub = require('pf-shared-modules-pubsub'),
            pfAngularCommon = require('pf-angular-common'),
            widgetName = 'efimportantmessages',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName
            ]);
        module.controller('EfImportantMessagesController', EfImportantMessagesController);
        EfImportantMessagesController.$inject = [
            '$scope',
            '$state',
            '$sce',
            '$timeout',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efimportantmessages/js/efimportantmessages', function () {
});
!function () {
    'use strict';
    define('pf-widget-efinfopages', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-app-detect',
        'pf-shared-modules-util',
        'pf-shared-modules-rest_ng',
        'pf-sessiondata-userdata',
        'pf-shared-modules-guided_tour',
        'pf-shared-modules-cookies',
        'pf-shared-modules-detail_page_overlay',
        'pf-angular-common',
        'directive-widget-selectable_table',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfInfoPagesController($scope, $state, widget, $timeout) {
            function setActionUrls() {
                var welcomePageActionKey,
                    uiMarketSegment = userData.uiMarketSegment;
                switch (uiMarketSegment) {
                    case pf.globals.uimarketsegment.PRIVATE_CUSTOMER:
                        welcomePageActionKey = actionKeys.WELCOME_PAGE_PC;
                        break;
                    case pf.globals.uimarketsegment.BUSINESS_CUSTOMER:
                        welcomePageActionKey = actionKeys.WELCOME_PAGE_BC
                }
                welcomePageUrl = pfWidgetFunctions.getActionUrl(widgetName, welcomePageActionKey);
                trWelcomePageUrl = pfWidgetFunctions.getActionUrl(widgetName, actionKeys.TR_WELCOME_PAGE);
                disablePageUrl = pfWidgetFunctions.getActionUrl(widgetName, actionKeys.WELCOME_PAGE_DISABLED)
            }
            function dataLoaded() {
                var loadGuidedTour = cookies.get(pf.globals.cookies.LOAD_GUIDED_TOUR);
                if (!_.isUndefined(loadGuidedTour)) window.location.hash = pf.globals.parameters.hash.GUIDED_TOUR;
                else {
                    setFalseIfUndefined('showTrWelcomePage');
                    setFalseIfUndefined('showWelcomePageDesktop');
                    setFalseIfUndefined('showWelcomePageMobile');
                    setFalseIfUndefined('showNewsletterPage');
                    setFalseIfUndefined('showPasOptInPage');
                    setFalseIfUndefined('showBasicAgreementPage');
                    setEmptyIfUndefined('ciPageIds');
                    if (platform.isEtradingPage() && !detect.isApp()) {
                        if ($scope.showTrWelcomePage) showTrWelcomePage()
                    } else if ($scope.showBasicAgreementPage) showBasicAgreementPage();
                    else if ($scope.showPasOptInPage) showPasOptInPage();
                    else if ($scope.isMobile && $scope.showWelcomePageMobile) window.location.href = pf.globals.parameters.hash.GUIDED_TOUR;
                    else if ($scope.showWelcomePageDesktop) showWelcomePageDesktop();
                    else if (!_.isEmpty($scope.ciPageIds)) showReleaseNotes();
                    else if ($scope.showNewsletterPage) showNewsletterPage()
                }
            }
            function showPasOptInPage() {
                var urlObj = pfWidgetFunctions.getActionUrl(widgetName, 'PasOptInPage');
                pfWidgetFunctions.processUrlObject(urlObj)
            }
            function showNewsletterPage() {
                var urlObj = pfWidgetFunctions.getActionUrl(widgetName, 'NewsletterPage');
                pfWidgetFunctions.processUrlObject(urlObj)
            }
            function showBasicAgreementPage() {
                var urlObj = pfWidgetFunctions.getActionUrl(widgetName, 'BasicAgreementPage');
                pfWidgetFunctions.processUrlObject(urlObj)
            }
            function showWelcomePageDesktop() {
                showFipoPage({
                    urlObj: welcomePageUrl,
                    pageName: pf.globals.parameters.pageDisable.WELCOME_PAGE_DESKTOP,
                    actionButtonKey: 'Next',
                    callback: function (success) {
                        if (success) guidedTour.showTour()
                    }
                })
            }
            function showTrWelcomePage() {
                showFipoPage({
                    urlObj: trWelcomePageUrl,
                    pageName: pf.globals.parameters.pageDisable.TR_WELCOME_PAGE,
                    actionButtonKey: 'Next',
                    callback: function (success) {
                        if (success) document.location.hash = pf.globals.parameters.hash.GUIDED_TOUR
                    }
                })
            }
            function showReleaseNotes() {
                var urlObj = pfWidgetFunctions.getActionUrl(widgetName, actionKeys.CI_PAGES, {
                    pageIds: $scope.ciPageIds
                });
                pfWidgetFunctions.processUrlObject(urlObj)
            }
            function showFipoPage(config) {
                var urlObj = pfWidgetFunctions.getActionUrl(widgetName, 'PfchContentPage');
                urlObj.data = {
                    contentUrlObj: config.urlObj,
                    onClose: disablePage,
                    callback: config.callback,
                    actionButtonKey: config.actionButtonKey,
                    pageName: config.pageName
                };
                pfWidgetFunctions.processUrlObject(urlObj)
            }
            function disablePage(pageName, callback) {
                restng.postFormData2Json(disablePageUrl.url, {
                    p_page: pageName
                }).finally (function () {
                    if (_.isFunction(callback)) callback(true)
                })
            }
            function setFalseIfUndefined(name) {
                $scope[name] = $scope.rawData[name] || false
            }
            function setEmptyIfUndefined(name) {
                $scope[name] = $scope.rawData[name] || [
                ]
            }
            function initHashListener() {
                window.on(pf.globals.events.HASH_CHANGE, hashChangeListener);
                $scope.$on('$destroy', function () {
                    window.off(pf.globals.events.HASH_CHANGE, hashChangeListener)
                });
                hashChangeListener()
            }
            function hashChangeListener() {
                if (platform.isHomePage()) {
                    var hashOptions = util.deparamUrl(),
                        isPasOptInPage = !_.isUndefined(hashOptions[slashed(pf.globals.parameters.hash.PAS_OPTIN_PAGE)]);
                    if (isPasOptInPage) {
                        showPasOptInPage();
                        clearHash()
                    }
                    if (!platform.isMobile()) {
                        var isGuidedTour = !_.isUndefined(hashOptions[slashed(pf.globals.parameters.hash.GUIDED_TOUR)]),
                            isWelcomePage = !_.isUndefined(hashOptions[slashed(pf.globals.parameters.hash.WELCOME_PAGE)]),
                            isReleaseNotesDesktop = !_.isUndefined(hashOptions[slashed(pf.globals.parameters.hash.RELEASE_NOTES)]),
                            isNewsletterPage = !_.isUndefined(hashOptions[slashed(pf.globals.parameters.hash.NEWSLETTER)]);
                        if (isGuidedTour) {
                            guidedTour.showTour();
                            clearHash()
                        } else if (isWelcomePage) {
                            showWelcomePageDesktop();
                            clearHash()
                        } else if (isReleaseNotesDesktop) {
                            showReleaseNotes();
                            clearHash()
                        } else if (isNewsletterPage) {
                            showNewsletterPage();
                            clearHash()
                        }
                    }
                }
            }
            function clearHash() {
                $timeout(function () {
                    window.location.hash = ''
                })
            }
            function slashed(hash) {
                return '/' + hash
            }
            $scope.widgetInstanceId = widget.id;
            setActionUrls();
            initHashListener();
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            detect = require('pf-app-detect'),
            util = require('pf-shared-modules-util'),
            restng = require('pf-shared-modules-rest_ng'),
            userData = require('pf-sessiondata-userdata'),
            guidedTour = require('pf-shared-modules-guided_tour'),
            cookies = require('pf-shared-modules-cookies'),
            detailPageOverlay = require('pf-shared-modules-detail_page_overlay'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'efinfopages',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfInfoPagesController', EfInfoPagesController);
        EfInfoPagesController.$inject = [
            '$scope',
            '$state',
            'widget',
            '$timeout'
        ];
        var actionKeys = {
                CI_PAGES: 'CiPages',
                WELCOME_PAGE_PC: 'WelcomePagePrivateCustomer',
                WELCOME_PAGE_BC: 'WelcomePageBusinessCustomer',
                TR_WELCOME_PAGE: 'TrWelcomePage',
                WELCOME_PAGE_DISABLED: 'WelcomePageDisable'
            },
            welcomePageUrl,
            trWelcomePageUrl,
            disablePageUrl;
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efinfopages/js/efinfopages', function () {
});
!function () {
    'use strict';
    define('pf-widget-eflastmovements', [
        'require',
        'lodash',
        'angular',
        'pf-widget',
        'pf-shared-modules-util',
        'pf-shared-modules-movements',
        'pf-angular-common',
        'directive-widget-account_info',
        'directive-widget-selection_list',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function EfLastMovementsController($scope, widget, $state) {
            function dataLoaded() {
                var account = {
                    iban: $scope.standardAccount.iban,
                    currency: $scope.standardAccount.currency
                };
                $scope.dataModel.entries = movements.createSelectionListEntries(account, _.get($scope, 'movements'));
                $scope.dataModel.hasOthers = $scope.additionalItems && !_.isEmpty($scope.dataModel.entries)
            }
            $scope.widgetInstanceId = widget.id;
            angular.extend($scope, {
                actionType: widget.getPreference('actionType'),
                viewModel: {
                    showDetailLink: true,
                    showCallToAction: util.hasValue($scope.actionType)
                },
                dataModel: {
                },
                showItem: function showItem(item) {
                    movements.showDetailFromWidget($scope.mappingKey, item.params)
                }
            });
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            util = require('pf-shared-modules-util'),
            movements = require('pf-shared-modules-movements'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetAccountInfo = require('directive-widget-account_info'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'eflastmovements',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetAccountInfo.moduleName,
                directiveWidgetSelectionList.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]);
        module.controller('EfLastMovementsController', EfLastMovementsController);
        EfLastMovementsController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/eflastmovements/js/eflastmovements', function () {
});
!function () {
    'use strict';
    define('pf-widget-efmyaccountsmobile', [
        'require',
        'lodash',
        'pf-shared-modules-actions',
        'angular',
        'pf-widget',
        'pf-shared-modules-products',
        'pf-shared-modules-productservice',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-tabs_navigation',
        'directive-widget-buttonbar_static',
        'directive-widget-account_overview'
    ], function (require) {
        function EfMyAccountsMobileController($scope, widget, $state) {
            function adaptAccount(account) {
                var instanceType = products.getInstanceType(account),
                    config = {
                        accountTypeAsTitle: true,
                        titleKey: _.upperFirst(instanceType)
                    };
                _.merge(account, products.createAccountStructureMobile(account, instanceType, translatorFn, config));
                account.instanceType = instanceType;
                account.mappingKey = 'efgenericproduct-' + instanceType;
                baseWidget.i18n.mappingKey = account.mappingKey;
                var actualActions = _.filter(account.actions, function (item) {
                        return baseWidget.hasActionUrl(item)
                    }),
                    filteredActions = _.intersection(actualActions, products.getActions(account, b$.portal.device, 'balancesheet'));
                account.moreActions = {
                };
                if (actualActions.length > 1) account.moreActions.actionEntries = actions.buildActionEntries(filteredActions, $scope);
                else if (1 === actualActions.length) {
                    account.moreActions.detailLinkType = actualActions[0];
                    account.moreActions.showDetailLink = true
                }
                return account
            }
            function updateOrderSettings(allOtherAccounts, orderSettings) {
                if (_.isArray(orderSettings) && orderSettings.length) {
                    var updatedOrderSettings = angular.copy(orderSettings),
                        lengthOfOrder = updatedOrderSettings.length,
                        allOtherAccountNumbers = _.map(allOtherAccounts, 'nr'),
                        lengthOfOtherAccounts = allOtherAccounts.length;
                    if (lengthOfOtherAccounts < lengthOfOrder) updatedOrderSettings.splice(lengthOfOtherAccounts);
                    var j = lengthOfOrder;
                    while (j < 3 && j < lengthOfOtherAccounts) {
                        if (_.includes(updatedOrderSettings, allOtherAccountNumbers[j])) updatedOrderSettings[j] = 0;
                        else updatedOrderSettings[j] = allOtherAccountNumbers[j];
                        j++
                    }
                    updatedOrderSettings = _.map(updatedOrderSettings, function (item) {
                        return _.includes(allOtherAccountNumbers, item) ? item : 0
                    });
                    return updatedOrderSettings
                }
                return _.map(allOtherAccounts.slice(0, 3), 'nr')
            }
            function createDropdownsForSettings(orderSettings, otherAccounts, defaultAccount) {
                var adaptAccountForDropdown = function (account) {
                        return {
                            name: account.name,
                            description: account.formatted.number,
                            value: account.nr,
                            info: account.formatted.amountWithCurrency
                        }
                    },
                    settings = {
                        dropdowns: [
                        ]
                    };
                settings.defaultAccountOption = [
                    adaptAccountForDropdown(defaultAccount)
                ];
                settings.otherAccountOptions = _.map(otherAccounts, adaptAccountForDropdown);
                settings.otherAccountOptions.unshift({
                    name: translate('DoNotShowAccount', $scope),
                    value: 0
                });
                _.forEach(orderSettings, function (orderAccountNumber, orderIndex) {
                    settings.dropdowns[orderIndex] = {
                        selectedIndex: 0,
                        config: {
                            model: orderAccountNumber
                        }
                    };
                    if (0 !== orderAccountNumber) _.forEach(otherAccounts, function (account, accountIndex) {
                        if (orderAccountNumber === account.nr) settings.dropdowns[orderIndex].selectedIndex = accountIndex + 1
                    })
                });
                settings.onSelect = function onSelect(dropdownIndex, item) {
                    if (0 !== item.value) _.forEach($scope.settings.dropdowns, function (dropdown, index) {
                        if (index !== dropdownIndex && dropdown.config.model === item.value) {
                            dropdown.config.model = 0;
                            $scope.settingData.order[index] = 0
                        }
                    });
                    $scope.settingData.order[dropdownIndex] = item.value
                };
                $scope.settings = settings
            }
            function onDataLoaded(responseData) {
                var result = responseData.result,
                    allAccounts = result.accounts;
                $scope.view.showAllAccountsAction = allAccounts.length > 4;
                var defaultAccountIndex = 0;
                if ($scope.standardAccount.iban) {
                    var indexInAllAccounts = _.findIndex(allAccounts, {
                        iban: $scope.standardAccount.iban
                    });
                    defaultAccountIndex = indexInAllAccounts > 0 ? indexInAllAccounts : 0
                }
                var defaultAccount = allAccounts.splice(defaultAccountIndex, 1) [0],
                    otherAccounts = allAccounts,
                    adaptedOtherAccounts = _.map(otherAccounts, adaptAccount);
                $scope.settingData = $scope.settingData || {
                };
                var accountOrder = updateOrderSettings(otherAccounts, $scope.settingData.order);
                $scope.view.otherAccounts = _.map(_.compact(accountOrder), function (nr) {
                    return _.find(adaptedOtherAccounts, {
                        nr: nr
                    })
                });
                $scope.view.defaultAccount = adaptAccount(defaultAccount);
                var productProperties = products.getProperties($scope.view.defaultAccount.instanceType, b$.portal.device, 'widget');
                if (!_.isEmpty(productProperties.button)) _.remove($scope.view.defaultAccount.moreActions.actionEntries, function (actionEntry) {
                    return actionEntry.key === productProperties.button
                });
                $scope.view.defaultAccountActions = $scope.view.defaultAccount.moreActions;
                $scope.view.defaultAccount.button = productProperties.button;
                $scope.showCallToActionButton = !_.isEmpty(productProperties.button) && _.includes($scope.view.defaultAccount.actions, productProperties.button);
                delete $scope.view.defaultAccount.moreActions;
                baseWidget.i18n.mappingKey = widgetName;
                createDropdownsForSettings(accountOrder, otherAccounts, defaultAccount);
                $scope.$applyAsync()
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            $scope.hasWidgetSettings = true;
            $scope.showCallToActionButton = false;
            $scope.view = {
            };
            $scope.tabs = [
                {
                    tabTitleKey: 'DefaultAccount',
                    fullStateName: 'efmyaccountsmobile_defaultaccount',
                    id: 1
                },
                {
                    tabTitleKey: 'MoreAccounts',
                    fullStateName: 'efmyaccountsmobile_moreaccounts',
                    id: 2
                }
            ];
            $scope.activeTab = 0;
            var translate = translator.translate,
                translatorFn = translator.createTranslator($scope),
                baseWidget;
            $scope.activateTab = function activateTab(index) {
                if ($scope.activeTab !== index) $scope.activeTab = index
            };
            var wrapperFunction = productService.getWrapperFunctionForWidget(onDataLoaded, errorCallback, [
                'result.accounts'
            ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            })
        }
        var _ = require('lodash'),
            actions = require('pf-shared-modules-actions'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            products = require('pf-shared-modules-products'),
            productService = require('pf-shared-modules-productservice'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveTabsNavigation = require('directive-tabs_navigation'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetAccountOverview = require('directive-widget-account_overview'),
            widgetName = 'efmyaccountsmobile',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveTabsNavigation.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetAccountOverview.moduleName
            ]);
        module.controller('EfMyAccountsMobileController', EfMyAccountsMobileController);
        EfMyAccountsMobileController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ])
        }
    })
}();
define('fipo/widgets/efmyaccountsmobile/js/efmyaccountsmobile', function () {
});
!function () {
    'use strict';
    define('pf-widget-eforderoverview', [
        'require',
        'lodash',
        'angular',
        'moment',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-sessiondata-userdata',
        'pf-shared-modules-numbers',
        'pf-shared-modules-uisettings',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-account_info',
        'directive-widget-selectable_table',
        'directive-tabs_navigation',
        'directive-widget-buttonbar_static',
        'directive-widget-selection_list',
        'directive-widget-orderoverview_settings'
    ], function (require) {
        function EfOrderOverviewController($scope, widget, $state) {
            function dataLoaded() {
                var row,
                    tableData = {
                    };
                tableData.colgroup = [
                    '50%',
                    '50%'
                ];
                tableData.headerClass = 'is-visuallyhidden';
                tableData.headers = [
                    {
                        text: 'DeliveryNumber'
                    },
                    {
                        text: 'Amount'
                    }
                ];
                tableData.rows = [
                ];
                row = {
                    columns: [
                        {
                            type: 'text',
                            text: translate('AvailableBalance', $scope)
                        },
                        {
                            type: 'amount',
                            amount: $scope.availableBalance,
                            currency: $scope.currency,
                            spanClass: 'widget_state_table_list--row--value'
                        }
                    ]
                };
                tableData.rows.push(row);
                if (_.isNumber($scope.totalOrders) || _.isNumber($scope.totalOrdersGroup)) {
                    row = {
                        columns: [
                            {
                                type: 'text',
                                text: translate('TotalOrders', $scope)
                            },
                            {
                                type: 'amountNoSuffix',
                                amount: $scope.totalOrdersGroup || $scope.totalOrders || 0,
                                currency: $scope.currency,
                                spanClass: 'widget_state_table_list--row--value'
                            }
                        ]
                    };
                    tableData.rows.push(row)
                }
                if (_.isNumber($scope.difference)) tableData.footers = [
                    {
                        text: null !== $scope.totalOrdersGroup ? translate('Difference', $scope)  : translate('BalancePreview', $scope)
                    },
                    {
                        text: numbers.formatAmountWithCurrency($scope.difference, $scope.currency, numbers.indicator.plusAndMinus),
                        tdClass: 'widget_state_table_list--row--value',
                        spanClass: $scope.difference < 0 ? 'negative_val' : ''
                    }
                ];
                $scope.tableData = tableData;
                if (platform.isMobile()) {
                    for (var listItems = [
                    ], k = 0; k < $scope.pendingOrders.length; k++) {
                        var entry = $scope.pendingOrders[k],
                            item = {
                                name: translate(entry.key, $scope),
                                params: {
                                    detailType: entry.detailType
                                },
                                disableLink: !entry.detailType
                            };
                        if (!_.isUndefined(entry.amount)) item.info = numbers.filterAmount(entry.amount, numbers.indicator.none, entry.currency);
                        else item.info = translate('NoContent', $scope);
                        listItems.push(item)
                    }
                    $scope.listItems = listItems
                }
                $scope.searchActionButton = userData.numberOfRegularAccounts > 1;
                paramsOverride();
                $scope.$apply()
            }
            function showItem(item) {
                dataUrlReplacementObj.detailType = item.params.detailType;
                dataUrlReplacementObj.iban = $scope.standardAccount.iban;
                var actionUrl = baseWidget.getActionUrl(_.get($scope.detailTypes, item.params.detailType, 'OpenItem'), dataUrlReplacementObj);
                baseWidget.openDetailPage(actionUrl)
            }
            function paramsOverride() {
                var today = moment().date(),
                    date = null;
                switch ($scope.settingData.period) {
                    case $scope.settingValues.INPUT_DAYS:
                        if ($scope.settingData.days > 0 && $scope.settingData.days <= 90) date = moment().add($scope.settingData.days, 'days');
                        else date = moment().add($scope.settingValues.DEFAULT_INPUT_DAYS, 'days');
                        break;
                    case $scope.settingValues.END_OF_MONTH:
                        var lastDay = moment().endOf('month').date();
                        if (today === lastDay) date = moment().add(1, 'month').endOf('month');
                        else date = moment().endOf('month');
                        break;
                    case $scope.settingValues.DAY_OF_MONTH:
                        var days = $scope.settingData.dayOfMonth - today;
                        if (days > 0) date = moment().add(days, 'days');
                        else date = moment().date($scope.settingData.dayOfMonth).add(1, 'month')
                }
                $scope.ordersIncludedUntil = {
                    ordersIncludedUntil: date.format(pf.globals.formats.moment.LOCALIZED_DATE)
                };
                return date.format(pf.globals.formats.moment.ISO_DATE)
            }
            function initSettings() {
                $scope.settingData = $scope.settingData || {
                    period: null,
                    days: null,
                    dayOfMonth: null
                };
                if (!$scope.settingData.period) {
                    $scope.settingData.period = $scope.settingValues.INPUT_DAYS;
                    $scope.settingData.days = $scope.settingValues.DEFAULT_INPUT_DAYS;
                    $scope.settingData.dayOfMonth = null
                }
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            var translate = translator.translate;
            $scope.textKey = 'widgets.' + widgetName;
            $scope.showItem = showItem;
            $scope.hasWidgetSettings = true;
            $scope.settingsDaysMin = pf.globals.widgets.eforderoverview.SETTINGS_DAYS_MIN;
            $scope.settingsDaysMax = pf.globals.widgets.eforderoverview.SETTINGS_DAYS_MAX;
            $scope.settingValues = {
                INPUT_DAYS: 'inputDays',
                DEFAULT_INPUT_DAYS: 30,
                END_OF_MONTH: 'endOfMonth',
                DAY_OF_MONTH: 'dayOfMonth',
                DEFAULT_DAY_OF_MONTH: 25
            };
            $scope.detailTypes = {
                ez: 'OpenEz',
                devh: 'OpenDevh'
            };
            var dataUrlReplacementObj = {
                fdatBis: paramsOverride
            };
            $scope.dataUrlReplacementObj = dataUrlReplacementObj;
            $scope.selectedTabIndex = 0;
            $scope.tabSelected = function tabSelected(index) {
                $scope.selectedTabIndex = index
            };
            uiSettings.getUiSettingsForWidget(widgetName).then(function success(data) {
                $scope.settingData = data || {
                }
            }).finally (function () {
                initSettings();
                baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    dataUrlReplacementObj: dataUrlReplacementObj,
                    detailUrlsReplacementObj: dataUrlReplacementObj,
                    onDataLoaded: dataLoaded
                })
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moment = require('moment'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            userData = require('pf-sessiondata-userdata'),
            numbers = require('pf-shared-modules-numbers'),
            uiSettings = require('pf-shared-modules-uisettings'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetAccountInfo = require('directive-widget-account_info'),
            directiveWidgetSelectableTable = require('directive-widget-selectable_table'),
            directiveTabsNavigation = require('directive-tabs_navigation'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetSelectionList = require('directive-widget-selection_list'),
            directiveWidgetOrderoverviewSettings = require('directive-widget-orderoverview_settings'),
            widgetName = 'eforderoverview',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetAccountInfo.moduleName,
                directiveWidgetSelectableTable.moduleName,
                directiveTabsNavigation.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetSelectionList.moduleName,
                directiveWidgetOrderoverviewSettings.moduleName
            ]);
        module.controller('EfOrderOverviewController', EfOrderOverviewController);
        EfOrderOverviewController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/eforderoverview/js/eforderoverview', function () {
});
!function () {
    'use strict';
    define('pf-widget-efpaymentscanner', [
        'require',
        'angular',
        'pf-widget',
        'pf-shared-modules-productservice',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function EfPaymentScannerController($scope, $state, widget) {
            function onDataLoaded(response) {
                result = response.result;
                $scope.vm.data.paymentAccounts = dropdowns.buildAccountOptions(result.accounts);
                $scope.vm.data.selectedAccount = $scope.vm.data.paymentAccounts[result.activeAccount].value;
                $scope.vm.data.automaticTransfer = false;
                $scope.vm.data.dueTo = result.defaultDueDate;
                $scope.vm.data.code = '';
                $scope.$apply()
            }
            function reloadWidgetsFn() {
                $scope.isCTAButtonDisabled = false
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            $scope.isCTAButtonDisabled = false;
            $scope.vm = {
                data: {
                }
            };
            var result = null;
            $scope.isValid = function isValid() {
                return $scope.vm.data.code
            };
            $scope.callToAction = function callToAction() {
                if (!$scope.isCTAButtonDisabled && $scope.isValid()) {
                    $scope.isCTAButtonDisabled = true;
                    var params = {
                        iban: $scope.vm.data.selectedAccount,
                        codeZeile: $scope.vm.data.code || '',
                        fdat: $scope.vm.data.dueTo || '',
                        xQuick: $scope.vm.data.automaticTransfer ? 1 : 2
                    };
                    $scope.showDetailPage('PaymentScannerDetail', params)
                }
            };
            gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn);
            $scope.$on('$destroy', function () {
                gadgets.pubsub.unsubscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn)
            });
            var wrapperFunction = productService.getWrapperFunctionForWidget(onDataLoaded, errorCallback, [
                'result.accounts'
            ]);
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            })
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            productService = require('pf-shared-modules-productservice'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'efpaymentscanner',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('EfPaymentScannerController', EfPaymentScannerController);
        EfPaymentScannerController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efpaymentscanner/js/efpaymentscanner', function () {
});
!function () {
    'use strict';
    define('pf-widget-efportfoliopremiumtransfer', [
        'require',
        'angular',
        'lodash',
        'ne',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-productservice',
        'pf-shared-services-dialogservice',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic',
        'directive-account_label',
        'directive-screen_key'
    ], function (require) {
        function EfPortfolioPremiumTransferController($scope, $state, DialogService, widget) {
            function findIndex(accountNumber, accountArr, defaultValue) {
                var index = _.findIndex(accountArr, {
                    value: accountNumber
                });
                return index >= 0 ? index : defaultValue
            }
            function dataLoaded() {
                if (vm.data[formName]) vm.data[formName].$setPristine();
                allDebitAccountsOptions = dropdowns.buildAccountOptions($scope.debitAccounts);
                allCreditAccountsOptions = dropdowns.buildAccountOptions($scope.creditAccounts);
                currentDebitAccount = allDebitAccountsOptions[findIndex($scope.standardAccount.iban, allDebitAccountsOptions, 0)].account;
                updateFromSelectedDebitAccount();
                vm.data.debitAccounts = allDebitAccountsOptions.slice();
                vm.data.amount.value = '';
                vm.data.currencies = dropdowns.buildCurrencyOptions($scope.currencies);
                vm.data.buttonDisabled = false;
                $scope.$apply()
            }
            function signalSuccess(response) {
                if (response.messages) {
                    $scope.messages = response.messages;
                    if ($scope.messages.errors) {
                        $scope.onConfirmation = function () {
                            baseWidget.reloadData()
                        };
                        $scope.message = $scope.messages.errors[0];
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                    } else if ($scope.messages.success || $scope.messages.infos) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                    } else if ($scope.messages.notices) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.notice)
                    }
                }
            }
            function signalError() {
                $scope.onConfirmation = function onConfirmation() {
                    baseWidget.reloadData()
                };
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function isValid() {
                if (baseWidget.isBusy()) return false;
                else return vm.data[formName].$valid
            }
            function updateCurrency() {
                vm.data.currency.value = currentDebitAccount.currency
            }
            function updateAvailableCreditAccounts() {
                var creditAccounts = allCreditAccountsOptions.slice();
                if (currentDebitAccount.type === vm.data.type && currentDebitAccount.subType === vm.data.subtype) vm.data.creditAccounts = _.filter(creditAccounts, function (creditAccount) {
                    return !(creditAccount.account.type === vm.data.type && creditAccount.account.subType === vm.data.subtype)
                });
                else vm.data.creditAccounts = _.filter(creditAccounts, {
                    account: {
                        type: vm.data.type,
                        subType: vm.data.subtype
                    }
                })
            }
            function updateSelectedAccounts() {
                vm.data.selectedDebitAccount = currentDebitAccount.iban;
                vm.data.selectedCreditAccount = vm.data.creditAccounts[0].account.iban
            }
            function updateFromSelectedDebitAccount() {
                updateAvailableCreditAccounts();
                updateSelectedAccounts();
                updateCurrency()
            }
            function debitAccountChanged(item) {
                currentDebitAccount = item.account;
                updateFromSelectedDebitAccount()
            }
            function createParams() {
                return {
                    debitAccount: vm.data.selectedDebitAccount,
                    creditAccount: vm.data.selectedCreditAccount,
                    amount: vm.data.amount.value,
                    currency: vm.data.currency.value
                }
            }
            function submit(dialogType) {
                var params = createParams();
                params.dialogType = dialogType;
                var actionUrl = baseWidget.getActionUrl('SubmitTransfer', params);
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_SubmitTransfer', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                baseWidget.setBusy(true);
                restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function (response) {
                    if (_.has(response, 'result.confirmationDialog')) handleConfirmationDialog(response.result.confirmationDialog);
                    else {
                        resetWidget();
                        signalSuccess(response)
                    }
                }, function () {
                    resetWidget();
                    signalError()
                })
            }
            function handleConfirmationDialog(confirmationDialog) {
                if (_.has(confirmationDialog, 'data.creditAccount')) productService.extendAccount(confirmationDialog.data.creditAccount);
                if (_.has(confirmationDialog, 'data.debitAccount')) productService.extendAccount(confirmationDialog.data.debitAccount);
                var configObj = {
                        templateUrl: 'exchangeRate' === confirmationDialog.type ? pf.globals.urlprefix.BUNDLE + '/templates/overlay/exchangeRateConfirmation.html' : void 0,
                        isSmall: false,
                        data: confirmationDialog.data,
                        context: $scope.widgetInstanceId + '-' + confirmationDialog.type
                    },
                    config = DialogService.getConfirmDialogConfig(_.upperFirst(confirmationDialog.type), $scope, null, configObj),
                    dialog = DialogService.confirm(config);
                if (dialog) dialog.result.then(function (value) {
                    if (value) submit(confirmationDialog.type);
                    baseWidget.setBusy(false)
                })
            }
            function goToDetailPage() {
                $scope.showDetailPage(null, createParams())
            }
            function resetWidget() {
                $scope.canGainFocus = true;
                baseWidget.setBusy(false)
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            var baseWidget,
                formName = 'efportfoliopremiumtransferForm',
                vm = {
                    data: {
                        amount: {
                            value: ''
                        },
                        currency: {
                            value: null
                        },
                        type: 0,
                        subtype: 14
                    },
                    actions: {
                        isValid: isValid,
                        debitAccountChanged: debitAccountChanged,
                        submit: submit,
                        goToDetailPage: goToDetailPage
                    }
                },
                allDebitAccountsOptions,
                allCreditAccountsOptions,
                currentDebitAccount,
                wrapperFunction = productService.getWrapperFunctionForWidget(dataLoaded, errorCallback, [
                    'result.creditAccounts',
                    'result.debitAccounts'
                ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            });
            $scope.vm = vm
        }
        var angular = require('angular'),
            _ = require('lodash'),
            _ne = require('ne'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            productService = require('pf-shared-modules-productservice'),
            dialogService = require('pf-shared-services-dialogservice'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            directiveAccountLabel = require('directive-account_label'),
            directiveScreenKey = require('directive-screen_key'),
            widgetName = 'efportfoliopremiumtransfer',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName,
                directiveAccountLabel.moduleName,
                directiveScreenKey.moduleName
            ]);
        dialogService.register(module);
        module.controller('EfPortfolioPremiumTransferController', EfPortfolioPremiumTransferController);
        EfPortfolioPremiumTransferController.$inject = [
            '$scope',
            '$state',
            dialogService.name,
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efportfoliopremiumtransfer/js/efportfoliopremiumtransfer', function () {
});
!function () {
    'use strict';
    define('pf-widget-efretirementinpayment', [
        'require',
        'angular',
        'lodash',
        'ne',
        'pf-widget',
        'pf-shared-modules-rest_ng',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-productservice',
        'pf-angular-common',
        'directive-widget-dropdown',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function EfRetirementInpaymentController($scope, $state, widget) {
            function findAccountIndexForIban(iban, accounts, defaultValue) {
                var index = _.findIndex(accounts, function (account) {
                    return account.value == iban
                });
                if (index < 0) return defaultValue;
                else return index
            }
            function dataLoaded() {
                if (vm.data[formName]) vm.data[formName].$setPristine();
                allDebitAccountsOptions = dropdowns.extendAndBuildAccountOptions($scope.debitAccounts);
                allCreditAccountsOptions = dropdowns.extendAndBuildAccountOptions($scope.creditAccounts, {
                    saldoType: dropdowns.SALDO_TYPE.BUCHUNGSSALDO,
                    valueType: dropdowns.VALUE_TYPE.NUMBER
                });
                var indexStandardAccount = findAccountIndexForIban($scope.standardAccount.iban, allDebitAccountsOptions, 0);
                vm.data.config.fromAccount = {
                    model: allDebitAccountsOptions[indexStandardAccount].value
                };
                vm.data.config.toAccount = {
                    model: allCreditAccountsOptions[0].value
                };
                vm.data.amount = {
                    value: ''
                };
                vm.data.currency = {
                    value: pf.globals.types.currency.CHF
                };
                vm.data.fromAccounts = allDebitAccountsOptions.slice();
                vm.data.toAccounts = allCreditAccountsOptions.slice();
                vm.data.currencies = dropdowns.buildCurrencyOptions([]);
                vm.data.buttonDisabled = false;
                currentFromAccount = $scope.debitAccounts[findAccountIndexForIban($scope.standardAccount.iban, vm.data.fromAccounts, 0)];
                if (vm.data.config.fromAccount.model !== currentFromAccount.iban) vm.data.config.fromAccount.model = currentFromAccount.iban;
                $scope.$apply()
            }
            function signalSuccess(response) {
                if (_.has(response, 'result.page')) {
                    var urlObj = {
                        url: 'pf-detail-efdomesticpayment',
                        type: 'JSON',
                        config: {
                            stateToGo: 'detail'
                        },
                        data: {
                            messages: response.messages,
                            result: response.result
                        }
                    };
                    pfWidgetFunctions.processUrlObject(urlObj)
                } else if (response.messages) {
                    $scope.messages = response.messages;
                    if ($scope.messages.errors) {
                        $scope.onConfirmation = function () {
                            baseWidget.reloadData()
                        };
                        $scope.message = $scope.messages.errors[0];
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
                    } else if ($scope.messages.success || $scope.messages.infos) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                    } else if ($scope.messages.notices) {
                        $scope.onConfirmation = function () {
                            gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                        };
                        $scope.widgetInstance.state.goState(pf.globals.states.widget.notice)
                    }
                }
            }
            function signalError() {
                $scope.onConfirmation = function onConfirmation() {
                    baseWidget.reloadData()
                };
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function createParams() {
                return {
                    fromAccountIban: vm.data.config.fromAccount.model,
                    toAccountNr: vm.data.config.toAccount.model,
                    amount: vm.data.amount.value
                }
            }
            function resetWidget() {
                vm.data.amount = {
                    value: ''
                };
                $scope.canGainFocus = true;
                baseWidget.setBusy(false)
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.message.fullKey = true;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            var baseWidget,
                formName = 'efretirementinpaymentForm',
                vm = {
                    data: {
                        config: {
                        },
                        formName: formName
                    },
                    actions: {
                    }
                },
                allDebitAccountsOptions,
                allCreditAccountsOptions,
                currentFromAccount;
            vm.actions.isValid = function isValid() {
                if (baseWidget.isBusy()) return false;
                else return vm.data[formName].$valid
            };
            vm.actions.fromSelectionChanged = function fromSelectionChanged(index) {
                currentFromAccount = $scope.debitAccounts[index]
            };
            vm.actions.callToAction = function callToAction() {
                var actionUrl = baseWidget.getActionUrl('SubmitInpayment', createParams());
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_SubmitTransfer', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                baseWidget.setBusy(true);
                restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function (response) {
                    resetWidget();
                    signalSuccess(response)
                }, function () {
                    resetWidget();
                    signalError()
                })
            };
            vm.actions.showDetailPageWithParams = function showDetailPageWithParams() {
                $scope.showDetailPage(void 0, createParams())
            };
            var wrapperFunction = productService.getWrapperFunctionForWidget(dataLoaded, errorCallback, [
                'result.creditAccounts',
                'result.debitAccounts'
            ]);
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            });
            _.assignIn(this, vm)
        }
        var angular = require('angular'),
            _ = require('lodash'),
            _ne = require('ne'),
            pfWidget = require('pf-widget'),
            restng = require('pf-shared-modules-rest_ng'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            productService = require('pf-shared-modules-productservice'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'efretirementinpayment',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('EfRetirementInpaymentController', EfRetirementInpaymentController);
        EfRetirementInpaymentController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efretirementinpayment/js/efretirementinpayment', function () {
});
!function () {
    'use strict';
    define('pf-widget-efscanandpay', [
        'require',
        'angular',
        'pf-widget',
        'pf-shared-modules-productservice',
        'pf-shared-modules-dropdowns',
        'pf-shared-modules-clientmessages',
        'pf-app-detect',
        'pf-sessiondata-userdata',
        'pf-angular-common',
        'directive-widget-dropdown'
    ], function (require) {
        function EfScanAndPayController($scope, widget, $state) {
            function onDataLoaded(data) {
                if ($scope.hasEUserMapping) $scope.view.hasPaymentSlips = data.result.hasPaymentSlips;
                else {
                    $scope.view.entries = dropdowns.buildAccountOptions(data.result.accounts);
                    $scope.data.account.model = data.result.accounts[data.result.activeAccount].iban
                }
                $scope.$apply()
            }
            function showScanner() {
                var urlOverrideParams = {
                    account: $scope.data.account.model
                };
                $scope.showDetailPage('Scanner', urlOverrideParams)
            }
            function showOverview() {
                $scope.showDetailPage('Overview')
            }
            function errorCallback() {
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            $scope.widgetInstanceId = widget.id;
            $scope.hasEUserMapping = userdata.hasEUserMapping;
            $scope.isApp = detect.isApp();
            $scope.showScanner = showScanner;
            $scope.showOverview = showOverview;
            $scope.view = {
            };
            $scope.data = {
                account: {
                }
            };
            var wrapperFunction = $scope.hasEUserMapping ? onDataLoaded : productService.getWrapperFunctionForWidget(onDataLoaded, errorCallback, [
                'result.accounts'
            ]);
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: wrapperFunction
            })
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            productService = require('pf-shared-modules-productservice'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            detect = require('pf-app-detect'),
            userdata = require('pf-sessiondata-userdata'),
            pfAngularCommon = require('pf-angular-common'),
            directiveDropdown = require('directive-widget-dropdown'),
            widgetName = 'efscanandpay',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveDropdown.moduleName
            ]);
        module.controller('EfScanAndPayController', EfScanAndPayController);
        EfScanAndPayController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/efscanandpay/js/efscanandpay', function () {
});
!function () {
    'use strict';
    define('pf-widget-fipogenericpageinfo', [
        'require',
        'angular',
        'pf-widget',
        'pf-angular-common',
        'directive-screen_key'
    ], function (require) {
        function FipoGenericPageInfoController($scope, widget, $state) {
            $scope.widgetInstanceId = widget.id;
            pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                errorWidgetUrl: pf.globals.urlprefix.BUNDLE + '/widgets/fipogenericpageinfo/error.html'
            })
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfAngularCommon = require('pf-angular-common'),
            directiveScreenKey = require('directive-screen_key'),
            widgetName = 'fipogenericpageinfo',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveScreenKey.moduleName
            ]);
        module.controller('FipoGenericPageInfoController', FipoGenericPageInfoController);
        FipoGenericPageInfoController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/fipogenericpageinfo/js/fipogenericpageinfo', function () {
});
!function () {
    'use strict';
    define('pf-widget-fipotoggleassetsview', [
        'require',
        'angular',
        'pf-widget',
        'pf-angular-common',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-pageloader',
        'directive-form-toggle_buttons',
        'pf-shared-modules-platform'
    ], function (require) {
        function FipoToggleAssetsViewController($scope, widget, $state, $timeout) {
            function ready() {
                $scope.loading = true;
                var actionUrl = baseWidget.getActionUrl('GetSettings', {
                });
                restng.getJson(actionUrl.url, actionUrl.params).then(function (data) {
                    dataLoaded(data)
                })
            }
            function dataLoaded(data) {
                $scope.basicSettings = {
                    assetsList: data.result.assetsList
                };
                $scope.$apply(function () {
                    $scope.loading = false
                })
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            $scope.change = function change() {
                $timeout(function () {
                    var params = {
                            basicSettings: JSON.stringify($scope.basicSettings)
                        },
                        actionUrl = baseWidget.getActionUrl('SaveSettings', params);
                    restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function () {
                        pageLoader.showLoader();
                        platform.clearUserDataCache().then(function () {
                            window.location.reload()
                        })
                    })
                })
            };
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onReady: ready
            })
        }
        var angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfAngularCommon = require('pf-angular-common'),
            restng = require('pf-shared-modules-rest_ng'),
            pageLoader = require('pf-shared-modules-pageloader'),
            directiveFormToggleButtons = require('directive-form-toggle_buttons'),
            platform = require('pf-shared-modules-platform'),
            widgetName = 'fipotoggleassetsview',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveFormToggleButtons.moduleName
            ]);
        module.controller('FipoToggleAssetsViewController', FipoToggleAssetsViewController);
        FipoToggleAssetsViewController.$inject = [
            '$scope',
            'widget',
            '$state',
            '$timeout'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/fipotoggleassetsview/js/fipotoggleassetsview', function () {
});
!function () {
    'use strict';
    define('pf-widget-pasoffers', [
        'require',
        'lodash',
        'ne',
        'angular',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-buttonbar_static',
        'directive-widget-teaser_slider_controls'
    ], function (require) {
        function PasOffersController($scope, $state, widget) {
            function showOptInDialog(source, id) {
                var detailPageUrl;
                if (id) detailPageUrl = $scope.widgetInstance.getActionUrl('GoToOfferDetail', {
                    customerOfferOid: id
                });
                else detailPageUrl = $scope.widgetInstance.getActionUrl('GoToOffersOverview');
                if ($scope.optIn) pfWidgetFunctions.openDetailPage(detailPageUrl);
                else {
                    var activationUrlObj = $scope.widgetInstance.getActionUrl('GoToBenefitActivation');
                    activationUrlObj.data = {
                        detailpageUrlObj: detailPageUrl
                    };
                    pfWidgetFunctions.processUrlObject(activationUrlObj)
                }
            }
            function dataLoaded() {
                if (2 === $scope.customerState) baseWidget.trackWebtrends('WT.ad', _ne.template('_li_ef_{platform}_{mappingKey}-mitAngebot', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                else if (3 === $scope.customerState) baseWidget.trackWebtrends('WT.ad', _ne.template('_li_ef_{platform}_{mappingKey}-ohneAngebot', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                var webtrendsIds = [
                ];
                _.forOwn($scope.rawData.customerOffers, function (value, key) {
                    var offer = value.offer;
                    webtrendsIds.push(_ne.template('EF_{platform}_Benefit_TE-{position}_{offer}', {
                        platform: platform.getPageName(),
                        position: key,
                        offer: offer.offerOID
                    }))
                });
                webtrendsIds.push(_ne.template('EF_{platform}_Benefit_overview', {
                    platform: platform.getPageName()
                }));
                baseWidget.trackWebtrends('WT.ad', webtrendsIds.join(';'))
            }
            function beforeDetailPage(event, args) {
                showOptInDialog(args.source);
                return false
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            var translate = translator.translate,
                completeLogoUrlForDemo = '',
                logoBaseUrl = '';
            $scope.offersInfoLink = translate('OffersInfoLink', $scope);
            if (platform.isDemo()) completeLogoUrlForDemo = pfWidgetFunctions.getActionUrl(widgetName, 'GetLogoImage').url;
            else logoBaseUrl = pfWidgetFunctions.getActionUrl(widgetName, 'GetLogoImage').url;
            $scope.getLogoUrl = function (logoId) {
                if (platform.isDemo()) return completeLogoUrlForDemo;
                else return logoBaseUrl + logoId
            };
            if (!platform.isMobile()) $scope.height = '155px';
            $scope.showOfferDetail = function ($event, pageIndex, offerIndex, customerOfferOid) {
                showOptInDialog($event.currentTarget, customerOfferOid);
                var webtrendsValue = _ne.template('EF_{platform}_Benefit_TE-{position}_{offer}', {
                    platform: platform.getPageName(),
                    position: pageIndex,
                    offer: customerOfferOid
                });
                baseWidget.trackWebtrends('WT.ac', webtrendsValue, 'WT.mc_id', webtrendsValue)
            };
            $scope.getWidgetState = function getWidgetState(customerOffers, optIn) {
                if (!_.isEmpty(customerOffers)) {
                    $scope.actionItemIcon = null;
                    return 'OFFERS'
                }
                if (optIn) {
                    $scope.actionItemIcon = pf.globals.icons.NO_OFFER;
                    return 'NO_OFFERS'
                }
                $scope.actionItemIcon = pf.globals.icons.HINT;
                return 'OPTIN'
            };
            $scope.goToOffersOverview = function goToOffersOverview($event) {
                showOptInDialog($event.currentTarget);
                var webtrendsValue = _ne.template('EF_{platform}_Benefit_overview', {
                    platform: platform.getPageName()
                });
                baseWidget.trackWebtrends('WT.ac', webtrendsValue, 'WT.mc_id', webtrendsValue)
            };
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: dataLoaded,
                beforeDetailPage: beforeDetailPage
            })
        }
        var _ = require('lodash'),
            _ne = require('ne'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            directiveWidgetTeaserSliderControls = require('directive-widget-teaser_slider_controls'),
            widgetName = 'pasoffers',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetButtonbarStatic.moduleName,
                directiveWidgetTeaserSliderControls.moduleName
            ]);
        module.controller('PasOffersController', PasOffersController);
        PasOffersController.$inject = [
            '$scope',
            '$state',
            'widget'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/pasoffers/js/pasoffers', function () {
});
!function () {
    'use strict';
    define('pf-widget-pfchonlinemortgage', [
        'require',
        'lodash',
        'angular',
        'moment',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-uisettings',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'directive-widget-buttonbar_static'
    ], function (require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(states.quickCheck, {
                template: '<div ng-include="quickCheckUrl"></div>'
            }).state(states.checkStatus, {
                template: '<div ng-include="checkStatusUrl"></div>'
            })
        }
        function PfchOnlineMortgageController($scope, widget, $state) {
            function initSettings() {
                $scope.settings = $scope.settings || {
                    applicationDate: null
                }
            }
            function createReadyFunction() {
                return _.once(function () {
                    var stateChangeDays = _.toNumber(translator.translate('ConfigStateChangeDays', $scope)),
                        stateChangeDate = moment().subtract(stateChangeDays, 'day');
                    if ($scope.settings.applicationDate && stateChangeDate.isBefore($scope.settings.applicationDate, 'day')) this.state.goState(states.checkStatus);
                    else this.state.goState(states.quickCheck)
                })
            }
            $scope.widgetInstanceId = widget.id;
            var widgetPath = pfWidgetFunctions.getWidgetPath(widgetName);
            $scope.quickCheckUrl = widgetPath + '/views/quickCheck.html';
            $scope.checkStatusUrl = widgetPath + '/views/checkStatus.html';
            uiSettings.getUiSettingsForWidget(widgetName).then(function success(data) {
                $scope.settings = data
            }).finally (function () {
                initSettings();
                pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    readyFunction: createReadyFunction()
                })
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moment = require('moment'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            uiSettings = require('pf-shared-modules-uisettings'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetButtonbarStatic = require('directive-widget-buttonbar_static'),
            widgetName = 'pfchonlinemortgage',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveWidgetButtonbarStatic.moduleName
            ]),
            states = pf.globals.states.pfchonlinemortgage;
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        module.controller('PfchOnlineMortgageController', PfchOnlineMortgageController);
        PfchOnlineMortgageController.$inject = [
            '$scope',
            'widget',
            '$state'
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/pfchonlinemortgage/js/pfchonlinemortgage', function () {
});
!function () {
    'use strict';
    define('pf-widget-traccounttransfer', [
        'require',
        'ne',
        'angular',
        'pf-shared-modules-clientmessages',
        'pf-shared-services-dialogservice',
        'pf-shared-modules-dropdowns',
        'pf-widget',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-productservice',
        'pf-shared-modules-products',
        'pf-shared-modules-rest_ng',
        'pf-sessiondata-userdata',
        'pf-shared-modules-validator',
        'pf-angular-common',
        'directive-account_label',
        'directive-widget-dropdown',
        'directive-screen_key',
        'directive-widget-text_input_with_currency',
        'directive-widget-buttonbar_dynamic'
    ], function (require) {
        function TrAccountTransferController($scope, $state, $timeout, widget, DialogService) {
            function onDataLoaded() {
                if ($scope.data[formName]) $scope.data[formName].$setPristine();
                resetWidget();
                allDebitAccountsOptions = dropdowns.extendAndBuildAccountOptions($scope.debitAccounts);
                allCreditAccountsOptions = dropdowns.extendAndBuildAccountOptions($scope.creditAccounts);
                _.forEach(allDebitAccountsOptions, overrideEntryValue);
                _.forEach(allCreditAccountsOptions, overrideEntryValue);
                $scope.viewModel = {
                    data: {
                        debitAccount: '',
                        creditAccount: '',
                        currency: {
                            value: ''
                        },
                        amount: {
                            value: void 0
                        }
                    },
                    fromAccounts: allDebitAccountsOptions,
                    toAccounts: allCreditAccountsOptions,
                    currencies: $scope.currencies
                };
                currentDebitAccount = $scope.debitAccounts[findIndex(userData.standardAccount.iban, allDebitAccountsOptions, 0)];
                updateFromSelectedDebitAccount()
            }
            function overrideEntryValue(entry) {
                if (8 === entry.account.type && 0 !== entry.account.subType) entry.value = getTrAccountIdentifier(entry.account)
            }
            function getTrAccountIdentifier(account) {
                return account.nr + '_' + account.currency
            }
            function findIndex(accountNumber, accountArr, defaultValue) {
                var index = _.findIndex(accountArr, {
                    value: accountNumber
                });
                return index >= 0 ? index : defaultValue
            }
            function isTradingAccount(account) {
                return 'sqetrading' === products.getInstanceType(account)
            }
            function updateCurrency() {
                $scope.viewModel.data.currency.value = isTradingAccount(currentDebitAccount) ? currentDebitAccount.currency : currentCreditAccount.currency
            }
            function updateAvailableCreditAccounts() {
                if ('sqetrading' !== products.getInstanceType(currentDebitAccount)) $scope.viewModel.toAccounts = _.filter(allCreditAccountsOptions, function (option) {
                    return 'sqetrading' === products.getInstanceType(option.account)
                });
                else $scope.viewModel.toAccounts = _.filter(allCreditAccountsOptions, function (option) {
                    return 'sqetrading' !== products.getInstanceType(option.account)
                })
            }
            function updateSelectedAccounts() {
                $scope.viewModel.data.debitAccount = isTradingAccount(currentDebitAccount) ? getTrAccountIdentifier(currentDebitAccount)  : currentDebitAccount.iban;
                currentCreditAccount = $scope.viewModel.toAccounts[0].account;
                $scope.viewModel.data.creditAccount = isTradingAccount(currentCreditAccount) ? getTrAccountIdentifier(currentCreditAccount)  : currentCreditAccount.iban
            }
            function updateFromSelectedDebitAccount() {
                updateAvailableCreditAccounts();
                updateSelectedAccounts();
                updateCurrency()
            }
            function signalSuccess(response) {
                if (_.has(response, 'messages.infos') || _.has(response, 'messages.errors')) {
                    var params = {
                            debitAccount: $scope.viewModel.data.debitAccount,
                            creditAccount: $scope.viewModel.data.creditAccount,
                            amount: $scope.viewModel.data.amount.value
                        },
                        urlObj = baseWidget.getDetailUrls(params);
                    urlObj.params.messages = response.messages;
                    pfWidgetFunctions.openDetailPage(urlObj)
                } else if (_.has(response, 'result.confirmationDialog')) handleConfirmationDialog(response.result.confirmationDialog);
                else if (_.has(response, 'messages.success')) {
                    $scope.messages = response.messages;
                    $scope.onConfirmation = function () {
                        gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                    };
                    $scope.widgetInstance.state.goState(pf.globals.states.widget.info)
                }
            }
            function handleConfirmationDialog(confirmationDialog) {
                if (_.has(confirmationDialog, 'data.creditAccount')) productService.extendAccount(confirmationDialog.data.creditAccount);
                if (_.has(confirmationDialog, 'data.debitAccount')) productService.extendAccount(confirmationDialog.data.debitAccount);
                var configObj = {
                        templateUrl: 'exchangeRate' === confirmationDialog.type ? pf.globals.urlprefix.BUNDLE + '/templates/overlay/exchangeRateConfirmation.html' : void 0,
                        isSmall: false,
                        data: confirmationDialog.data,
                        context: $scope.widgetInstanceId + '-' + confirmationDialog.type
                    },
                    config = DialogService.getConfirmDialogConfig(_.upperFirst(confirmationDialog.type), $scope, null, configObj),
                    dialog = DialogService.confirm(config);
                if (dialog) dialog.result.then(function (value) {
                    if (value) {
                        $scope.viewModel.data.dialogType = confirmationDialog.type;
                        callToAction()
                    }
                })
            }
            function signalError() {
                $scope.onConfirmation = function onConfirmation() {
                    baseWidget.reloadData()
                };
                $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                $scope.widgetInstance.state.goState(pf.globals.states.widget.error)
            }
            function isValid() {
                if (baseWidget.isBusy()) return false;
                else return $scope.data[formName].$valid
            }
            function callToAction() {
                var debitAccount = $scope.viewModel.data.debitAccount,
                    creditAccount = $scope.viewModel.data.creditAccount,
                    params = {
                        amount: $scope.viewModel.data.amount.value,
                        dialogType: $scope.viewModel.data.dialogType
                    };
                if (validator.isIban(debitAccount)) {
                    params.fromAccountIban = debitAccount;
                    var creditDepotInfo = _.split(creditAccount, '_');
                    params.toDepotNr = creditDepotInfo[0];
                    params.depotCurrency = creditDepotInfo[1]
                } else {
                    params.toAccountIban = creditAccount;
                    var debitDepotInfo = _.split(debitAccount, '_');
                    params.fromDepotNr = debitDepotInfo[0];
                    params.depotCurrency = debitDepotInfo[1]
                }
                var actionUrl = baseWidget.getActionUrl('SubmitTransfer', params);
                baseWidget.trackWebtrends('WT.ac', _ne.template('_li_ef_{platform}_{mappingKey}_SubmitTransfer', {
                    platform: platform.getPageName(),
                    mappingKey: baseWidget.i18n.mappingKey
                }));
                baseWidget.setBusy(true);
                restng.postFormData2Json(actionUrl.url, actionUrl.params).then(function success(response) {
                    signalSuccess(response);
                    resetWidget()
                }, function failure() {
                    resetWidget();
                    signalError()
                })
            }
            function openDetailPageWithParams() {
                clearMessages();
                var params = {
                        debitAccount: $scope.viewModel.data.debitAccount,
                        creditAccount: $scope.viewModel.data.creditAccount,
                        amount: $scope.viewModel.data.amount.value,
                        currency: $scope.viewModel.data.currency.value
                    },
                    urlObj = baseWidget.getDetailUrls(params);
                baseWidget.openDetailPage(urlObj)
            }
            function resetWidget() {
                $timeout(function () {
                    $scope.viewModel.data.amount = {
                        value: ''
                    };
                    $scope.canGainFocus = true;
                    baseWidget.setBusy(false);
                    if ($scope.data && $scope.data[$scope.view.formName]) $scope.data[$scope.view.formName].$setPristine()
                })
            }
            function clearMessages() {
                $scope.messages = null
            }
            var baseWidget;
            $scope.widgetInstanceId = widget.id;
            $scope.isValid = isValid;
            $scope.callToAction = callToAction;
            $scope.openDetailPageWithParams = openDetailPageWithParams;
            var formName = 'traccounttransferForm';
            $scope.data = {
            };
            $scope.view = {
                formName: formName
            };
            var currentDebitAccount,
                currentCreditAccount,
                allDebitAccountsOptions,
                allCreditAccountsOptions;
            $scope.fromSelectionChanged = function fromSelectionChanged(item) {
                currentDebitAccount = item.account;
                updateFromSelectedDebitAccount()
            };
            $scope.toSelectionChanged = function toSelectionChanged(item) {
                currentCreditAccount = item.account;
                updateCurrency()
            };
            baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                onDataLoaded: onDataLoaded
            })
        }
        var _ne = require('ne'),
            angular = require('angular'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            dialogService = require('pf-shared-services-dialogservice'),
            dropdowns = require('pf-shared-modules-dropdowns'),
            pfWidget = require('pf-widget'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            productService = require('pf-shared-modules-productservice'),
            products = require('pf-shared-modules-products'),
            restng = require('pf-shared-modules-rest_ng'),
            userData = require('pf-sessiondata-userdata'),
            validator = require('pf-shared-modules-validator'),
            pfAngularCommon = require('pf-angular-common'),
            directiveAccountLabel = require('directive-account_label'),
            directiveDropdown = require('directive-widget-dropdown'),
            directiveScreenKey = require('directive-screen_key'),
            directiveWidgetTextInputWithCurrency = require('directive-widget-text_input_with_currency'),
            directiveWidgetButtonbarDynamic = require('directive-widget-buttonbar_dynamic'),
            widgetName = 'traccounttransfer',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                directiveAccountLabel.moduleName,
                directiveDropdown.moduleName,
                directiveScreenKey.moduleName,
                directiveWidgetTextInputWithCurrency.moduleName,
                directiveWidgetButtonbarDynamic.moduleName
            ]);
        module.controller('TrAccountTransferController', TrAccountTransferController);
        dialogService.register(module);
        TrAccountTransferController.$inject = [
            '$scope',
            '$state',
            '$timeout',
            'widget',
            dialogService.name
        ];
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/traccounttransfer/js/traccounttransfer', function () {
});
!function () {
    'use strict';
    define('pf-widget-trappbridge', [
        'require',
        'angular',
        'angular-dynamic-module',
        'pf-widget',
        'pf-shared-modules-urls',
        'pf-shared-modules-util',
        'pf-shared-modules-detail_page_states',
        'pf-shared-modules-detailpages-detail_page_type_json',
        'pf-shared-modules-translator',
        'pf-angular-common',
        'pf-angular-directives-detailpages'
    ], function (require) {
        function TrAppBridgeController($scope, $state, widget, $timeout) {
            function onReady() {
                initAccountTransfer()
            }
            function initAccountTransfer() {
                detailPageRendererJson = new DetailPageTypeJson;
                detailPageRendererJson.init({
                    module: module,
                    scope: $scope
                });
                var urlObj = $scope.widgetInstance.getDetailUrls();
                detailPageRendererJson.loadDetailPage(urlObj).then(function () {
                    $timeout(function () {
                        $scope.$apply()
                    })
                })
            }
            $scope.widgetInstanceId = widget.id;
            var hashState = util.deparamUrl(),
                actionKey = hashState['/trading'],
                detailPageRendererJson,
                translate = translator.translate;
            $scope.openHelpWindow = urls.openHelpUrl;
            var hashChangeFn = function hashChangeFn() {
                var hashStateTr = util.deparamUrl(),
                    trading = hashStateTr['/trading'];
                $scope.showAccountTransfer = util.hasValue(trading) && 'transfer' === actionKey
            };
            hashChangeFn();
            if (!$scope.showAccountTransfer) try {
                gadgets.pubsub.publish(pf.globals.pubsub.SHOW_PAGE_LOADER)
            } finally {
                $timeout(function () {
                    gadgets.pubsub.publish(pf.globals.pubsub.HIDE_PAGE_LOADER)
                }, 1250)
            }
            var baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    onReady: onReady
                }),
                linkObj = baseWidget.helpUrl;
            if (linkObj) $timeout(function () {
                $scope.helpLink = linkObj;
                $scope.helpText = translate('DetailHelpText', $scope)
            })
        }
        var angular = require('angular'),
            ExtensionUtils = require('angular-dynamic-module'),
            pfWidget = require('pf-widget'),
            urls = require('pf-shared-modules-urls'),
            util = require('pf-shared-modules-util'),
            detailPageStates = require('pf-shared-modules-detail_page_states'),
            DetailPageTypeJson = require('pf-shared-modules-detailpages-detail_page_type_json'),
            translator = require('pf-shared-modules-translator'),
            pfAngularCommon = require('pf-angular-common'),
            pfAngularDirectivesDetailpages = require('pf-angular-directives-detailpages'),
            widgetName = 'trappbridge',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                pfAngularDirectivesDetailpages.moduleName
            ]);
        module.controller('TrAppBridgeController', TrAppBridgeController);
        TrAppBridgeController.$inject = [
            '$scope',
            '$state',
            'widget',
            '$timeout'
        ];
        ExtensionUtils.enableDynamicCreation(module);
        detailPageStates.registerDefaultStates(module);
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/trappbridge/js/trappbridge', function () {
});
!function () {
    'use strict';
    define('pf-widget-trcontent', [
        'require',
        'lodash',
        'angular',
        'angular-dynamic-module',
        'pf-widget',
        'pf-sessiondata-userdata',
        'pf-shared-modules-platform',
        'pf-shared-modules-urls',
        'pf-shared-modules-util',
        'pf-shared-modules-detail_page_states',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-translator',
        'pf-shared-modules-loggerfactory',
        'pf-shared-modules-detailpages-detail_page_type_json',
        'pf-angular-common',
        'pf-angular-directives-detailpages'
    ], function (require) {
        function TrContentController($scope, $state, $timeout, $rootScope, widget, $q, $window) {
            function dataLoaded(data) {
                if (!$scope.model.selectedDepot) {
                    var selectedDepot = getSelectedDepotByUser(data.result.currentSqbUserId),
                        sqbUserId = $scope.depotList[0].user;
                    if (null === selectedDepot) {
                        var postData = {
                                defaultSqbUserId: sqbUserId
                            },
                            call1 = restng.postJson(baseWidget.getActionUrl('ChangePortfolio').url, postData, null, true),
                            data2 = {
                                sqid: sqbUserId
                            },
                            call2 = doSwitchUserCall(data2).then(function success() {
                                if (iFrameInitialized) SQFox.iFrame.src = getiFrameUrl()
                            }, function failure() {
                                $scope.goToErrorState()
                            }),
                            all = $q.all([call1.promise,
                                call2.promise]);
                        all.then(function () {
                            $window.location.reload()
                        })
                    } else $scope.model.selectedDepot = getSelectedDepotByUser(data.result.currentSqbUserId)
                }
            }
            function getSelectedDepotByUser(currentSqbUserId) {
                for (var i = 0; i < $scope.depotList.length; i++) if ($scope.depotList[i].user === currentSqbUserId) return $scope.depotList[i];
                return null
            }
            function getSelectedDepotByContract(contractNr) {
                for (var selectedDepot = $scope.depotList[0], i = 0; i < $scope.depotList.length; i++) if ($scope.depotList[i].contract === contractNr) selectedDepot = $scope.depotList[i];
                return selectedDepot
            }
            function getiFrameUrl() {
                var url = sqEtBaseURL + indexResource,
                    urlParamPosition = window.location.href.indexOf('?');
                if (urlParamPosition > 0) url += window.location.href.slice(urlParamPosition);
                return url
            }
            function initiFrame() {
                if (window.SQFox) {
                    $scope.resetErrorState();
                    try {
                        SQFox.init(getiFrameUrl(), '#tradingIFrame', initializationCallback, pf.globals.widgets.trcontent.HEADER_HEIGTH + pf.globals.widgets.trcontent.FOOTER_HEIGTH);
                        isIframeInitialising = true
                    } catch (error) {
                        LOG.error('Trading iFrame could not be initialized. Reason is: {0}', [
                            error.message
                        ]);
                        $scope.goToErrorState()
                    }
                } else {
                    LOG.error('Trading iFrame could not be initialized as the JavaScript Library \'SQFox\' Object is not available!');
                    $scope.goToErrorState()
                }
            }
            function initializationCallback() {
                iFrameInitialized = true;
                isIframeInitialising = false;
                if (initialNavigationKey) {
                    doTradingNavigation(initialNavigationKey);
                    initialNavigationKey = null
                }
            }
            function initDeeplinkListener() {
                window.on(pf.globals.events.HASH_CHANGE, hashChangeFn);
                if (util.hasValue(window.location.hash)) window.trigger(pf.globals.events.HASH_CHANGE)
            }
            function doTradingNavigation(actionKey) {
                if (actionKey !== transferActionKey) gadgets.pubsub.publish(pf.globals.pubsub.CLOSE_DETAIL_PAGE_POPUP, null);
                $scope.resetErrorState();
                LOG.debug('Tradingnavigation to: {0}', [
                    actionKey
                ]);
                if (detailPageRendererJson) $rootScope.$broadcast(pf.globals.events.RESET_UI_STATE);
                if (actionKey === transferActionKey) {
                    if (!detailPageRendererJson) initDetailPageRendererJson();
                    var urlObj = baseWidget.getDetailUrls();
                    detailPageRendererJson.loadDetailPage(urlObj).then(function () {
                        $timeout(function () {
                            $scope.$apply()
                        })
                    })
                } else if (iFrameInitialized && !isIframeInitialising) {
                    $timeout(function () {
                        $scope.includePath = null
                    });
                    var navigationFunction = SQFox.actions[actionKey];
                    if (navigationFunction) navigationFunction();
                    else {
                        LOG.error('Trading navigation not available: {0}', [
                            actionKey
                        ]);
                        $scope.goToErrorState()
                    }
                } else {
                    initialNavigationKey = actionKey;
                    $timeout(function () {
                        $scope.includePath = null
                    })
                }
                resetPageLoader()
            }
            function resetPageLoader() {
                $timeout(function () {
                    gadgets.pubsub.publish(pf.globals.pubsub.HIDE_PAGE_LOADER)
                }, 300)
            }
            function initDetailPageRendererJson() {
                detailPageRendererJson = new DetailPageTypeJson;
                detailPageRendererJson.init({
                    module: module,
                    scope: $scope
                })
            }
            function switchTradingContract(depotNumber) {
                var wasDepotSwitched = false,
                    hasMoreThanOneContract = _.size(userData.sqContractList) > 1;
                if (depotNumber && hasMoreThanOneContract) {
                    $scope.model.selectedDepot = getSelectedDepotByContract(depotNumber);
                    var data = {
                        sqid: $scope.model.selectedDepot.user
                    };
                    doSwitchUserCall(data).then(function success() {
                        loadSQLibraries()
                    }, function failure() {
                        $scope.goToErrorState()
                    });
                    wasDepotSwitched = true
                }
                return wasDepotSwitched
            }
            function doSwitchUserCall(data) {
                cleariFrameContent();
                return restng.getJson(baseWidget.getActionUrl('SwitchUser').url, data)
            }
            function cleariFrameContent() {
                if (iFrameInitialized) if (SQFox.unload) SQFox.unload();
                else SQFox.iFrame.src = 'about:blank'
            }
            function errorTRLib() {
                LOG.error('Trading iFrame could not be initialized as the JavaScript Library iFrameResizer or the \'SQFox\' Object are not available!');
                $timeout(function () {
                    $scope.goToErrorState()
                })
            }
            function loadSQLibraries() {
                restng.getScriptResource(iFrameResizeScript).then(function success() {
                    requireAsync([iFrameResizeScript,
                        sqFoxLib], function successTRLib(iFrameResize) {
                        window.iFrameResize = iFrameResize;
                        if (!iFrameInitialized && !isIframeInitialising) initiFrame()
                    }, errorTRLib)
                }, function failure() {
                    errorTRLib()
                })
            }
            $scope.widgetInstanceId = widget.id;
            $scope.widgetName = widgetName;
            $scope.textKey = 'widgets.' + $scope.widgetName;
            var LOG = loggerFactory.getLogger('TRContent'),
                trBaseUrl = platform.getTrUrl(),
                iFrameResizeScript = trBaseUrl + '/js/pf/iframeResizer.js',
                sqFoxLib = trBaseUrl + '/js/pf/sq-fox.js',
                indexResource = '/index.action',
                sqEtBaseURL = platform.getTrUrl(),
                iFrameInitialized = false,
                isIframeInitialising = false,
                initialNavigationKey = null,
                detailPageRendererJson,
                navigationKey = 'trading',
                transferActionKey = 'transfer',
                guidedTourAction = 'guidedTour',
                translate = translator.translate;
            gadgets.pubsub.subscribe(pf.globals.pubsub.TRADING_NAVIGATION, doTradingNavigation);
            $scope.model = {
            };
            $scope.openHelpWindow = urls.openHelpUrl;
            $scope.getDepotLabel = function getDepotLabel(depot) {
                return depot.contract + ' ' + depot.description
            };
            $scope.depotList = userData.sqContractList;
            $scope.updateDepot = function updateDepot() {
                var data = {
                    sqid: $scope.model.selectedDepot.user
                };
                doSwitchUserCall(data).then(function success() {
                    if (iFrameInitialized) SQFox.iFrame.src = getiFrameUrl()
                }, function failure() {
                    $scope.goToErrorState()
                })
            };
            var hashChangeFn = function hashChangeFn() {
                var hashState = util.deparamUrl(),
                    tradingKeyFirstPosition = hashState['/' + navigationKey],
                    tradingKeyAnyOtherPosition = hashState[navigationKey],
                    trading = tradingKeyFirstPosition || tradingKeyAnyOtherPosition,
                    guidedTour = angular.isDefined(hashState['/' + pf.globals.parameters.hash.GUIDED_TOUR]);
                if (guidedTour) {
                    doTradingNavigation(guidedTourAction);
                    window.location.hash = ''
                } else if (util.hasValue(trading)) {
                    doTradingNavigation(trading);
                    window.location.hash = ''
                }
            };
            $scope.showErrorContent = function showErrorContent() {
                return $scope.model.messages && !$scope.includePath
            };
            $scope.goToErrorState = function goToErrorState() {
                $scope.hasErrorState = true;
                $scope.model.messages = clientMessage.createErrorMessage('EtradingGeneralError', false, void 0, false).messages
            };
            $scope.resetErrorState = function resetErrorState() {
                $scope.hasErrorState = false;
                $scope.model.messages = null
            };
            $scope.$on('$destroy', function () {
                gadgets.pubsub.unsubscribe(pf.globals.pubsub.TRADING_NAVIGATION, doTradingNavigation)
            });
            var baseWidget = pfWidget.BaseWidget(widgetName, widget, $scope, $state, {
                    onDataLoaded: dataLoaded
                }),
                linkObj = baseWidget.helpUrl;
            if (linkObj) $timeout(function () {
                $scope.helpLink = linkObj;
                $scope.helpText = translate('DetailHelpText', $scope)
            });
            var hashState = util.deparamUrl(),
                depotParamName = 'p_depot_nr',
                depotParamNameFirstPosition = hashState['/' + depotParamName],
                depotParamNameAnyOtherPosition = hashState[depotParamName],
                depotNr = depotParamNameFirstPosition || depotParamNameAnyOtherPosition;
            initDeeplinkListener();
            if (depotNr) window.location.hash = '';
            if (!switchTradingContract(depotNr) && !platform.isMobile()) loadSQLibraries()
        }
        var _ = require('lodash'),
            angular = require('angular'),
            ExtensionUtils = require('angular-dynamic-module'),
            pfWidget = require('pf-widget'),
            userData = require('pf-sessiondata-userdata'),
            platform = require('pf-shared-modules-platform'),
            urls = require('pf-shared-modules-urls'),
            util = require('pf-shared-modules-util'),
            detailPageStates = require('pf-shared-modules-detail_page_states'),
            restng = require('pf-shared-modules-rest_ng'),
            clientMessage = require('pf-shared-modules-clientmessages'),
            translator = require('pf-shared-modules-translator'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            DetailPageTypeJson = require('pf-shared-modules-detailpages-detail_page_type_json'),
            pfAngularCommon = require('pf-angular-common'),
            pfAngularDirectivesDetailpages = require('pf-angular-directives-detailpages'),
            widgetName = 'trcontent',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
                pfAngularCommon.moduleName,
                pfAngularDirectivesDetailpages.moduleName
            ]);
        module.controller('TrContentController', TrContentController);
        TrContentController.$inject = [
            '$scope',
            '$state',
            '$timeout',
            '$rootScope',
            'widget',
            '$q',
            '$window'
        ];
        ExtensionUtils.enableDynamicCreation(module);
        detailPageStates.registerDefaultStates(module);
        return function bootstrap(widget) {
            module.value('widget', widget);
            angular.bootstrap(widget.body, [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/widgets/trcontent/js/trcontent', function () {
});
!function () {
    'use strict';
    define('pf-shared-services-dialogservice', [
        'require',
        'lodash',
        'jquery',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-shared-modules-focus',
        'pf-app-detect',
        'pf-shared-modules-phone',
        'pf-shared-modules-detailstateservice',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        var _ = require('lodash'),
            jQuery = require('jquery'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            focus = require('pf-shared-modules-focus'),
            detect = require('pf-app-detect'),
            phone = require('pf-shared-modules-phone'),
            detailStateService = require('pf-shared-modules-detailstateservice'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            factoryImplementation = function ($rootScope, $compile, $q, $timeout, $filter, $rootElement) {
                function Overlay(data) {
                    function getOverlayType(dialogData) {
                        return dialogData.overlayType || pf.globals.overlay.overlayType.DIALOG
                    }
                    function getIdentifier(dialogData) {
                        return dialogData.template || dialogData.templateUrl
                    }
                    function createTemplateFromUrl(templateUrl) {
                        return '<div ng-include="\'' + templateUrl + '\'" onload="onTemplateLoad()"></div>'
                    }
                    var self = this;
                    this.data = data;
                    this.deferred = $q.defer();
                    this.overlayType = getOverlayType(this.data);
                    this.identifier = getIdentifier(this.data);
                    this.scope = $rootScope.$new(false);
                    this.scope.textKey = data.textKey || 'global';
                    this.scope.isSmall = data.isSmall;
                    this.scope.isLarge = data.isLarge;
                    this.scope.isLightBrown = data.isLightBrown;
                    this.scope.isDetailPage = data.isDetailPage;
                    this.helper = new OverlayHelper(this, this.scope, this.deferred, data);
                    this.template = null;
                    this.isShowing = false;
                    this.show = function show() {
                        if (!this.isShowing) {
                            this.scope.isMobile = platform.isMobile();
                            switch (this.overlayType) {
                                case pf.globals.overlay.overlayType.DIALOG:
                                    this.scope.showCloseButton = false;
                                    break;
                                case pf.globals.overlay.overlayType.CONTENT_OVERLAY:
                                    this.scope.showCloseButton = true;
                                    this.scope.close = function () {
                                        self.helper.cancel()
                                    };
                                    break;
                                default:
                                    LOG.error('Unrecognised parameter overlayType: {0}', [
                                        this.overlayType
                                    ])
                            }
                            this.createSimpleOverlay();
                            this.isShowing = true
                        }
                        return this.deferred.promise
                    }.bind(this);
                    this.hide = function hide() {
                        this.helper.hide()
                    }.bind(this);
                    this.createSimpleOverlay = function createSimpleOverlay() {
                        var template = this.data.template;
                        if (this.data.templateUrl && !template) template = createTemplateFromUrl(this.data.templateUrl);
                        if (_.isFunction(this.data.controller)) this.data.controller(this.scope, this.helper, $timeout, this.data.$state, $filter);
                        this.template = template;
                        this.insertDialog()
                    };
                    this.insertDialog = function insertDialog() {
                        this.helper.element = jQuery([wrapperTemplateBefore,
                            this.template,
                            wrapperTemplateAfter].join(''));
                        if (detect.browser.isFirefox) setTargetVisibility(this.data.focusOnReturn, false);
                        if (_.isEmpty($rootElement)) if (detailStateService.isOverlayOpen()) $rootElement = jQuery('div[data-pid=\'instance-efmaster-efgenericoverlay\']').find('div.bp-widget-body');
                        else if (detailStateService.isPopupOpen()) $rootElement = jQuery('div[data-pid=\'instance-efmaster-popup\']').find('div.bp-widget-body');
                        if (_.isEmpty($rootElement)) {
                            document.body.appendChild($compile(this.helper.element) (this.scope) [0]);
                            $htmlElement.addClass(classes.hasDialogOnHtml)
                        } else {
                            jQuery($rootElement).find('div.detail_overlay').addClass(classes.hasDialogOnHtml);
                            var content = jQuery($rootElement).find('div.detail_content').parent();
                            if (0 === content.length) content = jQuery($rootElement).find('div.widget--innercontent').parent();
                            content.append($compile(this.helper.element) (this.scope) [0])
                        }
                        $timeout(function () {
                            this.helper.element.show()
                        }.bind(this))
                    };
                    this.scope.onTemplateLoad = function onTemplateLoad() {
                        if (_.isFunction(data.onLoad)) data.onLoad()
                    };
                    return {
                        show: self.show,
                        hide: self.hide,
                        type: self.overlayType,
                        identifier: self.identifier
                    }
                }
                function OverlayHelper(element, scope, deferred, data) {
                    function isInitialState(state) {
                        return state.state === pf.globals.states.detailpage.initial
                    }
                    function isFocusTitle(toState, fromState) {
                        if (toState.data) {
                            var focusTitle = toState.data.focusTitle;
                            if (!_.isUndefined(toState.data.focusTitleFromState) && _.isFunction(toState.data.focusTitleFromState.indexOf)) focusTitle = _.includes(toState.data.focusTitleFromState, fromState.name) || focusTitle;
                            return focusTitle
                        }
                        return false
                    }
                    this.element = element;
                    this.scope = scope;
                    this.deferred = deferred;
                    this.state = pf.globals.states.detailpage.initial;
                    var onClose = data.onClose,
                        focusOnReturn = data.focusOnReturn,
                        focusFunction = data.focusFunction,
                        unbindStatechange = this.scope.$on('$stateChangeSuccess', function (event, toState, toArgs, fromState) {
                            var doFocus = !isInitialState(this) && !isInitialState({
                                    state: toState.name
                                }),
                                focusTitle = isFocusTitle(toState, fromState);
                            if (doFocus) var unlistenFocus = this.scope.$on('$viewContentLoaded', function () {
                                if (!_.isUndefined(toState.data) && _.isFunction(toState.data.focusFunction)) toState.data.focusFunction();
                                else focus.detailOverlayFocus(focusTitle);
                                unlistenFocus()
                            });
                            this.state = toState.name
                        }.bind(this));
                    this.scope.$on('$destroy', function () {
                        unbindStatechange()
                    });
                    this.hide = function hide(val) {
                        if (this.deferred) this.deferred.resolve(val);
                        this.hideWaitRemove()
                    };
                    this.cancel = function cancel(val) {
                        if (this.deferred) this.deferred.resolve(val);
                        this.hideWaitRemove()
                    };
                    this.hideWaitRemove = function hideWaitRemove() {
                        var self = this;
                        gadgets.pubsub.publish(pf.globals.pubsub.CLOSED_DIALOG, this.deferred.promise);
                        self.element.hide();
                        if (_.isEmpty($rootElement)) $htmlElement.removeClass(classes.hasDialogOnHtml);
                        else jQuery($rootElement).find('div.detail_overlay').removeClass(classes.hasDialogOnHtml);
                        if (detect.browser.isFirefox) setTargetVisibility(focusOnReturn, true);
                        $timeout(function () {
                            self.scope.$destroy();
                            self.element.remove();
                            if (focusOnReturn) focus.focusElement(focusOnReturn);
                            else if (_.isFunction(focusFunction)) focusFunction();
                            else focus.detailpageFocus(true);
                            if (_.isFunction(onClose)) onClose()
                        })
                    }
                }
                function setTargetVisibility(element, visibility) {
                    if (_.isElement(element)) if (visibility) element.style.visibility = 'visible';
                    else element.style.visibility = 'hidden'
                }
                function canOpen(type) {
                    return !util.hasValue(pageOverlays[type])
                }
                function createDialog(overlay) {
                    var type = overlay.type;
                    if (canOpen(type)) {
                        pageOverlays[type] = overlay;
                        pageOverlayTimestamps[type] = Date.now();
                        var promise = overlay.show();
                        promise.finally (function () {
                            pageOverlays[type] = null;
                            pageOverlayTimestamps[type] = null
                        });
                        return {
                            overlay: overlay,
                            result: promise
                        }
                    }
                    var diff = Date.now() - pageOverlayTimestamps[type];
                    if (pageOverlays[type].identifier !== overlay.identifier || diff > pf.globals.settings.OVERLAY_OPEN_DELAY) LOG.error('Tried to open a dialog of type {0}, but there already is one. Existing is {1} (since {2} ms), new is {3}. No new overlay created.', [
                        type,
                        pageOverlays[type].identifier,
                        diff,
                        overlay.identifier
                    ]);
                    return null
                }
                function getConfirmDialogConfig(actionKey, scope, event, configObj) {
                    var preparedKeys = {
                        titleKey: _.get(configObj, 'titleKey') || 'Dialog' + actionKey,
                        contentKey: _.get(configObj, 'contentKey') || 'scrDialog_' + actionKey,
                        acceptButtonKey: _.get(configObj, 'acceptButtonKey') || 'Confirm',
                        cancelButtonKey: _.get(configObj, 'cancelButtonKey') || 'Cancel'
                    };
                    return {
                        translationScope: scope,
                        context: _.get(configObj, 'context'),
                        titleKey: preparedKeys.titleKey,
                        contentKey: preparedKeys.contentKey,
                        acceptButtonKey: preparedKeys.acceptButtonKey,
                        cancelButtonKey: preparedKeys.cancelButtonKey,
                        isSmall: _.get(configObj, 'isSmall'),
                        focusOnReturn: _.get(configObj, 'focusOnReturn') || _.get(event, 'target'),
                        focusFunction: _.get(configObj, 'focusFunction'),
                        templateUrl: _.get(configObj, 'templateUrl'),
                        data: _.get(configObj, 'data')
                    }
                }
                function openConfirmDialog(config) {
                    var controller = function (scope, helper) {
                            scope.translationScope = config.translationScope;
                            scope.context = config.context;
                            scope.keys = {
                                titleKey: config.titleKey,
                                contentKey: config.contentKey,
                                acceptButtonKey: config.acceptButtonKey,
                                cancelButtonKey: config.cancelButtonKey
                            };
                            scope.data = config.data;
                            if (false !== config.isSmall) scope.isSmall = true;
                            scope.buttonClicked = function (val) {
                                helper.hide(val)
                            }
                        },
                        confirmDialog = new Overlay({
                            focusOnReturn: config.focusOnReturn,
                            focusFunction: config.focusFunction,
                            templateUrl: config.templateUrl,
                            template: !config.templateUrl ? confirmTemplate : void 0,
                            controller: controller,
                            overlayType: pf.globals.overlay.overlayType.DIALOG
                        });
                    return createDialog(confirmDialog)
                }
                function absDialog(cancelFn) {
                    var absScope,
                        controller = function (scope, helper) {
                            scope.titleKey = 'AbsTitle';
                            scope.showCancelBtn = true;
                            scope.disableCancelBtn = false;
                            scope.closeDialog = function (val) {
                                helper.hide(val)
                            };
                            scope.cancelSigningProcess = function () {
                                scope.disableCancelBtn = true;
                                if (_.isFunction(cancelFn)) cancelFn()
                            };
                            scope.showCloseButton = false;
                            scope.showLoader = true;
                            absScope = scope;
                            scope.$on('$destroy', function () {
                                gadgets.pubsub.publish(pf.globals.pubsub.CLOSED_ABS_DIALOG)
                            })
                        },
                        dialog = new Overlay({
                            template: absTemplate,
                            controller: controller,
                            overlayType: pf.globals.overlay.overlayType.CONTENT_OVERLAY
                        });
                    dialog.disableCancelButton = function () {
                        $timeout(function () {
                            absScope.disableCancelBtn = true
                        })
                    };
                    dialog.applyMessage = function (messageType, messageKey) {
                        $timeout(function () {
                            absScope.titleKey = 'AbsNotExecutedTitle';
                            absScope.showCancelBtn = false;
                            absScope.showLoader = false;
                            absScope.messages = {
                            };
                            absScope.messages[messageType] = [
                                {
                                    translated: false,
                                    fullKey: false,
                                    message: messageKey
                                }
                            ]
                        })
                    };
                    return createDialog(dialog)
                }
                function openDialogWithScreenkey(config) {
                    var controller = function (scope) {
                            scope.text = {
                                title: config.title,
                                content: config.content
                            };
                            scope.showCloseButton = true
                        },
                        confirmDialog = new Overlay({
                            focusOnReturn: config.focusOnReturn,
                            focusFunction: config.focusFunction,
                            template: screenkeyTemplate,
                            controller: controller,
                            overlayType: pf.globals.overlay.overlayType.CONTENT_OVERLAY
                        });
                    return createDialog(confirmDialog)
                }
                function notInDemo(event) {
                    var controller = function (scope, helper) {
                            scope.buttonClicked = function (val) {
                                helper.hide(val)
                            }
                        },
                        confirmDialog = new Overlay({
                            focusOnReturn: event,
                            template: notInDemoTemplate,
                            controller: controller,
                            overlayType: pf.globals.overlay.overlayType.CONTENT_OVERLAY
                        });
                    return createDialog(confirmDialog)
                }
                function openPhoneChallengeDialog(config, phoneNumber, phoneChallengeService, saveFn, cancelFn) {
                    var dialog = new Overlay({
                        controller: function (scope, helper) {
                            function clearMessages() {
                                vm.messages = null
                            }
                            function hasError(name, mustBeDirty) {
                                var element = vm[formName][name];
                                return !element.$valid && (mustBeDirty ? element.$dirty : true)
                            }
                            var instanceId = phoneChallengeService.instance + '-phone_challenge_service',
                                inputName = instanceId + '-validationCode',
                                formName = 'phoneChallengeServiceForm',
                                vm = {
                                    instanceId: instanceId,
                                    formId: formName,
                                    numberLength: pf.globals.settings.PHONE_VALIDATION_LENGTH,
                                    formattedPhoneNumber: phone.formatPhoneNumber(phoneNumber.prefixRaw, phoneNumber.numberRaw, phone.separators.SPACE)
                                };
                            vm.cancel = function () {
                                _.attempt(cancelFn);
                                helper.hide()
                            };
                            vm.confirm = function () {
                                clearMessages();
                                var params = phoneChallengeService.checkChallengeFormatter(phoneNumber, vm.validationCode);
                                return phoneChallengeService.checkChallenge(params).then(function success(response) {
                                    _.assign(scope.vm, response);
                                    if (vm.messages && vm.messages.errors) $timeout(function () {
                                        vm.validationCode = ''
                                    });
                                    else {
                                        util.executeIfDefined(saveFn, response);
                                        helper.hide()
                                    }
                                }).catch (function error() {
                                    helper.hide();
                                    util.executeIfDefined(cancelFn)
                                })
                            };
                            vm.resendChallenge = function () {
                                clearMessages();
                                var params = phoneChallengeService.requestChallengeFormatter(phoneNumber);
                                phoneChallengeService.sendChallenge(params).then(function success(response) {
                                    _.assign(scope.vm, response);
                                    phoneChallengeService.resendChallengeSuccess(response);
                                    if (!(vm.messages && vm.messages.errors)) vm.messages = {
                                        success: [
                                            {
                                                translated: false,
                                                fullKey: false,
                                                message: 'PhoneChallengeResendSuccess'
                                            }
                                        ]
                                    }
                                })
                            };
                            vm.disableSaveButton = function () {
                                return hasError(inputName, false)
                            };
                            vm.inputHasError = function () {
                                return hasError(inputName, true)
                            };
                            scope.textKey = config.textKey;
                            scope.vm = vm
                        },
                        templateUrl: pf.globals.urlprefix.BUNDLE + '/templates/overlay/phoneChallenge.html',
                        overlayType: pf.globals.overlay.overlayType.DIALOG,
                        focusOnReturn: config.focusOnReturn,
                        focusFunction: config.focusFunction
                    });
                    return createDialog(dialog)
                }
                var LOG = loggerFactory.getLogger('DialogService'),
                    wrapperTemplateBefore = [
                        '<div class="detail_overlay js-detail_overlay" role="dialog"',
                        'ng-class="::{',
                        '\'is-small\': isSmall, ',
                        '\'is-large\': isLarge, ',
                        '\'is-extra_large\': isExtraLarge, ',
                        '\'is-lightbrown\': isLightBrown, ',
                        '\'is-detail_page\': isDetailPage, ',
                        '\'detail_overlay-mobile_fullscreen\': !isSmall',
                        '}">',
                        '<div class="detail_overlay--bg"></div>',
                        '<div class="detail_overlay--content">',
                        '<div class="detail_overlay--content--header">',
                        '<a class="detail_content--close_button js-autofocus" ng-if="showCloseButton" href="" ng-click="close()"',
                        'role="button" pf-translate="{{\'Close\'|pfExpandKey:this}}"></a>',
                        '<h1 class="detail_overlay--content--title" ng-if="!isDetailPage && pageTitle" ng-bind-html="pageTitle|pfTranslate|content"></h1>',
                        '</div>',
                        '<div class="detail_overlay--content--body" ng-class="{\'js-autofocus\' : !showCloseButton}" tabindex="0">',
                        '<div class="detail_content">',
                        '<h1 class="page-title page-title-top" ng-if="isDetailPage && pageTitle" ng-bind-html="pageTitle|pfTranslate|content"></h1>'
                    ].join(''),
                    confirmTemplate = [
                        '<div class="content-pane-wrapper">',
                        '<div class="content-pane">',
                        '<h3 class="paragraph-title js-autofocus" pf-translate="{{keys.titleKey|pfExpandKey:translationScope}}"',
                        'translate-values="data"></h3>',
                        '<div screen-key="keys.contentKey|pfTranslate:translationScope:data"></div>',
                        '</div>',
                        '</div>',
                        '<div class="buttons">',
                        '<button class="btn btn-yellow" ng-click="buttonClicked(true)"',
                        'pf-translate="{{keys.acceptButtonKey|pfExpandKey:translationScope}}"></button>',
                        '<button class="btn js-detail_overlay_close" ng-click="buttonClicked(false)"',
                        'pf-translate="{{keys.cancelButtonKey|pfExpandKey:translationScope}}"></button>',
                        '</div>'
                    ].join(''),
                    wrapperTemplateAfter = [
                        '</div>',
                        '</div>',
                        '<div class="detail_overlay--content--footer" ng-if="showCloseButton && isMobile">',
                        '<a class="detail_content--close_button" href="" ng-click="close()" role="button" pf-translate="{{\'Close\'|pfExpandKey:this}}"></a>',
                        '</div>',
                        '</div>',
                        '</div>'
                    ].join(''),
                    screenkeyTemplate = [
                        '<div class="content-pane-wrapper">',
                        '<div class="content-pane">',
                        '<h3 class="paragraph-title js-autofocus" data-ng-bind="text.title"></h3>',
                        '<div class="wcms" ng-bind-html="text.content|content"></div>',
                        '</div>',
                        '</div>'
                    ].join(''),
                    notInDemoTemplate = [
                        '<div class="content-pane-wrapper">',
                        '<div class="content-pane">',
                        '<h3 class="paragraph-title js-autofocus" pf-translate="{{\'NotInDemoTitle\'|pfExpandKey:this}}"></h3>',
                        '<p pf-translate="{{\'NotInDemoText\'|pfExpandKey:this}}"></p>',
                        '</div>',
                        '</div>'
                    ].join(''),
                    absTemplate = [
                        '<div class="content-pane-wrapper">',
                        '<div class="content-pane">',
                        '<h3 class="paragraph-title js-autofocus" pf-translate="{{titleKey|pfExpandKey:this}}"></h3>',
                        '<div aria-hidden="true" class="pf-login_form_loader" ng-if="showLoader">',
                        '<div class="pf-spinner l-gap l-gap-medium">',
                        '<span class="is-1 pf-spinner--item"></span>',
                        '<span class="is-2 pf-spinner--item"></span>',
                        '<span class="is-3 pf-spinner--item"></span>',
                        '<span class="is-4 pf-spinner--item"></span>',
                        '<span class="is-5 pf-spinner--item"></span>',
                        '</div>',
                        '<span pf-translate="{{\'scrMain_AbsLoaderTitle\'|pfExpandKey:this}}"></span>',
                        '</div>',
                        '<messages ng-if="messages" messages="messages" text-key="{{textKey}}" has-autofocus="false"></messages>',
                        '</div>',
                        '</div>',
                        '<div class="buttons">',
                        '<button ng-if="showCancelBtn" ng-disabled="disableCancelBtn" class="btn"ng-click="cancelSigningProcess()"',
                        'pf-translate="{{\'Cancel\'|pfExpandKey:this}}"></button>',
                        '<button ng-if="!showCancelBtn" class="btn btn-yellow" ng-click="closeDialog()"',
                        'pf-translate="{{\'Close\'|pfExpandKey:this}}"></button>',
                        '</div>'
                    ].join(''),
                    classes = {
                        hasDialogOnHtml: 'has-lightbox'
                    },
                    $htmlElement = jQuery('html'),
                    pageOverlays = {
                    },
                    pageOverlayTimestamps = {
                    };
                return {
                    getConfirmDialogConfig: getConfirmDialogConfig,
                    confirm: openConfirmDialog,
                    screenkey: openDialogWithScreenkey,
                    notInDemo: notInDemo,
                    absDialog: absDialog,
                    phoneChallengeDialog: openPhoneChallengeDialog
                }
            },
            serviceName = 'DialogService',
            implementation = [
                '$rootScope',
                '$compile',
                '$q',
                '$timeout',
                '$filter',
                '$rootElement',
                factoryImplementation
            ];
        return {
            name: serviceName,
            implementation: implementation,
            register: function (module) {
                module.factory(serviceName, implementation)
            }
        }
    })
}();
define('fipo/lib/shared/services/dialogService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-abshandler', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-clientmessages',
        'bluebird',
        'pf-angular-logger'
    ], function absDefineFn(require) {
        function responseHandler(response) {
            if (!_.has(response, 'stepUp')) return response;
            cancelledInDialog = false;
            gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSED_ABS_DIALOG, dialogClosed);
            gadgets.pubsub.publish(pf.globals.pubsub.HIDE_PAGE_LOADER);
            absDialog = window.openAbsDialog(cancelFn).overlay;
            return new _Promise(function (resolve, reject) {
                rejectFn = reject;
                resolveFn = resolve;
                if (_.get(response, 'stepUp.status') === status.REQUIRED.description) wrapperFunction().then(handleAbsResponse).catch (function () {
                    createTechnicalError()
                });
                else handleAbsResponse(response)
            })
        }
        function handleAbsResponse(response) {
            if (cancelledInDialog) reject(clientMessages.createAbsMessage(status.CANCELLED_IN_DIALOG.description));
            else if (_.get(response.stepUp, 'status') === status.OK.description) {
                absDialog.disableCancelButton();
                confirm().then(function (res) {
                    absDialog.hide();
                    resolveFn(res.data)
                }).catch (function () {
                    createTechnicalError()
                })
            } else {
                var absStatus = _.get(response.stepUp, 'status');
                if (!_.isEmpty(absStatus)) {
                    absDialog.applyMessage(status[absStatus].messageType, status[absStatus].messageKey);
                    rejectFn(clientMessages.createAbsMessage(status[absStatus].description))
                } else createTechnicalError()
            }
        }
        function wrapperFunction() {
            return new _Promise(function (resolve, reject) {
                pollingPromise = $interval(function () {
                    return checkStatus().then(function (response) {
                        if (_.get(response.data.stepUp, 'status') !== status.IN_PROGRESS.description) {
                            $interval.cancel(pollingPromise);
                            resolve(response.data)
                        }
                    }).catch (function () {
                        $interval.cancel(pollingPromise);
                        reject()
                    })
                }, DELAY)
            })
        }
        function cancelFn() {
            cancelledInDialog = true;
            $interval.cancel(pollingPromise);
            cancel().then(function (res) {
                if (_.has(res.data, 'result')) {
                    absDialog.applyMessage(status.CANCELLED_IN_DIALOG.messageType, status.CANCELLED_IN_DIALOG.messageKey);
                    rejectFn(clientMessages.createAbsMessage(status.CANCELLED_IN_DIALOG.description))
                } else createTechnicalError()
            }).catch (function () {
                createTechnicalError()
            })
        }
        function createTechnicalError() {
            absDialog.hide();
            rejectFn(clientMessages.createTechnicalErrorResponse())
        }
        function checkStatus() {
            return $http({
                method: 'GET',
                url: platform.getAbsUrlCheckStatus(),
                timeout: pf.globals.settings.HTTP_TIMEOUT
            })
        }
        function confirm() {
            return $http({
                method: 'GET',
                url: platform.getAbsUrlConfirm(),
                timeout: pf.globals.settings.HTTP_TIMEOUT
            })
        }
        function cancel() {
            return $http({
                method: 'GET',
                url: platform.getAbsUrlCancel(),
                timeout: pf.globals.settings.HTTP_TIMEOUT
            })
        }
        function dialogClosed() {
            $interval.cancel(pollingPromise);
            gadgets.pubsub.unsubscribe(pf.globals.pubsub.CLOSED_ABS_DIALOG, dialogClosed)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            _Promise = require('bluebird'),
            logger = require('pf-angular-logger'),
            initInjector = angular.injector(['ng',
                logger.moduleName], {
                strictDi: true
            }),
            $interval = initInjector.get('$interval'),
            $http = initInjector.get('$http'),
            status = {
                REQUIRED: {
                    description: 'REQUIRED'
                },
                IN_PROGRESS: {
                    description: 'IN_PROGRESS'
                },
                OK: {
                    description: 'OK'
                },
                FAILED: {
                    description: 'FAILED',
                    messageType: 'errors',
                    messageKey: 'scrError_AbsFailed'
                },
                CANCELLED: {
                    description: 'CANCELLED',
                    messageType: 'infos',
                    messageKey: 'scrMessage_AbsCancelled'
                },
                TIMEOUT: {
                    description: 'TIMEOUT',
                    messageType: 'errors',
                    messageKey: 'scrError_AbsTimeout'
                },
                CANCELLED_IN_DIALOG: {
                    description: 'CANCELLED_IN_DIALOG',
                    messageType: 'infos',
                    messageKey: 'scrMessage_AbsCancelled'
                },
                FAILED_DOUBLE: {
                    description: 'FAILED',
                    messageType: 'errors',
                    messageKey: 'scrError_AbsFailedDouble'
                },
                FAILED_PENDING: {
                    description: 'FAILED',
                    messageType: 'errors',
                    messageKey: 'scrError_AbsFailedPending'
                },
                FAILED_DEREGISTERED: {
                    description: 'FAILED',
                    messageType: 'errors',
                    messageKey: 'scrError_AbsFailedDeregistered'
                }
            },
            DELAY = 2000,
            cancelledInDialog,
            rejectFn,
            resolveFn,
            pollingPromise,
            absDialog;
        return {
            responseHandler: responseHandler
        }
    })
}();
define('fipo/lib/shared/modules/absHandler', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-accounts', [
        'require',
        'lodash',
        'pf-pattern',
        'pf-shared-modules-formatter',
        'pf-shared-modules-credit_card',
        'pf-shared-modules-currencies'
    ], function (require) {
        function formatAccountNumber(accountNr, accountType) {
            var accountNrFormatted;
            switch (accountType) {
                case pf.globals.types.account.KONTO:
                    var regex = /(CH|IBAN)/;
                    if (regex.exec(accountNr)) accountNrFormatted = formatter.formatIban(accountNr);
                    else accountNrFormatted = formatter.postalAccountNumberToIban(accountNr);
                    break;
                case pf.globals.types.account.ASR:
                case pf.globals.types.account.ESR:
                case pf.globals.types.account.DEPOT:
                    accountNrFormatted = formatter.formatAccountNumber(accountNr);
                    break;
                case pf.globals.types.account.ETRADING_SQ:
                case pf.globals.types.account.MONEY:
                case pf.globals.types.account.MORTGAGE:
                case pf.globals.types.account.MEDIUM_TERM_NOTE:
                    accountNrFormatted = accountNr;
                    break;
                case pf.globals.types.account.CREDIT_CARD:
                    accountNrFormatted = creditCard.formatAccountNumber(accountNr);
                    break;
                case pf.globals.types.account.RETIRE_SAVINGS:
                case pf.globals.types.account.VESTED_BENEFIT:
                    accountNrFormatted = formatter.formatRetirementAccountNumber(accountNr);
                    break;
                case pf.globals.types.account.LIFE_INSURANCE:
                case pf.globals.types.account.LIFE_INSURANCE_V2:
                    accountNrFormatted = formatter.formatLifeInsurancePolicyNumber(accountNr);
                    break;
                case pf.globals.types.account.ES_CUSTOMER_AGREEMENT:
                    accountNrFormatted = formatter.formatIban(accountNr);
                    break;
                default:
                    accountNrFormatted = accountNr
            }
            return accountNrFormatted
        }
        function formatAccountNumberWithCurrency(accountNr, accountType, currency) {
            var accountNrFormatted = formatAccountNumber(accountNr, accountType);
            switch (accountType) {
                case pf.globals.types.account.KONTO:
                case pf.globals.types.account.DEPOT:
                    accountNrFormatted = accountNrFormatted + ' ' + currencies.getLiteral(currency)
            }
            return accountNrFormatted
        }
        function isESavingsAccount(account) {
            if (!account) return false;
            else return account.type === pf.globals.types.account.KONTO && _.includes(pf.globals.subTypes.account.ESAVINGSACCOUNT, account.subType)
        }
        function sortByType(a, b) {
            if (a.type < b.type) return - 1;
            else if (a.type > b.type) return 1;
            return sortBySubType(a, b)
        }
        function sortBySubType(a, b) {
            if (a.subType < b.subType) return - 1;
            else if (a.subType > b.subType) return 1;
            return sortByAccountNumber(a, b)
        }
        function sortByAccountNumber(a, b) {
            var aNr = _.parseInt(a.nr, 10),
                bNr = _.parseInt(b.nr, 10);
            if (aNr < bNr) return - 1;
            else if (aNr > bNr) return 1;
            return 0
        }
        function parseProductUniqueKey(productUniqueKey) {
            if (_.isString(productUniqueKey)) {
                var match = productUniqueKey.match(pattern.PRODUCT_UNIQUE_KEY);
                if (match) {
                    var nr = match[1],
                        type = _.parseInt(match[2], 10),
                        subType = _.parseInt(match[3], 10),
                        parsedAccount = {
                            nr: nr,
                            type: type,
                            subType: subType,
                            formatted: {
                                number: formatAccountNumber(nr, type)
                            }
                        },
                        iban;
                    switch (type) {
                        case pf.globals.types.account.KONTO:
                            iban = formatter.postalAccountNumberToIban(nr, true);
                            break;
                        case pf.globals.types.account.ES_CUSTOMER_AGREEMENT:
                            iban = nr
                    }
                    if (!_.isUndefined(iban)) _.merge(parsedAccount, {
                        iban: iban,
                        formatted: {
                            iban: formatter.formatIban(iban)
                        }
                    });
                    return parsedAccount
                }
            }
            return null
        }
        var _ = require('lodash'),
            pattern = require('pf-pattern'),
            formatter = require('pf-shared-modules-formatter'),
            creditCard = require('pf-shared-modules-credit_card'),
            currencies = require('pf-shared-modules-currencies');
        return {
            formatAccountNumber: formatAccountNumber,
            formatAccountNumberWithCurrency: formatAccountNumberWithCurrency,
            isESavingsAccount: isESavingsAccount,
            standardSorter: sortByType,
            parseProductUniqueKey: parseProductUniqueKey
        }
    })
}();
define('fipo/lib/shared/modules/accounts', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-actions', [
        'require',
        'lodash',
        'pf-widget-functions',
        'pf-shared-modules-icons',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-urls',
        'pf-shared-modules-translator'
    ], function (require) {
        function buildActionEntries(actions, scope) {
            if (!(_.isArray(actions) && scope)) return null;
            else return _.map(actions, function (action) {
                return {
                    key: action,
                    icon: icons.actionToIcon(action),
                    text: util.expandKey(action, scope)
                }
            })
        }
        function isPrimaryAction(primaryActions, action) {
            if (_.isArray(primaryActions)) return _.includes(primaryActions, action);
            else return action === primaryActions
        }
        var _ = require('lodash'),
            pfWidgetFunctions = require('pf-widget-functions'),
            icons = require('pf-shared-modules-icons'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            urls = require('pf-shared-modules-urls'),
            translator = require('pf-shared-modules-translator'),
            filterActionKeysWithUrlMapping = function filterActionKeysWithUrlMapping(actionKeys, detailpageName) {
                return _.filter(actionKeys, function (action) {
                    return pfWidgetFunctions.hasActionUrlForDetailPage(detailpageName, action)
                })
            },
            buildActionMenuEntries = function buildActionMenuEntries(actions, primaryActions, scope, detailpageName, callbackMap) {
                if (!(_.isArray(actions) && scope)) return null;
                var filteredActions = filterActionKeysWithUrlMapping(actions, detailpageName);
                return _.map(filteredActions, function (action) {
                    return {
                        key: action,
                        icon: icons.actionToIcon(action),
                        labelKey: util.expandKey(action, scope),
                        isPrimaryAction: isPrimaryAction(primaryActions, action),
                        actionCallback: _.get(callbackMap, action)
                    }
                })
            },
            buildDynamicButtons = function buildDynamicButtons(actionsEnumKey, textKey, detailpageName, reverse, preProcessingFunction) {
                var buttons = _.compact(_.map(wcmsEnum.getEnumArray(textKey + '.' + actionsEnumKey), function (actionEntry) {
                    var rawConfig = actionEntry.text.split('|');
                    if (3 === rawConfig.length || 4 === rawConfig.length) {
                        var button = {
                                text: translator.translate(textKey + '.' + rawConfig[2])
                            },
                            urlObj;
                        switch (rawConfig[0]) {
                            case 'ACTION':
                                urlObj = pfWidgetFunctions.getActionUrlForDetailPage(detailpageName, rawConfig[1], _.isUndefined(rawConfig[3]) ? void 0 : JSON.parse(rawConfig[3]));
                                break;
                            case 'PORTAL':
                                urlObj = {
                                    type: 'PORTAL',
                                    url: rawConfig[1]
                                };
                                break;
                            case 'INTERNAL':
                                urlObj = {
                                    type: 'INTERNAL',
                                    url: platform.getPfChUrl() + rawConfig[1]
                                };
                                break;
                            case 'DEEPLINK':
                                urlObj = {
                                    url: urls.replacePortalTypeInUrl(b$.portal.config.serverRoot + '/[portalType]/deeplink?id=') + rawConfig[1] + (_.isUndefined(rawConfig[3]) ? '' : rawConfig[3]),
                                    type: 'PORTAL'
                                };
                                break;
                            default:
                                return null
                        }
                        if (urlObj) {
                            button.invoke = function () {
                                if ('ACTION' === rawConfig[0] && !_.isUndefined(preProcessingFunction)) preProcessingFunction();
                                if (platform.isDemo() && 'INTERNAL' === rawConfig[0]) notInDemo();
                                else pfWidgetFunctions.processUrlObject(urlObj)
                            };
                            return button
                        }
                    }
                    return null
                })); return reverse ? _.reverse(buttons)  : buttons
            };
        return {
            filterActionKeysWithUrlMapping: filterActionKeysWithUrlMapping,
            buildActionMenuEntries: buildActionMenuEntries,
            buildActionEntries: buildActionEntries,
            buildDynamicButtons: buildDynamicButtons
        }
    })
}();
define('fipo/lib/shared/modules/actions', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-add_widget_button', [
        'require',
        'jquery',
        'angular',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-shared-modules-webtrendstracker'
    ], function (require) {
        function AddWidgetButtonController($scope, $element) {
            var vm = this,
                minAmountTilesBottomAddButton = 8;
            vm.textKey = 'widget.' + widgetName;
            var positions = {
                    top: 0,
                    bottom: 1
                },
                limit = platform.getWidgetShopLimit(),
                ownPosition;
            vm.setOwnPosition = function setInsertAfter(position) {
                ownPosition = position
            };
            var url = {
                widgetName: 'fipowidgetshop',
                url: 'pf-detail-fipowidgetshop',
                params: {
                },
                type: 'JSON',
                config: {
                    isLarge: true,
                    isFullHeight: true
                }
            };
            vm.showDialog = function showDialog() {
                url.params = {
                    widgetListNode: $element.parent() [0],
                    addButtonNode: $element[0],
                    insertForemost: ownPosition === positions.top
                };
                var webtrendsValue;
                if (ownPosition === positions.top) {
                    url.focusOnReturn = document.getElementsByClassName('js-widget_customize_homepage--stop') [0];
                    webtrendsValue = '_li_ef_page-efhome_add-widget_first'
                } else {
                    url.focusOnReturn = document.getElementsByClassName('js-add-widget-button') [1];
                    webtrendsValue = '_li_ef_page-efhome_add-widget_last'
                }
                webtrendsTracker.trackWebtrends('WT.ac', webtrendsValue);
                gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_OVERLAY, url)
            };
            gadgets.pubsub.subscribe(pf.globals.pubsub.CUSTOMIZE_MODE_ADJUSTMENT, function () {
                $scope.$applyAsync()
            });
            vm.limitReached = function () {
                return limit <= util.getTiles().length
            };
            vm.isLastAndOnlyFewTiles = function () {
                return minAmountTilesBottomAddButton >= util.getTiles().length && ownPosition === positions.bottom
            }
        }
        var jQuery = require('jquery'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            webtrendsTracker = require('pf-shared-modules-webtrendstracker'),
            widgetName = 'addwidgetbutton',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
            ]);
        module.controller('AddWidgetButtonController', AddWidgetButtonController);
        AddWidgetButtonController.$inject = [
            '$scope',
            '$element'
        ];
        return function bootstrap() {
            angular.bootstrap(jQuery('.js-add-widget-button'), [
                module.name
            ], {
                strictDi: true
            })
        }
    })
}();
define('fipo/lib/shared/modules/addWidgetButton', function () {
});
!function () {
    'use strict'; /**
     * @author Nicolas Hoby, JLS Digital AG
     * @license MIT
     * @description Based on the ngA11y project, https://github.com/dequelabs/ngA11y, but turned into a require module
     */
    define('pf-shared-modules-announce', [
        'require',
        'angular'
    ], function (require) {
        function makePolite(n) {
            var politeAnnouncer = angular.element('<div>').attr({
                id: 'accessibility-polite-' + n,
                role: 'log',
                'aria-live': 'polite',
                'aria-relevant': 'additions',
                style: OFFSCREEN
            });
            angular.element(document.body).append(politeAnnouncer);
            return politeAnnouncer
        }
        function makeAssertive(n) {
            var assertiveAnnouncer = angular.element('<div>').attr({
                id: 'accessibility-assertive-' + n,
                role: 'alert',
                'aria-live': 'assertive',
                'aria-relevant': 'additions',
                style: OFFSCREEN
            });
            angular.element(document.body).append(assertiveAnnouncer);
            return assertiveAnnouncer
        }
        var angular = require('angular'),
            announceFactory = {
                number: 2,
                pIndex: 0,
                aIndex: 0
            },
            OFFSCREEN = 'border: 0;clip: rect(0 0 0 0);clip: rect(0, 0, 0, 0);height: 1px;margin: -1px;overflow: hidden;padding: 0;width: 1px;position: absolute;';
        announceFactory.politeAnnouncers = [
        ];
        for (var i = 0; i < announceFactory.number; i++) announceFactory.politeAnnouncers.push(makePolite(i));
        announceFactory.assertiveAnnouncers = [
        ];
        for (var j = 0; j < announceFactory.number; j++) announceFactory.assertiveAnnouncers.push(makeAssertive(j));
        announceFactory.politeAnnounce = function (msg) {
            this.politeAnnouncers[this.pIndex].empty();
            this.pIndex += 1;
            this.pIndex %= this.number;
            this.politeAnnouncers[this.pIndex].append(angular.element('<p>').text(msg))
        };
        announceFactory.assertiveAnnounce = function (msg) {
            this.assertiveAnnouncers[this.aIndex].empty();
            this.aIndex += 1;
            this.aIndex %= this.number;
            this.assertiveAnnouncers[this.aIndex].append(angular.element('<p>').text(msg))
        };
        return announceFactory
    })
}();
define('fipo/lib/shared/modules/announce', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-apoconverter', [
        'require',
        'lodash',
        'angular',
        'moment',
        'pf-shared-modules-platform',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-util'
    ], function (require) {
        function typeConversion(type) {
            var enumValue = questionType.fromName(type);
            if (enumValue && enumValue.formlyType) return enumValue.formlyType;
            throw Error('APO Type is not known')
        }
        function buildEnumObject(child, field) {
            var translate = field.global.angular.filter('pfTranslate'),
                enumArr = _.orderBy(wcmsEnumGenerator.getEnumArray(child.wcmsEnumKey, {
                    textKey: field.global.translationPrefix
                }), 'sortNumber');
            return _.map(enumArr, function (value) {
                var item = {
                    name: translate(field.global.translationPrefix + '.' + value.key)
                };
                if (!_.isNaN(value.id)) item.value = value.id;
                return item
            })
        }
        function buildRuntimeEnum(child, field) {
            return _.map(child.runtimeEnumValues, function (value, key) {
                return {
                    description: value.text,
                    name: value.name,
                    info: value.info,
                    value: key
                }
            })
        }
        function generateDatafieldsForParagraph(data, conf, options) {
            return _.map(data, function (value) {
                if (value.elementType === type.fieldType.SCREENKEY.name) return createScreenKey(value, conf, options);
                else if (value.elementType === type.fieldType.QUESTION.name) return createQuestion(value, conf, options);
                return null
            })
        }
        function createScreenKey(value, conf, options) {
            var screenKey = TYPE.createScreenKey({
                name: value.name,
                data: value,
                global: conf
            });
            if (options) _.merge(screenKey, options);
            return screenKey
        }
        function createQuestion(value, conf, options) {
            if (value.childElements.length > 1 && value.questionType === questionType.DROPDOWN_TELEPHONE.name) return createQuestionDropdownTelephone(value, conf, options);
            else if (value.childElements.length > 1 && value.questionType === questionType.DUAL_TEXTFIELD.name) return createQuestionDualTextfield(value, conf, options);
            return createQuestionSingleField(value, conf, options)
        }
        function createQuestionDropdownTelephone(value, conf, options) {
            var dropdownType = questionType.DROPDOWN_NO_LABEL.name,
                textfieldType = questionType.INPUT.name,
                telephoneCombo = [
                ],
                telephoneComboInputs = [
                ],
                name_field1 = value.childElements[0].name,
                name_field2 = value.childElements[1].name,
                isReadonlyLayout = value.readonly;
            if (!isReadonlyLayout) {
                telephoneCombo.push({
                    template: '<span class=label-group><label class="formly-field-label pf-form_label" ng-class="{\'has-tooltip-error\':(fields[1].validation.errorExistsAndShouldBeVisible === true || fields[2].validation.errorExistsAndShouldBeVisible === true)}"><span pf-translate=\'' + conf.translationPrefix + '.' + value.name + '\'></span></label></span>',
                    className: platform.isMobile() ? '' : 'float-left',
                    hideExpression: function ($viewValue, $modelValue, scope) {
                        return eval(rewriteDisplayCondition(value.displayCondition.condition))
                    }
                });
                _.forEach(value.childElements, function (child, index) {
                    var newParentElement = _.clone(value);
                    newParentElement.childElements = [
                        child
                    ];
                    var fieldName = newParentElement.childElements[0].name;
                    if (0 === index) newParentElement.questionType = dropdownType;
                    else if (1 === index) newParentElement.questionType = textfieldType;
                    newParentElement.className = pf.globals.classes.PF_FORM__ROW;
                    var newValue = _.clone(value);
                    newValue.childElements = [
                        value.childElements[index]
                    ];
                    var subquestion = TYPE.createQuestion({
                        name: fieldName,
                        type: newParentElement.questionType,
                        data: newValue,
                        global: conf
                    });
                    if (newParentElement.questionType === dropdownType) _.merge(subquestion, {
                        className: newParentElement.className,
                        onFocus: function ($viewValue, $modelValue, scope) {
                            if (scope.model.errors && scope.model.errors[fieldName]) delete scope.model.errors[fieldName]
                        },
                        templateOptions: {
                            'aria-label': conf.angular.filter('pfTranslate') (conf.translationPrefix + '.' + fieldName)
                        },
                        ngModelAttrs: {
                            'aria-label': {
                                bound: 'ng-aria-label',
                                attribute: 'aria-label'
                            }
                        }
                    });
                    else if (newParentElement.questionType === textfieldType) _.merge(subquestion, {
                        className: newParentElement.className,
                        templateOptions: {
                            class: 'text medium',
                            style: 'margin-top: 6px',
                            type: 'number',
                            maxlength: 7,
                            minlength: 7,
                            size: 7,
                            onKeydown: function ($viewValue, $modelValue, scope) {
                                if (scope.model.errors && scope.model.errors[fieldName]) delete scope.model.errors[fieldName]
                            },
                            'aria-label': conf.angular.filter('pfTranslate') (conf.translationPrefix + '.' + fieldName)
                        },
                        ngModelAttrs: {
                            style: {
                                bound: 'ng-style',
                                attribute: 'style'
                            },
                            'aria-label': {
                                bound: 'ng-aria-label',
                                attribute: 'aria-label'
                            }
                        },
                        elementAttributes: {
                            style: platform.isMobile() ? 'width: 62.5%;' : 'padding-right: 10px'
                        }
                    });
                    if (options) _.merge(subquestion, options);
                    _.merge(subquestion, {
                        validation: {
                            show: true
                        },
                        expressionProperties: {
                            'validation.show': function () {
                                return validationExpression({
                                    field: fieldName
                                })
                            }
                        },
                        validators: {
                            serverResult: {
                                expression: function (viewValue, modelValue, fieldScope) {
                                    if (_.isUndefined(fieldScope.model.errors)) return true;
                                    else return void 0 === fieldScope.model.errors[fieldName]
                                }
                            }
                        }
                    });
                    telephoneComboInputs.push(subquestion)
                });
                var templateString = '<button class=btn type=button ng-click=options.data.validate() pf-translate=\'' + conf.translationPrefix + '.Validate\'></button>',
                    validationButton = {
                        template: templateString,
                        className: pf.globals.classes.PF_FORM__ROW,
                        hideExpression: function ($viewValue, $modelValue, scope) {
                            var prefix = scope.model[name_field1],
                                number = scope.model[name_field2],
                                noPrefix = _.isUndefined(prefix) || _.isEmpty(String(prefix)),
                                noPhoneNumber = _.isUndefined(number) || _.isEmpty(String(number)),
                                fieldsAreEmpty = noPrefix || noPhoneNumber,
                                shouldBeHidden = eval(rewriteDisplayCondition(value.displayCondition.condition)) ? true : fieldsAreEmpty;
                            return shouldBeHidden
                        },
                        data: {
                            validate: function validate() {
                                var publishQuestionKeys = {
                                    prefix: 'MobileCorporateActions1',
                                    number: 'MobileCorporateActions2'
                                };
                                gadgets.pubsub.publish(pf.globals.events.FORMLY_VALIDATE_MOBILE, publishQuestionKeys)
                            }
                        }
                    };
                if (platform.isMobile()) _.merge(validationButton, {
                    elementAttributes: {
                        class: 'formly-field buttons buttons-inline'
                    }
                });
                if (platform.isNotDemo()) telephoneComboInputs.push(validationButton)
            } else {
                var subquestion = TYPE.createQuestion({
                    name: value.name,
                    type: 'INPUT',
                    data: value,
                    global: conf
                });
                _.merge(subquestion, {
                    hideExpression: function ($viewValue, $modelValue, scope) {
                        var fieldsAreEmpty = _.isUndefined(scope.model[name_field1]) ? true : _.isEmpty(String(scope.model[name_field1])),
                            shouldBeHidden = eval(rewriteDisplayCondition(value.displayCondition.condition)) ? true : fieldsAreEmpty;
                        return shouldBeHidden
                    }
                });
                telephoneCombo.push(subquestion)
            }
            telephoneCombo.push({
                fieldGroup: telephoneComboInputs,
                elementAttributes: {
                    layout: '',
                    'field-root-wrapper-el': 'div',
                    'field-root-wrapper-class': 'pf-form_inputgroup'
                }
            });
            var fieldGroup = {
                fieldGroup: telephoneCombo,
                hideExpression: function ($viewValue, $modelValue, scope) {
                    var shouldBeHidden = !!eval(rewriteDisplayCondition(value.displayCondition.condition));
                    return shouldBeHidden
                }
            };
            return fieldGroup
        }
        function createQuestionDualTextfield(value, conf, options) {
            var subFields = [
                ],
                name_field1 = value.childElements[0].name,
                name_field2 = value.childElements[1].name,
                isReadonlyLayout = value.readonly;
            if (!isReadonlyLayout) {
                subFields.push({
                    template: '<span class=label-group><label class="formly-field-label pf-form_label" ng-class="{\'has-tooltip-error\':(fields[1].validation.errorExistsAndShouldBeVisible === true || fields[2].validation.errorExistsAndShouldBeVisible === true)}"><span pf-translate=\'' + conf.translationPrefix + '.' + value.name + '\'></span></label></span>',
                    hideExpression: function ($viewValue, $modelValue, scope) {
                        return eval(rewriteDisplayCondition(value.displayCondition.condition))
                    }
                });
                _.forEach(value.childElements, function (child, index) {
                    var newParentElement = _.clone(value);
                    newParentElement.childElements = [
                        child
                    ];
                    newParentElement.questionType = questionType.INPUT.name;
                    var newValue = _.clone(value);
                    newValue.childElements = [
                        value.childElements[index]
                    ];
                    var subquestion = TYPE.createQuestion({
                        name: child.name,
                        type: newParentElement.questionType,
                        data: newValue,
                        global: conf
                    });
                    if (options) _.merge(subquestion, options);
                    _.merge(subquestion, {
                        className: newParentElement.className,
                        templateOptions: {
                            type: 'email',
                            maxlength: 48,
                            size: 48,
                            onKeydown: function ($viewValue, $modelValue, scope) {
                                if (scope.model.errors && newParentElement.childElements[0].name) delete scope.model.errors[newParentElement.childElements[0].name]
                            },
                            emailValidationAttr: ''
                        },
                        ngModelAttrs: {
                            size: {
                                bound: 'ng-size',
                                attribute: 'size'
                            },
                            emailValidationAttr: {
                                bound: 'ng-email-validation-attr',
                                attribute: 'email-validation-attr'
                            }
                        }
                    });
                    if (0 === index) _.merge(subquestion, {
                        data: {
                            hasSuccessFlag: true
                        }
                    });
                    else if (1 === index) {
                        _.merge(subquestion, {
                            templateOptions: {
                                placeholder: conf.angular.filter('pfTranslate') (conf.translationPrefix + '.EmailPlaceholder')
                            },
                            ngModelAttrs: {
                                style: {
                                    bound: 'ng-style',
                                    attribute: 'style'
                                }
                            },
                            hideExpression: function ($viewValue, $modelValue, scope) {
                                var email = scope.model[name_field1],
                                    fieldsAreEmpty = _.isUndefined(email) || _.isEmpty(String(email)),
                                    shouldBeHidden = eval(rewriteDisplayCondition(value.displayCondition.condition)) ? true : fieldsAreEmpty;
                                return shouldBeHidden
                            }
                        });
                        _.merge(subquestion, {
                            elementAtributes: {
                                style: 'line-height: 48px'
                            }
                        })
                    }
                    var fieldName = newParentElement.childElements[0].name;
                    _.merge(subquestion, {
                        validation: {
                            show: true
                        },
                        expressionProperties: {
                            'validation.show': validationExpression({
                                field: fieldName
                            })
                        },
                        validators: {
                            serverResult: {
                                expression: function (viewValue, modelValue, fieldScope) {
                                    if (_.isUndefined(fieldScope.model.errors)) return true;
                                    else return void 0 === fieldScope.model.errors[newParentElement.childElements[0].name]
                                }
                            }
                        }
                    });
                    subFields.push(subquestion)
                })
            } else {
                var subquestion = TYPE.createQuestion({
                    name: value.name,
                    type: 'INPUT',
                    data: value,
                    global: conf
                });
                _.merge(subquestion, {
                    hideExpression: function ($viewValue, $modelValue, scope) {
                        var email = scope.model[name_field1],
                            fieldsAreEmpty = _.isUndefined(email) || _.isEmpty(String(email)),
                            shouldBeHidden = eval(rewriteDisplayCondition(value.displayCondition.condition)) ? true : fieldsAreEmpty;
                        return shouldBeHidden
                    }
                });
                subFields.push(subquestion)
            }
            var fieldGroup = {
                fieldGroup: subFields,
                hideExpression: function ($viewValue, $modelValue, scope) {
                    var shouldBeHidden = !!eval(rewriteDisplayCondition(value.displayCondition.condition));
                    return shouldBeHidden
                }
            };
            return fieldGroup
        }
        function createQuestionSingleField(value, conf, options) {
            var question = TYPE.createQuestion({
                name: value.childElements[0].name,
                type: value.questionType,
                data: value,
                global: conf
            });
            if (question.type === formlyType.readonlyWithLabel) question.className = pf.globals.classes.AS_NARROW;
            if (options) _.merge(question, options);
            var fieldName = value.childElements[0].name;
            _.merge(question, {
                validation: {
                    show: true
                },
                expressionProperties: {
                    'validation.show': validationExpression({
                        field: fieldName
                    })
                },
                validators: {
                    serverResult: {
                        expression: function (viewValue, modelValue, fieldScope) {
                            if (_.isUndefined(fieldScope.model.errors)) return true;
                            else return void 0 === fieldScope.model.errors[fieldName]
                        }
                    }
                },
                templateOptions: {
                    onKeydown: function ($viewValue, $modelValue, scope) {
                        if (scope.model.errors && fieldName) {
                            delete scope.model.errors[fieldName];
                            setDefaultValue($viewValue, $modelValue, scope)
                        }
                    },
                    onChange: function ($viewValue, $modelValue, scope) {
                        if (scope.model.errors && fieldName) {
                            delete scope.model.errors[fieldName];
                            setDefaultValue($viewValue, $modelValue, scope)
                        }
                    },
                    onFocus: function ($viewValue, $modelValue, scope) {
                        if (scope.model.errors && fieldName) {
                            delete scope.model.errors[fieldName];
                            setDefaultValue($viewValue, $modelValue, scope)
                        }
                    },
                    onTouchstart: function ($viewValue, $modelValue, scope) {
                        if (scope.model.errors && fieldName) {
                            delete scope.model.errors[fieldName];
                            setDefaultValue($viewValue, $modelValue, scope)
                        }
                    }
                }
            });
            return question
        }
        function setDefaultValue($viewValue, $modelValue, scope) {
            if ('checkbox' === $modelValue.type && _.isUndefined($viewValue)) scope.model[$modelValue.key] = false;
            if (_.includes($modelValue.type, 'radio') && _.isUndefined($viewValue)) scope.model[$modelValue.key] = null
        }
        function rewriteDisplayCondition(condition) {
            var SMS_ACTION_STRING = /APO\.getFieldValue\('smsChallengeRequested'\) == '1'/g;
            if (null !== condition.match(SMS_ACTION_STRING)) condition = condition.replace(SMS_ACTION_STRING, 'scope.model.action && scope.model.action.challengePressed === true');
            return '!' + condition.replace(/APO\.getFieldValue\('(\w+)'\)/g, 'scope.model.$1')
        }
        function isSelectOrRadioField(field) {
            return field.type === questionType.DROPDOWN.name || field.type === questionType.DROPDOWN_NO_LABEL.name || field.type === questionType.DROPDOWN_RUNTIME_ENUM.name || field.type === questionType.RADIOBUTTON_HORIZONTAL.name || field.type === questionType.RADIOBUTTON_VERTICAL.name
        }
        var _ = require('lodash'),
            angular = require('angular'),
            moment = require('moment'),
            platform = require('pf-shared-modules-platform'),
            wcmsEnumGenerator = require('pf-shared-modules-wcms_enum_generator'),
            util = require('pf-shared-modules-util'),
            type = {
                fieldType: new enums.Enum('QUESTION', 'SCREENKEY'),
                validationType: new enums.Enum('EMPTY', 'INVALID')
            },
            formlyType = {
                checkbox: 'checkbox',
                datepickerWithLabel: 'datepicker-with-label',
                datepickerAPOWithLabel: 'datepicker-apo-with-label',
                matchingTextfields: 'matching-textfields',
                multicheckbox: 'multicheckbox',
                radioVertical: 'radio-vertical',
                radioVerticalWithLabel: 'radio-vertical-with-label',
                radioWithLabel: 'radio-with-label',
                readonlyWithLabel: 'readonly-with-label',
                select: 'select',
                selectWithLabel: 'select-with-label',
                selectRuntime: 'select-runtime',
                telephoneCombo: 'telephone-combo',
                textInputWithLabel: 'text-input-with-label',
                input: 'text-input'
            },
            questionType = new enums.Enum({
                CHECKBOX: {
                    formlyType: formlyType.checkbox
                },
                DROPDOWN: {
                    formlyType: formlyType.selectWithLabel
                },
                DROPDOWN_NO_LABEL: {
                    formlyType: formlyType.select
                },
                DROPDOWN_RUNTIME_ENUM: {
                    formlyType: formlyType.selectRuntime
                },
                DATE: {
                    formlyType: formlyType.datepickerAPOWithLabel
                },
                DROPDOWN_TELEPHONE: {
                    formlyType: formlyType.telephoneCombo
                },
                DUAL_TEXTFIELD: {
                    formlyType: formlyType.matchingTextfields
                },
                MULTI_CHECKBOX_VERTICAL: {
                    formlyType: formlyType.multicheckbox
                },
                RADIOBUTTON_HORIZONTAL: {
                    formlyType: formlyType.radioWithLabel
                },
                RADIOBUTTON_VERTICAL: {
                    formlyType: formlyType.radioVertical
                },
                TEXTFIELD: {
                    formlyType: formlyType.textInputWithLabel
                },
                INPUT: {
                    formlyType: formlyType.input
                }
            }),
            validationExpression = _.template('!!(model.showErrorState === true && (model.errors.${field} === "invalid" ? true : null ||  model.errors.${field} === "empty" ? true : null))'),
            TYPE = {
                createScreenKey: function createScreenKey(field) {
                    var obj = {
                            key: field.name,
                            type: 'screenkey',
                            templateOptions: {
                                text: field.data.wcmsKey
                            },
                            className: 'wcms as-compact',
                            data: {
                                textKey: field.global.translationPrefix
                            }
                        },
                        funcs = [
                            TYPE.setDisplayCondition,
                            TYPE.setHelpIcon,
                            TYPE.setDisplayOnOverview
                        ];
                    _.forEach(funcs, function (func) {
                        func.bind(this) (obj, field)
                    }.bind(this));
                    return obj
                },
                createQuestion: function createQuestion(field) {
                    var obj = {
                            key: field.name,
                            type: typeConversion(field.type),
                            templateOptions: {
                                label: field.data.wcmsKey
                            },
                            data: {
                                textKey: field.global.translationPrefix
                            }
                        },
                        funcs = [
                            TYPE.setDisplayCondition,
                            TYPE.extendWithSubtypeOptions,
                            TYPE.setDefaultValue,
                            TYPE.setReadOnly,
                            TYPE.setHelpIcon,
                            TYPE.setDisplayOnOverview
                        ];
                    _.forEach(funcs, function (func) {
                        func.bind(this) (obj, field)
                    }.bind(this));
                    return obj
                },
                extendWithSubtypeOptions: function extendWithSubtypeOptions(obj, field) {
                    var childs = field.data.childElements;
                    switch (obj.type) {
                        case 'input':
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'text'
                                }
                            });
                            break;
                        case formlyType.textInputWithLabel:
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'text',
                                    maxlength: 48,
                                    size: 48,
                                    class: 'text large'
                                },
                                ngModelAttrs: {
                                    size: {
                                        bound: 'ng-size',
                                        attribute: 'size'
                                    }
                                },
                                modelOptions: {
                                    updateOn: 'blur',
                                    debounce: {
                                        blur: 0
                                    }
                                }
                            });
                            break;
                        case formlyType.radioVertical:
                        case formlyType.radioVerticalWithLabel:
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'radio',
                                    description: field.data.wcmsKey
                                },
                                wrapper: obj.type === formlyType.radioWithLabel ? 'fieldset-column' : [
                                    'ul',
                                    'fieldset-column',
                                    'error'
                                ]
                            });
                            if (childs[0].wcmsEnumKey) _.merge(obj, {
                                templateOptions: {
                                    options: buildEnumObject(childs[0], field)
                                }
                            });
                            break;
                        case formlyType.radioWithLabel:
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'radio',
                                    description: field.data.wcmsKey
                                },
                                wrapper: obj.type === formlyType.radioWithLabel ? 'fieldset-row' : [
                                    'ul',
                                    'fieldset-row',
                                    'error'
                                ]
                            });
                            if (childs[0].wcmsEnumKey) _.merge(obj, {
                                templateOptions: {
                                    options: buildEnumObject(childs[0], field)
                                }
                            });
                            break;
                        case formlyType.datepickerWithLabel:
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'text',
                                    size: 10
                                },
                                ngModelAttrs: {
                                    size: {
                                        bound: 'ng-size',
                                        attribute: 'size'
                                    }
                                },
                                modelOptions: {
                                    updateOn: 'blur',
                                    debounce: {
                                        blur: 0
                                    }
                                }
                            });
                            break;
                        case formlyType.datepickerAPOWithLabel:
                            if (childs[0].wcmsEnumKey) _.merge(obj, {
                                data: {
                                    options: buildEnumObject(childs[0], field)
                                }
                            });
                            break;
                        case formlyType.select:
                        case formlyType.selectWithLabel:
                            if (childs[0].wcmsEnumKey) _.merge(obj, {
                                templateOptions: {
                                    options: buildEnumObject(childs[0], field)
                                }
                            });
                            break;
                        case formlyType.selectRuntime:
                            if (childs[0].runtimeEnumValues) _.merge(obj, {
                                templateOptions: {
                                    options: buildRuntimeEnum(childs[0], field)
                                }
                            });
                            break;
                        case formlyType.checkbox:
                            _.merge(obj, {
                                templateOptions: {
                                    type: 'checkbox'
                                }
                            });
                            break;
                        case formlyType.multicheckbox:
                            if (childs[0].wcmsEnumKey) _.merge(obj, {
                                templateOptions: {
                                    options: buildEnumObject(childs[0], field)
                                },
                                data: {
                                    displayCSS: platform.isMobile() ? 'display:inline-block;width:100%' : '',
                                    checkboxMobile: platform.isMobile() ? 'min-height:4.6ex' : ''
                                },
                                defaultOptions: {
                                    noFormControl: false
                                }
                            })
                    }
                },
                setDisplayCondition: function setDisplayCondition(obj, field) {
                    if (field.data.displayCondition && field.data.evaluateDisplayCondition) _.merge(obj, {
                        hideExpression: function ($viewValue, $modelValue, scope) {
                            return eval(rewriteDisplayCondition(field.data.displayCondition.condition))
                        }
                    })
                },
                setDefaultValue: function setDefaultValue(obj, field) {
                    var childs = field.data.childElements;
                    if (childs[0].value) _.merge(obj, {
                        defaultValue: isSelectOrRadioField(field) && util.isNumber(childs[0].value) ? parseInt(childs[0].value, 10)  : childs[0].value
                    })
                },
                setReadOnly: function setReadOnly(obj, field) {
                    if (field.data.readonly) _.merge(obj, {
                        type: formlyType.readonlyWithLabel,
                        data: {
                            viewValue: this.getMultifieldValue(obj, field)
                        },
                        wrapper: ''
                    })
                },
                getMultifieldValue: function getMultifieldValue(obj, field) {
                    var result = [
                        ],
                        childs = field.data.childElements,
                        translate = field.global.angular.filter('pfTranslate');
                    _.forEach(childs, function (child, index) {
                        if (child.wcmsEnumKey) if (field.type === questionType.MULTI_CHECKBOX_VERTICAL.name && child.value) _.forEach(child.value.split(','), function (item, index) {
                            var key = item,
                                scope = _.clone(obj.data);
                            scope.textKey = field.global.translationPrefix;
                            try {
                                var translationKey = wcmsEnumGenerator.expandEnum(scope.textKey, child.wcmsEnumKey, key);
                                result.push(translate(translationKey))
                            } catch (e) {
                                angular.noop()
                            }
                        });
                        else {
                            var key = child.value,
                                scope = _.clone(obj.data);
                            scope.textKey = field.global.translationPrefix;
                            try {
                                var translationKey = wcmsEnumGenerator.expandEnum(scope.textKey, child.wcmsEnumKey, key);
                                result.push(translate(translationKey))
                            } catch (e) {
                                angular.noop()
                            }
                        } else if (child.runtimeEnumValues) _.map(child.runtimeEnumValues, function (value, key) {
                            if (key === child.value) result.push(value.text + ' - ' + value.name)
                        });
                        else result.push(child.value)
                    });
                    if (field.data.questionType === questionType.DUAL_TEXTFIELD.name) return result[0];
                    else if (field.data.questionType === questionType.DROPDOWN_TELEPHONE.name) return ['+41'].concat([_.startsWith(result[0], '0') ? result[0].slice(1)  : result[0],
                        result[1]]).join('');
                    else if (field.type === questionType.MULTI_CHECKBOX_VERTICAL.name) return result.join(', ');
                    return result.join(' ')
                },
                setHelpIcon: function setHelpIcon(obj, field) {
                    if (!field.data.readonly) if (field.data.infoTitleKey || field.data.infoContentKey) _.merge(obj, {
                        data: {
                            helpTitleKey: field.data.infoTitleKey,
                            helpContentKey: field.data.infoContentKey
                        }
                    })
                },
                setDisplayOnOverview: function setDisplayOnOverview(obj, field) {
                    _.merge(obj, {
                        data: {
                            displayOnOverview: !!field.data.displayOnOverview
                        }
                    })
                }
            };
        return {
            generateDatafieldsForParagraph: generateDatafieldsForParagraph
        }
    })
}();
define('fipo/lib/shared/modules/apoConverter', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-app_links', [
        'require',
        'lodash',
        'jquery',
        'pf-shared-modules-urls',
        'pf-app-detect'
    ], function (require) {
        function registerListeners() {
            if (!registered) {
                if (detect.isApp()) jQuery(document).on('click', 'a.openInOverlay', function (event) {
                    var linkElement = event.target;
                    if (!_.isUndefined(linkElement.href)) {
                        event.preventDefault();
                        event.stopPropagation();
                        urls.openInternalUrl(linkElement.href)
                    }
                });
                registered = true
            }
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            urls = require('pf-shared-modules-urls'),
            detect = require('pf-app-detect'),
            registered = false;
        return {
            registerListeners: registerListeners
        }
    })
}();
define('fipo/lib/shared/modules/appLinks', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-charts', [
        'require',
        'lodash',
        'highcharts'
    ], function (require) {
        function createConfig(symbols, numberOfDecimals, filterFn) {
            return {
                valueFormatter: createValueFormatter(symbols, numberOfDecimals, filterFn)
            }
        }
        function createValueFormatter(symbols, numberOfDecimals, filterFn) {
            return function valueFormatter() {
                var value = this.value,
                    numericSymbols = symbols,
                    numericSymbolDetector = Math.abs(value);
                return shortenValues(value, numericSymbolDetector, numericSymbols, numberOfDecimals || - 1, filterFn)
            }
        }
        function shortenValues(value, numericSymbolDetector, numericSymbols, numberOfDecimals, filterFn) {
            var ret,
                multi,
                formattedValue,
                i = numericSymbols && numericSymbols.length;
            if (0 === value) return 0;
            if (i && numericSymbolDetector >= 1000) while (i-- && _.isUndefined(ret)) {
                multi = Math.pow(1000, i + 1);
                if (numericSymbolDetector >= multi && null !== numericSymbols[i]) {
                    var valueToFormat = value / multi;
                    if (_.isFunction(filterFn)) formattedValue = filterFn(valueToFormat);
                    else formattedValue = Highcharts.numberFormat(valueToFormat, numberOfDecimals);
                    ret = formattedValue + numericSymbols[i]
                }
            }
            if (_.isUndefined(ret)) {
                if (_.isFunction(filterFn)) formattedValue = filterFn(value);
                else formattedValue = Highcharts.numberFormat(value, numberOfDecimals);
                ret = formattedValue
            }
            return ret
        }
        function addAccessibilityTable(chart, tableElement, options) {
            function formatTableValues(selector, formatFn) {
                for (var values = tableElement.querySelectorAll(selector), numValues = values.length, j = 0; j < numValues; j++) {
                    var elem = values[j],
                        text = elem.innerHTML;
                    elem.innerHTML = formatFn(text)
                }
            }
            tableElement.innerHTML = chart.getTable();
            tableElement.style.position = 'absolute';
            tableElement.style.left = '-9999em';
            tableElement.style.width = '1px';
            tableElement.style.height = '1px';
            tableElement.style.overflow = 'hidden';
            if (options.headers && options.headers.length) for (var tableHeaders = tableElement.querySelectorAll('th'), i = 0; i < tableHeaders.length; i++) {
                var tableHeader = tableHeaders[i],
                    tableHeaderCaption = options.headers[i];
                if (tableHeaderCaption) tableHeader.innerHTML = tableHeaderCaption
            }
            if (options.formatter) {
                if (options.formatter.dates) formatTableValues('td:not(.number)', options.formatter.dates);
                if (options.formatter.numbers) formatTableValues('td.number', options.formatter.numbers)
            }
        }
        var _ = require('lodash'),
            Highcharts = require('highcharts');
        return {
            createConfig: createConfig,
            shortenValues: shortenValues,
            addAccessibilityTable: addAccessibilityTable
        }
    })
}();
define('fipo/lib/shared/modules/charts', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-clientmessages', [
        'require',
        'lodash'
    ], function (require) {
        function createErrorMessage(messageKey, dataPrefix, title, fullKey) {
            var message = {
                messages: {
                    errors: [
                        {
                            translated: false,
                            message: messageKey,
                            title: title,
                            fullKey: fullKey
                        }
                    ]
                }
            };
            if (dataPrefix) return {
                data: message
            };
            else return message
        }
        function createDefaultErrorMessage() {
            return createErrorMessage('global.scrError_TechnicalError', null, null, true)
        }
        function createErrorResponse(errorType, messageKey) {
            return {
                error: {
                    type: errorType ? errorType : type.error.TECHNICAL,
                    message: {
                        translated: false,
                        fullKey: false,
                        message: messageKey ? messageKey : 'scrError_TechnicalError'
                    }
                }
            }
        }
        function createTechnicalErrorResponse() {
            return createErrorResponse()
        }
        function createTimeoutErrorResponse() {
            return createErrorResponse(type.error.TIMEOUT, 'TimeoutError')
        }
        function createConnectionErrorResponse() {
            return createErrorResponse(type.error.CONNECTION, 'ConnectionError')
        }
        function createHttpErrorResponse() {
            return createErrorResponse(type.error.HTTP, 'HttpError')
        }
        function createMessage(messageType, message, paramObj, fullKey) {
            var messageObj = {
            };
            messageObj[messageType] = [
                {
                    translated: false,
                    fullKey: fullKey || false,
                    message: message,
                    data: paramObj
                }
            ];
            return messageObj
        }
        function createAbsMessage(message) {
            return createMessage(type.messages.ABS, message)
        }
        function createSuccess(message, paramObj, fullKey) {
            return createMessage(type.messages.SUCCESS, message, paramObj, fullKey)
        }
        function createNotice(message, paramObj, fullKey) {
            return createMessage(type.messages.NOTICES, message, paramObj, fullKey)
        }
        function createInfo(message, paramObj, fullKey) {
            return createMessage(type.messages.INFOS, message, paramObj, fullKey)
        }
        function createError(message, paramObj, fullKey) {
            return createMessage(type.messages.ERRORS, message, paramObj, fullKey)
        }
        function escapeHtml(text) {
            if (_.has(text, 'replace')) return text.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            else return text
        }
        function joinMessages(left, right) {
            var joinedMessages = {
            };
            _.forEach(type.messages, function (msgType) {
                if (_.has(left, msgType) || _.has(right, msgType)) joinedMessages[msgType] = _.concat(_.get(left, msgType, [
                ]), _.get(right, msgType, [
                ]))
            });
            return joinedMessages
        }
        function expandKeysForMessageInternal(message, textKey) {
            if (!message.translated && !message.fullKey) {
                message.fullKey = true;
                if (message.title) message.title = [
                    textKey,
                    message.title
                ].join('.');
                message.message = [
                    textKey,
                    message.message
                ].join('.')
            }
        }
        function expandKeys(messages, textKey) {
            _.forEach(messages, function (value) {
                _.forEach(value, function (message) {
                    expandKeysForMessageInternal(message, textKey)
                })
            });
            return messages
        }
        function expandKeysForError(error, textKey) {
            expandKeysForMessageInternal(error.message, textKey);
            return error
        }
        var _ = require('lodash'),
            type = {
                error: {
                    TECHNICAL: 'ERROR_TECHNICAL',
                    TIMEOUT: 'ERROR_TIMEOUT',
                    CONNECTION: 'ERROR_CONNECTION',
                    HTTP: 'ERROR_HTTP'
                },
                messages: {
                    NOTICES: 'notices',
                    INFOS: 'infos',
                    ERRORS: 'errors',
                    SUCCESS: 'success',
                    ABS: 'abs'
                }
            },
            countMessages = function countMessages(messages) {
                var count = 0;
                _.forEach(type.messages, function (messageType) {
                    var messageArray = _.get(messages, messageType);
                    count += _.size(messageArray)
                });
                return count
            },
            hasErrors = function hasErrors(messages) {
                var messageArray = _.get(messages, type.messages.ERRORS);
                return _.size(messageArray) > 0
            };
        return {
            countMessages: countMessages,
            hasErrors: hasErrors,
            createErrorMessage: createErrorMessage,
            createDefaultErrorMessage: createDefaultErrorMessage,
            createErrorResponse: createErrorResponse,
            createTechnicalErrorResponse: createTechnicalErrorResponse,
            createTimeoutErrorResponse: createTimeoutErrorResponse,
            createConnectionErrorResponse: createConnectionErrorResponse,
            createHttpErrorResponse: createHttpErrorResponse,
            createSuccess: createSuccess,
            createMessage: createMessage,
            createAbsMessage: createAbsMessage,
            createNotice: createNotice,
            createInfo: createInfo,
            createError: createError,
            escapeHtml: escapeHtml,
            joinMessages: joinMessages,
            expandKeys: expandKeys,
            expandKeysForError: expandKeysForError,
            type: type
        }
    })
}();
define('fipo/lib/shared/modules/clientMessages', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-cockpit-charts', [
        'require',
        'lodash',
        'pf-shared-modules-numbers'
    ], function (require) {
        function wrapWithStyle(text, style) {
            return '<span style="' + style + '">' + text + '</span>'
        }
        function calculatePercentages(values) {
            var total = calculateTotal(values),
                splitValues = _.map(values, function (value, index) {
                    var exact = value / total * 100,
                        remainder = exact % 1;
                    return {
                        index: index,
                        base: parseInt(exact, 10),
                        remainder: remainder
                    }
                }),
                baseTotal = calculateTotal(getBaseValues(splitValues)),
                remainingPercentage = 100 - baseTotal;
            splitValues.sort(function (a, b) {
                return b.remainder - a.remainder
            });
            for (var i = 0; i < remainingPercentage; i++) splitValues[i].base += 1;
            splitValues.sort(function (a, b) {
                return a.index - b.index
            });
            return getBaseValues(splitValues)
        }
        function getBaseValues(splitValues) {
            return _.map(splitValues, 'base')
        }
        function calculateTotal(values) {
            return _.reduce(values, function (prev, curr) {
                return prev + curr
            }, 0)
        }
        function getCategoryColor(category, subcategory) {
            if (category === - 2) return colors.categories.secondary.other;
            if (0 === category) return colors.categories.secondary.uncategorized;
            var usedSubcategory = subcategory || 0,
                internalCategory = category > 0 ? category - 1 : category,
                internalSubcategory = usedSubcategory > 0 ? usedSubcategory - 1 : usedSubcategory,
                index = internalCategory - internalSubcategory,
                arrayIndex = index < 0 ? index + colors.categories.primary.length : index;
            return colors.categories.primary[arrayIndex]
        }
        var _ = require('lodash'),
            numbers = require('pf-shared-modules-numbers'),
            colors = pf.globals.chartColors,
            fontFamily = 'font-family: Frutiger,Helvetica,sans-serif;',
            fontBase = fontFamily + 'color:' + pf.globals.chartColors.labels.pie + ';',
            fontStyles = {
                NORMAL: fontBase + 'font-weight:normal;',
                BOLD: fontBase + 'font-weight:bold;'
            },
            createColumnChartData = function createColumnChartData(chartData) {
                for (var categories = {
                }, chartDataCategories = [
                ], chartDataValues = [
                ], i = 0; i < chartData.length; i++) {
                    var item = chartData[i],
                        year = item.date.year,
                        amount = item.amount,
                        cat = item.name;
                    chartDataCategories.push(cat);
                    categories[cat] = {
                        month: cat,
                        year: year
                    };
                    chartDataValues.push({
                        y: amount,
                        color: amount >= 0 ? colors.column.positive : colors.column.negative
                    })
                }
                var lastCategory = chartDataCategories[chartDataCategories.length - 1],
                    tooltipFormatter = function tooltipFormatter() {
                        var formattedAmount = numbers.filterAmount(this.y, numbers.indicator.plusAndMinus),
                            date = categories[this.x],
                            tooltip = '<div class="tooltip"><div class="tooltip--inner">';
                        tooltip += date.month + ' ' + date.year;
                        tooltip += ':<br><strong>';
                        tooltip += formattedAmount;
                        tooltip += '</strong></div></div>';
                        return tooltip
                    },
                    yAxisFormatter = function yAxisFormatter(value) {
                        return numbers.formatAmountWithCurrency(value, pf.globals.types.currency.CHF, numbers.indicator.plusAndMinus)
                    };
                return {
                    categories: chartDataCategories,
                    lastCategory: lastCategory,
                    values: chartDataValues,
                    colors: {
                        positive: colors.column.positive,
                        negative: colors.column.negative
                    },
                    tooltipFormatter: tooltipFormatter,
                    yAxisFormatter: yAxisFormatter,
                    formatNumber: numbers.filterAmount
                }
            },
            createPieChartAbsoluteData = function createPieChartData(chartData) {
                return {
                    settings: {
                        chart: {
                            marginLeft: 4,
                            marginRight: 4,
                            spacingBottom: 20
                        },
                        plotOptions: {
                            pie: {
                                size: '80%',
                                minSize: '50%',
                                dataLabels: {
                                    formatter: function () {
                                        return wrapWithStyle(this.key, fontStyles.BOLD) + '<br/>' + wrapWithStyle(numbers.formatAmountWithCurrency(this.y, pf.globals.types.currency.CHF, numbers.indicator.none), fontStyles.NORMAL)
                                    }
                                }
                            }
                        },
                        series: [
                            {
                                data: _.map(chartData, function (element) {
                                    return {
                                        name: element.name,
                                        y: Math.abs(element.amount),
                                        color: getCategoryColor(element.parentCatId)
                                    }
                                })
                            }
                        ]
                    }
                }
            },
            createPieChartRelativeData = function createPieChartData(chartData) {
                var percentages = calculatePercentages(_.map(chartData, function (element) {
                        return Math.abs(element.amount)
                    })),
                    values = _.map(chartData, function (element, index) {
                        return {
                            name: element.name,
                            y: percentages[index],
                            color: getCategoryColor(element.parentCatId)
                        }
                    });
                return {
                    settings: {
                        chart: {
                            marginLeft: 4,
                            marginRight: 4,
                            spacingBottom: 7
                        },
                        plotOptions: {
                            pie: {
                                size: '80%',
                                minSize: '50%',
                                dataLabels: {
                                    formatter: function () {
                                        var value;
                                        if (0 === this.y) value = '<1';
                                        else value = this.y;
                                        return wrapWithStyle(this.key, fontStyles.BOLD) + '<br/>' + wrapWithStyle(value + '%', fontStyles.NORMAL)
                                    }
                                }
                            }
                        },
                        series: [
                            {
                                data: values
                            }
                        ]
                    }
                }
            };
        return {
            createColumnChartData: createColumnChartData,
            createPieChartAbsoluteData: createPieChartAbsoluteData,
            createPieChartRelativeData: createPieChartRelativeData,
            getCategoryColor: getCategoryColor
        }
    })
}();
define('fipo/lib/shared/modules/cockpit/charts', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-cockpit-ecservice', [
        'require',
        'lodash',
        'moment',
        'pf-shared-modules-dates'
    ], function (require) {
        var _ = require('lodash'),
            moment = require('moment'),
            dateService = require('pf-shared-modules-dates'),
            dateSorter = function dateSorter(a, b) {
                if (a.month < b.month) return - 1;
                if (a.month > b.month) return 1;
                else return 0
            },
            sortAfterDate = function sortAfterDate(array) {
                array.sort(dateSorter)
            },
            extendItemWithDate = function extendItemWithDate(item) {
                if (item) {
                    var month = item.month;
                    if (month && _.isString(month)) {
                        var date = dateService.extractFromIso(item.month);
                        item.date = item.date || date
                    }
                }
            },
            extendArrayWithDate = function extendArrayWithDate(arr) {
                _.forEach(arr, function (item) {
                    extendItemWithDate(item)
                })
            },
            getLastThreeMonths = function getLastThreeMonths() {
                var startDate = moment().subtract(2, 'months').startOf('month').format(pf.globals.formats.moment.ISO_DATE),
                    endDate = moment().endOf('month').format(pf.globals.formats.moment.ISO_DATE);
                return {
                    startDate: startDate,
                    endDate: endDate
                }
            },
            fillWithUnselected = function fillWithUnselected(allItems, activeItems) {
                for (var i = activeItems.length; i < 3 && i < allItems.length; i++) activeItems.push(getUnselectedItem(allItems, activeItems))
            },
            fillDates = function fillDates(startDate, endDate, model, enumObj, translator) {
                if (startDate) {
                    model.startMonth = translator(enumObj[startDate.month].key);
                    model.startYear = startDate.year
                }
                if (endDate) {
                    model.endMonth = translator(enumObj[endDate.month].key);
                    model.endYear = endDate.year
                }
            },
            fillDatesFromCurrent = function fillDatesFromCurrent(model, enumObj, translator) {
                var dates = getLastThreeMonths(),
                    startMonth = dateService.extractFromIso(dates.startDate),
                    endMonth = dateService.extractFromIso(dates.endDate);
                fillDates(startMonth, endMonth, model, enumObj, translator)
            },
            getActiveItems = function getActiveItems(allItems, storedIds) {
                var activeItems = _.filter(allItems, function (item) {
                        return _.some(storedIds, function (storedId) {
                            return storedId === item.id
                        })
                    }),
                    numActiveFromStorage = activeItems.length,
                    hasLostItems = numActiveFromStorage !== storedIds.length;
                fillWithUnselected(allItems, activeItems);
                var hasGainedItems = numActiveFromStorage !== storedIds.length;
                return {
                    items: activeItems,
                    hasBeenModified: hasLostItems || hasGainedItems
                }
            },
            isContained = function isContained(activeItems, item) {
                return _.some(activeItems, {
                    id: item.id
                })
            },
            getUnselectedItem = function getUnselectedItem(allItems, activeItems) {
                var result = null;
                _.forEach(allItems, function (item) {
                    if (!(result || isContained(activeItems, item))) result = item
                });
                return result
            },
            getCurrentMonth = function getCurrentMonth() {
                var startDate = moment().startOf('month').format(pf.globals.formats.moment.ISO_DATE),
                    endDate = moment().endOf('month').format(pf.globals.formats.moment.ISO_DATE);
                return {
                    startDate: startDate,
                    endDate: endDate
                }
            },
            fillMissingDates = function fillMissingDates(items, dates) {
                var currentDate = moment(dates.startDate),
                    endDate = moment(dates.endDate),
                    monthToLookFor,
                    isMatchingMonth = function isMatchingMonth(item) {
                        return item.month === monthToLookFor
                    };
                while (currentDate.isBefore(endDate)) {
                    monthToLookFor = currentDate.format(pf.globals.formats.moment.ISO_MONTH);
                    var dateIsContained = _.some(items, isMatchingMonth);
                    if (!dateIsContained) items.push({
                        amount: 0,
                        month: monthToLookFor
                    });
                    currentDate.add(1, 'month')
                }
                sortAfterDate(items)
            };
        return {
            fillMissingDates: fillMissingDates,
            getCurrentMonth: getCurrentMonth,
            getLastThreeMonths: getLastThreeMonths,
            getUnselectedItem: getUnselectedItem,
            fillWithUnselected: fillWithUnselected,
            isContained: isContained,
            getActiveItems: getActiveItems,
            fillDates: fillDates,
            fillDatesFromCurrent: fillDatesFromCurrent,
            extendItemWithDate: extendItemWithDate,
            extendArrayWithDate: extendArrayWithDate,
            sortAfterDate: sortAfterDate
        }
    })
}();
define('fipo/lib/shared/modules/cockpit/ecservice', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-cockpit-subselect', [
        'require',
        'lodash'
    ], function (require) {
        var _ = require('lodash'),
            Service = function Service() {
                this.scope = null;
                this.resetCallback = null;
                this.init = function init(scope, resetCallback) {
                    this.scope = scope;
                    this.resetCallback = resetCallback;
                    this.reset()
                };
                this.updateSelectedItems = function updateSelectedItems() {
                    this.reset();
                    this.scope.updateSelected()
                };
                this.resetArrays = function resetArrays() {
                    this.scope.firstItems = this.scope.items.slice();
                    this.scope.secondItems = this.scope.items.slice();
                    this.scope.thirdItems = this.scope.items.slice()
                };
                this.equals = function equals(valueA, valueB) {
                    return valueA.text === valueB.text
                };
                this.reset = function reset() {
                    this.resetArrays();
                    if (_.isFunction(this.resetCallback)) this.resetCallback()
                }
            };
        return {
            Service: Service
        }
    })
}();
define('fipo/lib/shared/modules/cockpit/subselect', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-cookies', [
        'require',
        'lodash',
        'js-cookie'
    ], function (require) {
        function get(name) {
            return jsCookie.get(name)
        }
        function set(name, value, options) {
            return jsCookie.set(name, value, options)
        }
        function setSecure(name, value, options) {
            var secureOptions = {
            };
            _.assign(secureOptions, {
            }, options, {
                secure: true
            });
            return set(name, value, secureOptions)
        }
        function remove(name, options) {
            return jsCookie.remove(name, options)
        }
        var _ = require('lodash'),
            jsCookie = require('js-cookie');
        return {
            get: get,
            set: set,
            setSecure: setSecure,
            remove: remove
        }
    })
}();
define('fipo/lib/shared/modules/cookies', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-credit_card', [
        'require',
        'lodash'
    ], function (require) {
        function formatAccountNumber(accountNumber) {
            if (_.isUndefined(accountNumber)) return '';
            else return _.padStart(accountNumber, 16, '0').replace(/(\d{4})/g, '$1 ').trim()
        }
        function formatCardNumber(cardNumber) {
            if (_.isUndefined(cardNumber)) return '';
            else return _.upperCase(cardNumber).replace(/(\D{4})/g, ' $1').trim()
        }
        function formatCardNumberShort(cardNumber) {
            if (_.isUndefined(cardNumber)) return '';
            else return cardNumber.substr(cardNumber.length - 4)
        }
        function isVisa(productCode) {
            return _.includes(pf.globals.types.creditcard.VISA, productCode)
        }
        function isMastercard(productCode) {
            return _.includes(pf.globals.types.creditcard.MASTERCARD, productCode)
        }
        function getIconClass(productCode) {
            if (isMastercard(productCode)) return getIconMastercard();
            else if (isVisa(productCode)) return getIconVisa();
            return null
        }
        function getIconVisa() {
            return 'icon-visa'
        }
        function getIconMastercard() {
            return 'icon-mastercard'
        }
        var _ = require('lodash');
        return {
            formatAccountNumber: formatAccountNumber,
            formatCardNumber: formatCardNumber,
            formatCardNumberShort: formatCardNumberShort,
            isVisa: isVisa,
            isMastercard: isMastercard,
            getIconClass: getIconClass,
            getIconVisa: getIconVisa,
            getIconMastercard: getIconMastercard
        }
    })
}();
define('fipo/lib/shared/modules/creditCard', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-csv_exporter', [
        'require',
        'lodash',
        'filesaver',
        'pf-shared-modules-translator'
    ], function (require) {
        function createCsvFile(data, filename, addDisclaimer) {
            if (_.isArray(data) && filename) {
                var translate = translator.translate,
                    csvType = 'text/csv;charset=utf-8,',
                    csvContent = '',
                    dataString;
                _.forEach(data, function (infoArray, index) {
                    dataString = infoArray.join(';');
                    csvContent += index < data.length ? dataString + '\n' : dataString
                });
                if (addDisclaimer) {
                    csvContent += '\n';
                    csvContent += translate('DisclaimerTitle', {
                        textKey: 'global'
                    }) + ';\n';
                    csvContent += translate('Disclaimer', {
                        textKey: 'global'
                    }) + ';'
                }
                try {
                    var blob = new Blob([csvContent], {
                        type: csvType
                    });
                    filesaver(blob, filename)
                } catch (e) {
                    saveText(csvContent, filename)
                }
            }
        }
        function saveText(csvContent, filename) {
            var content = (csvContent || '').replace(/\r?\n/g, '\r\n'),
                saveTxtWindow = window.frames.saveTxtWindow;
            if (!saveTxtWindow) {
                saveTxtWindow = document.createElement('iframe');
                saveTxtWindow.id = 'saveTxtWindow';
                saveTxtWindow.style.display = 'none';
                document.body.insertBefore(saveTxtWindow, null);
                saveTxtWindow = window.frames.saveTxtWindow;
                if (!saveTxtWindow) {
                    saveTxtWindow = window.open('', '_temp', 'width=100,height=100');
                    if (!saveTxtWindow) return false
                }
            }
            var doc = saveTxtWindow.document;
            doc.open('text/plain', 'replace');
            doc.charset = 'utf-8';
            doc.write(content);
            doc.close();
            var fullFilename = filename + '.txt',
                retValue = doc.execCommand('SaveAs', null, fullFilename);
            saveTxtWindow.close();
            return retValue
        }
        var _ = require('lodash'),
            filesaver = require('filesaver'),
            translator = require('pf-shared-modules-translator');
        return {
            createCsvFile: createCsvFile
        }
    })
}(window);
define('fipo/lib/shared/modules/csvExporter', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-currencies', [
        'require',
        'lodash',
        'pf-shared-modules-wcms_enum_generator'
    ], function (require) {
        function getLiteral(currency) {
            initIfNecessary();
            return literals[currency]
        }
        function getText(currency) {
            initIfNecessary();
            return texts[currency]
        }
        function getExtended(currency) {
            initIfNecessary();
            return extended[currency]
        }
        function getCurrency(currency) {
            initIfNecessary();
            return {
                value: currency,
                literal: getLiteral(currency),
                text: getText(currency),
                extended: getExtended(currency)
            }
        }
        function format(currency, indicator) {
            if (_.isNumber(currency)) switch (indicator) {
                case formatIndicator.text:
                    return getText(currency);
                case formatIndicator.extended:
                    return getExtended(currency);
                default:
                    return getLiteral(currency)
            }
            return currency
        }
        function initIfNecessary() {
            if (!loaded) {
                literals = _.mapValues(wcmsEnum.getEnumObject('currencyLiteral'), function (currency) {
                    return currency.text
                });
                texts = {
                };
                extended = {
                };
                _.forEach(wcmsEnum.getEnumObject('currencyText'), function (currency) {
                    texts[currency.id] = currency.text;
                    extended[currency.id] = literals[currency.id] + ' (' + currency.text + ')'
                });
                loaded = true
            }
        }
        var _ = require('lodash'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            loaded = false,
            literals,
            texts,
            extended,
            formatIndicator = {
                literal: 'literal',
                text: 'text',
                extended: 'extended'
            };
        return {
            indicator: formatIndicator,
            getLiteral: getLiteral,
            getText: getText,
            getExtended: getExtended,
            getCurrency: getCurrency,
            format: format
        }
    })
}();
define('fipo/lib/shared/modules/currencies', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-customer_support', [
        'require',
        'lodash',
        'pf-shared-modules-platform',
        'pf-app-detect'
    ], function (require) {
        function showSupportChat() {
            var supportChatLanguages = _.split(b$.portal.supportChatLanguages, '|');
            return !platform.isMobile() && _.includes(supportChatLanguages, platform.getPageLanguage())
        }
        function showVirtualAssistant() {
            var virtualAssistantLanguages = _.split(b$.portal.virtualAssistantLanguages, '|');
            return !detect.isSmartphoneApp() && _.includes(virtualAssistantLanguages, platform.getPageLanguage())
        }
        function openSupportChat() {
            if (platform.isDemo()) notInDemo();
            else window.openSupportChat()
        }
        function openVirtualAssistant() {
            if (platform.isDemo()) notInDemo();
            else {
                var loadAgent = function () {
                    Nina.AgentLoader.loadAgent(b$.portal.virtualAssistantAgent)
                };
                if (_.isNil(window.Nina)) importScript(b$.portal.virtualAssistantScript, loadAgent);
                else loadAgent()
            }
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            detect = require('pf-app-detect');
        return {
            showSupportChat: showSupportChat,
            showVirtualAssistant: showVirtualAssistant,
            openSupportChat: openSupportChat,
            openVirtualAssistant: openVirtualAssistant
        }
    })
}();
define('fipo/lib/shared/modules/customerSupport', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-dates', [
        'require',
        'lodash',
        'moment',
        'pf-shared-modules-translator_direct'
    ], function (require) {
        function getYearDropdownOptionsByMonths(numberOfMonthsBack, $scope, allItemValue) {
            var yearOptions = createYearOptions(moment(), numberOfMonthsBack);
            yearOptions.unshift({
                name: translator.translate('AllEntries', $scope),
                value: allItemValue
            });
            return yearOptions
        }
        function createYearOptions(startDate, numMonths) {
            function createYearEntry(year) {
                return {
                    name: year,
                    value: year
                }
            }
            var currentYear = startDate.year(),
                options = [
                ];
            options.push(createYearEntry(currentYear));
            var remainingMonths = numMonths,
                previousDate = startDate;
            while (remainingMonths > 0) {
                var date = previousDate.clone().subtract(Math.min(remainingMonths, 12), 'months');
                if (date.year() !== previousDate.year()) options.push(createYearEntry(date.year()));
                remainingMonths -= 12;
                previousDate = date
            }
            return options
        }
        var _ = require('lodash'),
            moment = require('moment'),
            translator = require('pf-shared-modules-translator_direct'),
            extractFromIso = function extractFromIso(isoString) {
                if (!_.isString(isoString)) return null;
                var date = new Date(isoString);
                return {
                    day: date.getDate(),
                    month: date.getMonth() + 1,
                    year: date.getFullYear()
                }
            };
        return {
            extractFromIso: extractFromIso,
            getYearDropdownOptionsByMonths: getYearDropdownOptionsByMonths
        }
    })
}();
define('fipo/lib/shared/modules/dates', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-deferred_window', [
    ], function () {
        function DeferredWindow() {
            var deferredWindow = null,
                create = function create(name, props) {
                    if (props) deferredWindow = window.open('', name ? name : '_blank', props);
                    else deferredWindow = window.open('', name ? name : '_blank');
                    deferredWindow.blur();
                    window.focus()
                },
                close = function close() {
                    if (deferredWindow) deferredWindow.close()
                },
                openLocation = function openLocation(url) {
                    if (deferredWindow) {
                        deferredWindow.location.href = url;
                        deferredWindow.focus()
                    }
                };
            return {
                create: create,
                close: close,
                openLocation: openLocation
            }
        }
        return {
            DeferredWindow: DeferredWindow
        }
    })
}(window);
define('fipo/lib/shared/modules/deferredWindow', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_abstract', [
        'require',
        'lodash',
        'pf-app-detect',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-urls',
        'pf-shared-modules-pageloader',
        'pf-shared-modules-focus',
        'pf-shared-modules-translate_engine',
        'pf-shared-modules-translator',
        'pf-shared-modules-detailpages-detail_page_containers',
        'pf-shared-modules-detail_page_leave_callback',
        'pf-shared-modules-detail_page_names',
        'pf-shared-modules-scrolling',
        'pf-shared-modules-historyservice',
        'pf-shared-modules-loggerfactory',
        'pf-shared-modules-detailpages-detail_page_type_pfjson',
        'pf-shared-modules-detailpages-detail_page_type_json',
        'pf-shared-modules-detailpages-detail_page_type_wcms',
        'pf-shared-modules-detailpages-detail_page_type_iframe'
    ], function (require) {
        function DetailPageAbstract(DetailPageDisplayType, $module, widget, widgetName, $scope, $state, $sce, $timeout, $window, DialogService) {
            var ctrl = this;
            ctrl.logger = loggerFactory.getLogger('DetailPageAbstract');
            ctrl.unbindStatechangeSuccess = $scope.$on('$stateChangeSuccess', function (event, toState, toArgs, fromState) {
                if ((toState.name === pf.globals.states.detailpage.empty || toState.name === pf.globals.states.detailpage.error) && 'OVERLAY' === DetailPageDisplayType) {
                    $scope.hideCloseBtn = false;
                    if (!$scope.tabsVisibility) $scope.extraCloseBtn = !platform.isMobile();
                    else $scope.extraCloseBtn = false
                } else $scope.extraCloseBtn = false;
                var doFocus = true;
                if ('OVERLAY' !== DetailPageDisplayType) doFocus = !(ctrl.isSpecialState(toState) || ctrl.isSpecialState(fromState));
                var focusTitle = ctrl.isFocusTitle(toState, fromState);
                if (doFocus) {
                    focus.focusElement(document.querySelector('.detail_content--close_button.js-detail_overlay_close'));
                    ctrl.unlistenFocus = $scope.$on('$viewContentLoaded', function () {
                        if (!_.isUndefined(toState.data) && _.isFunction(toState.data.focusFunction)) toState.data.focusFunction();
                        else if ('OVERLAY' === DetailPageDisplayType) focus.detailOverlayFocus(focusTitle);
                        else focus.detailpageFocus(focusTitle);
                        ctrl.unlistenFocus()
                    })
                }
                if ($scope.displayTabs && 'JSON' === ctrl.getDetailPageType()) {
                    if (!ctrl.isErrorState(toState)) ctrl.setSelectedTab(toState);
                    ctrl.hidePageLoader()
                }
            });
            ctrl.unbindStateChangeStart = $scope.$on('$stateChangeStart', function (event, toState, toParams, fromState, fromParams, options) {
                var performCheck = !ctrl.isSpecialState(toState) && !ctrl.isSpecialState(fromState) && !options.ignorePageLeaveCheck;
                if (performCheck && $scope._config.leaveCallback.notYetProcessed()) {
                    var hasUserAction = ctrl.evaluateLeaveCallback(ctrl.createChangeStateFn(toState, toParams, options), ctrl.keepState);
                    if (hasUserAction) event.preventDefault()
                } else $scope._config.leaveCallback.clear()
            });
            ctrl.unbindStatechangeCancel = $scope.$on('$stateChangeCancel', function (event, toState, toArgs, fromState) {
                $timeout(function () {
                    ctrl.setSelectedTab(fromState)
                });
                ctrl.hidePageLoader()
            });
            ctrl.translate = translator.translate;
            ctrl.detailPageFinally = function detailPageFinally() {
                $timeout(function () {
                    ctrl.hidePageLoader();
                    _.invoke(ctrl, 'openContainer');
                    ctrl.currentUrlObj = null
                })
            };
            ctrl.detailPageError = function detailPageError(err) {
                var _urlObj = ctrl.currentUrlObj || detailPageError.urlObj;
                ctrl.logger.error('Error during loading of detail page, message: {0}, type: {1}, url: {2}', [
                    err.error ? err.error.message.message : '',
                    _urlObj ? _urlObj.type : 'no type',
                    _urlObj ? _urlObj.url : 'no url'
                ]);
                angular.extend($scope, err);
                $scope.detailPageType = 'JSON';
                $scope.displayTabs = false;
                $scope.includePath = platform.getResourceRoot() + '/static/fipo/templates/emptyDetailpage.html';
                ctrl.clearPageElements();
                $state.go(pf.globals.states.detailpage.error);
                detailPageError.urlObj = null
            };
            ctrl.hideHelpLink = function hideHelpLink() {
                $scope.helpLink = null
            };
            ctrl.hideTitles = function hideTitles() {
                $scope.subTitle = null;
                $scope.pageTitle = null;
                $scope.detailIntroScreenKey = null
            };
            ctrl.hideRightLink = function hideRightLink() {
                $scope.rightLink = null;
                $scope.rightLinkClick = null;
                $scope.rightLinkText = null;
                $scope.rightLinkCondition = null
            };
            ctrl.resetTabConfiguration = function resetTabConfiguration() {
                $scope.tabConfig = null
            };
            ctrl.cacheFocus = function cacheFocus() {
                if (!$scope.cachedFocus) $scope.cachedFocus = {
                    element: document.activeElement,
                    scrollPos: scrolling.getScrollPosition()
                }
            };
            ctrl.clearPageElements = function clearPageElements() {
                ctrl.hideHelpLink();
                ctrl.hideTitles();
                ctrl.hideBackBtn();
                ctrl.hideRightLink();
                ctrl.resetTabConfiguration()
            };
            ctrl.showBackBtn = function showBackBtn() {
                $scope.backBtn = true;
                $scope.onBack = function () {
                    historyService.getBackFunction();
                    $scope.$broadcast(pf.globals.ngevents.DETAIL_BACKBUTTON_TRIGGER)
                }
            };
            ctrl.unbindShowBackBtn = $scope.$on(pf.globals.ngevents.DETAIL_BACKBUTTON_SHOW, ctrl.showBackBtn);
            ctrl.hideBackBtn = function hideBackBtn() {
                $scope.backBtn = false;
                $scope.onBack = null
            };
            ctrl.unbindHideBackBtn = $scope.$on(pf.globals.ngevents.DETAIL_BACKBUTTON_HIDE, ctrl.hideBackBtn);
            ctrl.hideCloseBtn = function hideCloseBtn() {
                $scope.hideCloseBtn = true
            };
            ctrl.unbindHideCloseBtn = $scope.$on(pf.globals.ngevents.DETAIL_CLOSEBUTTON_HIDE, ctrl.hideCloseBtn);
            ctrl.changeDetailPageHelp = function changeDetailPageHelp($event, helpObj) {
                if (!platform.isMobile()) {
                    var detailPageName = detailPageNames.createInstanceName(helpObj.detailPageName, helpObj.instanceName),
                        linkObj = _.attempt(pfWidgetFunctions.getHelpUrlForDetailPage, detailPageName, helpObj.helpKey);
                    if (!linkObj && 'none' !== helpObj.helpKey) linkObj = _.attempt(pfWidgetFunctions.getHelpUrlForDetailPage, detailPageName, 'general');
                    if (linkObj && !_.isError(linkObj)) $timeout(function () {
                        $scope.helpLink = linkObj;
                        $scope.helpText = helpObj.helpText
                    });
                    else ctrl.hideHelpLink()
                } else ctrl.hideHelpLink()
            };
            ctrl.unbindChangeDetailPageHelp = $scope.$on(pf.globals.ngevents.DETAIL_CHANGE_PAGE_HELP, ctrl.changeDetailPageHelp);
            ctrl.setSelectedTab = function setSelectedTab(state) {
                var selectedStateIndex = _.findIndex($scope.tabs, [
                    'fullStateName',
                    state.name
                ]);
                if (!(selectedStateIndex < 0)) {
                    $scope.activeTab = selectedStateIndex;
                    $scope.$broadcast(pf.globals.events.SET_SELECTED_TAB, selectedStateIndex)
                }
            };
            ctrl.loadCachedFocus = function loadCachedFocus(preventAnimation) {
                if ($scope.cachedFocus) {
                    scrolling.scrollToPosition($scope.cachedFocus.scrollPos, null, preventAnimation);
                    var elem = $($scope.cachedFocus.element);
                    if (elem) {
                        var i = 0;
                        while (!elem.is(':visible') && i < 1000) {
                            elem = elem.parent();
                            i++
                        }
                        if (_.isFunction(elem.focus)) elem.focus()
                    }
                    $scope.cachedFocus = null
                }
            };
            ctrl.getDetailPageType = function getDetailPageType() {
                return $scope.detailPageType
            };
            ctrl.initDetailPage = function initDetailPage() {
                $scope.detailPageIsOpen = true
            };
            ctrl.openOverlay = function openOverlay(url) {
                gadgets.pubsub.publish(pf.globals.pubsub.LOAD_URL_CONTENT_INTO_OVERLAY, url)
            };
            ctrl.showDetailPage = function showDetailPage(_urlObj) {
                ctrl.evaluateLeaveCallback(function () {
                    ctrl.openDetailPage(_urlObj)
                }, _.noop)
            };
            ctrl.evaluateLeaveCallback = function evaluateLeaveCallback(success, cancel, isCloseDetailpage) {
                if ($scope._config.leaveCallback.check(isCloseDetailpage)) return ctrl.showLeaveConfirmation(success, cancel);
                _.attempt(success, true);
                return false
            };
            ctrl.showLeaveConfirmation = function showLeaveConfirmation(success, cancel) {
                var configObj = {
                        acceptButtonKey: 'LeaveConfirmationAccept',
                        cancelButtonKey: 'LeaveConfirmationDecline'
                    },
                    config = DialogService.getConfirmDialogConfig('LeaveConfirmation', $scope, null, configObj),
                    dialog = DialogService.confirm(config);
                if (dialog) return dialog.result.then(function successFn(value) {
                    if (value) {
                        $scope._config.leaveCallback.clear();
                        _.attempt(success)
                    } else {
                        focus.detailpageFocus();
                        _.attempt(cancel)
                    }
                }, function failureFn() {
                    _.attempt(cancel)
                });
                else return null
            };
            ctrl.openDetailPage = function openDetailPage(_urlObj) {
                if ('OVERLAY' === DetailPageDisplayType || 'POPUP' === DetailPageDisplayType) {
                    ctrl.cacheFocus();
                    ctrl.showPageLoader()
                }
                ctrl.cleanupContainer().then(function () {
                    _urlObj.type = _urlObj.type || 'PFJSON';
                    $scope.detailPageType = _urlObj.type;
                    ctrl.focusOnReturn = _urlObj.focusOnReturn;
                    if (ctrl.focusOnReturn) ctrl.focusOnReturn.scrollPos = scrolling.getScrollPosition();
                    ctrl.focusFunction = _urlObj.focusFunction;
                    ctrl.translationsDeferred.then(function success() {
                        var detailPagePromise = null;
                        ctrl.currentUrlObj = _urlObj;
                        $scope.isLarge = _.get(_urlObj.config, 'isLarge', false);
                        $scope.isExtraLarge = _.get(_urlObj.config, 'isExtraLarge', false);
                        $scope.isFullHeight = _.get(_urlObj.config, 'isFullHeight', false);
                        $scope.isWide = _.get(_urlObj.config, 'isWide', false);
                        switch (_urlObj.type) {
                            case 'PFJSON':
                                detailPagePromise = ctrl.detailPageRendererPfjson.loadDetailPage(_urlObj);
                                break;
                            case 'JSON':
                                var urlObjTemp = _urlObj;
                                if (!_.isEmpty($scope.tabToSelect) || !_.isEmpty($scope.panelToMark)) {
                                    var configObj = {
                                        config: {
                                        }
                                    };
                                    if (!_.isEmpty($scope.tabToSelect)) configObj.config.stateToGo = $scope.tabToSelect;
                                    if (!_.isEmpty(ctrl.config.scope.panelToMark)) configObj.config.panelToMark = $scope.panelToMark;
                                    urlObjTemp = _.merge(urlObjTemp, configObj)
                                }
                                detailPagePromise = ctrl.detailPageRendererJson.loadDetailPage(urlObjTemp);
                                break;
                            case 'IFRAME':
                                detailPagePromise = ctrl.detailPageRendererIframe.loadDetailPage(_urlObj);
                                break;
                            case 'WCMS':
                                detailPagePromise = ctrl.detailPageRendererWcms.loadDetailPage(_urlObj)
                        }
                        if (detailPagePromise) detailPagePromise.catch (ctrl.detailPageError).finally (ctrl.detailPageFinally)
                    })
                })
            };
            ctrl.cleanupContainer = function cleanupContainer() {
                detailPageContainers.getPfjsonWithoutTabs(widget.body).empty();
                detailPageContainers.getPfjsonWithTabs(widget.body).empty();
                var promise = $timeout(function () {
                    $scope.includePath = '';
                    $scope.iframeSrcUrl = $sce.trustAsResourceUrl('about:blank');
                    $scope.tncLink = '';
                    ctrl.clearPageElements()
                });
                $scope.displayTabs = false;
                $scope.showCloseButton = false;
                $scope.wcmsContent = null;
                $state.go(pf.globals.states.detailpage.initial);
                var overviewpage = document.getElementById('overviewpage'),
                    overviewIsHidden = _.includes(overviewpage.getAttribute('style'), 'visibility: hidden');
                if (overviewpage && !overviewIsHidden) overviewpage.setAttribute('style', ' ');
                return promise
            };
            ctrl.showDetailPageFromPfJson = function showDetailPageFromPfJson(data) {
                ctrl.cacheFocus();
                ctrl.showPageLoader();
                _.invoke(ctrl, 'openContainer');
                ctrl.translationsDeferred.then(function success() {
                    $scope.detailPageType = 'PFJSON';
                    ctrl.detailPageRendererPfjson.renderTemplate(data).catch (function (err) {
                        ctrl.logger.error('Error during rendering of PFJSON detail page, message: {0}, data: {1}', [
                            err.error ? err.error.message.message : '',
                            data
                        ])
                    }).finally (function () {
                        $timeout(function () {
                            ctrl.hidePageLoader()
                        })
                    })
                })
            };
            ctrl.closeDetailPage = function closeDetailPage() {
                _.invoke(ctrl, 'closeContainer')
            };
            ctrl.unbindCloseDetailPage = $scope.$on(pf.globals.ngevents.CLOSE_DETAIL_PAGE, ctrl.closeDetailPage);
            ctrl.keepState = function keepState() {
                $scope._config.leaveCallback.setUnprocessed();
                $scope.$root.$emit(pf.globals.events.DETAIL_STATE_CHANGE_REJECTED)
            };
            ctrl.createChangeStateFn = function createChangeStateFn(toState, toParams, options) {
                return function changeState(noUserAction) {
                    if (noUserAction) $scope._config.leaveCallback.clear();
                    else {
                        $scope._config.leaveCallback.setProcessed();
                        $state.go(toState, toParams, options)
                    }
                }
            };
            ctrl.activateTabByStateName = function activateTabByStateName(stateName) {
                $scope.tabToSelect = stateName;
                $timeout(function () {
                    var stateIndex = _.findIndex($scope.tabs, [
                        'stateName',
                        stateName
                    ]);
                    if (stateIndex > - 1) $scope.activateTab(stateIndex, $scope.tabs[stateIndex].fullStateName)
                })
            };
            ctrl.markPanel = function markPanel(panel) {
                $scope.panelToMark = panel
            };
            ctrl.config = {
                scope: $scope,
                state: $state,
                widget: widget,
                widgetName: widgetName,
                module: $module,
                errorFn: ctrl.detailPageError,
                finallyFn: ctrl.detailPageFinally
            };
            ctrl.detailPageRendererPfjson = new DetailPageTypePfjson;
            ctrl.detailPageRendererJson = new DetailPageTypeJson;
            ctrl.detailPageRendererWcms = new DetailPageTypeWcms;
            ctrl.detailPageRendererIframe = new DetailPageTypeIframe;
            ctrl.detailPageRendererPfjson.init(ctrl.config);
            ctrl.detailPageRendererJson.init(ctrl.config);
            ctrl.detailPageRendererWcms.init(ctrl.config);
            ctrl.detailPageRendererIframe.init(ctrl.config);
            $scope.widgetInstanceId = widget.id;
            $scope.widgetName = widgetName;
            $scope.textKey = 'widgets.' + $scope.widgetName;
            $scope.data = {
            };
            $scope._config = {
                noRefreshNecessary: true,
                leaveCallback: new DetailPageLeaveCallback,
                reloadWidgets: true
            };
            $scope.displayType = DetailPageDisplayType;
            $scope.isMobile = platform.isMobile();
            $scope.isApp = detect.isApp();
            $scope.getDetailPageType = ctrl.getDetailPageType;
            $scope.initDetailPage = ctrl.initDetailPage;
            $scope.openOverlay = ctrl.openOverlay;
            $scope.onClose = function () {
                ctrl.closeDetailPage();
                var focusOnReturn = ctrl.focusOnReturn;
                if (focusOnReturn) {
                    scrolling.scrollToPosition(ctrl.focusOnReturn.scrollPos, null, true);
                    focus.focusElement(focusOnReturn)
                } else if (_.isFunction(ctrl.focusFunction)) ctrl.focusFunction();
                else if ($scope.cachedFocus) ctrl.loadCachedFocus('POPUP' !== DetailPageDisplayType);
                else focus.detailpageFocus(true)
            };
            ctrl.translationsDeferred = translateEngine.requestTranslationModules([$scope.textKey]).finally (function () {
                $scope.$emit('$translateChangeSuccess')
            });
            $scope.$root.$on('$stateNotFound', function (event, unfoundState) {
                ctrl.logger.error('State \'{0}\' was not found. Redirecting to error state.', [
                    unfoundState.to
                ]);
                event.preventDefault();
                $state.go(pf.globals.states.detailpage.error)
            });
            $scope.activateTab = function activateTab(index, fullStateName) {
                if ('JSON' === ctrl.getDetailPageType() && $scope.activeTab !== index) {
                    ctrl.showPageLoader();
                    $scope.$root.$emit(pf.globals.events.CHANGE_DETAIL_PAGE_TAB, {
                        index: index,
                        state: fullStateName
                    })
                }
            };
            $scope.activateTabMobile = function activateTabMobile(tabIndex) {
                var index = !_.isUndefined(tabIndex) ? tabIndex : $scope.data.selectedTab,
                    tabKey = $scope.tabURLs[index].groupTitleKey;
                $scope.activateTab(index, tabKey)
            };
            $scope.pageTitleKey = function pageTitleKey() {
                if ($scope.pageTitle) return $scope.pageTitle;
                if ($scope.detailPageName) return detailPageNames.createTranslationKey($scope.detailPageName, 'DetailPageTitle');
                if (!$scope.showDetailPageTitle) return $scope.tabURLs[0].groupTitleKey;
                else return null
            };
            $scope.showMainBackButton = function () {
                return $scope.backBtn
            };
            $scope.showTncLink = function () {
                return $scope.tncLink && !$scope.displayTabs
            };
            $scope.openHelpWindow = urls.openHelpUrl;
            $scope.renderedContent = $sce.trustAsHtml('<!-- empty content -->');
            $scope.activeTab = 0;
            $scope.data = {
                selectedTab: 0
            };
            $scope.$on(pf.globals.ngevents.DETAIL_CHANGE_PAGE_RIGHT_LINK, function changeDetailPageRightLink($event, rightLink) {
                if (rightLink) $timeout(function () {
                    $scope.rightLink = {
                        click: rightLink.callback,
                        text: rightLink.text,
                        condition: _.isFunction(rightLink.condition) ? rightLink.condition : _.constant(true)
                    }
                });
                else ctrl.hideRightLink()
            });
            $scope.$on(pf.globals.ngevents.DETAIL_CONFIGURE_PAGE_TABS, function configureDetailPageTabs($event, tabConfig) {
                if (DPAbstract.config) $timeout(function () {
                    $scope.tabConfig = {
                        condition: _.isFunction(tabConfig.condition) ? tabConfig.condition : _.constant(true)
                    }
                });
                else ctrl.resetTabConfiguration()
            });
            gadgets.pubsub.subscribe(pf.globals.events.NOT_IN_DEMO, ctrl.clearPageElements);
            $scope.$on('$destroy', function () {
                gadgets.pubsub.unsubscribe(pf.globals.events.NOT_IN_DEMO, ctrl.clearPageElements);
                ctrl.unbindStatechangeSuccess();
                ctrl.unbindStatechangeCancel();
                ctrl.unbindStateChangeStart();
                ctrl.unbindCloseDetailPage();
                ctrl.unbindChangeDetailPageHelp();
                ctrl.unbindShowBackBtn();
                ctrl.unbindHideBackBtn();
                ctrl.unbindHideCloseBtn()
            })
        }
        var _ = require('lodash'),
            detect = require('pf-app-detect'),
            pfWidgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            urls = require('pf-shared-modules-urls'),
            pageLoader = require('pf-shared-modules-pageloader'),
            focus = require('pf-shared-modules-focus'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            translator = require('pf-shared-modules-translator'),
            detailPageContainers = require('pf-shared-modules-detailpages-detail_page_containers'),
            DetailPageLeaveCallback = require('pf-shared-modules-detail_page_leave_callback'),
            detailPageNames = require('pf-shared-modules-detail_page_names'),
            scrolling = require('pf-shared-modules-scrolling'),
            historyService = require('pf-shared-modules-historyservice'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            DetailPageTypePfjson = require('pf-shared-modules-detailpages-detail_page_type_pfjson'),
            DetailPageTypeJson = require('pf-shared-modules-detailpages-detail_page_type_json'),
            DetailPageTypeWcms = require('pf-shared-modules-detailpages-detail_page_type_wcms'),
            DetailPageTypeIframe = require('pf-shared-modules-detailpages-detail_page_type_iframe');
        DetailPageAbstract.prototype.showPageLoader = function showPageLoader() {
            pageLoader.showLoader()
        };
        DetailPageAbstract.prototype.hidePageLoader = function hidePageLoader() {
            pageLoader.hideLoader(true)
        };
        DetailPageAbstract.prototype.isFocusTitle = function isFocusTitle(toState, fromState) {
            if (toState.data) {
                var focusTitle = toState.data.focusTitle;
                if (!_.isUndefined(toState.data.focusTitleFromState)) focusTitle = _.includes(toState.data.focusTitleFromState, fromState.name) || focusTitle;
                return focusTitle
            }
            return false
        };
        DetailPageAbstract.prototype.isInitialState = function isInitialState(state) {
            return state.name === pf.globals.states.detailpage.initial
        };
        DetailPageAbstract.prototype.isErrorState = function isErrorState(state) {
            return state.name === pf.globals.states.detailpage.error
        };
        DetailPageAbstract.prototype.isSpecialState = function isSpecialState(state) {
            return this.isInitialState(state) || this.isErrorState(state)
        };
        return DetailPageAbstract
    })
}();
define('fipo/lib/shared/modules/detailPageAbstract', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_abstract_service', [
        'require',
        'pf-shared-modules-util'
    ], function (require) {
        function DetailPageAbstractService() {
            this.name = null;
            this.restConfig = {
            };
            this.instance = null
        }
        var util = require('pf-shared-modules-util');
        DetailPageAbstractService.prototype.init = function init(name, config, instance) {
            this.name = name;
            this.restConfig = config;
            this.instance = instance
        };
        DetailPageAbstractService.prototype.getScope = function getScope() {
            return this.restConfig.scope
        };
        DetailPageAbstractService.prototype.isInitialized = function isInitialized() {
            return util.hasValue(this.name) && util.hasValue(this.restConfig)
        };
        DetailPageAbstractService.prototype.assertInitialized = function assertInitialized() {
            if (!this.isInitialized()) throw new Error('Detail page service not initialized, name and/or scope were not specified.')
        };
        return DetailPageAbstractService
    })
}();
define('fipo/lib/shared/modules/detailPageAbstractService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_helper', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-app-detect',
        'pf-shared-modules-translator',
        'pf-shared-modules-translate_engine',
        'pf-shared-modules-detail_page_leave_callback',
        'pf-shared-modules-detail_page_names',
        'pf-shared-modules-clientmessages',
        'bluebird',
        'pf-shared-modules-historyservice',
        'pf-shared-modules-loggerfactory',
        'pf-widget-functions'
    ], function (require) {
        function DetailPageHelper(detailPageName, additionalTranslationModules) {
            if (!util.hasValue(detailPageName)) throw new Error('Must specify a detail page name');
            var LOG = loggerFactory.getLogger(detailPageName);
            this.detailPageName = detailPageName;
            this.detailPageInstance = detailPageName;
            this.scope = null;
            this.service = null;
            this.changeDetailPageTabDeregistration = null;
            this.config = {
                initialized: false
            };
            this.translate = translate;
            this.getFullName = this.resetFullName = function getFullName() {
                var fullName;
                if (this.instanceName) fullName = detailPageNames.createTranslationKey(this.detailPageName, this.instanceName);
                else fullName = detailPageNames.createTranslationKey(this.detailPageName);
                this.getFullName = function getFullName() {
                    return fullName
                };
                return fullName
            };
            this.createModuleName = function createModuleName(name) {
                return detailPageNames.createModuleName(this.detailPageInstance, name)
            };
            this.init = function initScope(params) {
                this.scope = params.scope;
                this.state = params.state;
                _.set(this.scope, '_config.leaveCallback', new DetailPageLeaveCallback);
                this.initVariables();
                this.initListeners();
                if (params.service) {
                    this.service = params.service;
                    this.initService()
                }
                this.translationPromise = this.requestTranslationModules(additionalTranslationModules).finally (function () {
                    if (_.has(this, 'scope') && !_.isEmpty(this.scope.$root)) this.scope.$root.$emit('$translateChangeSuccess')
                }.bind(this));
                this.initPageTexts(params)
            };
            this.initVariables = function initVariables() {
                this.scope.detailPageId = this.detailPageInstance;
                this.scope.detailPageInstance = this.detailPageInstance;
                this.scope.textKey = this.getFullName();
                this.scope.isMobile = platform.isMobile();
                this.scope.isApp = detect.isApp();
                this.scope.showPrintButton = !(this.scope.isMobile || this.scope.isApp);
                this.scope.isOverlay = 'OVERLAY' === this.scope.displayType;
                this.scope.print = function () {
                    window.print()
                };
                this.setInitialized(false)
            };
            this.setInstance = function setInstance(instanceName) {
                this.instanceName = instanceName;
                this.detailPageInstance = detailPageNames.createInstanceName(this.detailPageName, this.instanceName);
                this.resetFullName();
                this.initVariables();
                if (this.service) this.initService();
                this.initPageTexts({
                    scope: this.scope
                })
            };
            this.initListeners = function initListeners() {
                if (this.changeDetailPageTabDeregistration) this.changeDetailPageTabDeregistration();
                this.changeDetailPageTabDeregistration = this.scope.$root.$on(pf.globals.events.CHANGE_DETAIL_PAGE_TAB, function (event, args) {
                    this.changeTab(args.state)
                }.bind(this))
            };
            this.isInitialized = function isInitialized() {
                return this.config.initialized
            };
            this.initService = function initService() {
                _.merge(this.scope._config, {
                    helper: this,
                    scope: this.scope,
                    service: {
                    }
                });
                this.service.init(this.detailPageInstance, this.scope._config)
            };
            this.isTextTranslated = function isTextTranslated(text) {
                if (platform.isMessagesShowKeys()) return !_.startsWith(text, detailPageNames.prefix.KEY);
                else return !_.isEmpty(text)
            };
            this.initPageTexts = function initPageTexts(params) {
                this.translationPromise.then(function () {
                    var title = translate('DetailPageTitle', params.scope, params.pageTitleParams),
                        introScreenKey = translate('scrMain_DetailPageIntro', params.scope, params.pageIntroScreenKeyParams),
                        sub = translate('DetailPageSubtitle', params.scope, params.subTitleParams),
                        obj = {
                        };
                    if (this.isTextTranslated(title)) obj.pageTitle = title;
                    if (this.isTextTranslated(introScreenKey)) obj.detailIntroScreenKey = introScreenKey;
                    if (this.isTextTranslated(sub)) obj.subTitle = sub;
                    if (!_.isEmpty(obj)) params.scope.$emit(pf.globals.ngevents.DETAIL_CHANGE_PAGE_TITLE, obj);
                    this.setHelp({
                        helpKey: params.helpKey || params.name || 'none'
                    })
                }.bind(this))
            };
            this.requestTranslationModules = function requestTranslationModules(additionalModules) {
                var requiredModules = [
                    this.getFullName()
                ];
                if (_.isArray(additionalModules)) requiredModules = requiredModules.concat(additionalModules);
                return translateEngine.requestTranslationModules(requiredModules)
            };
            this.goToState = function goToState(newState, params, ignorePageLeaveCheck) {
                var options = {
                    ignorePageLeaveCheck: ignorePageLeaveCheck
                };
                return this.state.go(newState, params, options).then(function successFn() {
                    if (historyService.hasHistory()) this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_SHOW);
                    else this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_HIDE);
                    return _Promise.resolve(true)
                }.bind(this), function failureFn() {
                    return new _Promise(function (resolve, reject) {
                        function unsubscribe() {
                            unsubscribeSuccess();
                            unsubscribeCancel()
                        }
                        var unsubscribeSuccess = this.scope.$root.$on('$stateChangeSuccess', function () {
                                unsubscribe();
                                resolve(true)
                            }),
                            unsubscribeCancel = this.scope.$root.$on(pf.globals.events.DETAIL_STATE_CHANGE_REJECTED, function () {
                                unsubscribe();
                                reject()
                            })
                    }.bind(this))
                }.bind(this)).catch (function (err) {
                    if (err) internalLogger.error(err)
                })
            };
            this.goToErrorState = function goToErrorState(errorMsg) {
                this.clearMessages();
                this.unregisterPageLeaveCheck();
                historyService.clear();
                this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_HIDE);
                angular.extend(this.scope, errorMsg);
                return this.state.go(pf.globals.states.detailpage.error)
            }.bind(this);
            this.goToEmptyState = function goToEmptyState() {
                this.unregisterPageLeaveCheck();
                historyService.clear();
                this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_HIDE);
                return this.state.go(pf.globals.states.detailpage.empty)
            }.bind(this);
            this.setHelp = function setHelp(config) {
                var obj = {
                    helpText: config.helpText ? config.helpText : translate('DetailHelpText', this.scope),
                    helpKey: config.helpKey,
                    detailPageName: this.detailPageName,
                    instanceName: this.instanceName
                };
                this.scope.$emit(pf.globals.ngevents.DETAIL_CHANGE_PAGE_HELP, obj)
            };
            this.setInitialized = function setInitialized(value) {
                this.config = this.config || {
                };
                this.config.initialized = value
            };
            this.setPageTexts = function setPageTexts(texts) {
                this.scope.$emit(pf.globals.ngevents.DETAIL_CHANGE_PAGE_TITLE, texts)
            };
            this.changeDetailPageRightLink = function changeDetailPageRightLink(config) {
                this.scope.$emit(pf.globals.ngevents.DETAIL_CHANGE_PAGE_RIGHT_LINK, config)
            };
            this.configureDetailpageTabs = function configureDetailpageTabs(config) {
                this.scope.$emit(pf.globals.ngevents.DETAIL_CONFIGURE_PAGE_TABS, config)
            };
            this.registerPageLeaveCheck = function registerPageLeaveCheck(checkFn) {
                this.scope._config.leaveCallback.registerCheck(checkFn)
            };
            this.unregisterPageLeaveCheck = function unregisterPageLeaveCheck() {
                this.scope._config.leaveCallback.clear()
            };
            this.getBackUrlObj = function getBackUrlObj(stateToGo, params, data) {
                return pfWidgetFunctions.buildJsonUrlObject(this.detailPageInstance, stateToGo, params, data)
            };
            this.disableReloadWidgetsForOverlay = function disableReloadWidgetsForOverlay() {
                this.scope._config.reloadWidgets = false
            };
            this.enableReloadWidgetsForOverlay = function enableReloadWidgetsForOverlay() {
                this.scope._config.reloadWidgets = true
            };
            this.showBackButton = function showBackButton(callbackFn) {
                _.invoke(this, 'unregisterBackBtn');
                this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_SHOW);
                if (_.isFunction(callbackFn)) this.unregisterBackBtn = this.scope.$on(pf.globals.ngevents.DETAIL_BACKBUTTON_TRIGGER, callbackFn)
            };
            this.hideBackButton = function hideBackButton() {
                this.scope.$emit(pf.globals.ngevents.DETAIL_BACKBUTTON_HIDE);
                _.invoke(this, 'unregisterBackBtn')
            };
            this.hideCloseButton = function hideCloseButton() {
                this.scope.$emit(pf.globals.ngevents.DETAIL_CLOSEBUTTON_HIDE)
            };
            this.addAsChildPage = function addAsChildPage(params) {
                params.scope.textKey = detailPageNames.extendTranslationKey(this.getFullName(), params.name);
                params.scope.detailPageId = detailPageNames.createRequireName(this.detailPageInstance, params.name);
                params.scope.detailPageFormName = _.join([_.capitalize(this.detailPageInstance.replace('-', '')),
                    _.capitalize(params.name),
                    'Form'], '');
                this.initPageTexts(params);
                this.getForm = function getForm() {
                    return params.scope[params.scope.detailPageFormName]
                };
                params.scope.getForm = this.getForm;
                if (params.registerDefaultPageLeaveCheck) this.registerPageLeaveCheck(function () {
                    return params.scope[params.scope.detailPageFormName] && params.scope[params.scope.detailPageFormName].$dirty
                });
                return params.scope.detailPageId
            };
            this.signalReady = function signalReady(callback) {
                var listener = null,
                    readyFunction = function (event, data) {
                        if (_.isFunction(callback)) this.translationPromise.then(function () {
                            callback(data)
                        });
                        listener()
                    }.bind(this);
                listener = this.scope.$on(pf.globals.ngevents.SEND_DATA_TO_CONTROLLER, readyFunction);
                this.scope.$emit(pf.globals.ngevents.DETAIL_PAGE_INITIALIZED)
            };
            this.clearMessages = function clearMessages() {
                setScopeMessages(this.scope, {
                })
            };
            this.applyMessages = function applyMessages(messages) {
                setScopeMessages(this.scope, messages)
            };
            this.addMessages = function addMessages(messages) {
                var joinedMessages = clientMessages.joinMessages(this.getMessages(), messages);
                this.applyMessages(joinedMessages)
            };
            this.getMessages = function getMessages() {
                return _.get(this.scope, 'vm.messages')
            };
            this.setMessageFunctions = function setMessageFunctions(functions) {
                this.scope.messageFunctions = functions
            };
            this.changeTab = function changeTab(state) {
                if (_.includes(state, this.detailPageName)) {
                    this.clearMessages();
                    this.goToState(state)
                }
            };
            this.showSpinnerWhile = function showSpinnerWhile(promise) {
                if (promise) {
                    this.showSpinner();
                    return _Promise.resolve(promise).finally (function () {
                        this.hideSpinner()
                    }.bind(this))
                }
            };
            this.showSpinner = function showSpinner() {
                _.merge(this.scope._config, {
                    preserveLoader: true,
                    service: {
                        showSpinner: true,
                        showLoader: false,
                        isLoading: true
                    }
                });
                this.scope.$applyAsync()
            };
            this.hideSpinner = function hideSpinner() {
                _.merge(this.scope._config, {
                    preserveLoader: false,
                    service: {
                        showSpinner: false,
                        showLoader: false,
                        isLoading: false
                    }
                });
                this.scope.$applyAsync()
            };
            this.hasPageAttribute = function (response) {
                return _.has(response, 'result.page')
            };
            this.extractPageAttribute = function (response) {
                var parts = _.split(response.result.page, '/');
                return {
                    page: parts[0],
                    state: parts[1]
                }
            };
            this.handlePageAttribute = function (response) {
                if (this.hasPageAttribute(response)) {
                    var pageAttribute = this.extractPageAttribute(response),
                        urlObj = pfWidgetFunctions.buildJsonUrlObject(pageAttribute.page, pageAttribute.state, null, response);
                    pfWidgetFunctions.processUrlObject(urlObj)
                }
            };
            this.closeDetailPage = function () {
                this.scope.$emit(pf.globals.ngevents.CLOSE_DETAIL_PAGE)
            };
            this.getLogger = function () {
                return LOG
            }
        }
        function setScopeMessages(scope, messages) {
            scope.$applyAsync(function () {
                _.set(scope, 'vm.messages', _.isEmpty(messages) ? null : messages)
            })
        }
        var _ = require('lodash'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            detect = require('pf-app-detect'),
            translator = require('pf-shared-modules-translator'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            DetailPageLeaveCallback = require('pf-shared-modules-detail_page_leave_callback'),
            detailPageNames = require('pf-shared-modules-detail_page_names'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            _Promise = require('bluebird'),
            historyService = require('pf-shared-modules-historyservice'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            pfWidgetFunctions = require('pf-widget-functions'),
            translate = translator.translate,
            internalLogger = loggerFactory.getLogger('DetailPageHelper');
        return DetailPageHelper
    })
}();
define('fipo/lib/shared/modules/detailPageHelper', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_inline', [
        'require',
        'lodash',
        'pf-shared-modules-platform',
        'pf-shared-modules-detail_page_states',
        'pf-shared-modules-detailstateservice',
        'pf-shared-modules-detail_page_abstract'
    ], function (require) {
        function DetailPageInline($module, widget, widgetName, showDetailPageTitle, urlObj) {
            var controller = function controller($scope, $state, $sce, $timeout, $window, DialogService) {
                DetailPageAbstract.apply(this, [
                    'INLINE',
                    $module,
                    widget,
                    widgetName,
                    $scope,
                    $state,
                    $sce,
                    $timeout,
                    $window,
                    DialogService
                ]);
                var DPAbstract = this;
                $scope.isPopUp = false;
                $scope.showDetailPageTitle = showDetailPageTitle;
                detailStateService.setInlineOpen(true);
                DPAbstract.openDetailPage(urlObj)
            };
            controller.prototype = _.create(DetailPageAbstract.prototype);
            controller.constructor = DetailPageAbstract;
            controller.$inject = [
                '$scope',
                '$state',
                '$sce',
                '$timeout',
                '$window',
                'DialogService'
            ];
            detailPageStates.registerDefaultStates($module);
            $module.controller('DetailPagePopupController', controller)
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            detailPageStates = require('pf-shared-modules-detail_page_states'),
            detailStateService = require('pf-shared-modules-detailstateservice'),
            DetailPageAbstract = require('pf-shared-modules-detail_page_abstract'),
            init = function init($module, widget, widgetName, showDetailPageTitle, urlObj) {
                new DetailPageInline($module, widget, widgetName, showDetailPageTitle, urlObj)
            };
        return {
            init: init,
            includePath: platform.isMobile() ? platform.getResourceRoot() + '/static/fipo/templates/detailpageMobile.html' : platform.getResourceRoot() + '/static/fipo/templates/detailpage.html'
        }
    })
}();
define('fipo/lib/shared/modules/detailPageInline', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_leave_callback', [
        'require',
        'lodash'
    ], function (require) {
        function DetailPageLeaveCallback() {
            this.registerCheck = function registerCheck(checkFn) {
                if (!_.isFunction(checkFn)) throw new Error('Parameter must be a function.');
                this.checkState = checkFn
            };
            this.hasCheck = function hasCheck() {
                return !_.isNil(this.checkState)
            };
            this.check = function check(isCloseDetailpage) {
                if (this.hasCheck()) return _.attempt(this.checkState, isCloseDetailpage);
                else return false
            };
            this.isProcessed = function isProcessed() {
                return this.alreadyProcessed
            };
            this.notYetProcessed = function notYetProcessed() {
                return !this.isProcessed()
            };
            this.setProcessed = function setProcessed() {
                this.alreadyProcessed = true
            };
            this.setUnprocessed = function setUnprocessed() {
                this.alreadyProcessed = false
            };
            this.clear = function clear() {
                this.setUnprocessed();
                this.checkState = null
            };
            this.clear();
            return this
        }
        var _ = require('lodash');
        return DetailPageLeaveCallback
    })
}();
define('fipo/lib/shared/modules/detailPageLeaveCallback', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_names', [
        'require',
        'lodash'
    ], function (require) {
        function createInstanceName() {
            var values = Array.prototype.slice.call(arguments);
            return _.join(_.compact(values), SEPARATOR_DASH)
        }
        function createModuleName(detailPageName, moduleName) {
            return getKeyPrefixedString([detailPageName,
                moduleName], SEPARATOR_DASH)
        }
        function createRequireName(detailPageName, moduleName) {
            var values = [
                detailPageName
            ];
            if (moduleName) values.push(moduleName);
            return getRequirePrefixedString(values, SEPARATOR_DASH)
        }
        function createTranslationKey() {
            var values = Array.prototype.slice.call(arguments);
            return getKeyPrefixedString(values, SEPARATOR_PERIOD)
        }
        function extendTranslationKey() {
            var values = Array.prototype.slice.call(arguments);
            return _.join(values, SEPARATOR_PERIOD)
        }
        function getKeyPrefixedString(values, separator) {
            return getPrefixedString(KEY_PREFIX, values, separator)
        }
        function getRequirePrefixedString(values, separator) {
            return getPrefixedString(REQUIRE_PREFIX, values, separator)
        }
        function getPrefixedString(prefix, values, separator) {
            values.unshift(prefix);
            return _.join(values, separator)
        }
        var _ = require('lodash'),
            KEY_PREFIX = 'detailpages',
            REQUIRE_PREFIX = 'pf-detail',
            SEPARATOR_PERIOD = '.',
            SEPARATOR_DASH = '-';
        return {
            createInstanceName: createInstanceName,
            createModuleName: createModuleName,
            createRequireName: createRequireName,
            createTranslationKey: createTranslationKey,
            extendTranslationKey: extendTranslationKey,
            getKeyPrefixedString: getKeyPrefixedString,
            getRequirePrefixedString: getRequirePrefixedString,
            prefix: {
                KEY: KEY_PREFIX,
                REQUIRE: REQUIRE_PREFIX
            }
        }
    })
}();
define('fipo/lib/shared/modules/detailPageNames', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_overlay', [
        'require',
        'lodash',
        'pf-shared-modules-platform',
        'pf-shared-modules-detail_page_states',
        'pf-shared-modules-detail_page_abstract',
        'pf-shared-modules-focus',
        'pf-shared-modules-detailstateservice',
        'pf-shared-modules-historyservice'
    ], function (require) {
        function DetailPageOverlay($module, widget, widgetName) {
            var controller = function controller($scope, $state, $sce, $timeout, $window, DialogService) {
                DetailPageAbstract.apply(this, [
                    'OVERLAY',
                    $module,
                    widget,
                    widgetName,
                    $scope,
                    $state,
                    $sce,
                    $timeout,
                    $window,
                    DialogService
                ]);
                var DPAbstract = this;
                $scope.tabsTranslationsReady = true;
                this.openContainer = function openContainer() {
                    jQuery('html').addClass('has-lightbox');
                    jQuery('#detail_page_overlay').show();
                    detailStateService.setOverlayOpen(true);
                    focus.focusElement(document.querySelector('.detail_content--close_button.js-detail_overlay_close'))
                };
                this.closeContainer = function closeContainer() {
                    DPAbstract.evaluateLeaveCallback(function () {
                        if (!$scope._config.noRefreshNecessary) $window.location.reload();
                        historyService.clear();
                        DPAbstract.cleanupContainer();
                        detailStateService.setOverlayOpen(false);
                        $scope.detailPageIsOpen = false;
                        $window.location.hash = '';
                        jQuery('#detail_page_overlay').hide();
                        jQuery('html').removeClass('has-lightbox');
                        DPAbstract.loadCachedFocus(false);
                        gadgets.pubsub.publish(pf.globals.pubsub.OVERLAY_CONTAINER_ON_CLOSE);
                        if ($scope._config.reloadWidgets) gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS);
                        $scope._config.reloadWidgets = true
                    }, _.noop, true)
                };
                gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_OVERLAY, DPAbstract.showDetailPage);
                $scope.$on('$destroy', function () {
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_OVERLAY, DPAbstract.showDetailPage)
                });
                gadgets.pubsub.publish(pf.globals.pubsub.READY_OVERLAY)
            };
            controller.prototype = _.create(DetailPageAbstract.prototype);
            controller.constructor = DetailPageAbstract;
            controller.$inject = [
                '$scope',
                '$state',
                '$sce',
                '$timeout',
                '$window',
                'DialogService'
            ];
            detailPageStates.registerDefaultStates($module);
            $module.controller('DetailPageOverlayController', controller)
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            detailPageStates = require('pf-shared-modules-detail_page_states'),
            DetailPageAbstract = require('pf-shared-modules-detail_page_abstract'),
            focus = require('pf-shared-modules-focus'),
            detailStateService = require('pf-shared-modules-detailstateservice'),
            historyService = require('pf-shared-modules-historyservice'),
            init = function init($module, widget, widgetName) {
                new DetailPageOverlay($module, widget, widgetName)
            };
        return {
            init: init,
            includePath: platform.getResourceRoot() + '/static/fipo/templates/detailPageOverlay.html'
        }
    })
}();
define('fipo/lib/shared/modules/detailPageOverlay', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_popup', [
        'require',
        'lodash',
        'pf-shared-modules-platform',
        'pf-widget-functions',
        'pf-shared-modules-detail_page_states',
        'pf-shared-modules-detailstateservice',
        'pf-shared-modules-historyservice',
        'pf-shared-modules-detail_page_abstract'
    ], function (require) {
        function DetailPagePopup($module, widget, widgetName, showDetailPageTitle) {
            var controller = function controller($scope, $state, $sce, $timeout, $window, DialogService) {
                DetailPageAbstract.apply(this, [
                    'POPUP',
                    $module,
                    widget,
                    widgetName,
                    $scope,
                    $state,
                    $sce,
                    $timeout,
                    $window,
                    DialogService,
                    true
                ]);
                var DPAbstract = this;
                $scope.isPopUp = true;
                $scope.showDetailPageTitle = showDetailPageTitle;
                this.openContainer = function openContainer() {
                    detailStateService.setPopupOpen(true);
                    pfWidgetFunctions.toggleMobileMainPageTitle(true);
                    gadgets.pubsub.publish(pf.globals.pubsub.OPEN_POPUP_CONTAINER)
                };
                this.closeContainer = function closeContainer() {
                    DPAbstract.evaluateLeaveCallback(function () {
                        if (!$scope._config.noRefreshNecessary) $window.location.reload();
                        historyService.clear();
                        DPAbstract.cleanupContainer();
                        detailStateService.setPopupOpen(false);
                        pfWidgetFunctions.toggleMobileMainPageTitle(false);
                        $scope.detailPageIsOpen = false;
                        $window.location.hash = '';
                        gadgets.pubsub.publish(pf.globals.pubsub.CLOSE_POPUP_CONTAINER);
                        var currentNavItem = document.querySelector('.header_main_nav--item--link.is-active');
                        if (currentNavItem) currentNavItem.focus();
                        DPAbstract.loadCachedFocus(false);
                        gadgets.pubsub.publish(pf.globals.pubsub.RELOAD_WIDGETS)
                    }, _.noop, true)
                };
                gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSE_DETAIL_PAGE_POPUP, DPAbstract.closeDetailPage);
                gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, DPAbstract.showDetailPageFromPfJson);
                gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_POPUP, DPAbstract.showDetailPage);
                $scope.$on('$destroy', function () {
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.CLOSE_DETAIL_PAGE_POPUP, DPAbstract.closeDetailPage);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, DPAbstract.showDetailPageFromPfJson);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_POPUP, DPAbstract.showDetailPage)
                });
                gadgets.pubsub.publish(pf.globals.pubsub.READY_POPUP)
            };
            controller.prototype = _.create(DetailPageAbstract.prototype);
            controller.constructor = DetailPageAbstract;
            controller.$inject = [
                '$scope',
                '$state',
                '$sce',
                '$timeout',
                '$window',
                'DialogService'
            ];
            detailPageStates.registerDefaultStates($module);
            $module.controller('DetailPagePopupController', controller)
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            pfWidgetFunctions = require('pf-widget-functions'),
            detailPageStates = require('pf-shared-modules-detail_page_states'),
            detailStateService = require('pf-shared-modules-detailstateservice'),
            historyService = require('pf-shared-modules-historyservice'),
            DetailPageAbstract = require('pf-shared-modules-detail_page_abstract'),
            init = function init($module, widget, widgetName, showDetailPageTitle) {
                new DetailPagePopup($module, widget, widgetName, showDetailPageTitle)
            };
        return {
            init: init,
            includePath: platform.isMobile() ? platform.getResourceRoot() + '/static/fipo/templates/detailpageMobile.html' : platform.getResourceRoot() + '/static/fipo/templates/detailpage.html'
        }
    })
}();
define('fipo/lib/shared/modules/detailPagePopup', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detail_page_states', [
        'require',
        'lodash',
        'pf-shared-modules-platform'
    ], function (require) {
        function getDefaultStates($stateProvider) {
            _.forEach(defaultStates, function (item) {
                $stateProvider.state(item.name, item.param)
            })
        }
        function registerDefaultStates(module) {
            module.config(getDefaultStates)
        }
        function isDefaultState(stateName) {
            return _.some(defaultStates, {
                name: stateName
            })
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            defaultStates = [
                {
                    name: pf.globals.states.detailpage.error,
                    param: {
                        templateUrl: platform.getResourceRoot() + '/static/fipo/templates/detailpageStateError.html'
                    }
                },
                {
                    name: pf.globals.states.detailpage.initial,
                    param: {
                        templateUrl: platform.getResourceRoot() + '/static/fipo/templates/detailpageStateInitial.html'
                    }
                },
                {
                    name: pf.globals.states.detailpage.loading,
                    param: {
                        templateUrl: platform.getResourceRoot() + '/static/fipo/templates/detailpageStateLoading.html'
                    }
                },
                {
                    name: pf.globals.states.detailpage.empty,
                    param: {
                        templateUrl: platform.getResourceRoot() + '/static/fipo/templates/detailpageStateEmpty.html'
                    }
                }
            ];
        getDefaultStates.$inject = [
            '$stateProvider'
        ];
        return {
            isDefaultState: isDefaultState,
            getDefaultStates: getDefaultStates,
            registerDefaultStates: registerDefaultStates
        }
    })
}();
define('fipo/lib/shared/modules/detailPageStates', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailstateservice', [
    ], function () {
        var detailStates = {
                popupOpen: false,
                overlayOpen: false,
                inlineOpen: false
            },
            isPopupOpen = function isPopupOpen() {
                return detailStates.popupOpen
            },
            isOverlayOpen = function isOverlayOpen() {
                return detailStates.overlayOpen
            },
            isInlineOpen = function isInlineOpen() {
                return detailStates.inlineOpen
            },
            setPopupOpen = function setPopupOpen(open) {
                detailStates.popupOpen = !!open
            },
            setOverlayOpen = function setOverlayOpen(open) {
                detailStates.overlayOpen = !!open
            },
            setInlineOpen = function setInlineOpen(open) {
                detailStates.inlineOpen = !!open
            };
        return {
            isPopupOpen: isPopupOpen,
            isOverlayOpen: isOverlayOpen,
            isInlineOpen: isInlineOpen,
            setPopupOpen: setPopupOpen,
            setOverlayOpen: setOverlayOpen,
            setInlineOpen: setInlineOpen
        }
    })
}();
define('fipo/lib/shared/modules/detailStateService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_common', [
        'require',
        'lodash',
        'pf-shared-modules-util'
    ], function (require) {
        function DetailPageTypeAbstract() {
            this.config = null
        }
        var _ = require('lodash'),
            util = require('pf-shared-modules-util');
        DetailPageTypeAbstract.prototype.init = function init(config) {
            this.config = config;
            var eventName = pf.globals.ngevents.DETAIL_CHANGE_PAGE_TITLE;
            if (!config.scope.$$listeners[eventName]) {
                var unbind = config.scope.$on(eventName, function (event, data) {
                    this.setHeaders(data)
                }.bind(this));
                config.scope.$on('$destroy', function () {
                    unbind()
                })
            }
        };
        DetailPageTypeAbstract.prototype.isInitialized = function isInitialized() {
            return util.hasValue(this.config)
        };
        DetailPageTypeAbstract.prototype.assertInitialized = function assertInitialized() {
            if (!this.isInitialized()) throw new Error('Detail page renderer not initialized, no configuration was specified.')
        };
        DetailPageTypeAbstract.prototype.setHeaders = function setHeaders(headers) {
            this.assertInitialized();
            var scope = this.config.scope;
            scope.$applyAsync(function () {
                _.merge(scope, headers)
            })
        };
        return {
            DetailPageTypeAbstract: DetailPageTypeAbstract
        }
    })
}();
define('fipo/lib/shared/modules/detailpages/detailPageCommon', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_containers', [
        'require',
        'jquery'
    ], function (require) {
        function getPfjsonWithoutTabs($rootElement) {
            return jQuery($rootElement).find('.widget-tab-container .content-pane-pfjson')
        }
        function getPfjsonWithTabs($rootElement) {
            return jQuery($rootElement).find('.widget_tabs section .content-pane-pfjson')
        }
        var jQuery = require('jquery');
        return {
            getPfjsonWithoutTabs: getPfjsonWithoutTabs,
            getPfjsonWithTabs: getPfjsonWithTabs
        }
    })
}();
define('fipo/lib/shared/modules/detailpages/detailPageContainers', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_type_iframe', [
        'require',
        'lodash',
        'angular',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-shared-modules-detailpages-detail_page_common',
        'pf-angular-common',
        'pf-shared-modules-translator'
    ], function (require) {
        function DetailPageTypeIframe() {
            DetailPageTypeAbstract.call(this)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            detailPageCommon = require('pf-shared-modules-detailpages-detail_page_common'),
            pfAngularCommon = require('pf-angular-common'),
            translator = require('pf-shared-modules-translator'),
            initInjector = angular.injector(['ng',
                pfAngularCommon.moduleName], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout'),
            $q = initInjector.get('$q'),
            $sce = initInjector.get('$sce'),
            translate = translator.translate,
            DetailPageTypeAbstract = detailPageCommon.DetailPageTypeAbstract;
        DetailPageTypeIframe.prototype = _.create(DetailPageTypeAbstract.prototype);
        DetailPageTypeIframe.constructor = DetailPageTypeIframe;
        DetailPageTypeIframe.prototype.loadDetailPage = function loadDetailPage(urlObj) {
            var self = this;
            this.assertInitialized();
            var $scope = this.config.scope;
            $scope.detailPageName = _.toLower(urlObj.groupTitleKey);
            return $q(function (resolve) {
                $timeout(function () {
                    if (_.isEmpty(urlObj.params)) $scope.iframeSrcUrl = $sce.getTrustedResourceUrl(platform.getLocationOrigin() + urlObj.url);
                    else {
                        var params = urlObj.params,
                            urlParams = [
                            ];
                        for (var key in params) if (params.hasOwnProperty(key)) urlParams.push(key + '=' + encodeURIComponent(params[key]));
                        urlParams = urlParams.join('&');
                        $scope.iframeSrcUrl = $sce.getTrustedResourceUrl(platform.getLocationOrigin() + urlObj.url + '?' + urlParams)
                    }
                    self.setHeaders({
                        pageTitle: urlObj.groupTitleKey ? translate(urlObj.groupTitleKey, $scope)  : null
                    });
                    if (urlObj.config && urlObj.config.helpId) {
                        var helpUrl = pfWidgetFunctions.getHelpUrl(urlObj.widgetName, urlObj.config.helpId);
                        if (helpUrl) {
                            $scope.helpLink = {
                                url: helpUrl.url
                            };
                            $scope.helpText = urlObj.config.helpText || util.expandKey('DefaultHelpText', $scope)
                        }
                    } else {
                        $scope.helpLink = null;
                        $scope.helpText = null
                    }
                    resolve()
                })
            })
        };
        return DetailPageTypeIframe
    })
}();
define('fipo/lib/shared/modules/detailpages/detailPageTypeIframe', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_type_json', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-tabs',
        'pf-shared-modules-detailpages-detail_page_common',
        'pf-shared-modules-detail_page_names',
        'pf-angular-common',
        'pf-shared-modules-translate_engine'
    ], function (require) {
        function DetailPageTypeJson() {
            DetailPageTypeAbstract.call(this)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            tabs = require('pf-shared-modules-tabs'),
            detailPageCommon = require('pf-shared-modules-detailpages-detail_page_common'),
            detailPageNames = require('pf-shared-modules-detail_page_names'),
            pfAngularCommon = require('pf-angular-common'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            initInjector = angular.injector(['ng',
                pfAngularCommon.moduleName], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout'),
            $q = initInjector.get('$q'),
            DetailPageTypeAbstract = detailPageCommon.DetailPageTypeAbstract;
        DetailPageTypeJson.prototype = _.create(DetailPageTypeAbstract.prototype);
        DetailPageTypeJson.constructor = DetailPageTypeJson;
        DetailPageTypeJson.prototype.loadDetailPage = function loadDetailPage(urlObj) {
            this.assertInitialized();
            var $scope = this.config.scope,
                module = this.config.module;
            urlObj.data = urlObj.data || {
            };
            urlObj.ctrl = urlObj.url;
            return $q(function (resolve) {
                requireAsync([urlObj.ctrl], function loadLazyControllerModule(lazyControllerModule) {
                    function initalizeDetailController(ctrl) {
                        var showDetailPage = function () {
                            $timeout(function () {
                                $scope.pageTitle = null;
                                $scope.includePath = platform.getResourceRoot() + ctrl.template;
                                if ($scope.displayTabs) translateEngine.requestTranslationModules([detailPageNames.createTranslationKey($scope.detailPageName)]).then(function () {
                                    resolve()
                                });
                                else resolve()
                            });
                            if ($scope.popupDetailInitializeUnlistener) $scope.popupDetailInitializeUnlistener();
                            $scope.popupDetailInitializeUnlistener = $scope.$on(pf.globals.ngevents.DETAIL_PAGE_INITIALIZED, function () {
                                $scope.$broadcast(pf.globals.ngevents.SEND_DATA_TO_CONTROLLER, urlObj)
                            })
                        };
                        $scope.displayTabs = false;
                        $scope.tabsLoaded = false;
                        $scope.tabsVisibility = false;
                        if (ctrl.detailPageName) {
                            $scope.detailPageName = ctrl.detailPageName;
                            var urlMappingKey = ctrl.detailPageName;
                            if (_.has(urlObj, 'params.type')) urlMappingKey = detailPageNames.createInstanceName(ctrl.detailPageName, urlObj.params.type);
                            var tabSet = _.attempt(tabs.getTabSet, urlMappingKey);
                            if (!_.isError(tabSet)) {
                                $scope.displayTabs = tabSet.notEmpty();
                                $scope.tabs = tabSet.getTabs();
                                $scope.tabsVisibility = $scope.tabsLoaded = true
                            }
                        }
                        var promiseAvailable = ctrl.init(module);
                        if (promiseAvailable) promiseAvailable.then(function () {
                            showDetailPage()
                        });
                        else showDetailPage()
                    }
                    if (lazyControllerModule) initalizeDetailController(lazyControllerModule);
                    else requireAsync([urlObj.ctrl], function loadLazyController(lazyController) {
                        initalizeDetailController(lazyController)
                    })
                })
            })
        };
        return DetailPageTypeJson
    })
}();
define('fipo/lib/shared/modules/detailpages/detailPageTypeJson', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_type_pfjson', [
        'require',
        'lodash',
        'angular',
        'jquery',
        'pf-shared-modules-urls',
        'pf-app-detect',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-scrolling',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-iframes',
        'pf-shared-modules-util',
        'pf-shared-modules-detailpages-detail_page_common',
        'pf-shared-modules-detailpages-detail_page_containers',
        'pf-shared-modules-pageloader',
        'pf-angular-common',
        'pf-shared-modules-translator',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        function DetailPageTypePfjson() {
            DetailPageTypeAbstract.call(this);
            this.initialized = false
        }
        function init(config) {
            if (!initialized) {
                $scope = config.scope;
                $state = config.state;
                widget = config.widget;
                widgetName = config.widgetName;
                errorFn = config.errorFn;
                finallyFn = config.finallyFn;
                initialized = true
            }
        }
        function sanitizeMessages(messageArr) {
            for (var i = 0, len = messageArr.length; i < len; i++) {
                var message = messageArr[i];
                if (message.message) message.message = translate(message.message, $scope);
                if (message.title) message.title = translate(message.title, $scope);
                else message.title = translate('Error', $scope)
            }
        }
        function prepareElementsForWidget(contentObj, contentElement, responseScript) {
            var content = '';
            if (contentObj) {
                content = contentObj.html().replace(SUBMIT_REGEX, 'jQuery(document.$1).submit()');
                content = content.replace(/\/public\/ef\/cc\/pics\//gi, pf.globals.urlprefix.BUNDLE + '/ux/img/detail_pages/old_icons/');
                content = content.replace(TAG_WHITESPACE_IEBUG_REGEX, '><')
            }
            content = content.replace(/(<img[^>]*)[ ]img-src=/gi, '$1 src=');
            contentElement.empty();
            contentElement.append(content);
            var $amountInputFields = jQuery('div.pf-input-amount-format > input', contentElement);
            if ($amountInputFields.length > 0) for (var i = 0; i < $amountInputFields.length; i++) angularCommon.configureAmountInput($amountInputFields[i]);
            adjustContent(contentElement, responseScript)
        }
        function signalError(err, url) {
            if (_.isFunction(errorFn) && !err.abs) {
                errorFn.urlObj = {
                    url: url,
                    type: 'PFJSON'
                };
                errorFn(err)
            }
        }
        function signalFinally() {
            pageLoader.hideLoader();
            if (_.isFunction(finallyFn)) finallyFn()
        }
        function isJavaScriptUrl(url) {
            return _.startsWith(url.toLowerCase(), 'javascript:')
        }
        function executeJavaScriptUrl(url, event) {
            event.preventDefault();
            jQuery.globalEval(url.substring('javascript:'.length))
        }
        function adjustContent(contentElement, responseScript) {
            var jq = jQuery;
            jq('head script.temporary').remove();
            if (responseScript) {
                var fragment = document.createDocumentFragment();
                responseScript.each(function () {
                    var $this = jq(this);
                    if (!$this.attr('src')) {
                        var text = $this.html().replace(SUBMIT_REGEX, 'jQuery(document.$1).submit()');
                        if (detect.browser.isIE) text = text.replace(FOCUS_REGEX, 'setTimeout(setFocus, 300);');
                        var script = document.createElement('script');
                        script.setAttribute('type', 'text/javascript');
                        script.setAttribute('class', 'temporary');
                        script.text = text;
                        fragment.appendChild(script)
                    }
                });
                jq('head').append(fragment.cloneNode(true))
            }
            if (_.isFunction(window.setFocus) && !platform.isTouch()) window.setFocus();
            contentElement.find('form').off('keypress');
            contentElement.find('form.submit-on-enter').on('keypress', function (event) {
                var keycode;
                if (event.keyCode) keycode = event.keyCode;
                else if (event.which) keycode = event.which;
                else return true;
                if (keycode === pf.globals.keycodes.ENTER) {
                    var $this = jq(this);
                    $this.off('keypress');
                    $this.submit();
                    return false
                }
                return true
            });
            contentElement.find('form').off('submit').on('submit', function (event) {
                var $this = jq(this),
                    url = platform.absoluteUrl($this.attr('action')),
                    method = $this.attr('method');
                if ($this.find('input[name="p_anch"]').length > 0) scrolling.storeScrollPosition();
                if ($this.find('input[type="file"]').length > 0) {
                    var detailPageContent;
                    iFrames.prepareIFrame(url, $this).then(function (content) {
                        detailPageContent = content
                    }, function () {
                        detailPageContent = clientMessages.createDefaultErrorMessage()
                    }).finally (function () {
                        gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, detailPageContent)
                    });
                    return true
                } else if ('biller' === $this.attr('target') || $this.hasClass('download')) {
                    $this.attr('enctype', 'application/x-www-form-urlencoded;charset=UTF-8');
                    $this.attr('accept-charset', 'UTF-8');
                    $this.attr('action', url);
                    if ($this.hasClass(pf.globals.classes.NATIVE_VIEWER)) {
                        for (var params = {
                        }, i = 0; i < this.elements.length; i++) {
                            var element = this.elements[i];
                            params[element.name] = element.value
                        }
                        var fullUrl = util.createUrlWithParams(url, params);
                        urls.openDocumentUrl(fullUrl);
                        return false
                    }
                    return true
                } else if (isJavaScriptUrl(url)) executeJavaScriptUrl(url, event);
                else {
                    pageLoader.showLoader();
                    var hashIndex = url.indexOf('#'),
                        hash = hashIndex === - 1 ? null : url.substring(hashIndex + 1);
                    if (hash) url = url.substring(0, hashIndex);
                    var paramObject = {
                    };
                    if (method) {
                        method = restng.adjustHttpMethod(method);
                        paramObject[method] = $this.serialize()
                    }
                    var sendPromise = restng.sendRequest(url, restng.options.type.JSON, method, paramObject[restng.options.method.GET], paramObject[restng.options.method.POST]);
                    sendPromise.then(function (data) {
                        if (hash) data.pageHash = hash;
                        gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, data)
                    }).catch (function (err) {
                        signalError(err, url)
                    }).finally (function () {
                        signalFinally()
                    })
                }
                event.preventDefault();
                return false
            });
            var $a = jQuery(contentElement).find('a');
            $a.unbind('click');
            $a.click(function (event) {
                var $this = jQuery(this),
                    url = $this.attr('href');
                if (!detect.isApp() || !$this.hasClass(pf.globals.classes.NATIVE_VIEWER) && !$this.closest('td').hasClass(pf.globals.classes.NATIVE_VIEWER)) if (!detect.isApp() || !$this.hasClass(pf.globals.classes.EXTERNAL_BROWSER) && !$this.closest('td').hasClass(pf.globals.classes.EXTERNAL_BROWSER)) {
                    if (url) {
                        var isEfUrl = _.startsWith(url, platform.getEfPrefix()) || _.startsWith(url, 'onl_');
                        if (isJavaScriptUrl(url)) executeJavaScriptUrl(url, event);
                        else if ('#' === url) {
                            event.preventDefault();
                            scrolling.scrollToTop()
                        } else if (isEfUrl && !_.includes(url, '/appl/') && !$this.hasClass('download')) {
                            event.preventDefault();
                            url = platform.absoluteUrl(url);
                            restng.getJson(url).then(function (data) {
                                gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, data)
                            }).catch (function (err) {
                                signalError(err, url)
                            }).finally (function () {
                                signalFinally()
                            })
                        }
                    }
                } else {
                    event.preventDefault();
                    event.stopPropagation();
                    url = this.href;
                    urls.openExternalUrl(url)
                } else {
                    event.preventDefault();
                    event.stopPropagation();
                    url = this.href;
                    url = url.replace(/p_download=1/, 'p_download=0');
                    urls.openDocumentUrl(url)
                }
            });
            if (detect.isApp()) {
                var printButton = document.querySelector('[pftId=btn-drucken]');
                if (null !== printButton) printButton.classList.add('display-none')
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            jQuery = require('jquery'),
            urls = require('pf-shared-modules-urls'),
            detect = require('pf-app-detect'),
            pfWidgetFunctions = require('pf-widget-functions'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            scrolling = require('pf-shared-modules-scrolling'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            iFrames = require('pf-shared-modules-iframes'),
            util = require('pf-shared-modules-util'),
            detailPageCommon = require('pf-shared-modules-detailpages-detail_page_common'),
            detailPageContainers = require('pf-shared-modules-detailpages-detail_page_containers'),
            pageLoader = require('pf-shared-modules-pageloader'),
            angularCommon = require('pf-angular-common'),
            translator = require('pf-shared-modules-translator'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            SUBMIT_REGEX = /document\.([^\.]*)\.submit\(\)/gi,
            FOCUS_REGEX = /setFocus\(\);/gi,
            TAG_WHITESPACE_IEBUG_REGEX = />[ \t\r\n\v\f]*</g,
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout'),
            $q = initInjector.get('$q'),
            translate = translator.translate,
            LOG = loggerFactory.getLogger('DetailpagePFJSON'),
            initialized = false,
            $scope,
            $state,
            widget,
            widgetName,
            errorFn,
            finallyFn,
            submitReplaceRegex = /\.submit\(\);?$/,
            DetailPageTypeAbstract = detailPageCommon.DetailPageTypeAbstract;
        DetailPageTypePfjson.prototype = _.create(DetailPageTypeAbstract.prototype);
        DetailPageTypePfjson.constructor = DetailPageTypePfjson;
        DetailPageTypePfjson.prototype.loadDetailPage = function loadDetailPage(urls) {
            var pageDeferred = $q.defer(),
                urlObj = null;
            this.assertInitialized();
            init(this.config);
            $scope.detailPageName = 'pfjson';
            $scope.displayTabs = false;
            urlObj = urls;
            if (urls[0]) urlObj = urls[0];
            if (_.includes(urlObj.url, platform.getPfChUrl())) {
                window.location.href = urlObj.url;
                pageDeferred.resolve()
            } else this.loadAndDisplay(urlObj.url, urlObj.params, pageDeferred);
            return pageDeferred.promise
        };
        DetailPageTypePfjson.prototype.loadPfJsonData = function loadPfJsonData(url, params) {
            this.assertInitialized();
            var loadDeferred = $q.defer();
            init(this.config);
            restng.postFormData2Json(url, params).then(function success(data) {
                if (data) loadDeferred.resolve(data);
                else {
                    LOG.error('PFJSON failure! restng.postFormData2Json returned no data.');
                    loadDeferred.reject()
                }
            }).catch (function error(err) {
                LOG.error('PFJSON failure! restng.postFormData2Json url param was probably wrong.', err);
                loadDeferred.reject(err)
            });
            return loadDeferred.promise
        };
        DetailPageTypePfjson.prototype.renderTemplate = function renderTemplate(data) {
            var templateDeferred = $q.defer();
            this.assertInitialized();
            init(this.config);
            var pfjsonData = data.data || data,
                dustTemplates = platform.isMobile() ? 'dust-templates-mobile' : 'dust-templates';
            $timeout(function () {
                function iterateThroughButtons(f) {
                    if (pfjsonData.elements) {
                        var buttonsElement = pfjsonData.elements[pfjsonData.elements.length - 1];
                        if ('buttons' === buttonsElement.elType) for (var j = buttonsElement.elements.length - 1; j >= 0; j--) f(buttonsElement.elements[j], j, buttonsElement)
                    }
                }
                if (pfjsonData.messages) for (var msg = pfjsonData.messages, kinds = [
                    'errors',
                    'infos',
                    'notices'
                ], i = 0, len = kinds.length; i < len; i++) {
                    var kind = kinds[i];
                    if (msg[kind]) {
                        if (!msg[kind][0].translated) sanitizeMessages(msg[kind]);
                        pfjsonData.pageTitle = msg[kind][0].title
                    }
                }
                this.setHeaders({
                    pageTitle: pfjsonData.pageTitle
                });
                $scope.helpText = pfjsonData.helpText;
                $scope.helpLink = pfWidgetFunctions.getHelpUrl(widgetName, pfjsonData.helpKey);
                if ($scope.helpLink) pfjsonData.helpLink = $scope.helpLink.url;
                $scope.backBtn = false;
                $scope.editSearchBtn = false;
                if (platform.isMobile()) {
                    $scope.tncLink = pfWidgetFunctions.getHelpUrl(widgetName, 'tnc' + pfjsonData.tncKey);
                    if ($scope.tncLink) pfjsonData.tncLink = $scope.tncLink.url;
                    iterateThroughButtons(function (btn, ix, buttonsElement) {
                        switch (btn.pftId) {
                            case 'btn-zurueck':
                                $scope.backBtn = btn;
                                buttonsElement.elements.splice(ix, 1);
                                break;
                            case 'btn-suche_anpassen':
                                var separatorElem = {
                                    elType: 'text',
                                    sType: 'hr',
                                    class: 'split_pane'
                                };
                                btn.text = btn.value;
                                btn.elType = 'link';
                                btn.link = true;
                                btn.class = 'link link_with_icon icon-search showOnMobile';
                                pfjsonData.elements.unshift(separatorElem);
                                pfjsonData.elements.unshift(btn);
                                buttonsElement.elements.splice(ix, 1);
                                break;
                            case 'btn-drucken':
                                buttonsElement.elements.splice(ix, 1)
                        }
                    })
                } else iterateThroughButtons(function (btn) {
                    if ('btn-zurueck' === btn.pftId) $scope.backBtn = btn
                });
                if ($scope.backBtn) $scope.onBack = function () {
                    jQuery(eval($scope.backBtn.onclick.replace(submitReplaceRegex, ''))).submit()
                };
                if ($scope.editSearchBtn) $scope.onEditSearch = function () {
                    jQuery(eval($scope.editSearchBtn.onclick.replace(submitReplaceRegex, ''))).submit()
                };
                if (true === pfjsonData.reloadWidgetMapping) {
                    platform.clearUrlMappingCache();
                    $scope._config.noRefreshNecessary = false
                }
                requireAsync(['dust.core',
                    'dust-helpers',
                    'dust-pfhelpers',
                    dustTemplates,
                    'jquery-flot',
                    'jquery-flot-time',
                    'jquery-tablesorter'], function () {
                    window.dust.render('template', pfjsonData, function (err, out) {
                        if (err) {
                            LOG.error(err.message, err.stack);
                            $state.go(pf.globals.states.detailpage.error);
                            templateDeferred.reject()
                        }
                        var content = util.extractElement(out, '#content');
                        $timeout(function () {
                            if (platform.isMobile()) {
                                jQuery(content).find('span.link-item').each(function () {
                                    if (!jQuery(this).find('a').hasClass('showOnMobile')) jQuery(this).remove()
                                });
                                jQuery(content).find('a:not(.anchor)').each(function () {
                                    var $linkElement = jQuery(this);
                                    if (!$linkElement.hasClass('showOnMobile') && !$linkElement.hasClass('icon_link') && !$linkElement.hasClass('link_with_icon')) {
                                        $linkElement.find('span.hidden').remove();
                                        $linkElement.parent().find('a').replaceWith(this.innerHTML)
                                    }
                                });
                                content.find('.form-split > .form-elements').each(function (index, item) {
                                    if (0 === item.childNodes.length) jQuery(item.parentNode).remove()
                                });
                                content.find('form > .split_pane').each(function (index, item) {
                                    var nextSibling = item.nextSibling;
                                    if (!nextSibling || 'HR' === nextSibling.nodeName) jQuery(item).remove()
                                })
                            }
                            var messages = jQuery(content).find('.error, .info-message, .ef-hint-message');
                            if (!_.isEmpty(messages)) {
                                var $focusedMessage = jQuery(messages[0]);
                                $focusedMessage.addClass('js-autofocus')
                            }
                        });
                        $timeout(function () {
                            var contentContainer = detailPageContainers.getPfjsonWithoutTabs(widget.body),
                                responseScript = util.extractElement(out, 'script');
                            prepareElementsForWidget(content, contentContainer, responseScript);
                            if (data.pageHash) $timeout(function () {
                                var $anchor = jQuery('#' + data.pageHash);
                                if ($anchor.length) {
                                    scrolling.restoreScrollPosition();
                                    var $elToFocus;
                                    if ($anchor.attr('href')) $elToFocus = $anchor;
                                    else $elToFocus = $anchor.closest('tr').find('a[href]');
                                    if ($elToFocus) $elToFocus.focus()
                                }
                            }, 500);
                            templateDeferred.resolve()
                        })
                    });
                    $scope.$apply()
                })
            }.bind(this)); return templateDeferred.promise
        };
        DetailPageTypePfjson.prototype.loadAndDisplay = function loadAndDisplay(url, params, deferred) {
            this.loadPfJsonData(url, params).then(function (data) {
                this.handlePfJsonData(data, url, params).then(function () {
                    deferred.resolve()
                })
            }.bind(this)).catch (function (err) {
                deferred.reject(err)
            })
        };
        DetailPageTypePfjson.prototype.handlePfJsonData = function handlePfJsonData(data, url, params) {
            var renderDeferred = $q.defer();
            try {
                this.renderTemplate(data).then(function () {
                    renderDeferred.resolve()
                })
            } catch (e) {
                LOG.error('PFJSON rendering error with message {0} for {1} params [{2}] data [{3}]', [
                    e.message,
                    url,
                    params,
                    data
                ]);
                renderDeferred.reject(e)
            }
            return renderDeferred.promise
        };
        return DetailPageTypePfjson
    })
}(window);
define('fipo/lib/shared/modules/detailpages/detailPageTypePfjson', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-detailpages-detail_page_type_wcms', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-util',
        'pf-shared-modules-detailpages-detail_page_common',
        'pf-angular-common',
        'pf-shared-modules-translator',
        'pf-shared-modules-scrolling'
    ], function (require) {
        function DetailPageTypeWcms() {
            DetailPageTypeAbstract.call(this)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            restng = require('pf-shared-modules-rest_ng'),
            util = require('pf-shared-modules-util'),
            detailPageCommon = require('pf-shared-modules-detailpages-detail_page_common'),
            pfAngularCommon = require('pf-angular-common'),
            translator = require('pf-shared-modules-translator'),
            scrolling = require('pf-shared-modules-scrolling'),
            initInjector = angular.injector(['ng',
                pfAngularCommon.moduleName], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout'),
            $q = initInjector.get('$q'),
            translate = translator.translate,
            DetailPageTypeAbstract = detailPageCommon.DetailPageTypeAbstract;
        DetailPageTypeWcms.prototype = _.create(DetailPageTypeAbstract.prototype);
        DetailPageTypeWcms.constructor = DetailPageTypeWcms;
        DetailPageTypeWcms.prototype.loadDetailPage = function loadDetailPage(urlObj) {
            this.assertInitialized();
            var self = this,
                $scope = this.config.scope;
            $scope.detailPageName = _.toLower(urlObj.actionType);
            $scope.showCloseButton = true;
            return $q(function (resolve) {
                function showNoContent() {
                    var content = translate('WcmsNotAvailable', $scope);
                    self.setContent(content, resolve)
                }
                self.setHeaders({
                    pageTitle: urlObj.actionType ? translate(urlObj.actionType, $scope)  : null
                });
                restng.getWcmsPage(urlObj.url).then(function (response) {
                    if (_.includes(response, pf.globals.errors.ERROR_404)) showNoContent();
                    else {
                        var content = util.extractBody(response);
                        self.setContent(content, resolve)
                    }
                }).catch (showNoContent)
            })
        };
        DetailPageTypeWcms.prototype.setContent = function setContent(content, resolve) {
            var $scope = this.config.scope;
            $timeout(function () {
                $scope.wcmsContent = content;
                resolve();
                scrolling.scrollToElement(jQuery('.wcms'))
            })
        };
        return DetailPageTypeWcms
    })
}();
define('fipo/lib/shared/modules/detailpages/detailPageTypeWcms', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-domutil', [
    ], function () {
        function focusBySelector(selector) {
            var el = document.querySelector(selector);
            focusElement(el)
        }
        function focusElement(el) {
            if (el) el.focus()
        }
        return {
            focusBySelector: focusBySelector,
            focusElement: focusElement
        }
    })
}();
define('fipo/lib/shared/modules/domutil', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-dropdowns', [
        'require',
        'lodash',
        'pf-shared-modules-util',
        'pf-shared-modules-productservice',
        'pf-shared-modules-formatter',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-translator',
        'pf-shared-modules-icons',
        'pf-shared-modules-currencies'
    ], function (require) {
        function extendAndBuildAccountOptions(accounts, options) {
            var extendedAccounts = productService.extendAccounts(accounts);
            return buildAccountOptions(extendedAccounts, options)
        }
        function buildAccountOptions(accounts, options) {
            if (!_.isArray(accounts)) return null;
            var saldoType = _.get(options, 'saldoType', DEFAULT_SALDO_TYPE),
                valueType = _.get(options, 'valueType', DEFAULT_VALUE_TYPE);
            return _.map(accounts, function (account, index) {
                var item = {
                        index: index,
                        name: account.alias || account.name || account.accountName
                    },
                    number = account.number || account.nr;
                switch (valueType) {
                    case VALUE_TYPE.NUMBER:
                        item.value = _.defaultTo(number, account.iban);
                        break;
                    case VALUE_TYPE.IBAN:
                    default:
                        item.value = _.defaultTo(account.iban, number)
                }
                item.account = account;
                if (!_.isNil(account.formatted)) {
                    var info = account.formatted[saldoType + 'WithCurrency'];
                    if (_.isUndefined(info) && saldoType === SALDO_TYPE.VERFUEGBARER_SALDO) info = account.formatted[SALDO_TYPE.BUCHUNGSSALDO + 'WithCurrency'];
                    else if (_.isUndefined(info) && saldoType === SALDO_TYPE.BUCHUNGSSALDO) info = account.formatted[SALDO_TYPE.VERFUEGBARER_SALDO + 'WithCurrency'];
                    item.info = info;
                    item.description = account.formatted.number
                }
                return item
            })
        }
        function getAccountIndex(accountNumber, accounts) {
            if (!_.isArray(accounts)) return - 1;
            var accountIndex = - 1;
            _.forEach(accounts, function (account, index) {
                if (accountNumber === account.number) accountIndex = index
            });
            return accountIndex
        }
        function buildEBillContractOptions(contracts) {
            if (!_.isArray(contracts)) return [];
            else return _.map(contracts, function (contract) {
                var item = {
                    name: contract.owner,
                    value: - 1
                };
                if (contract.number) {
                    item.value = contract.number;
                    item.description = formatter.formatEBillContractNumber(contract.number);
                    item.isPerson = !!contract.isPerson
                }
                return item
            })
        }
        function buildCurrencyOptions(currencies) {
            if (!_.isArray(currencies)) return null;
            else return _.map(currencies, function (currency) {
                var translations = currenciesModule.getCurrency(currency);
                return {
                    value: currency,
                    label: translations.literal,
                    fullLabel: translations.extended,
                    name: translations.extended
                }
            })
        }
        function buildCountryOptions(countries, countryType) {
            var enumKey = countryType === pf.globals.countryType.PAYMENT ? 'paymentCountry' : 'country';
            if (!_.isArray(countries)) return null;
            else return _.map(countries, function (country) {
                var translatedLabel = translate(enumKey + '.' + country, {
                    textKey: 'global'
                });
                return {
                    value: country,
                    label: translatedLabel,
                    fullLabel: translatedLabel,
                    name: translatedLabel
                }
            })
        }
        function getWcmsEnumOptions(enumName, scope) {
            var enumArray = wcmsEnumGenerator.getEnumArray(enumName, scope);
            return _.map(enumArray, function (item) {
                return {
                    value: item.id,
                    name: item.text
                }
            })
        }
        var _ = require('lodash'),
            util = require('pf-shared-modules-util'),
            productService = require('pf-shared-modules-productservice'),
            formatter = require('pf-shared-modules-formatter'),
            wcmsEnumGenerator = require('pf-shared-modules-wcms_enum_generator'),
            translator = require('pf-shared-modules-translator'),
            icons = require('pf-shared-modules-icons'),
            currenciesModule = require('pf-shared-modules-currencies'),
            translate = translator.translate,
            SALDO_TYPE = {
                BUCHUNGSSALDO: 'amount',
                VERFUEGBARER_SALDO: 'availableAmount'
            },
            VALUE_TYPE = {
                NUMBER: 'number',
                IBAN: 'iban'
            },
            DEFAULT_SALDO_TYPE = SALDO_TYPE.VERFUEGBARER_SALDO,
            DEFAULT_VALUE_TYPE = VALUE_TYPE.IBAN;
        return {
            extendAndBuildAccountOptions: extendAndBuildAccountOptions,
            buildAccountOptions: buildAccountOptions,
            getAccountIndex: getAccountIndex,
            buildEBillContractOptions: buildEBillContractOptions,
            buildCurrencyOptions: buildCurrencyOptions,
            buildCountryOptions: buildCountryOptions,
            getWcmsEnumOptions: getWcmsEnumOptions,
            SALDO_TYPE: SALDO_TYPE,
            VALUE_TYPE: VALUE_TYPE
        }
    })
}();
define('fipo/lib/shared/modules/dropdowns', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-dynamic_css', [
        'require',
        'bluebird',
        'pf-shared-modules-platform'
    ], function (require) {
        function createLink(id, url) {
            var link = document.createElement('link');
            link.id = id;
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = url;
            return link
        }
        function checkLoaded(url, resolve) {
            for (var styleSheets = document.styleSheets, keys = Object.keys(styleSheets), len = keys.length, index = 0; index < len; ++index) {
                var i = keys[index],
                    href = styleSheets[i].href || '';
                if (href.split('/').slice( - 1).join() === url) {
                    clearTimeout(t);
                    resolve();
                    return
                }
            }
            t = setTimeout(function () {
                checkLoaded(url, resolve)
            }, 50)
        }
        function inject(id, url) {
            return new _Promise(function (resolve) {
                var extendedUrl = platform.getCssRoot() + '/' + url;
                if (document.querySelectorAll('link#' + id).length) checkLoaded(extendedUrl, resolve);
                else {
                    var link = createLink(id, extendedUrl);
                    link.onload = resolve;
                    head.appendChild(link)
                }
            })
        }
        var _Promise = require('bluebird'),
            platform = require('pf-shared-modules-platform'),
            head = document.querySelector('head'),
            t = null;
        return {
            inject: inject
        }
    })
}();
define('fipo/lib/shared/modules/dynamicCss', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-file_downloads', [
        'require',
        'lodash',
        'pf-shared-modules-urls',
        'pf-shared-modules-translator',
        'pf-shared-modules-formatter',
        'pf-shared-modules-util',
        'pf-app-detect'
    ], function (require) {
        function getFileDescription(file, $scope, enumMultiProduct, useShortIban) {
            var translate = translator.translate,
                description;
            if (enumMultiProduct && file.multiProduct && _.has(enumMultiProduct[file.multiProduct], 'text')) description = enumMultiProduct[file.multiProduct].text;
            if (_.isEmpty(description) && file.customerFileReference) description = file.customerFileReference;
            if (_.isEmpty(description) && file.multipleContracts) description = translate('MultipleContracts', $scope);
            if (_.isEmpty(description)) if (file.alias) description = file.alias;
            else if (file.iban) description = useShortIban ? formatter.shortenFormattedIban(file.formatted.iban)  : file.formatted.iban;
            else if (file.contractId) description = file.contractId;
            else description = file.formatted.number;
            return description
        }
        function displayOrDownloadFile(urlObj, pdf, download, fileName) {
            if (!_.includes(urlObj.url, pf.globals.urlprefix.NOT_IN_DEMO)) {
                var forceDownload = download;
                if (!pdf || detect.isApp() && detect.isAndroid()) forceDownload = true;
                var url = getFileUrl(urlObj, forceDownload, fileName);
                if (detect.isApp() || !forceDownload) urls.openDocumentUrl(url);
                else window.location.assign(url)
            } else notInDemo()
        }
        function getFileUrl(urlObj, download, fileName) {
            urlObj.params.p_forcedownload = download ? 1 : 0;
            if (fileName) return util.createUrlWithParams(urlObj.url + '/' + fileName, urlObj.params);
            else return util.createUrlWithParams(urlObj.url, urlObj.params)
        }
        var _ = require('lodash'),
            urls = require('pf-shared-modules-urls'),
            translator = require('pf-shared-modules-translator'),
            formatter = require('pf-shared-modules-formatter'),
            util = require('pf-shared-modules-util'),
            detect = require('pf-app-detect');
        return {
            getFileDescription: getFileDescription,
            displayOrDownloadFile: displayOrDownloadFile,
            getFileUrl: getFileUrl
        }
    })
}(window);
define('fipo/lib/shared/modules/fileDownloads', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-fipowidgetshopservice', [
        'require',
        'lodash',
        'pf-shared-modules-detail_page_abstract_service',
        'angular',
        'pf-widget-functions',
        'pf-shared-modules-platform',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-util',
        'pf-shared-modules-announce',
        'pf-shared-modules-pseudowidget',
        'pf-shared-modules-pageloader',
        'pf-shared-modules-webtrendstracker',
        'pf-requestdata-widgetshoplist',
        'pf-requestdata-widgetshopproductmapping',
        'pf-shared-modules-translator'
    ], function (require) {
        function FipoWidgetShopService() {
            function getTilesContainerName() {
                if (!tilesContainerName) tilesContainerName = document.getElementsByClassName('pf-tiles-container') [0].getAttribute('data-pid');
                return tilesContainerName
            }
            function customizeModeFinished() {
                if (!pristine) {
                    pageLoader.showLoader();
                    window.location.reload()
                }
            }
            function updateInternalWidgetList() {
                widgetList = getWidgetList()
            }
            function getWidgetList() {
                return _.invokeMap(util.getTiles(), String.prototype.replace, PC_BC_REGEX, '')
            }
            DetailPageAbstractService.call(this);
            var self = this,
                pfTranslateConfig = {
                    textKey: 'detailpages.fipowidgetshop'
                },
                tilesContainerName = null;
            pseudoWidget.onRemove(function (id) {
                self.removeWidget(id).then(function () {
                    pseudoWidget.destroy(id)
                })
            });
            this.getWidgetAmountOnHome = function getWidgetAmountOnHome() {
                return getWidgetList().length
            };
            this.getWidgetShopList = function getWidgetShopList() {
                return widgetShopList
            };
            this.getWidgetShopProductMapping = function getWidgetShopProductMapping() {
                return widgetShopProductMapping
            };
            this.addWidget = function addWidget(widgetId, addButtonParams, instanceType) {
                pageLoader.showLoader();
                var pseudoWidgetNode;
                pristine = false;
                var widgetPid;
                if (instanceType) widgetPid = widgetId;
                else widgetPid = [
                    getTilesContainerName(),
                    widgetId
                ].join('-');
                var item = {
                        itemName: widgetPid,
                        contextName: platform.getContextName(),
                        properties: {
                            widgetVisible: true
                        }
                    },
                    addWidgetPromise = restng.postJson(urls.SET_WIDGET.url, angular.copy(item));
                addWidgetPromise.then(function success() {
                    updateInternalWidgetList();
                    var ix = widgetShopList.indexOf(widgetId);
                    widgetShopList.splice(ix, 1);
                    widgetList.push(widgetId);
                    gadgets.pubsub.publish(pf.globals.pubsub.CUSTOMIZE_MODE_ADJUSTMENT)
                });
                if (addButtonParams.insertForemost) item.properties.order = --this.minOrderValue;
                else item.properties.order = ++this.maxOrderValue;
                var updateOrderPromise = this.updateWidgetOrder(item),
                    templatePromise = $templateRequest(pseudoWidgetTemplatePath);
                templatePromise.then(function (pseudoWidgetTemplate) {
                    var insertBeforeNode = addButtonParams.addButtonNode,
                        div = document.createElement('div');
                    if (instanceType) div.innerHTML = pseudoWidgetTemplate.replace(/\$\{widgetPid}/g, widgetPid).replace(/\$\{widgetId}/g, widgetId).replace(/\$\{fullInstanceType}/g, 'Efgenericproduct' + _.upperFirst(instanceType));
                    else div.innerHTML = pseudoWidgetTemplate.replace(/\$\{widgetPid}/g, widgetPid).replace(/\$\{widgetId}/g, widgetId).replace(/\$\{fullInstanceType}/g, '');
                    pseudoWidgetNode = div.children[0].cloneNode(true);
                    if (addButtonParams.insertForemost) insertBeforeNode = addButtonParams.addButtonNode.nextSibling;
                    addButtonParams.widgetListNode.insertBefore(pseudoWidgetNode, insertBeforeNode);
                    pseudoWidget.bootstrap(pseudoWidgetNode)
                });
                var promises = $q.all([templatePromise,
                    addWidgetPromise,
                    updateOrderPromise]);
                promises.then(function () {
                    pseudoWidgetNode.style.visibility = 'visible';
                    pseudoWidgetNode.className += ' has-animation-adding';
                    var key = util.generateWidgetShopIdentifier(widgetId) + 'Title',
                        widgetTitle = translator.translate(key, pfTranslateConfig);
                    announce.assertiveAnnounce(translator.translate('TileSuccessfullyAdded', pfTranslateConfig, {
                        name: widgetTitle
                    }));
                    $timeout(function () {
                        pseudoWidgetNode.className = pseudoWidgetNode.className.replace(' has-animation-adding', '')
                    }, 750)
                }, function () {
                    var parentNode = pseudoWidgetNode.parentNode;
                    if (parentNode) parentNode.removeChild(pseudoWidgetNode)
                }).finally (function () {
                    pageLoader.hideLoader();
                    gadgets.pubsub.publish(pf.globals.pubsub.CUSTOMIZE_MODE_WIDGETS_CHANGED, item)
                });
                return promises
            };
            this.removeWidget = function removeWidget(widgetPid) {
                var focusElementAfterRemoval,
                    widgetId = widgetPid.replace(PC_BC_REGEX, ''),
                    item = {
                        itemName: widgetPid,
                        contextName: platform.getContextName(),
                        properties: {
                            widgetVisible: false
                        }
                    },
                    requestPromise = restng.postJson(urls.SET_WIDGET.url, item);
                requestPromise.then(function () {
                    var key = _.capitalize(_.camelCase(widgetId)) + 'Title',
                        widgetTitle = translator.translate(key, pfTranslateConfig);
                    announce.assertiveAnnounce(translator.translate('TileSuccessfullyRemoved', pfTranslateConfig, {
                        name: widgetTitle
                    }));
                    focusElementAfterRemoval = focusElementAfterRemoval.getElementsByClassName('js-widget--remove') [0] || focusElementAfterRemoval;
                    focusElementAfterRemoval.focus()
                });
                widgetShopList.push(widgetId);
                updateInternalWidgetList();
                var ix = widgetList.indexOf(widgetId);
                widgetList.splice(ix, 1);
                var listItem = _.startsWith(widgetId, '_user') ? document.getElementById(widgetId)  : document.getElementById(widgetPid);
                focusElementAfterRemoval = listItem.nextSibling;
                listItem.className += ' has-animation-removing';
                $timeout(function () {
                    listItem.parentNode.removeChild(listItem);
                    gadgets.pubsub.publish(pf.globals.pubsub.CUSTOMIZE_MODE_ADJUSTMENT);
                    $timeout(function () {
                        gadgets.pubsub.publish(pf.globals.pubsub.CUSTOMIZE_MODE_WIDGETS_CHANGED)
                    }, 5)
                }, 750);
                webtrendsTrackers.trackWebtrends('WT.ac', '_li_ef_page-efhome_' + widgetId + '_delete');
                return requestPromise
            };
            this.updateWidgetOrder = function updateWidgetOrder(item) {
                var url = [
                        platform.getServerRoot(),
                        'portals',
                        platform.getContextName(),
                        'widgets',
                        item.itemName + '.xml'
                    ].join('/'),
                    xmlData = XML_TEMPLATE.replace('${itemName}', item.itemName).replace('${contextName}', item.contextName).replace('${order}', item.properties.order);
                return $http({
                    method: 'PUT',
                    url: url,
                    headers: {
                        'Content-Type': 'text/xml'
                    },
                    params: {
                    },
                    data: xmlData
                })
            };
            this.setMaxOrder = function setMaxOrder(maxOrderValue) {
                this.maxOrderValue = maxOrderValue
            };
            this.setMinOrder = function setMinOrder(minOrderValue) {
                this.minOrderValue = minOrderValue
            };
            gadgets.pubsub.subscribe(pf.globals.pubsub.CUSTOMIZE_MODE_FINISHED, customizeModeFinished)
        }
        var _ = require('lodash'),
            DetailPageAbstractService = require('pf-shared-modules-detail_page_abstract_service'),
            angular = require('angular'),
            widgetFunctions = require('pf-widget-functions'),
            platform = require('pf-shared-modules-platform'),
            restng = require('pf-shared-modules-rest_ng'),
            util = require('pf-shared-modules-util'),
            announce = require('pf-shared-modules-announce'),
            pseudoWidget = require('pf-shared-modules-pseudowidget'),
            pageLoader = require('pf-shared-modules-pageloader'),
            webtrendsTrackers = require('pf-shared-modules-webtrendstracker'),
            widgetShopList = require('pf-requestdata-widgetshoplist'),
            widgetShopProductMapping = require('pf-requestdata-widgetshopproductmapping'),
            translator = require('pf-shared-modules-translator'),
            XML_TEMPLATE = [
                '<?xml version="1.0" encoding="UTF-8"?>',
                '<widget>',
                '<name>${itemName}</name>',
                '<contextItemName>${contextName}</contextItemName>',
                '<properties>',
                '<property name="order">',
                '<value type="double">${order}</value>',
                '</property>',
                '</properties>',
                '</widget>'
            ].join(''),
            PC_BC_REGEX = /^.*(_pc|_bc)\-/,
            urls = {
                SET_WIDGET: widgetFunctions.getActionUrlForPage('SetItem')
            },
            pristine = true,
            pseudoWidgetTemplatePath = pf.globals.urlprefix.BUNDLE + '/templates/pseudoWidget.html',
            injector = angular.injector(['ng'], {
                strictDi: true
            }),
            $templateRequest = injector.get('$templateRequest'),
            $q = injector.get('$q'),
            $http = injector.get('$http'),
            $timeout = injector.get('$timeout'),
            widgetList;
        FipoWidgetShopService.prototype = _.create(DetailPageAbstractService.prototype);
        FipoWidgetShopService.constructor = DetailPageAbstractService;
        return new FipoWidgetShopService
    })
}();
define('fipo/lib/shared/modules/fipoWidgetShopService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-focus', [
        'require',
        'lodash',
        'jquery',
        'angular'
    ], function (require) {
        function focusElement(el) {
            if (el && _.isFunction(el.focus)) $timeout(function () {
                if (deviceIsIOS && el.setSelectionRange) {
                    var length = el.value.length;
                    el.setSelectionRange(length, length)
                }
                if (!isFocusable(el)) if (_.isFunction(el.attr)) {
                    if (!el.attr('tabindex')) el.attr('tabindex', - 1)
                } else if (_.isFunction(el.getAttribute) && !el.getAttribute('tabindex')) el.setAttribute('tabindex', - 1);
                el.focus()
            })
        }
        function isFocusable(el) {
            if (!el) return false;
            if (!_.isNil(el.attributes) && !_.isNil(el.attributes.href)) return true;
            else return !!isNativelyFocusable(el)
        }
        function detailpageFocus(focusTitle) {
            $timeout(function () {
                var element = getDefaultDetailpageFocusElement(focusTitle);
                focusElement(element)
            })
        }
        function getDefaultDetailpageFocusElement(focusTitle) {
            var element,
                detailpage = document.querySelector('.detail_content');
            if (focusTitle) element = detailpage.querySelector('.page-title');
            else {
                if (document.querySelector('[accessibility-focus]')) return null;
                element = detailpage.querySelector('.js-pf-focus');
                if (!element) {
                    element = jQuery('.content-pane:not(.js-pf-no-focus)>:visible');
                    if (element) element = element[0];
                    if (!element) element = detailpage.querySelector('.page-title')
                }
            }
            return element
        }
        function defaultDetailOverlayFocus(focusTitle) {
            $timeout(function () {
                var autofocusEl = document.querySelector('.detail_overlay .js-pf-autofocus');
                if (!autofocusEl) {
                    var element;
                    if (focusTitle) element = document.querySelector('.detail_overlay .detail_overlay--content--title');
                    else {
                        element = document.querySelector('.detail_overlay .js-pf-focus');
                        if (!element) {
                            element = document.querySelector('.detail_overlay .detail_overlay--content-body:not(.js-pf-no-focus)');
                            if (element) element = element.childNodes[1];
                            if (!element) element = document.querySelector('.detail_overlay .detail_overlay--content--title')
                        }
                    }
                    focusElement(element)
                }
            })
        }
        function detailpageDataLoadedFocus() {
            var subscribeFunction = function () {
                $timeout(function () {
                    detailpageFocus(false);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.DETAILPAGE_DATA_LOADED, subscribeFunction)
                })
            };
            gadgets.pubsub.subscribe(pf.globals.pubsub.DETAILPAGE_DATA_LOADED, subscribeFunction)
        }
        function isNativelyFocusable(element) {
            return _.includes(nativeFocusNodes, element.nodeName)
        }
        function GrowingTableFocusser(tableId) {
            function getTableRows() {
                return document.querySelectorAll(tableSelector)
            }
            function saveCurrentState() {
                numRowsBeforeUpdate = getTableRows().length
            }
            function focusAfterUpdate() {
                var rowElements = getTableRows(),
                    focusRow = rowElements[numRowsBeforeUpdate] || rowElements[rowElements.length - 1];
                focusElement(focusRow)
            }
            var numRowsBeforeUpdate = 0,
                tableSelector = '#' + tableId + ' > tbody > tr';
            return {
                saveCurrentState: saveCurrentState,
                focusAfterUpdate: focusAfterUpdate
            }
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            injector = angular.injector(['ng'], {
                strictDi: true
            }),
            $timeout = injector.get('$timeout'),
            nativeFocusNodes = [
                'BUTTON',
                'A',
                'INPUT',
                'TEXTAREA',
                'SELECT'
            ],
            deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);
        return {
            focusElement: focusElement,
            detailpageFocus: detailpageFocus,
            getDetailpageFocusElement: getDefaultDetailpageFocusElement,
            detailpageDataLoadedFocus: detailpageDataLoadedFocus,
            detailOverlayFocus: defaultDetailOverlayFocus,
            GrowingTableFocusser: GrowingTableFocusser
        }
    })
}();
define('fipo/lib/shared/modules/focus', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-formatter', [
        'require',
        'lodash',
        'moment',
        'pf-shared-modules-util',
        'pf-shared-modules-validator'
    ], function (require) {
        function truncate(text, length, end) {
            if (!text || !length) return '';
            var endChar = end;
            if (!end) endChar = '…';
            if (text.length <= length || text.length - endChar.length <= length) return text;
            else return String(text).substring(0, length - endChar.length) + endChar
        }
        function floor(value) {
            var numericValue = _.toNumber(value);
            if (_.isFinite(numericValue)) return _.floor(numericValue);
            else return null
        }
        function shortenString(input, maxLength, suffix) {
            var usedSuffix = suffix || '...',
                maxInputLength = maxLength - usedSuffix.length,
                isValidInput = input && _.isString(input),
                hasMaxLength = _.isNumber(maxLength) && maxLength > 0;
            if (!(isValidInput && hasMaxLength)) return '';
            var result = input.trim();
            if (result.length <= maxLength) return result;
            if (maxInputLength < 1) return result.substr(0, maxLength);
            else return result.substr(0, maxInputLength) + usedSuffix
        }
        function extractAccountNumber(iban) {
            if (!iban) return '';
            var ibanStr = iban.toString();
            if (ibanStr.length <= 9) return ibanStr;
            else return ibanStr.substr( - 9)
        }
        function bigNumberModulo(inputString, dividor) {
            for (var tmp = '', i = 0; i < inputString.length; i++) {
                tmp += inputString.charAt(i);
                var r = tmp % dividor;
                tmp = r.toString(10)
            }
            return tmp
        }
        function postalAccountNumberToIban(number, withoutSpaces) {
            if (isNaN(number) || !isFinite(number)) return '';
            var sum = '09000000' + number + '121700',
                rest = 98 - bigNumberModulo(sum, 97);
            rest = rest < 10 ? '0' + rest : rest;
            var iban = 'CH' + rest + '09000000' + number;
            return !!withoutSpaces ? iban : iban.replace(/(.{4})/gi, '$1 ')
        }
        function formatIban(text) {
            if (!util.hasValue(text)) return '';
            var normalizedText = String(text).replace(/[ .:=\/-]/g, '');
            normalizedText = normalizedText.toUpperCase();
            normalizedText = normalizedText.replace('IBAN', '');
            var rest = normalizedText.length % 4,
                parts = normalizedText.match(/[0-9A-Z]{4}/g);
            if (0 !== rest) parts.push(normalizedText.substr( - rest));
            return parts.join(' ')
        }
        function shortenFormattedIban(text) {
            var indexPointsBegin = 4,
                indexPointsEnd = 15;
            return text.substr(0, indexPointsBegin) + '…' + text.substr(indexPointsEnd)
        }
        function formatAccountNumber(nr) {
            if (util.hasValue(nr)) {
                var number = String(nr).replace(/[ .:=\/-]/g, ''),
                    middleIndex = number.length - 1;
                return number.substring(0, 2) + '-' + number.substring(2, middleIndex).replace(/^0+/, '') + '-' + number.substring(middleIndex)
            }
            return ''
        }
        function formatGenericAccount(value) {
            if (validator.isValidIban(value)) return formatIban(value);
            else if (validator.isValidPostAccount(value)) return formatAccountNumber(value);
            return value
        }
        function formatEsrNumber(nr) {
            if (util.hasValue(nr)) {
                var number = String(nr).replace(/[ .:=\/-]/g, '');
                number = _.padStart(number, 9, '0');
                var middleIndex = number.length - 1;
                return number.substring(0, 2) + '-' + _.replace(number.substring(2, middleIndex), /^0+/, '') + '-' + number.substring(middleIndex)
            }
            return ''
        }
        function formatReferenceNumber(nr) {
            if (util.hasValue(nr)) return String(nr).replace(/(\d)(?=(\d\d\d\d\d)+(?!\d))/g, '$1 ');
            else return ''
        }
        function formatRetirementAccountNumber(nr) {
            if (util.hasValue(nr)) {
                var regex = /(\d)(?=(\d{3})+$)/g;
                return String(nr).replace(regex, '$1.')
            }
            return ''
        }
        function formatEBillContractNumber(nr) {
            if (util.hasValue(nr)) {
                if (nr === - 1) return nr;
                var numberStr = String(nr),
                    rest = numberStr.length % 5,
                    parts = numberStr.match(/[0-9]{5}/g);
                if (rest > 0) parts.push(numberStr.substr( - rest));
                return parts.join(' ')
            }
            return ''
        }
        function formatCardId(value) {
            if (!value) return '';
            else return value.replace(/(\d{3})/g, '$1 ').trim()
        }
        function formatLifeInsurancePolicyNumber(policyNumber) {
            if (_.isNil(policyNumber) || policyNumber.length < 10 || !_.startsWith(policyNumber, 'L') || _.includes(policyNumber, '.')) return policyNumber;
            var formattedNr = policyNumber.slice(3).replace(/^[0]+/g, '');
            formattedNr = formattedNr.substring(0, 1) + '.' + formattedNr.substring(1, 4) + '.' + formattedNr.substring(4, formattedNr.length);
            formattedNr = policyNumber.slice(0, 3) + '     ' + formattedNr;
            return formattedNr
        }
        function formatPoolNumber(nr, currency) {
            if (_.isNil(nr)) return '';
            var formattedNr = _.toString(nr).replace(/(\d)(?=(\d{3})+$)/g, '$1\'');
            return [formattedNr,
                currency].join(' ')
        }
        function isoDateToLocalized(date) {
            if (!date) return '';
            else return formatDate(date, 'YYYY-MM-DD', 'DD.MM.YYYY')
        }
        function isoDateToLocalizedWithTime(date) {
            if (!date) return '';
            else return isoDateToLocalized(date) + ' ' + isoDateToTime(date)
        }
        function isoDateToConcatenated(date) {
            if (!date) return '';
            else return formatDate(date, 'YYYY-MM-DD', 'DDMMYYYY')
        }
        function localizedDateToIso(date) {
            if (!date) return '';
            else return formatDate(date, 'DD.MM.YYYY', 'YYYY-MM-DD')
        }
        function isoDateToTime(date) {
            if (!date) return '';
            else return formatDate(date, 'YYYY-MM-DDTHH:mm:ss', 'HH:mm')
        }
        function isoDateToDatetime(date) {
            if (!date) return '';
            else return formatDate(date, 'YYYY-MM-DDTHH:mm:ss', 'DD.MM.YYYY HH:mm')
        }
        function formatDate(date, inputFormat, outputFormat) {
            var momentDate;
            if (_.isDate(date) && !inputFormat) momentDate = moment(date);
            else momentDate = moment(date, inputFormat);
            if (momentDate.isValid()) return momentDate.format(outputFormat);
            else return date
        }
        function localizedDateRangeSimple(startDate, endDate, separator) {
            if (!startDate) return '';
            var usedSeparator = separator || ' - ',
                range = isoDateToLocalized(startDate);
            if (endDate) range = _.join([range,
                isoDateToLocalized(endDate)], usedSeparator);
            return range
        }
        function percentRaw(value, digits) {
            if (!_.isFinite(value)) return '-';
            var result = value;
            if (_.isFinite(digits)) result = result.toFixed(digits);
            return result + '%'
        }
        function booleanToInt(value) {
            if (!_.isBoolean(value)) return null;
            else return value ? 1 : 0
        }
        function wrapInTelephoneLink(number) {
            return telephoneLinkTemplate({
                trimmedNumber: _.toString(number).replace(/\s/g, ''),
                number: number
            })
        }
        function currencyRate(rate, digits) {
            var separator = '.',
                parts = _.split(rate, separator);
            return [parts[0],
                _.padEnd(parts[1], digits, '0')].join(separator)
        }
        function performance(value, digits) {
            var sign = value > 0 ? '+' : '';
            return sign + percentRaw(value, digits)
        }
        var _ = require('lodash'),
            moment = require('moment'),
            util = require('pf-shared-modules-util'),
            validator = require('pf-shared-modules-validator'),
            telephoneLinkTemplate = _.template('<a href=\'tel:<%= trimmedNumber %>\'><%= number %></a>');
        return {
            truncate: truncate,
            floor: floor,
            shortenString: shortenString,
            extractAccountNumber: extractAccountNumber,
            postalAccountNumberToIban: postalAccountNumberToIban,
            formatIban: formatIban,
            shortenFormattedIban: shortenFormattedIban,
            formatAccountNumber: formatAccountNumber,
            formatGenericAccount: formatGenericAccount,
            formatEsrNumber: formatEsrNumber,
            formatReferenceNumber: formatReferenceNumber,
            formatRetirementAccountNumber: formatRetirementAccountNumber,
            formatEBillContractNumber: formatEBillContractNumber,
            formatCardId: formatCardId,
            formatLifeInsurancePolicyNumber: formatLifeInsurancePolicyNumber,
            formatPoolNumber: formatPoolNumber,
            isoDateToLocalized: isoDateToLocalized,
            isoDateToLocalizedWithTime: isoDateToLocalizedWithTime,
            isoDateToConcatenated: isoDateToConcatenated,
            localizedDateToIso: localizedDateToIso,
            localizedDateRangeSimple: localizedDateRangeSimple,
            formatDate: formatDate,
            isoDateToTime: isoDateToTime,
            isoDateToDatetime: isoDateToDatetime,
            percentRaw: percentRaw,
            booleanToInt: booleanToInt,
            wrapInTelephoneLink: wrapInTelephoneLink,
            currencyRate: currencyRate,
            performance: performance
        }
    })
}();
define('fipo/lib/shared/modules/formatter', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-guided_tour', [
        'require',
        'jquery',
        'pf-shared-modules-cookies'
    ], function (require) {
        function skipItemsWithNoTarget() {
            var li = 0,
                items = jQuery('li.js-guided_tour--item', $guidedtour).filter(':not(#example_widget_guidedtour)');
            items.each(function (i) {
                if (i) {
                    var selector = jQuery(this).data('guided_tour').skipTarget || jQuery(this).data('guided_tour').target,
                        target = jQuery(selector);
                    if (target.length) li = i;
                    else {
                        if (i < items.length) jQuery('a[class*=\'guided_tour--btn-frwd\']', items[li]).attr('href', '#guidedtour' + (i + 2));
                        jQuery('a[class*=\'guided_tour--btn-back\']', items[i + 1]).attr('href', '#guidedtour' + (li + 1));
                        jQuery('.guided_tour_steps li.guided_tour_bullet' + (i + 1)).remove()
                    }
                }
            })
        }
        function showTour() {
            if (0 !== $guidedtour.length) {
                cookies.remove(pf.globals.cookies.LOAD_GUIDED_TOUR);
                if (!isGuidedTourShown) {
                    isGuidedTourShown = true;
                    if (!$guidedtour.data('has-module')) {
                        skipItemsWithNoTarget();
                        var $widgetListContainer = jQuery('.widget_list'),
                            $example = jQuery('#example_widget_guidedtour');
                        $example.removeAttr('style');
                        $example.removeAttr('aria-hidden');
                        $widgetListContainer.prepend($example);
                        $guidedtour.remove();
                        $guidedtour.addClass('guided_tour js-guided_tour');
                        var helperDiv = document.createElement('div');
                        helperDiv.innerHTML = $guidedtour[0].outerHTML;
                        document.getElementById('lp-page-backdrop').insertAdjacentHTML('afterend', helperDiv.outerHTML);
                        var $finishButton = jQuery('.guided_tour .js-guided_tour--finish');
                        $finishButton.on('click', function () {
                            isGuidedTourShown = false;
                            window.location.href = pf.fipo.guidedTour.finishTarget
                        })
                    }
                }
            } else {
                cookies.set(pf.globals.cookies.LOAD_GUIDED_TOUR, true);
                window.location.hash = '';
                window.location.reload(true)
            }
        }
        var jQuery = require('jquery'),
            cookies = require('pf-shared-modules-cookies'),
            $guidedtour = jQuery('#guidedtour'),
            isGuidedTourShown = false;
        return {
            showTour: showTour
        }
    })
}(window);
define('fipo/lib/shared/modules/guidedTour', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-guided_tour_mobile', [
        'require',
        'angular',
        'jquery',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-pageloader',
        'domReady'
    ], function (require) {
        function MobileGuidedTourController($scope) {
            $scope.toggleVisibility = function toggleVisibility() {
                jQuery('#fipo-page-guided-tour-mobile--guided-tour').css({
                    visibility: 'visible',
                    height: 'auto'
                });
                jQuery('#guidedtour1').attr('tabindex', 0);
                jQuery('.js-carousel_step_link').first().attr('tabindex', 0);
                jQuery('#fipo-page-guided-tour-mobile--guided-tour').attr('aria-hidden', false);
                document.querySelector('html').classList.remove('is-mobile_welcome');
                document.querySelector('#fipo-page-guided-tour-mobile--welcome-page').classList.add('display-none');
                jQuery('#guidedtour1').focus();
                document.querySelector('#finishLink').addEventListener('click', function (evt) {
                    evt.preventDefault();
                    $scope.finishTour()
                })
            };
            $scope.finishTour = function finishTour() {
                pageLoader.showLoader();
                var disableUrl = pfWidgetFunctions.getActionUrl('efinfopages', 'WelcomePageDisable');
                restng.postFormData2Json(disableUrl.url, {
                    p_page: pf.globals.parameters.pageDisable.WELCOME_PAGE_MOBILE
                }).finally (function () {
                    window.location.href = 'home'
                })
            }
        }
        var angular = require('angular'),
            jQuery = require('jquery'),
            pfWidgetFunctions = require('pf-widget-functions'),
            restng = require('pf-shared-modules-rest_ng'),
            pageLoader = require('pf-shared-modules-pageloader'),
            domReady = require('domReady'),
            widgetName = 'mobileguidedtour',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
            ]);
        module.controller('MobileGuidedTourController', MobileGuidedTourController);
        MobileGuidedTourController.$inject = [
            '$scope'
        ];
        jQuery('#guidedtour1').attr('tabindex', - 1);
        jQuery('.js-carousel_step_link').first().attr('tabindex', - 1);
        return function bootstrap() {
            domReady(function () {
                function checkImageReadyness() {
                    var wcmsWindowContents = document.getElementsByClassName('wcmsWindowContent'),
                        ready = true;
                    _.forEach(wcmsWindowContents, function (wcmsWindowContent) {
                        for (var images = wcmsWindowContent.getElementsByTagName('img'), n = 0; n < images.length; n++) ready = ready && images[n].complete
                    });
                    if (ready) $('.js-carousel').data('moduleInstance').updateCurrentView($('.js-carousel').data('moduleInstance').currentStep);
                    else window.setTimeout(checkImageReadyness, 500)
                }
                angular.bootstrap(jQuery('#main-content'), [
                    module.name
                ]);
                window.setTimeout(checkImageReadyness, 500)
            })
        }
    })
}(window);
define('fipo/lib/shared/modules/guidedTourMobile', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-historyservice', [
        'require',
        'pf-widget-functions',
        'lodash',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        function HistoryService() {
            this.pushCallback = function (callbackFunction) {
                history.push(callbackFunction)
            };
            this.pushDetailPage = function (urlObj) {
                if (_.isFunction(urlObj)) LOG.warn('Do not use functions to navigate back to other detailpages.');
                history.push(urlObj)
            };
            this.clear = function () {
                if (!preventClearOnClose) history = [
                ];
                preventClearOnClose = false
            };
            this.getBackFunction = function () {
                if (history.length > 0) {
                    var backFunction = history.pop();
                    if (!_.isFunction(backFunction)) pfWidgetFunctions.processUrlObject(backFunction);
                    else backFunction()
                }
            };
            this.hasHistory = function () {
                return !_.isEmpty(history)
            };
            this.removeLastEntry = function () {
                history.pop()
            };
            this.setPreventClearOnClose = function (prevent) {
                preventClearOnClose = prevent
            }
        }
        var pfWidgetFunctions = require('pf-widget-functions'),
            _ = require('lodash'),
            LOG = require('pf-shared-modules-loggerfactory').getLogger('HistoryService'),
            history = [
            ],
            preventClearOnClose = false;
        return new HistoryService
    })
}();
define('fipo/lib/shared/modules/historyService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-http_cache', [
    ], function () {
        var httpPromiseCache = {
            },
            createCacheKey = function createCacheKey(dataUrl, params, method) {
                return [dataUrl,
                    JSON.stringify(params),
                    method].join('::')
            },
            getCachedPromise = function getCachedPromise(dataUrl, params, method) {
                var key = createCacheKey(dataUrl, params, method);
                return httpPromiseCache[key]
            },
            storeCachedPromise = function storeCachedPromise(promise, dataUrl, params, method) {
                var key = createCacheKey(dataUrl, params, method);
                if (!httpPromiseCache[key]) httpPromiseCache[key] = promise
            },
            clearCachedPromise = function clearCachedPromise(dataUrl, params, method) {
                var key = createCacheKey(dataUrl, params, method);
                if (httpPromiseCache[key]) httpPromiseCache[key] = null
            };
        return {
            getCachedPromise: getCachedPromise,
            storeCachedPromise: storeCachedPromise,
            clearCachedPromise: clearCachedPromise
        }
    })
}();
define('fipo/lib/shared/modules/httpCache', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-iframes', [
        'require',
        'lodash',
        'jquery',
        'angular',
        'pf-shared-modules-util'
    ], function (require) {
        function prepareIFrame(url, form) {
            var self = this;
            return $q(function (resolve, reject) {
                var iframe = self.prepareIFrameForFileUpload(url, form);
                iframe.off('load').on('load', function () {
                    var content = self.getIFrameContent(iframe);
                    if (!util.hasValue(content) || util.containsErrorTag(content)) reject();
                    else {
                        var contentAttempt = _.attempt(jQuery.parseJSON.bind(null, content));
                        if (_.isError(contentAttempt)) reject(new Error('Could not parse JSON content for iFrame'));
                        else {
                            content = contentAttempt;
                            resolve(content)
                        }
                    }
                })
            })
        }
        function prepareIFrameForFileUpload(url, form) {
            var iFrameName = 'efinance-content-iframe';
            jQuery('#' + iFrameName).remove();
            jQuery('<iframe name="' + iFrameName + '" id="' + iFrameName + '" src="" />').hide().attr('width', '0').attr('height', '0').appendTo('body');
            var $iFrame = jQuery('#' + iFrameName);
            if (form) {
                form.attr('action', url);
                form.attr('target', iFrameName);
                form.attr('accept-charset', 'ISO-8859-1');
                _.attempt(function () {
                    document.charset = 'ISO-8859-1'
                });
                _.attempt(function () {
                    document.characterSet = 'ISO-8859-1'
                })
            }
            return $iFrame
        }
        function getIFrameContent(iFrame) {
            var contentElement = iFrame.contents().find('body'),
                surroundingPre = contentElement.children('pre');
            if (surroundingPre.length) contentElement = surroundingPre;
            var contentHtml = contentElement.html();
            contentHtml = contentHtml.replace(/"\\&quot;|\\&quot;"/gi, '\\"');
            contentHtml = contentHtml.replace(/'\\"|\\"'/gi, '\\"');
            contentHtml = contentHtml.replace(/'\\&quot;|\\&quot;'/gi, '\\"');
            contentHtml = contentHtml.replace(/'\\\\\\"|\\\\\\"'/gi, '\\"');
            contentHtml = contentHtml.replace(/&amp;/g, '&');
            contentHtml = contentHtml.replace(/&lt;/g, '<');
            contentHtml = contentHtml.replace(/&gt;/g, '>');
            return contentHtml
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $q = initInjector.get('$q');
        return {
            prepareIFrame: prepareIFrame,
            prepareIFrameForFileUpload: prepareIFrameForFileUpload,
            getIFrameContent: getIFrameContent
        }
    })
}();
define('fipo/lib/shared/modules/iFrames', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-icons', [
        'require',
        'lodash'
    ], function (require) {
        function actionToIcon(action) {
            return _.get(ACTION_ICONS, action, '')
        }
        function productCodeToIcon(productCode) {
            return _.get(CARD_ICONS, productCode, '')
        }
        var _ = require('lodash'),
            ICONS = {
                SMALL: {
                    ACTIVATE: 'icon-aktivieren',
                    ADD: 'add-black',
                    PAY: 'icon-bezahlen',
                    BALANCE: 'icon-vermoegen',
                    DEACTIVATE: 'icon-deaktivieren',
                    DELETE: 'icon-delete_16px',
                    DETAIL: 'icon-detail_16px',
                    EDIT: 'icon-edit_16px',
                    INPAYMENT: 'icon-einzahlen_16px',
                    INFO: 'icon-info_16px',
                    LOCK: 'icon-lock-locked',
                    SEARCH: 'icon-search_16px',
                    STATUS_OK: 'icon-status_ok_16px',
                    TRANSFER: 'icon-uebertrag',
                    UNLOCK: 'icon-lock-unlocked'
                },
                CARDS: {
                    CLASSIC: 'icon-classic',
                    GOLD: 'icon-gold',
                    MASTERCARD_VALUE: 'icon-mastercardvalue',
                    PLATINUM: 'icon-platinum',
                    POSTCARD: 'icon-postcard',
                    TRAVELCASHCARD: 'icon-travelcashcard'
                }
            },
            ACTION_ICONS = {
            };
        ACTION_ICONS[pf.globals.actions.ACCOUNT_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_EMONEY_BOX] = ICONS.SMALL.INPAYMENT;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_NOTIFICATIONS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_NOTIFICATION_ACTIVATE] = ICONS.SMALL.ACTIVATE;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_NOTIFICATION_DEACTIVATE] = ICONS.SMALL.DEACTIVATE;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_NOTIFICATION_DELETE] = ICONS.SMALL.DELETE;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_NOTIFICATION_EDIT] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_SETTINGS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_TERMINATION_NOTICES] = ICONS.SMALL.SEARCH;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_TRANSFER] = ICONS.SMALL.TRANSFER;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_TRANSFER_SAVINGS] = ICONS.SMALL.TRANSFER;
        ACTION_ICONS[pf.globals.actions.ACCOUNT_WITHDRAWAL_NOTICE_SEARCH] = ICONS.SMALL.SEARCH;
        ACTION_ICONS[pf.globals.actions.APPLY] = ICONS.SMALL.INPAYMENT;
        ACTION_ICONS[pf.globals.actions.APPLY_DOMESTIC] = ICONS.SMALL.PAY;
        ACTION_ICONS[pf.globals.actions.APPLY_FOREIGN] = ICONS.SMALL.PAY;
        ACTION_ICONS[pf.globals.actions.APPROVE_EZ] = ICONS.SMALL.STATUS_OK;
        ACTION_ICONS[pf.globals.actions.BALANCE_HISTORY] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.CONTACT_DATA_DELETE] = ICONS.SMALL.DELETE;
        ACTION_ICONS[pf.globals.actions.CONTACT_DATA_EDIT] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_BLOCK] = ICONS.SMALL.LOCK;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_DETAIL] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_LOAD] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_NOTIFICATIONS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_ORDER_PIN] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_REPLACE] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_SETTINGS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CREDIT_CARD_UNBLOCK] = ICONS.SMALL.UNLOCK;
        ACTION_ICONS[pf.globals.actions.CUSTODY_ACCOUNT_BALANCE] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.CUSTODY_ACCOUNT_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.CUSTODY_ACCOUNT_SETTINGS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.CUSTOMER_BASE_FEE_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.DEBIT_CARD_BLOCK] = ICONS.SMALL.LOCK;
        ACTION_ICONS[pf.globals.actions.DEBIT_CARD_DETAIL] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.DEBIT_CARD_REPLACE] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.DEBIT_CARD_UNBLOCK] = ICONS.SMALL.UNLOCK;
        ACTION_ICONS[pf.globals.actions.DELETE] = ICONS.SMALL.DELETE;
        ACTION_ICONS[pf.globals.actions.DELETE_EZ] = ICONS.SMALL.DELETE;
        ACTION_ICONS[pf.globals.actions.DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.DETAIL_3A] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.DETAIL_VESTED_BENEFITS] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.DIRECT_DEBIT_NOTIFICATIONS] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.DOMESTIC_PAYMENT] = ICONS.SMALL.PAY;
        ACTION_ICONS[pf.globals.actions.EDIT] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.EDIT_DOMESTIC] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.EDIT_FOREIGN] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.EMONEY_BOX_DELETE] = ICONS.SMALL.DELETE;
        ACTION_ICONS[pf.globals.actions.EMONEY_BOX_DETAILS] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.EMONEY_BOX_EDIT] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.ETRADING_CHANGE_DEFAULT_PORTFOLIO] = ICONS.SMALL.EDIT;
        ACTION_ICONS[pf.globals.actions.FIXED_TERM_DEPOSIT] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.FOREIGN_PAYMENT] = ICONS.SMALL.PAY;
        ACTION_ICONS[pf.globals.actions.FUND_ORDER_3A] = ICONS.SMALL.INPAYMENT;
        ACTION_ICONS[pf.globals.actions.FUND_TRANSACTIONS] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.GO_TO_SQ_ETRADING] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.INPAYMENT_3A] = ICONS.SMALL.INPAYMENT;
        ACTION_ICONS[pf.globals.actions.LIFE_INSURANCE_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.LOAD_CREDIT_CARD] = ICONS.SMALL.PAY;
        ACTION_ICONS[pf.globals.actions.MEDIUM_TERM_NOTES] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.MOVEMENTS] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.MOVEMENT_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.PAYMENT_ETRADING] = ICONS.SMALL.TRANSFER;
        ACTION_ICONS[pf.globals.actions.SUBSCRIBE_FUNDS] = ICONS.SMALL.INPAYMENT;
        ACTION_ICONS[pf.globals.actions.WITHDRAWALS] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.PORTFOLIO_ORDER_DETAIL] = ICONS.SMALL.DETAIL;
        ACTION_ICONS[pf.globals.actions.PORTFOLIO_ORDER_DELETE] = ICONS.SMALL.DELETE;
        var CARD_ICONS = {
            2: ICONS.CARDS.CLASSIC,
            3: ICONS.CARDS.CLASSIC,
            4: ICONS.CARDS.CLASSIC,
            5: ICONS.CARDS.CLASSIC,
            6: ICONS.CARDS.CLASSIC,
            7: ICONS.CARDS.CLASSIC,
            12: ICONS.CARDS.GOLD,
            13: ICONS.CARDS.GOLD,
            14: ICONS.CARDS.GOLD,
            15: ICONS.CARDS.GOLD,
            16: ICONS.CARDS.GOLD,
            17: ICONS.CARDS.GOLD,
            22: ICONS.CARDS.CLASSIC,
            31: ICONS.CARDS.PLATINUM,
            32: ICONS.CARDS.PLATINUM,
            33: ICONS.CARDS.PLATINUM,
            102: ICONS.CARDS.MASTERCARD_VALUE,
            103: ICONS.CARDS.MASTERCARD_VALUE,
            104: ICONS.CARDS.MASTERCARD_VALUE,
            110: ICONS.CARDS.MASTERCARD_VALUE,
            111: ICONS.CARDS.MASTERCARD_VALUE,
            112: ICONS.CARDS.MASTERCARD_VALUE,
            'P0006-0003': ICONS.CARDS.POSTCARD,
            'P0006-0004': ICONS.CARDS.POSTCARD,
            'P0005-0001': ICONS.CARDS.MASTERCARD_VALUE,
            'P0005-0003': ICONS.CARDS.MASTERCARD_VALUE,
            'P0043-0001': ICONS.CARDS.CLASSIC,
            'P0043-0002': ICONS.CARDS.CLASSIC,
            'P0043-0003': ICONS.CARDS.GOLD,
            'P0043-0004': ICONS.CARDS.GOLD,
            'P0043-0005': ICONS.CARDS.PLATINUM,
            'P0043-0006': ICONS.CARDS.CLASSIC,
            'P0044-0001': ICONS.CARDS.CLASSIC
        };
        return {
            ICONS: ICONS,
            actionToIcon: actionToIcon,
            productCodeToIcon: productCodeToIcon
        }
    })
}();
define('fipo/lib/shared/modules/icons', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-initialization', [
        'require',
        'jquery'
    ], function (require) {
        var jQuery = require('jquery'),
            getSelector = function getSelector(widgetName) {
                return '.bp-widget[id*=' + widgetName + ']'
            },
            getInitElement = function getInitElement(widgetName) {
                var selector = getSelector(widgetName);
                return jQuery(selector)
            },
            getInitProperty = function getInitProperty() {
                var prop = pf.globals.initialization.property;
                return {
                    name: prop.NAME,
                    value: prop.VALUE
                }
            },
            setInitializedFromElement = function setInitializedFromElement(element, noEvents) {
                if (element) {
                    var initProp = getInitProperty();
                    element.prop(initProp.name, initProp.value);
                    if (!noEvents) element.trigger(pf.globals.events.ELEMENT_INITIALIZED)
                }
            },
            setInitializedFromName = function setInitializedFromName(widgetName, noEvents) {
                if (widgetName) {
                    var jqElement = getInitElement(widgetName);
                    setInitializedFromElement(jqElement, noEvents)
                }
            },
            isInitializedFromElement = function isInitializedFromElement(element) {
                if (!element) return null;
                var initProp = getInitProperty();
                return element.prop(initProp.name) === initProp.value
            },
            isInitializedFromName = function isInitializedFromName(widgetName) {
                if (!widgetName) return null;
                var jqElement = getInitElement(widgetName);
                return isInitializedFromElement(jqElement)
            };
        return {
            getSelector: getSelector,
            getInitElement: getInitElement,
            getInitProperty: getInitProperty,
            setInitializedFromName: setInitializedFromName,
            setInitializedFromElement: setInitializedFromElement,
            isInitializedFromName: isInitializedFromName,
            isInitializedFromElement: isInitializedFromElement
        }
    })
}();
define('fipo/lib/shared/modules/initialization', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-loggerfactory', [
        'require',
        'lodash',
        'angular',
        'pf-angular-logger'
    ], function (require) {
        function getLogger(name) {
            if (_.isNil(loggers[name])) loggers[name] = $log.getInstance(name);
            return loggers[name]
        }
        var _ = require('lodash'),
            angular = require('angular'),
            logger = require('pf-angular-logger'),
            initInjector = angular.injector(['ng',
                logger.moduleName], {
                strictDi: true
            }),
            $log = initInjector.get('$log'),
            loggers = {
            };
        return {
            getLogger: getLogger
        }
    })
}();
define('fipo/lib/shared/modules/loggerFactory', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-movements', [
        'require',
        'lodash',
        'pf-widget-functions',
        'pf-shared-modules-numbers'
    ], function (require) {
        function showDetailFromWidget(mappingKey, movement) {
            openDetail(pfWidgetFunctions.getActionUrl, mappingKey, movement)
        }
        function showDetail(mappingKey, movement, focusOnReturn) {
            openDetail(pfWidgetFunctions.getActionUrlForDetailPage, mappingKey, movement, focusOnReturn)
        }
        function openDetail(getActionUrl, mappingKey, movement, focusOnReturn) {
            var uiType = _.toNumber(movement.uiType),
                action;
            switch (uiType) {
                case pf.globals.detailpages.efmovements.movementUiType.OTHER:
                    action = pf.globals.detailpages.efmovements.actions.COLLECTIVE_DETAIL;
                    break;
                case pf.globals.detailpages.efmovements.movementUiType.SIMPLE:
                case pf.globals.detailpages.efmovements.movementUiType.PAYMENT:
                default:
                    action = pf.globals.detailpages.efmovements.actions.DETAIL
            }
            var urlObj = getActionUrl(mappingKey, action, movement);
            urlObj.focusOnReturn = focusOnReturn;
            pfWidgetFunctions.processUrlObject(urlObj)
        }
        function extractAndFormatDebitCredit(movement) {
            var amount;
            if (_.isFinite(movement.debit)) amount = - 1 * movement.debit;
            else if (_.isFinite(movement.credit)) amount = movement.credit;
            return numbers.formatAmountWithCurrency(amount, movement.currency)
        }
        function createSelectionListEntries(account, movements) {
            return _.map(movements, function (item) {
                item.accountIban = account.iban;
                item.currency = account.currency;
                var shorttextLines = _.split(item.shorttext, '\\n');
                return {
                    name1: _.nth(shorttextLines, 0),
                    name2: _.nth(shorttextLines, 1),
                    info: extractAndFormatDebitCredit(item),
                    params: item
                }
            })
        }
        var _ = require('lodash'),
            pfWidgetFunctions = require('pf-widget-functions'),
            numbers = require('pf-shared-modules-numbers');
        return {
            showDetail: showDetail,
            showDetailFromWidget: showDetailFromWidget,
            createSelectionListEntries: createSelectionListEntries
        }
    })
}();
define('fipo/lib/shared/modules/movements', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-numbers', [
        'require',
        'lodash',
        'pf-pattern',
        'bignumber',
        'pf-shared-modules-util',
        'pf-shared-modules-currencies',
        'pf-shared-modules-platform'
    ], function (require) {
        function normalizeNumber(value) {
            if (!util.hasValue(value)) return '';
            var valueStr = value.toString().replace(/[' ]*/g, '').replace(/,/g, '.').replace(/^0+/g, ''),
                numberValue = _.toNumber(valueStr);
            if (!_.isFinite(numberValue)) return value;
            valueStr = valueStr.replace(/^[.]{1}[0]*$/g, '');
            if ('.' === valueStr.charAt(0)) valueStr = '0' + valueStr;
            return valueStr
        }
        function formatFundShares(value, suffix, doNotConvertEmptyStrings) {
            var decimals = 3,
                currency = '';
            return formatNumber(value, suffix, currency, decimals, doNotConvertEmptyStrings)
        }
        function formatAmountValue(value) {
            var val = normalizeNumber(value);
            if ('' !== val && /^\d{0,12}\.?\d*$/.test(val)) return formatNumber(val);
            else return value
        }
        function formatNegativeAmountValue(value) {
            var val = normalizeNumber(value);
            if ('' !== val && /^-?\d{0,12}\.?\d*$/.test(val)) return formatNegativeNumber(val);
            else return value
        }
        function isNegative(value) {
            if (!_.isFinite(value)) return null;
            else return 1 / value < 0
        }
        function formatNumber(val, suffix, currency, decimals, doNotConvertEmptyStrings) {
            var ignoreEmptyString = doNotConvertEmptyStrings && '' === val,
                numVal = _.isString(val) ? parseFloat(val)  : val;
            if (_.isNil(val) || _.isNaN(numVal) || ignoreEmptyString) return '';
            var decpoint = '.',
                sep = '\'',
                negative = 0 === numVal ? isNegative(numVal)  : numVal < 0,
                parts = [
                ],
                fixedValue;
            if (!!currency) if (_.isNumber(currency)) parts.push(currencies.getLiteral(currency) + ' ');
            else parts.push(currency + ' ');
            if (decimals || 0 === decimals) fixedValue = new Bignumber(val.toString()).toFixed(decimals);
            else fixedValue = val.toString();
            var splittedVal = fixedValue.split(decpoint),
                normalizedValue = new Bignumber(splittedVal[0]).abs().toFixed(0);
            parts.push(normalizedValue.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + sep));
            if (splittedVal.length > 1 && '' !== splittedVal[1]) parts.push(decpoint + splittedVal[1]);
            var usedSuffix = suffix || numberIndicator.onlyMinus;
            if (usedSuffix !== numberIndicator.none) switch (usedSuffix) {
                case numberIndicator.plusAndMinus:
                    parts.push(negative ? '−' : '+');
                    break;
                case numberIndicator.onlyMinus:
                    parts.push(negative ? '−' : '');
                    break;
                case numberIndicator.prefixOnlyMinus:
                    parts.unshift(negative ? '-' : '')
            }
            return parts.join('')
        }
        function formatNegativeNumber(val) {
            var ignoreEmptyString = '' === val,
                numVal = _.isString(val) ? parseFloat(val)  : val;
            if (_.isNil(val) || _.isNaN(numVal) || ignoreEmptyString) return '';
            var decpoint = '.',
                sep = '\'',
                parts = [
                ],
                fixedValue = val.toString(),
                splittedVal = fixedValue.split(decpoint),
                normalizedValue = new Bignumber(splittedVal[0]).toFixed(0);
            parts.push(normalizedValue.replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + sep));
            if (splittedVal.length > 1 && '' !== splittedVal[1]) parts.push(decpoint + splittedVal[1]);
            return parts.join('')
        }
        function formatAmount(elem) {
            elem.value = formatAmountValue(elem.value)
        }
        function formatNegativeAmount(elem) {
            elem.value = formatNegativeAmountValue(elem.value)
        }
        function isCurrencyValue(value, negativeValueAllowed) {
            if (negativeValueAllowed) return parseFloat(normalizeNumber(value)) < 1000000000000 && pattern.NEGATIVE_FLOATING_NUMBER.test(String(value));
            else return parseFloat(normalizeNumber(value)) < 1000000000000 && pattern.FLOATING_NUMBER.test(String(value))
        }
        function filterAmount(number, suffix, currency, doNotConvertEmptyStrings, decimals) {
            var decimalPlace = _.defaultTo(decimals, 2);
            return formatNumber(number, suffix, currency, decimalPlace, doNotConvertEmptyStrings)
        }
        function formatAmountWithCurrency(number, currency, suffix, decimals) {
            var displayedSuffix = suffix || numberIndicator.plusAndMinus;
            return filterAmount(number, displayedSuffix, currency, false, decimals)
        }
        function formatAmountWithCurrencyMobile(number, currency, suffix, decimals) {
            var displayedSuffix = suffix || numberIndicator.plusAndMinus;
            return filterAmount(number, displayedSuffix, platform.isMobile() ? currency : null, false, decimals)
        }
        function formatAmountShort(number, currency, suffix, translatorFn, precision) {
            if (!_.isFinite(number)) return '';
            if (number >= ONE_MILLION) {
                var quotient = _.floor(number / ONE_MILLION, precision),
                    short = translatorFn('Millions', {
                        value: quotient
                    });
                if (!!currency) short = currencies.getLiteral(currency) + ' ' + short;
                return short
            }
            return formatAmountWithCurrency(number, currency, suffix)
        }
        function amountToNumber(amount) {
            if (amount) if (_.isNumber(amount)) return amount;
            else return parseFloat(normalizeNumber(amount));
            return null
        }
        var _ = require('lodash'),
            pattern = require('pf-pattern'),
            Bignumber = require('bignumber'),
            util = require('pf-shared-modules-util'),
            currencies = require('pf-shared-modules-currencies'),
            platform = require('pf-shared-modules-platform'),
            ONE_MILLION = 1000000,
            numberIndicator = {
                plusAndMinus: 'plusAndMinus',
                onlyMinus: 'onlyMinus',
                prefixOnlyMinus: 'prefixOnlyMinus',
                none: 'none'
            };
        return {
            indicator: numberIndicator,
            amountToNumber: amountToNumber,
            normalizeNumber: normalizeNumber,
            formatAmountValue: formatAmountValue,
            formatNegativeAmountValue: formatNegativeAmountValue,
            formatNumber: formatNumber,
            formatNegativeNumber: formatNegativeNumber,
            formatAmount: formatAmount,
            formatNegativeAmount: formatNegativeAmount,
            isCurrencyValue: isCurrencyValue,
            filterAmount: filterAmount,
            formatAmountWithCurrency: formatAmountWithCurrency,
            formatAmountWithCurrencyMobile: formatAmountWithCurrencyMobile,
            formatAmountShort: formatAmountShort,
            formatFundShares: formatFundShares,
            isNegative: isNegative
        }
    })
}();
define('fipo/lib/shared/modules/numbers', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-pageleave', [
        'require',
        'lodash'
    ], function (require) {
        function onBeforeUnload(handler) {
            beforeUnloadCallbacks.push(handler)
        }
        var _ = require('lodash'),
            beforeUnloadCallbacks = [
            ];
        window.onbeforeunload = function onBeforeUnloadHandler(evt) {
            _.forEach(beforeUnloadCallbacks, function (callback) {
                if (_.isFunction(callback)) callback(evt)
            })
        };
        return {
            onBeforeUnload: onBeforeUnload
        }
    })
}(window);
define('fipo/lib/shared/modules/pageleave', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-pageloader', [
        'require',
        'bluebird',
        'domReady'
    ], function (require) {
        function initLoader() {
            if (!loader) loader = document.getElementById('loader')
        }
        function registerOnPubsub() {
            if (!registered) {
                gadgets.pubsub.subscribe(pf.globals.pubsub.HIDE_PAGE_LOADER, function (forceHide) {
                    registerHide(forceHide)
                });
                gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_PAGE_LOADER, function () {
                    registerShow()
                });
                registered = true
            }
        }
        function registerShow() {
            eventCount += 1;
            showLoader()
        }
        function registerHide(forceHide) {
            eventCount -= 1;
            if (eventCount <= 0 || forceHide) {
                hideLoader();
                eventCount = 0
            }
        }
        function showLoader() {
            initLoader();
            if (loader) loader.classList.remove('display-none')
        }
        function hideLoader() {
            if (_.isNil(domLoaded)) domLoaded = new _Promise(function (resolve) {
                domReady(function domReadyCallback() {
                    resolve()
                })
            });
            domLoaded.then(function hideLoaderReady() {
                initLoader();
                if (loader) loader.classList.add('display-none')
            })
        }
        function showLoaderWhile(promise) {
            if (promise) {
                showLoader();
                _Promise.resolve(promise).finally (function () {
                    hideLoader()
                })
            }
        }
        var _Promise = require('bluebird'),
            domReady = require('domReady'),
            loader,
            registered = false,
            eventCount = 0,
            domLoaded;
        return {
            registerOnPubsub: registerOnPubsub,
            showLoader: registerShow,
            showLoaderWhile: showLoaderWhile,
            hideLoader: registerHide
        }
    })
}();
define('fipo/lib/shared/modules/pageloader', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-payment', [
        'pf-sessiondata-userdata',
        'pf-shared-modules-util',
        'moment',
        'pf-shared-modules-numbers'
    ], function () {
        function isGiroPost(payment) {
            return payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_BANK_INCL_PF && 1 === payment.generalOrderData.orderGiroType
        }
        function isGiroBank(payment) {
            return isGiroBankPost(payment) || isGiroBankBank(payment)
        }
        function isGiroBankPost(payment) {
            return payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_BANK_INCL_PF && 2 === payment.generalOrderData.orderGiroType
        }
        function isGiroBankBank(payment) {
            return payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_BANK_NOT_PF
        }
        function isEsr(payment) {
            return payment.generalOrderData.paymentType === pf.globals.types.payment.ESR
        }
        function isGiroPostOrGiroBankPost(payment) {
            return isGiroPost(payment) || isGiroBankPost(payment)
        }
        function isDomesticPayment(payment) {
            return isGiroBankBank(payment) || isEsr(payment) || payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_BANK_INCL_PF
        }
        function isForeignPayment(payment) {
            return isCashInternational(payment) || payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_INTERNATIONAL || payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_INTERNATIONAL_URGENT || payment.generalOrderData.paymentType === pf.globals.types.payment.GIRO_INTERNATIONAL_SEPA
        }
        function isCashInternational(payment) {
            return payment.generalOrderData.paymentType === pf.globals.types.payment.CASH_INTERNATIONAL
        }
        function isStandingOrder(payment) {
            return payment.generalOrderData.orderType === ORDER_TYPE_STANDING
        }
        function getRecipient(payment) {
            return payment.recipient.account + payment.recipient.name
        }
        function getRecipientBank(payment) {
            if (isGiroBankPost(payment)) return payment.recipient.account + payment.recipient.name;
            else return payment.recipient.name
        }
        function assembleMessageLines(payment) {
            var assembledMessages = '';
            if (payment.message) {
                if (payment.message.line1) assembledMessages = payment.message.line1;
                if (payment.message.line2) assembledMessages += '\n' + payment.message.line2;
                if (payment.message.line3) assembledMessages += '\n' + payment.message.line3;
                if (payment.message.line4) assembledMessages += '\n' + payment.message.line4;
                if (_.startsWith(assembledMessages, '\n')) assembledMessages = assembledMessages.substr(1)
            }
            return assembledMessages
        }
        function hasAdress(recipient) {
            return !_.isEmpty(recipient.addressLine1) || !_.isEmpty(recipient.addressLine2) || !_.isEmpty(recipient.addressLine3) || !_.isEmpty(recipient.addressLine4)
        }
        function assembleRecipientAddress(recipient) {
            var address = '';
            if (!_.isEmpty(recipient.addressLine1)) address = address + recipient.addressLine1 + '\n';
            if (!_.isEmpty(recipient.addressLine2)) address = address + recipient.addressLine2 + '\n';
            if (!_.isEmpty(recipient.addressLine3)) address = address + recipient.addressLine3 + '\n';
            if (!_.isEmpty(recipient.addressLine4)) address = address + recipient.addressLine4 + '\n';
            return address
        }
        function showDebitAccountTooltip(debitAccount) {
            return debitAccount !== userData.standardAccount.iban ? debitAccount : false
        }
        function is3aPayment(origin) {
            return '3a' === origin
        }
        function isPaymentList(paymentList) {
            return util.hasValue(paymentList)
        }
        function isPaymentTemplate(template) {
            return template && template.id
        }
        function getRate(rates, fromCurrency, toCurrency, convertRates) {
            if (_.has(convertRates, 'rate')) return convertRates.rate;
            if (fromCurrency === pf.globals.types.currency.CHF) return getRateForCurrency(rates, toCurrency, SELL);
            else if (toCurrency === pf.globals.types.currency.CHF) return 1 / getRateForCurrency(rates, fromCurrency, BUY);
            var fromRate = getRateForCurrency(rates, fromCurrency, BUY),
                toRate = getRateForCurrency(rates, toCurrency, SELL);
            return toRate / fromRate
        }
        function getFormattedRate(rates, fromCurrency, toCurrency, convertRates, inverse) {
            if (_.has(convertRates, 'rateImage')) return convertRates.rateImage;
            var rate = getRate(rates, fromCurrency, toCurrency);
            rate = inverse ? 1 / rate : rate;
            return numbers.formatNumber(rate, 'none', null, 6)
        }
        function getRateForCurrency(rates, currency, prefferdRate) {
            var rate = _.find(rates, [
                'code',
                currency
            ]);
            return (_.get(rate, prefferdRate === BUY ? BUY : SELL) || _.get(rate, prefferdRate !== BUY ? BUY : SELL)) / _.get(rate, 'unit')
        }
        function getDebitAmount(rates, fromCurrency, toCurrency, creditAmount, convertRates) {
            if (_.has(convertRates, 'foreignAmount')) return convertRates.foreignAmount;
            var convAmount = numbers.amountToNumber(creditAmount),
                rate = getRate(rates, fromCurrency, toCurrency);
            return convAmount * rate
        }
        function getCreditAmount(rates, fromCurrency, toCurrency, creditAmount) {
            var convAmount = numbers.amountToNumber(creditAmount),
                rate = getRate(rates, fromCurrency, toCurrency);
            return convAmount / rate
        }
        function getDataForDebitAmount(rates, fromCurrency, toCurrency, amount, convertRates) {
            return {
                accountCurrency: fromCurrency,
                amountCurrency: _.get(convertRates, 'foreignCurrencyCd', toCurrency),
                datetime: moment(new Date),
                debitAmount: getDebitAmount(rates, fromCurrency, toCurrency, amount, convertRates),
                rate: getFormattedRate(rates, fromCurrency, toCurrency, convertRates)
            }
        }
        function getDataForCreditAmount(rates, fromCurrency, toCurrency, amount) {
            return {
                inputCurrency: fromCurrency,
                creditCurrency: toCurrency,
                datetime: moment(new Date),
                creditAmount: getCreditAmount(rates, fromCurrency, toCurrency, amount),
                rate: getFormattedRate(rates, fromCurrency, toCurrency, null, true)
            }
        }
        function showPaymentTemplateToggle(payment) {
            return payment.generalOrderData.paymentType !== ORDER_TYPE_STANDING && !isPaymentList(payment.model.paymentList) && !is3aPayment(payment.origin) && true === _.get(payment, 'template.allowAddNew', false)
        }
        var userData = require('pf-sessiondata-userdata'),
            util = require('pf-shared-modules-util'),
            moment = require('moment'),
            numbers = require('pf-shared-modules-numbers');
        constORDER_TYPE_STANDING = 1,
            BUY = 'buy',
            SELL = 'sell';
        return {
            isGiroPost: isGiroPost,
            isGiroBank: isGiroBank,
            isGiroBankPost: isGiroBankPost,
            isGiroBankBank: isGiroBankBank,
            isEsr: isEsr,
            isGiroPostOrGiroBankPost: isGiroPostOrGiroBankPost,
            isDomesticPayment: isDomesticPayment,
            isForeignPayment: isForeignPayment,
            isCashInternational: isCashInternational,
            isStandingOrder: isStandingOrder,
            getRecipient: getRecipient,
            getRecipientBank: getRecipientBank,
            assembleMessageLines: assembleMessageLines,
            hasAdress: hasAdress,
            assembleRecipientAddress: assembleRecipientAddress,
            showDebitAccountTooltip: showDebitAccountTooltip,
            is3aPayment: is3aPayment,
            isPaymentList: isPaymentList,
            isPaymentTemplate: isPaymentTemplate,
            getDataForDebitAmount: getDataForDebitAmount,
            getDataForCreditAmount: getDataForCreditAmount,
            showPaymentTemplateToggle: showPaymentTemplateToggle
        }
    })
}();
define('fipo/lib/shared/modules/payment', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-phone', [
        'require',
        'lodash'
    ], function (require) {
        function isSwissMobileNumber(number) {
            return isSwissMobileNumberWithPrefix(number) || isSwissMobileNumberWithoutPrefix(number)
        }
        function isSwissMobileNumberWithPrefix(number) {
            return PATTERN_MOBILE_NUMBER_CH.test(number)
        }
        function isSwissMobileNumberWithoutPrefix(number) {
            return PATTERN_MOBILE_NUMBER_CH_NO_PREFIX.test(number)
        }
        function isLiechtensteinianNumber(number) {
            return PATTERN_PHONE_NUMBER_FL.test(number)
        }
        function isCommercialNumber(number) {
            return PATTERN_COMMERCIAL.test(number)
        }
        function isFixedNetworkNumber(number) {
            return PATTERN_FIXED_NETWORK.test(number)
        }
        function isGeneralNumber(number) {
            return PATTERN_GENERAL_NUMBER.test(number)
        }
        function isValidPhoneNumber(number) {
            return isGeneralNumber(number) || isSwissMobileNumber(number) || isLiechtensteinianNumber(number) || isCommercialNumber(number) || isFixedNetworkNumber(number)
        }
        function splitMobileNumber(number) {
            if (isSwissMobileNumberWithPrefix(number)) return splitSwissMobileNumberWithPrefix(number);
            else if (isSwissMobileNumberWithoutPrefix(number)) return splitSwissMobileNumberWithoutPrefix(number);
            else if (isLiechtensteinianNumber(number)) return splitLiechtensteinianNumber(number);
            return null
        }
        function splitSwissMobileNumberWithPrefix(number) {
            var match = number.match(PATTERN_MOBILE_NUMBER_CH);
            if (match && 4 === match.length) return {
                prefix: toNumber(match[2]),
                number: toNumber(match[3])
            };
            else return null
        }
        function splitSwissMobileNumberWithoutPrefix(number) {
            var match = number.match(PATTERN_MOBILE_NUMBER_CH_NO_PREFIX);
            if (match && 4 === match.length) return {
                prefix: toNumber(match[2]),
                number: toNumber(match[3])
            };
            else return null
        }
        function splitLiechtensteinianNumber(number) {
            var match = number.match(PATTERN_PHONE_NUMBER_FL);
            if (match && 4 === match.length) return {
                prefix: toNumber(match[1]),
                number: toNumber(match[2] + match[3])
            };
            else return null
        }
        function isSwissPrefix(prefix) {
            return findPrefix(prefixes.CH, prefix)
        }
        function isLiechtensteinianPrefix(prefix) {
            return findPrefix(prefixes.FL, prefix)
        }
        function findPrefix(arr, prefix) {
            return _.some(arr, {
                value: prefix
            })
        }
        function combinePhoneParts(parts, hideCountryPrefix) {
            if (_.has(parts, 'prefix') && parts.number) return formatPhoneNumber(parts.prefix, parts.number, separators.NONE, hideCountryPrefix);
            else return null
        }
        function toNumber(value) {
            return parseInt(value, 10)
        }
        function getSwissPrefixes() {
            return prefixes.CH
        }
        function getLiechtensteinianPrefixes() {
            return prefixes.FL
        }
        function getAllPrefixes() {
            return prefixes.CH.concat(prefixes.FL)
        }
        function formatPhoneNumber(prefix, number, separator, hideCountryPrefix) {
            var usedSeparator = separator || separators.NONE,
                parts = [
                ];
            if (isSwissPrefix(prefix)) {
                var usedPrefixes = hideCountryPrefix ? [
                    '0' + prefix
                ] : [
                    '+41',
                    prefix
                ];
                parts = usedPrefixes.concat(splitBaseNumber(number))
            } else if (isLiechtensteinianPrefix(prefix)) parts = [
                '+' + prefix
            ].concat(splitBaseNumber(number));
            else if (isCommercialNumber(number)) parts = splitCommercialNumber(number);
            else if (isFixedNetworkNumber(number)) parts = splitFixedNetworkNumber(number);
            return parts.join(usedSeparator)
        }
        function formatPhone(input) {
            if (input) return formatPhoneNumber(null, input, separators.SPACE);
            else return null
        }
        function normalizedSwissPhoneNumber(input) {
            if (!input) return '';
            var match;
            if (_.startsWith(input, '+')) match = input.match(/(\+41)(\d{2})(\d{3})(\d{2})(\d{2})/);
            else if (_.startsWith(input, '0')) match = input.match(/(\d{3})(\d{3})(\d{2})(\d{2})/);
            if (!_.isEmpty(match)) {
                match.shift();
                return match.join(' ')
            }
            return input
        }
        function normalizedPhoneNumber(number) {
            var input = number;
            if (!input) return '';
            var match;
            if (_.startsWith(input, '+') && 12 === _.size(input)) match = input.match(/(\+\d{2})(\d{2})(\d{3})(\d{2})(\d{2})/);
            else if (_.startsWith(input, '0041')) {
                input = '+' + input.slice(2);
                match = input.match(/(\+\d{2})(\d{2})(\d{3})(\d{2})(\d{2})/)
            } else if (_.startsWith(input, '00')) {
                input = '+' + input.slice(2);
                match = input.match(/(\+\d*)/)
            } else if (_.startsWith(input, '0')) match = input.match(/(\d{3})(\d{3})(\d{2})(\d{2})/);
            if (!_.isEmpty(match)) {
                match.shift();
                return match.join(' ')
            }
            return input
        }
        function splitBaseNumber(number) {
            return splitNumber(number, 7, PATTERN_BASE_NUMBER)
        }
        function splitCommercialNumber(number) {
            return splitNumber(number, 10, PATTERN_COMMERCIAL)
        }
        function splitFixedNetworkNumber(number) {
            return splitNumber(number, 10, PATTERN_FIXED_NETWORK)
        }
        function splitNumber(number, requiredLength, regex) {
            if (!number) return null;
            var numberStr = number.toString();
            if (numberStr.length !== requiredLength) return null;
            else return numberStr.match(regex).slice(1)
        }
        function getDefaultPrefix(availablePrefixes) {
            var usedPrefixes = _.isArray(availablePrefixes) ? availablePrefixes : prefixes,
                defaultPrefix = _.filter(usedPrefixes, 'isDefault');
            if (!_.isEmpty(defaultPrefix)) return defaultPrefix[0].value;
            else return null
        }
        var _ = require('lodash'),
            PATTERN_MOBILE_NUMBER_CH = /^(\+41|0041)(\d{2})(\d{7})$/,
            PATTERN_MOBILE_NUMBER_CH_NO_PREFIX = /^(0)(\d{2})(\d{7})$/,
            PATTERN_PHONE_NUMBER_FL = /^(\+423|00423)(\d)(\d{6})$/,
            PATTERN_BASE_NUMBER = /^(\d{3})(\d{2})(\d{2})$/,
            PATTERN_COMMERCIAL = /^(0800|084\d|0878|090\d)(\d{3})(\d{3})$/,
            PATTERN_FIXED_NETWORK = /^(\d{3})(\d{3})(\d{2})(\d{2})$/,
            PATTERN_GENERAL_NUMBER = /^(\+|00)\d{10,15}$/,
            prefixes = {
                CH: [
                    {
                        name: '075',
                        value: 75
                    },
                    {
                        name: '076',
                        value: 76
                    },
                    {
                        name: '077',
                        value: 77
                    },
                    {
                        name: '078',
                        value: 78
                    },
                    {
                        name: '079',
                        value: 79,
                        isDefault: true
                    }
                ],
                FL: [
                    {
                        name: '+423',
                        value: 423
                    }
                ]
            },
            separators = {
                NONE: '',
                SPACE: ' '
            };
        return {
            isSwissMobileNumber: isSwissMobileNumber,
            isLiechtensteinianNumber: isLiechtensteinianNumber,
            isValidPhoneNumber: isValidPhoneNumber,
            splitMobileNumber: splitMobileNumber,
            combinePhoneParts: combinePhoneParts,
            getSwissPrefixes: getSwissPrefixes,
            getLiechtensteinianPrefixes: getLiechtensteinianPrefixes,
            getAllPrefixes: getAllPrefixes,
            formatPhoneNumber: formatPhoneNumber,
            formatPhone: formatPhone,
            normalizedSwissPhoneNumber: normalizedSwissPhoneNumber,
            normalizedPhoneNumber: normalizedPhoneNumber,
            getDefaultPrefix: getDefaultPrefix,
            separators: separators
        }
    })
}();
define('fipo/lib/shared/modules/phone', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-phone_challenge_service', [
        'require',
        'lodash',
        'pf-widget-functions',
        'pf-shared-modules-util',
        'pf-shared-modules-rest_ng_detailpages',
        'pf-shared-modules-detail_page_abstract_service',
        'bluebird'
    ], function (require) {
        function PhoneChallengeService(config, dialogService) {
            function defaultRequestChallengeFormatter(phoneNumber) {
                return {
                    telNrPrefix: phoneNumber.prefix,
                    telNr: phoneNumber.number
                }
            }
            function defaultCheckChallengeFormatter(phoneNumber, challenge) {
                return {
                    telNrPrefix: phoneNumber.prefix,
                    telNr: phoneNumber.number,
                    challenge: challenge
                }
            }
            var self = this;
            DetailPageAbstractService.call(this);
            this.init(config.name, config.scope._config, config.instance);
            this.requestChallengeFormatter = defaultRequestChallengeFormatter;
            this.checkChallengeFormatter = defaultCheckChallengeFormatter;
            this.resendChallengeSuccess = _.noop;
            this.setForm = function (form) {
                this.form = form
            };
            this.submit = function (phoneNumber) {
                var form = this.form;
                if (form) {
                    var clonedPhone = _.cloneDeep(phoneNumber);
                    clonedPhone.prefixRaw = clonedPhone.prefix;
                    clonedPhone.prefix = _.padStart(clonedPhone.prefix, 3, '0');
                    clonedPhone.numberRaw = clonedPhone.number;
                    clonedPhone.number = _.padStart(clonedPhone.number, 7, '0');
                    var challengeValidation = form.$$success[pf.globals.form.validations.CHALLENGE],
                        challengeInput = challengeValidation ? challengeValidation[0] : null;
                    if (challengeInput && challengeInput.$dirty) return this.requestChallenge(clonedPhone)
                }
                return _Promise.resolve()
            };
            this.requestChallenge = function (phoneNumber) {
                var params = this.requestChallengeFormatter(phoneNumber);
                return this.sendChallenge(params).then(function success(response) {
                    _.assign(self.getScope(), response);
                    return new _Promise(function (resolve, reject) {
                        if (response.result.validationRequired && !(response.messages && response.messages.errors)) {
                            util.executeIfDefined(self.requestChallengeSuccessFn, response);
                            var dialog = dialogService.phoneChallengeDialog(config, phoneNumber, self, function saveFn(resp) {
                                resolve(resp)
                            }, function cancelFn() {
                                reject()
                            });
                            if (dialog) dialog.result.then(function (value) {
                                if (value) resolve()
                            })
                        } else resolve()
                    })
                })
            };
            this.sendChallenge = function sendChallenge(paramObj) {
                var urlObj = pfWidgetFunctions.getActionUrlForDetailPage(this.name, actionKeys.SEND_CHALLENGE, paramObj);
                this.restConfig.showSpinner = false;
                this.restConfig.showLoader = true;
                return restngDetailpages.postFormData2Json(this.restConfig, urlObj.url, urlObj.params)
            };
            this.checkChallenge = function checkChallenge(paramObj) {
                var urlObj = pfWidgetFunctions.getActionUrlForDetailPage(this.name, actionKeys.CHECK_CHALLENGE, paramObj);
                this.restConfig.showSpinner = false;
                this.restConfig.showLoader = true;
                return restngDetailpages.postFormData2Json(this.restConfig, urlObj.url, urlObj.params)
            }
        }
        var _ = require('lodash'),
            pfWidgetFunctions = require('pf-widget-functions'),
            util = require('pf-shared-modules-util'),
            restngDetailpages = require('pf-shared-modules-rest_ng_detailpages'),
            DetailPageAbstractService = require('pf-shared-modules-detail_page_abstract_service'),
            _Promise = require('bluebird'),
            actionKeys = {
                SEND_CHALLENGE: 'SmsChallengeSend',
                CHECK_CHALLENGE: 'SmsChallengeCheck'
            };
        PhoneChallengeService.prototype = _.create(DetailPageAbstractService.prototype);
        PhoneChallengeService.constructor = DetailPageAbstractService;
        return PhoneChallengeService
    })
}();
define('fipo/lib/shared/modules/phoneChallengeService', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-platform', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-pageloader',
        'pf-app-detect'
    ], function (require) {
        function decodeLogLevel(levelName) {
            var logLevel = _.find(pf.globals.logging.levels, {
                name: _.toLower(levelName)
            });
            return logLevel || pf.globals.logging.levels.ERROR
        }
        function getClientLoggerLevel() {
            return decodeLogLevel(b$.portal.clientLoggerLevel)
        }
        function getRemoteLoggerLevel() {
            return decodeLogLevel(b$.portal.remoteLoggerLevel)
        }
        function getRemoteLoggers() {
            var configs = _.split(b$.portal.remoteLoggerLoggers, '|'),
                loggers = {
                };
            _.forEach(configs, function (config) {
                var components = _.split(config, ':');
                if (2 === components.length) {
                    var loggerName = components[0];
                    loggers[loggerName] = decodeLogLevel(components[1])
                }
            });
            return loggers
        }
        function createShouldSendLogToServer(remoteLoggers, remoteLogLevel) {
            function checkLogLevel(currentLevel, configuredLevel) {
                return currentLevel.ordinal >= configuredLevel.ordinal
            }
            if (isRemoteLoggerDisabled()) return _.constant(false);
            if (_.isEmpty(remoteLoggers)) return function (name, level) {
                return checkLogLevel(level, remoteLogLevel)
            };
            else return function (name, level) {
                if (remoteLoggers[name]) return checkLogLevel(level, remoteLoggers[name]);
                else return checkLogLevel(level, remoteLogLevel)
            }
        }
        function isClientLoggingEnabled(level) {
            return level.ordinal >= clientLogLevel.ordinal
        }
        var _ = require('lodash'),
            angular = require('angular'),
            pageLoader = require('pf-shared-modules-pageloader'),
            detect = require('pf-app-detect'),
            errorUrlTemplate = _.template('${baseUrl}/${device}/e-finance/error?${param}'),
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $http = initInjector.get('$http'),
            $q = initInjector.get('$q'),
            $timeout = initInjector.get('$timeout'),
            ua = navigator.userAgent.toLowerCase(),
            absoluteUrl = function absoluteUrl(url) {
                if (url && _.startsWith(url.toLowerCase(), 'onl_mkl')) return getEfPrefix() + '/' + url;
                else return url
            },
            isMobile = function isMobile() {
                var result = 'mobile' === b$.portal.device;
                this.isMobile = function isMobile() {
                    return result
                };
                return result
            },
            isNumberKeyboardEnabled = function isNumberKeyboardEnabled() {
                var result = this.isMobile() || detect.isApp();
                this.isNumberKeyboardEnabled = function isNumberKeyboardEnabled() {
                    return result
                };
                return result
            },
            isAndroid = function isAndroid() {
                var result = _.includes(ua, 'android');
                this.isAndroid = function isAndroid() {
                    return result
                };
                return result
            },
            isIOS = function isIOS() {
                var result = null !== ua.match(/(ipad|iphone|ipod)/g);
                this.isIOS = function isIOS() {
                    return result
                };
                return result
            },
            isSafari = function isSafari() {
                var result = /^((?!chrome|android).)*safari/i.test(ua);
                this.isSafari = function isSafari() {
                    return result
                };
                return result
            },
            isSecureBrowser = function isSecureBrowser() {
                var result = /^.*protect/i.test(ua);
                this.isSecureBrowser = function isSecureBrowser() {
                    return result
                };
                return result
            },
            isTouch = function isTouch() {
                var result = false;
                if (Modernizr.touchevents) result = true;
                this.isTouch = function isTouch() {
                    return result
                };
                return result
            },
            getSecurityProfile = function getSecurityProfile() {
                return b$.portal.securityProfile
            },
            isLocal = function isLocal() {
                var result = 'local' === getSecurityProfile();
                this.isLocal = function isLocal() {
                    return result
                };
                return result
            },
            isNotLocal = function isNotLocal() {
                return !isLocal.bind(this) ()
            },
            isDemo = function isDemo() {
                var result = 'demo' === getSecurityProfile();
                this.isDemo = function isDemo() {
                    return result
                };
                return result
            },
            isNotDemo = function isNotDemo() {
                return !isDemo.bind(this) ()
            },
            getUserId = function getUserId() {
                return b$.portal.loggedInUserId
            },
            isEUser = function isEUser() {
                var result = 'E' === getUserId().charAt(0);
                this.isEUser = function isEUser() {
                    return result
                };
                return result
            },
            isCustomerTest = function isCustomerTest() {
                var result = 'true' === b$.portal.customerTest || true === b$.portal.customerTest;
                this.isCustomerTest = function isCustomerTest() {
                    return result
                };
                return result
            },
            getPageName = function getPageName() {
                return b$.portal.pageName
            },
            isHomePage = function isHomePage() {
                return 'page-efhome' === getPageName()
            },
            isEtradingPage = function isEtradingPage() {
                return 'page-efetrading' === getPageName()
            },
            isEcockpitPage = function isEcockpitPage() {
                return 'page-efecockpit' === getPageName()
            },
            getPageUuid = function getPageUuid() {
                return b$.portal.pageUUID
            },
            getServerUrl = function getServerUrl() {
                return b$.portal.portalServer.serverURL
            },
            getServerRoot = function getServerRoot() {
                return b$.portal.config.serverRoot
            },
            getResourceRoot = function getResourceRoot() {
                return b$.portal.config.resourceRoot
            },
            getTemplateRoot = function getTemplateRoot() {
                return getResourceRoot() + '/static/fipo/templates'
            },
            getFormlyTemplateRoot = function getFormlyTemplateRoot() {
                return getTemplateRoot() + '/formly'
            },
            getCssRoot = function getCssRoot() {
                return getResourceRoot() + '/static/fipo/ux/css'
            },
            getStaticResourcesPath = function getStaticResourcesPath() {
                return b$.portal.staticResourcesPath
            },
            getStaticContentPath = function getStaticContentPath() {
                return b$.portal.staticContentPath
            },
            getPageLanguage = function getPageLanguage() {
                return b$.portal.pageLanguage
            },
            getPageLocale = function getPageLocale() {
                var language = getPageLanguage(),
                    pageLocale;
                switch (language.toLowerCase()) {
                    case 'en':
                        pageLocale = 'en-US';
                        break;
                    case 'fr':
                        pageLocale = 'fr-CH';
                        break;
                    case 'it':
                        pageLocale = 'it-CH';
                        break;
                    default:
                        pageLocale = 'de-CH'
                }
                this.getPageLocale = function () {
                    return pageLocale
                };
                return pageLocale
            },
            getEfPrefix = function getEfPrefix() {
                return b$.portal.efPrefix
            },
            getPfChUrl = function getPfChUrl() {
                return b$.portal.pfchUrl
            },
            getTrUrl = function getTrUrl() {
                return b$.portal.trUrl
            },
            getLocationOrigin = function getLocationOrigin() {
                if (_.has(window, 'location.origin')) return window.location.origin;
                else return window.location.protocol + '//' + window.location.hostname + (window.location.port ? ':' + window.location.port : '')
            },
            getUserName = function getUserName() {
                return b$.portal.userName
            },
            getContextName = function getContextName() {
                return b$.portal.portalName
            },
            getMessagesUrl = function getMessagesUrl() {
                return b$.portal.messagesUrl
            },
            getUiSettingsUrl = function getUiSettingsUrl() {
                return b$.portal.uiSettingsUrl
            },
            getAbsUrlCheckStatus = function getAbsUrlCheckStatus() {
                return b$.portal.absUrlCheckStatus
            },
            getAbsUrlConfirm = function getUrlAbsConfirm() {
                return b$.portal.absUrlConfirm
            },
            getAbsUrlCancel = function getAbsUrlCancel() {
                return b$.portal.absUrlCancel
            },
            getWidgetShopLimit = function getWidgetShopLimit() {
                return b$.portal.widgetShopLimit
            },
            getWidgetShopWarnLimit = function getWidgetShopWarnLimit() {
                return b$.portal.widgetShopWarnLimit
            },
            isDebugEnabled = function isDebugEnabled() {
                return 'true' === b$.portal.debugEnabled
            },
            isRemoteLoggerDisabled = function isRemoteLoggerDisabled() {
                return 'true' !== b$.portal.remoteLoggerEnabled
            },
            useAggregatedResources = function useAggregatedResources() {
                return b$.portal.staticResourcesUseAggregated
            },
            isMessagesShowKeys = function isMessagesShowKeys() {
                return b$.portal.isMessagesShowKeys
            },
            logTracker = {
            },
            remoteLoggers = getRemoteLoggers(),
            remoteLogLevel = getRemoteLoggerLevel(),
            shouldSendLogToServer = createShouldSendLogToServer(remoteLoggers, remoteLogLevel),
            isDebugRemoteLoggingEnabled = function (name) {
                return shouldSendLogToServer(name, pf.globals.logging.levels.DEBUG)
            },
            clientLogLevel = getClientLoggerLevel(),
            sendLog = function sendLog(name, level, message, timestamp) {
                if (level === pf.globals.logging.levels.ERROR) pageLoader.hideLoader();
                if (shouldSendLogToServer(name, level)) {
                    var _message = message,
                        tracker = logTracker[message];
                    if (tracker && Date.now() - tracker.lastRaised < 50) {
                        $timeout.cancel(tracker.promise);
                        tracker.count += 1;
                        tracker.lastRaised = Date.now()
                    } else {
                        tracker = {
                            lastRaised: Date.now(),
                            count: 1
                        };
                        logTracker[message] = tracker
                    }
                    var timedMessage = timestamp.toISOString() + ' - ' + _message;
                    tracker.promise = $timeout(function () {
                        if (tracker.count > 1) timedMessage += ' [' + tracker.count + 'th occurence]';
                        return $http({
                            method: 'POST',
                            url: b$.portal.remoteLoggerUrl,
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            data: angular.toJson({
                                url: window.location.href,
                                message: timedMessage,
                                level: level.name
                            }),
                            timeout: pf.globals.settings.HTTP_TIMEOUT
                        })
                    }, 50)
                }
                return $q.resolve()
            },
            sendErrorLog = function sendErrorLog(message, timestamp) {
                sendLog('Error', pf.globals.logging.levels.ERROR, message, timestamp)
            },
            performLogout = function performLogout() {
                if (isLocal.bind(this) ()) window.location.href = getServerRoot() + '/j_spring_security_logout';
                else if (isDemo.bind(this) ()) window.location.href = b$.portal.pfchUrl;
                else {
                    var logoutLink = '?logout';
                    if (isCustomerTest.bind(this) ()) logoutLink += '&amp;p_test=1';
                    window.location.href = logoutLink
                }
            },
            createErrorUrl = function createErrorRequestUrl(param) {
                return errorUrlTemplate({
                    baseUrl: getServerRoot(),
                    device: b$.portal.device,
                    param: param
                })
            },
            performErrorRequest = function performErrorRequest(param) {
                return $http.get(createErrorUrl(param))
            },
            clearUrlMappingCache = function clearUrlMappingCache() {
                return performErrorRequest(pf.globals.parameters.CLEAR_URL_MAPPING_CACHE)
            },
            clearTeaserDataCache = function clearTeaserDataCache() {
                return performErrorRequest(pf.globals.parameters.CLEAR_TEASER_DATA_CACHE)
            },
            clearUserDataCache = function clearUserDataCache() {
                return performErrorRequest(pf.globals.parameters.CLEAR_USER_DATA_CACHE)
            },
            goToPortalPageErrorPage = function goToPortalPageError() {
                window.location.href = createErrorUrl(pf.globals.parameters.PORTAL_PAGE_ERROR)
            },
            performLogoutMobile = function performLogoutMobile(confirmText) {
                var logoutConfirmation = window.confirm(confirmText);
                if (true === logoutConfirmation) performLogout.bind(this) ()
            };
        return {
            absoluteUrl: absoluteUrl,
            isMobile: isMobile,
            isLocal: isLocal,
            isNotLocal: isNotLocal,
            isDemo: isDemo,
            isNotDemo: isNotDemo,
            isEUser: isEUser,
            isCustomerTest: isCustomerTest,
            isHomePage: isHomePage,
            isEtradingPage: isEtradingPage,
            isEcockpitPage: isEcockpitPage,
            getTemplateRoot: getTemplateRoot,
            getFormlyTemplateRoot: getFormlyTemplateRoot,
            getPageUuid: getPageUuid,
            getServerUrl: getServerUrl,
            getServerRoot: getServerRoot,
            getResourceRoot: getResourceRoot,
            getCssRoot: getCssRoot,
            getPageName: getPageName,
            getStaticResourcesPath: getStaticResourcesPath,
            getStaticContentPath: getStaticContentPath,
            getPageLanguage: getPageLanguage,
            getPageLocale: getPageLocale,
            getEfPrefix: getEfPrefix,
            getPfChUrl: getPfChUrl,
            getTrUrl: getTrUrl,
            getLocationOrigin: getLocationOrigin,
            getUserId: getUserId,
            getUserName: getUserName,
            getContextName: getContextName,
            getMessagesUrl: getMessagesUrl,
            getUiSettingsUrl: getUiSettingsUrl,
            getAbsUrlCheckStatus: getAbsUrlCheckStatus,
            getAbsUrlConfirm: getAbsUrlConfirm,
            getAbsUrlCancel: getAbsUrlCancel,
            getWidgetShopLimit: getWidgetShopLimit,
            getWidgetShopWarnLimit: getWidgetShopWarnLimit,
            isDebugEnabled: isDebugEnabled,
            useAggregatedResources: useAggregatedResources,
            performLogout: performLogout,
            performLogoutMobile: performLogoutMobile,
            isDebugRemoteLoggingEnabled: isDebugRemoteLoggingEnabled,
            isClientLoggingEnabled: isClientLoggingEnabled,
            sendLog: sendLog,
            sendErrorLog: sendErrorLog,
            clearUrlMappingCache: clearUrlMappingCache,
            clearTeaserDataCache: clearTeaserDataCache,
            clearUserDataCache: clearUserDataCache,
            goToPortalPageErrorPage: goToPortalPageErrorPage,
            isIOS: isIOS,
            isAndroid: isAndroid,
            isTouch: isTouch,
            isSafari: isSafari,
            isSecureBrowser: isSecureBrowser,
            isNumberKeyboardEnabled: isNumberKeyboardEnabled,
            isMessagesShowKeys: isMessagesShowKeys
        }
    })
}(window);
define('fipo/lib/shared/modules/platform', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-polling', [
        'require',
        'lodash',
        'angular'
    ], function (require) {
        function WidgetPoller(callback, timeout) {
            function poll() {
                if (!polling && pollingAllowed) {
                    polling = $timeout(function () {
                        resetPolling();
                        callback()
                    }, timeout);
                    return polling
                }
                return null
            }
            function cancelPolling() {
                if (polling) {
                    $timeout.cancel(polling);
                    resetPolling()
                }
            }
            function resetPolling() {
                polling = null
            }
            var polling,
                pollingAllowed = true;
            if (!_.isFunction(callback) || !_.isFinite(timeout)) throw new Error('Wrong initialisation, callback function and/or timeout not specified.');
            gadgets.pubsub.subscribe(pf.globals.pubsub.OPEN_POPUP_CONTAINER, function () {
                pollingAllowed = false;
                cancelPolling()
            });
            gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, function () {
                pollingAllowed = true
            });
            return {
                poll: poll
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout');
        return {
            WidgetPoller: WidgetPoller
        }
    })
}();
define('fipo/lib/shared/modules/polling', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-productservice', [
        'require',
        'lodash',
        'angular',
        'bluebird',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-numbers',
        'pf-shared-modules-util',
        'pf-shared-modules-accounts',
        'pf-shared-modules-formatter',
        'pf-shared-modules-products',
        'pf-shared-modules-currencies',
        'pf-shared-modules-translate_engine',
        'pf-shared-modules-translator',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        function ProductService() {
            function getFilterFunction(ruleSet) {
                return function filter(item) {
                    for (var i = 0; i < ruleSet.length; i++) {
                        var rule = ruleSet[i],
                            keys = Object.keys(rule),
                            len = keys.length,
                            index;
                        for (index = 0; index < len; ++index) {
                            var key = keys[index];
                            if (item[key] !== rule[key]) return false
                        }
                    }
                    return true
                }
            }
            function add(object, key, value) {
                if (!_.isArray(object[key])) object[key] = [
                ];
                object[key].push(value)
            }
            function extendAccounts(accounts, ruleSet) {
                if (!_.isArray(accounts)) {
                    LOG.error('The given property \'{0}\' is not of type array.', [
                        accounts
                    ]);
                    return accounts
                }
                return _.map(accounts, function (account) {
                    return extendAccount(account, ruleSet)
                })
            }
            function extendAccount(account, ruleSet) {
                var formattedAccount = null,
                    productUniqueKey = account.productUniqueKey,
                    nr = account.number || account.nr,
                    iban = account.iban;
                if (productUniqueKey) {
                    formattedAccount = extend(account, accountsByProductUniqueKey, productUniqueKey, ruleSet);
                    if (!formattedAccount) {
                        var parsedFromUniqueKey = accountsModule.parseProductUniqueKey(productUniqueKey);
                        if (parsedFromUniqueKey) {
                            add(accountsByProductUniqueKey, productUniqueKey, parsedFromUniqueKey);
                            formattedAccount = extend(account, accountsByProductUniqueKey, productUniqueKey, ruleSet)
                        }
                    }
                } else if (nr) formattedAccount = extend(account, accountsByNumber, nr, ruleSet);
                else if (iban) {
                    formattedAccount = extend(account, accountsByIban, iban, ruleSet);
                    if (null === formattedAccount) {
                        var ibanFormatted = formatter.formatIban(iban);
                        formattedAccount = account;
                        formattedAccount.name = translator.translateDirectly('global.OtherPostAccount');
                        formattedAccount.formatted = {
                            iban: ibanFormatted,
                            number: ibanFormatted
                        }
                    }
                }
                return formattedAccount
            }
            function extend(account, source, property, ruleSet) {
                if (_.isArray(source[property])) {
                    var sourceAccount;
                    if (1 === source[property].length) sourceAccount = source[property][0];
                    else if (_.isArray(ruleSet) && !_.isEmpty(ruleSet)) sourceAccount = _.filter(source[property], getFilterFunction(ruleSet)) [0];
                    else sourceAccount = _.filter(source[property], getFilterFunction(ruleSets.DEFAULT)) [0];
                    return angular.extend(account, angular.copy(sourceAccount))
                }
                return null
            }
            function logError(data) {
                LOG.error('Error loading accounts: {0}', [
                    data
                ])
            }
            this.reloadAccounts = function reloadAccounts() {
                if ((!accountsPromise || !accountsPromise.isPending()) && urls.GET_ACCOUNTS) {
                    var restPromise = restng.getJson(urls.GET_ACCOUNTS.url, null);
                    accountsPromise = _Promise.all([restPromise,
                        translationPromise]).then(function (values) {
                        var response = values[0];
                        if (!response.result) return $q.reject();
                        accountsByProductUniqueKey = {
                        };
                        accountsByNumber = {
                        };
                        accountsByIban = {
                        };
                        fullAccountsObject = {
                        };
                        for (var productUniqueKey in response.result) if (response.result.hasOwnProperty(productUniqueKey)) {
                            var obj = angular.copy(response.result[productUniqueKey]);
                            obj.productUniqueKey = productUniqueKey;
                            var amount = _.isFinite(obj.amount) ? obj.amount : obj.balance;
                            obj.formatted = {
                                amount: numbersModule.formatNumber(amount, true),
                                amountWithCurrency: numbersModule.formatAmountWithCurrency(amount, obj.currency),
                                number: accountsModule.formatAccountNumber(obj.nr, obj.type),
                                numberWithCurrency: accountsModule.formatAccountNumberWithCurrency(obj.nr, obj.type, obj.currency),
                                currency: currencies.getLiteral(obj.currency)
                            };
                            if (util.hasValue(obj.availableAmount)) {
                                obj.formatted.availableAmount = numbersModule.formatNumber(obj.availableAmount, true);
                                obj.formatted.availableAmountWithCurrency = numbersModule.formatAmountWithCurrency(obj.availableAmount, obj.currency)
                            }
                            if (util.hasValue(obj.iban)) obj.formatted.iban = formatter.formatIban(obj.iban);
                            if (util.hasValue(obj.balance)) {
                                obj.formatted.balance = numbersModule.formatNumber(obj.balance, true);
                                obj.formatted.balanceWithCurrency = numbersModule.formatNumber(obj.balance, 'plusAndMinus', pf.globals.types.currency.CHF, 2)
                            }
                            if (util.hasValue(obj.availableBalance)) {
                                obj.formatted.avalableBalance = numbersModule.formatNumber(obj.availableBalance, true);
                                obj.formatted.availableBalanceWithCurrency = numbersModule.formatNumber(obj.availableBalance, 'plusAndMinus', pf.globals.types.currency.CHF, 2)
                            }
                            obj.productTypeKey = products.getProductTypeKey(obj.type, obj.subType);
                            add(accountsByProductUniqueKey, productUniqueKey, obj);
                            add(accountsByNumber, obj.nr, obj);
                            add(accountsByIban, obj.iban, obj);
                            fullAccountsObject[productUniqueKey] = obj
                        }
                        return fullAccountsObject
                    }, function (reason) {
                        return $q.reject(reason)
                    })
                }
                return accountsPromise
            };
            this.getWrapperFunctionForWidget = function getWrapperFunctionForWidget(success, error, properties, ruleSet) {
                return function func(data) {
                    return $q(function (resolve, reject) {
                        accountsPromise.then(function () {
                            _.forEach(properties, function (propertyChain) {
                                var accountsObj = data;
                                _.forEach(propertyChain.split('.'), function (prop) {
                                    if (accountsObj.hasOwnProperty(prop)) accountsObj = accountsObj[prop];
                                    else LOG.error('The given property \'{0}\' does not exist in {1}.', [
                                        prop,
                                        propertyChain
                                    ])
                                });
                                extendAccounts(accountsObj, ruleSet)
                            });
                            success(data);
                            resolve(data)
                        }, function rejectFn(reason) {
                            logError(reason);
                            if (_.isFunction(error)) error(data);
                            reject(reason)
                        })
                    })
                }
            };
            this.getWrapperFunction = function getWrapperFunction(success, error, finallyFunction) {
                return function func(data) {
                    return accountsPromise.then(function resolveFn() {
                        return success(data)
                    }, function rejectFn(reason) {
                        logError(reason);
                        if (_.isFunction(error)) error(reason)
                    }).finally (function () {
                        if (_.isFunction(finallyFunction)) finallyFunction()
                    })
                }
            };
            this.getByUniqueKey = function getByUniqueKey(uniqueKey) {
                return angular.copy(fullAccountsObject[uniqueKey])
            };
            this.getByIban = function getByIban(iban) {
                return angular.copy(accountsByIban[iban])
            };
            this.getByNumber = function getByNumber(nr) {
                return angular.copy(accountsByNumber[nr])
            };
            this.getAccounts = function getAccounts() {
                return angular.copy(fullAccountsObject)
            };
            this.dataLoaded = function dataLoaded() {
                return accountsPromise
            };
            this.extendAccounts = extendAccounts;
            this.extendAccount = extendAccount
        }
        var _ = require('lodash'),
            angular = require('angular'),
            _Promise = require('bluebird'),
            widgetFunctions = require('pf-widget-functions'),
            restng = require('pf-shared-modules-rest_ng'),
            numbersModule = require('pf-shared-modules-numbers'),
            util = require('pf-shared-modules-util'),
            accountsModule = require('pf-shared-modules-accounts'),
            formatter = require('pf-shared-modules-formatter'),
            products = require('pf-shared-modules-products'),
            currencies = require('pf-shared-modules-currencies'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            translator = require('pf-shared-modules-translator'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            accountsByProductUniqueKey = {
            },
            accountsByNumber = {
            },
            accountsByIban = {
            },
            fullAccountsObject = {
            },
            accountsPromise,
            translationPromise = translateEngine.requestTranslationModules(['global']),
            urls = {
                GET_ACCOUNTS: widgetFunctions.getActionUrlForPage('GetAccounts')
            },
            injector = angular.injector(['ng'], {
                strictDi: true
            }),
            $q = injector.get('$q'),
            LOG = loggerFactory.getLogger('ProductService'),
            ruleSets = {
                DEFAULT: [
                    {
                        type: 0
                    }
                ]
            },
            instance = new ProductService;
        instance.reloadAccounts();
        gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_WIDGETS, function () {
            instance.reloadAccounts()
        });
        return instance
    })
}();
define('fipo/lib/shared/modules/productService', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-products', [
        'require',
        'lodash',
        'pf-shared-modules-numbers',
        'pf-shared-modules-credit_card',
        'pf-shared-modules-formatter',
        'pf-shared-modules-currencies'
    ], function (require) {
        function formatStandard() {
            return function (account, translator, config) {
                return {
                    header: normalAccountHeader(account),
                    headerTitle: normalAccountHeaderTitle(account, translator, config),
                    content: normalAccountContent(account),
                    footers: normalAccountFooters(account, translator, config)
                }
            }
        }
        function formatTermAndInterest() {
            return function (account) {
                return {
                    header: normalAccountHeader(account),
                    content: {
                        left: accountAmount(account),
                        right: accountInterest(account)
                    },
                    footers: termFooter(account)
                }
            }
        }
        function formatCreditCard() {
            return function (account, translator, config) {
                return {
                    header: translator('CardBalance'),
                    content: creditCardContent(account, translator),
                    footers: creditCardFooters(account, translator, config)
                }
            }
        }
        function formatCreditCardAccount() {
            return function (account, translator, config) {
                return {
                    header: creditCardAccountHeader(account, translator),
                    content: creditCardContent(account, translator),
                    footers: creditCardAccountFooters(account, translator, config)
                }
            }
        }
        function formatLifeInsurance() {
            return function (account, translator, config) {
                return {
                    header: lifeInsuranceHeader(account, translator),
                    content: lifeInsuranceContent(account, translator),
                    footers: lifeInsuranceFooters(account, translator, config)
                }
            }
        }
        function hasValidAmount(account) {
            if (_.has(account, 'amount')) return _.isFinite(account.amount);
            else if (_.has(account, 'additionalInfo') && _.has(account.additionalInfo, 'premium') && _.has(account.additionalInfo.premium, 'amount')) return _.isFinite(account.additionalInfo.premium.amount);
            return false
        }
        function normalAccountHeader(account) {
            if (hasValidAmount(account) && _.has(account, 'balance')) return numbers.filterAmount(account.balance, numbers.indicator.plusAndMinus, pf.globals.types.currency.CHF);
            else return null
        }
        function normalAccountHeaderTitle(account, translator, config) {
            if (config.accountTypeAsTitle) return nameIfAliasElseTitle(account, translator, config);
            else return null
        }
        function creditCardAccountHeader(account, translator) {
            var amount = numbers.filterAmount(account.amountAvailable, numbers.indicator.plusAndMinus, account.currency);
            return _.join([translator('Available'),
                ': ',
                amount], '')
        }
        function lifeInsuranceHeader(account, translator) {
            var periodicityNb = account.additionalInfo.premium.periodicity,
                textKeyPeriodicity = 'periodicity.' + periodicityNb;
            return _.join(translator(textKeyPeriodicity), '')
        }
        function creditCardContent(account, translator) {
            var icons = [
            ];
            if (account.additionalInfo.hasVisa) icons.push({
                iconClass: creditCard.getIconVisa(),
                name: translator('VisaCard')
            });
            if (account.additionalInfo.hasMastercard) icons.push({
                iconClass: creditCard.getIconMastercard(),
                name: translator('MasterCard')
            });
            return {
                left: accountAmount(account),
                icons: icons
            }
        }
        function lifeInsuranceContent(account, translator) {
            var icons = [
            ];
            icons.push({
                iconClass: 'icon-axa',
                name: translator('Axa')
            });
            return {
                left: accountAmount(account.additionalInfo.premium, numbers.indicator.onlyMinus),
                icons: icons
            }
        }
        function normalAccountContent(account) {
            return {
                left: accountAmount(account)
            }
        }
        function accountAmount(account, indicator) {
            var indicatorWithDefault = indicator ? indicator : numbers.indicator.plusAndMinus,
                amount = account ? numbers.formatAmountWithCurrency(account.amount, null, indicatorWithDefault)  : null,
                currencyLiteral = account ? currencies.getLiteral(account.currency)  : null;
            return {
                currency: currencyLiteral,
                value: amount
            }
        }
        function accountInterest(account) {
            var formattedInterestRate = formatter.percentRaw(account.additionalInfo.interestRate);
            if (account.additionalInfo.cap) formattedInterestRate = formattedInterestRate + ' (' + account.additionalInfo.cap + ')';
            return formattedInterestRate
        }
        function nameIfAliasElseTitle(account, translator, config) {
            if (account.alias) return account.name;
            else return config.titleKey ? translator(config.titleKey)  : widgetTitle(translator)
        }
        function titleIfAliasElseName(account, translator, config) {
            if (!account.alias) return account.name;
            else return config.titleKey ? translator(config.titleKey)  : widgetTitle(translator)
        }
        function widgetTitle(translator) {
            return translator('WidgetTitle')
        }
        function normalAccountFooters(account, translator, config) {
            var nameColumn = titleIfAliasElseName(account, translator, config);
            return [{
                left: config.swapNameAndNumber ? account.formatted.number : nameColumn,
                right: config.swapNameAndNumber ? nameColumn : account.formatted.number
            }
            ]
        }
        function creditCardFooters(account, translator, config) {
            var nameColumn = titleIfAliasElseName(account, translator, config);
            return [{
                left: nameColumn
            },
                {
                    left: account.additionalInfo.productName,
                    right: ' ' + creditCard.formatCardNumber(account.additionalInfo.pan)
                }
            ]
        }
        function creditCardAccountFooters(account, translator, config) {
            var nameColumn = titleIfAliasElseName(account, translator, config);
            return [{
                left: nameColumn,
                right: account.formatted.number
            },
                {
                    left: 1 === account.additionalInfo.numberOfCards ? account.additionalInfo.productName : translator('MultipleCards', account.additionalInfo),
                    right: 1 === account.additionalInfo.numberOfCards ? creditCard.formatCardNumber(account.additionalInfo.pan)  : ''
                }
            ]
        }
        function lifeInsuranceFooters(account, translator, config) {
            var nameColumn = titleIfAliasElseName(account, translator, config);
            return [{
                left: config.swapNameAndNumber ? formatter.formatLifeInsurancePolicyNumber(account.formatted.number)  : nameColumn,
                right: config.swapNameAndNumber ? nameColumn : formatter.formatLifeInsurancePolicyNumber(account.formatted.number)
            },
                {
                    left: translator('ContractBegin', {
                        startDate: formatter.isoDateToLocalized(account.additionalInfo.startDate)
                    }),
                    right: translator('DurationYears', {
                        years: account.additionalInfo.duration.years
                    })
                }
            ]
        }
        function termFooter(account) {
            var additionalInfo = account.additionalInfo,
                term = formatter.localizedDateRangeSimple(additionalInfo.startDate, additionalInfo.endDate);
            return [{
                left: account.nr,
                right: term
            }
            ]
        }
        function createAccountStructure(account, type, translator, config) {
            return _.assignIn({
            }, account, {
                nr: account ? account.nr : null,
                isNegative: account ? account.amount < 0 : null,
                hasValidAmount: hasValidAmount(account),
                info: account ? productProperties[type].createInfo(account, translator, config || {
                })  : null
            })
        }
        function createAccountStructureMobile(account, type, translator, config) {
            var basicStructure = createAccountStructure(account, type, translator, config);
            return _.merge(basicStructure, {
                button: productProperties[type].button
            })
        }
        function getProductTypeKey(type, subtype) {
            return join(['ProductType',
                type,
                subtype])
        }
        function getProductUniqueKey(number, type, subtype) {
            return join([number,
                type,
                subtype])
        }
        function getProductType(type, subtype) {
            return join([type,
                subtype])
        }
        function join(values) {
            return _.join(values, '_')
        }
        function findAccount(accountsToSearch, uniqueKeyToFind) {
            return _.find(accountsToSearch, {
                productUniqueKey: uniqueKeyToFind
            })
        }
        function getInstanceType(account) {
            switch (account.type) {
                case 0:
                    switch (account.subType) {
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            return 'paymentaccount';
                        case 6:
                        case 7:
                        case 13:
                            return 'savingsaccount';
                        case 9:
                        case 12:
                            return 'esavingsaccount';
                        default:
                            return null
                    }
                case 1:
                    switch (account.subType) {
                        case 0:
                            return 'fundcustodyaccount';
                        case 2:
                            return 'portfolioexo';
                        case 3:
                            return 'portfoliobasic';
                        case 4:
                            return 'portfoliopremium';
                        case 5:
                            return 'portfoliodwm';
                        default:
                            return null
                    }
                case 8:
                    return 'sqetrading';
                case 9:
                    switch (account.subType) {
                        case 200:
                            return 'fixedtermdeposit';
                        case 210:
                            return 'callmoney';
                        default:
                            return null
                    }
                case 13:
                    return 'mediumtermnote';
                case 14:
                case 47:
                    return 'lifeinsurance';
                case 17:
                    return 'retirementsavingsaccount3a';
                case 21:
                    return 'vestedbenefitsaccount';
                case 22:
                    switch (account.subType) {
                        case 0:
                            return 'creditcardaccount';
                        case 1:
                            return 'creditcard';
                        default:
                            return null
                    }
                case 11:
                    switch (account.subType) {
                        case 207:
                            return 'libormortgage';
                        case 208:
                            return 'fixedratemortgage';
                        case 212:
                            return 'libormortgagecap';
                        default:
                            return null
                    }
                default:
                    return null
            }
        }
        function getActions(account, portalType, target) {
            var accountType = getInstanceType(account);
            return productProperties[accountType].actions[portalType][target].actions
        }
        var _ = require('lodash'),
            numbers = require('pf-shared-modules-numbers'),
            creditCard = require('pf-shared-modules-credit_card'),
            formatter = require('pf-shared-modules-formatter'),
            currencies = require('pf-shared-modules-currencies'),
            productProperties = {
                paymentaccount: {
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransfer',
                                    'BalanceHistory',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransfer',
                                    'BalanceHistory',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountEMoneyBox'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        },
                        mobile: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransfer',
                                    'BalanceHistory',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransfer',
                                    'BalanceHistory',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountEMoneyBox'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        }
                    }
                },
                esavingsaccount: {
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        },
                        mobile: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountNotifications',
                                    'AccountDetail'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        }
                    }
                },
                savingsaccount: {
                    button: 'Movements',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountWithdrawalNoticeSearch',
                                    'AccountNotifications',
                                    'AccountDetail'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        },
                        mobile: {
                            widget: {
                                button: 'Movements',
                                actions: [
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Movements',
                                    'DomesticPayment',
                                    'ForeignPayment',
                                    'AccountTransferSavings',
                                    'BalanceHistory',
                                    'Withdrawals',
                                    'AccountNotifications',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: 'AccountSettings',
                                actions: [
                                    'AccountSettings',
                                    'AccountNotifications',
                                    'AccountDetail'
                                ]
                            },
                            notifications: {
                                button: 'AccountNotifications',
                                actions: [
                                    'AccountNotifications'
                                ]
                            }
                        }
                    }
                },
                fundcustodyaccount: {
                    button: 'CustodyAccountBalance',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'CustodyAccountBalance',
                                actions: [
                                    'SubscribeFunds',
                                    'FundTransactions',
                                    'CustodyAccountDetail',
                                    'CustodyAccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CustodyAccountBalance',
                                    'SubscribeFunds',
                                    'FundTransactions',
                                    'CustodyAccountDetail',
                                    'CustodyAccountSettings'
                                ]
                            },
                            products: {
                                button: 'CustodyAccountSettings',
                                actions: [
                                    'CustodyAccountSettings',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'CustodyAccountBalance',
                                actions: [
                                    'FundTransactions',
                                    'CustodyAccountDetail',
                                    'CustodyAccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CustodyAccountBalance',
                                    'FundTransactions',
                                    'CustodyAccountDetail',
                                    'CustodyAccountSettings'
                                ]
                            },
                            products: {
                                button: 'CustodyAccountSettings',
                                actions: [
                                    'CustodyAccountSettings',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                portfolioexo: {
                    button: 'PortfolioTransactions',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioOrderSearch',
                                    'PortfolioSubscribeFunds',
                                    'PortfolioTransactions'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioSubscribeFunds',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioNotifications',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioOrderSearch',
                                    'PortfolioSubscribeFunds',
                                    'PortfolioTransactions'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioSubscribeFunds',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioNotifications',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                portfoliobasic: {
                    button: 'PortfolioEdit',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioEdit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioEdit',
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioNotifications',
                                actions: [
                                    'PortfolioNotifications',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioEdit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioEdit',
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioNotifications',
                                actions: [
                                    'PortfolioNotifications',
                                    'CustodyAccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                portfoliopremium: {
                    button: 'PortfolioEdit',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioTransfer',
                                    'PortfolioEdit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioEdit',
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioTransfer',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioNotifications',
                                    'PortfolioDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioTransfer',
                                    'PortfolioEdit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioEdit',
                                    'PortfolioTransactions',
                                    'PortfolioOrderSearch',
                                    'PortfolioTransfer',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioNotifications',
                                    'PortfolioDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                portfoliodwm: {
                    button: 'PortfolioEdit',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioInvestmentAmountIncrease',
                                    'PortfolioInvestmentAmountDecrease',
                                    'PortfolioTransactions'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioInvestmentAmountIncrease',
                                    'PortfolioInvestmentAmountDecrease',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'PortfolioInvestmentDetail',
                                actions: [
                                    'PortfolioInvestmentAmountIncrease',
                                    'PortfolioInvestmentAmountDecrease',
                                    'PortfolioTransactions'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PortfolioTransactions',
                                    'PortfolioInvestmentAmountIncrease',
                                    'PortfolioInvestmentAmountDecrease',
                                    'PortfolioInvestmentDetail'
                                ]
                            },
                            products: {
                                button: 'PortfolioDetail',
                                actions: [
                                    'PortfolioDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                sqetrading: {
                    button: 'PaymentEtrading',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'GoToSqEtrading',
                                actions: [
                                    'PaymentEtrading',
                                    'ETradingChangeDefaultPortfolio',
                                    'ETradingNotifications',
                                    'ETradingSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PaymentEtrading',
                                    'GoToSqEtrading',
                                    'ETradingChangeDefaultPortfolio',
                                    'ETradingNotifications',
                                    'ETradingSettings'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'GoToSqEtrading',
                                actions: [
                                    'PaymentEtrading',
                                    'ETradingChangeDefaultPortfolio',
                                    'ETradingNotifications'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'PaymentEtrading',
                                    'GoToSqEtrading',
                                    'ETradingChangeDefaultPortfolio',
                                    'ETradingNotifications'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                fixedtermdeposit: {
                    button: '',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                callmoney: {
                    button: '',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'FixedTermDeposit'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                mediumtermnote: {
                    button: '',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: '',
                                actions: [
                                    'MediumTermNotes'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'MediumTermNotes'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: '',
                                actions: [
                                    'MediumTermNotes'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'MediumTermNotes'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                fixedratemortgage: {
                    button: 'ExtendMortgage',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailFixedRateMortgage'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailFixedRateMortgage'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailFixedRateMortgage'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailFixedRateMortgage'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                libormortgage: {
                    button: 'ExtendMortgage',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailLiborMortgage'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailLiborMortgage'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailLiborMortgage'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailLiborMortgage'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                libormortgagecap: {
                    button: 'ExtendMortgage',
                    createInfo: formatTermAndInterest(),
                    actions: {
                        html: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailLiborMortgageCap'
                                ]
                            },
                            balancesheet: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailLiborMortgageCap'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'DetailLiborMortgageCap'
                                ]
                            },
                            balancesheet: {
                                button: 'ExtendMortgage',
                                actions: [
                                    'ExtendMortgage',
                                    'DetailLiborMortgageCap'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                },
                retirementsavingsaccount3a: {
                    button: 'Detail3A',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'Detail3A',
                                actions: [
                                    'AccountDetail',
                                    'AccountSettings',
                                    'Inpayment3A',
                                    'FundOrder3A'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Detail3A',
                                    'AccountDetail',
                                    'AccountSettings',
                                    'Inpayment3A',
                                    'FundOrder3A'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'AccountSettings',
                                    'AccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'Detail3A',
                                actions: [
                                    'AccountDetail',
                                    'AccountSettings',
                                    'Inpayment3A',
                                    'FundOrder3A'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'Detail3A',
                                    'AccountDetail',
                                    'AccountSettings',
                                    'Inpayment3A',
                                    'FundOrder3A'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'AccountSettings',
                                    'AccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                vestedbenefitsaccount: {
                    button: 'DetailVestedBenefits',
                    createInfo: formatStandard(),
                    actions: {
                        html: {
                            widget: {
                                button: 'DetailVestedBenefits',
                                actions: [
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'DetailVestedBenefits',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'AccountSettings',
                                    'AccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'DetailVestedBenefits',
                                actions: [
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'DetailVestedBenefits',
                                    'AccountDetail',
                                    'AccountSettings'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'AccountSettings',
                                    'AccountDetail'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                creditcardaccount: {
                    button: 'CreditCardLoad',
                    createInfo: formatCreditCardAccount(),
                    actions: {
                        html: {
                            widget: {
                                button: 'CreditCardLoad',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CreditCardLoad',
                                    'CreditCardDetail'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'CreditCardNotifications',
                                    'CreditCardOrderPin'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: 'CreditCardLoad',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CreditCardLoad',
                                    'CreditCardDetail'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'CreditCardNotifications',
                                    'CreditCardOrderPin'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                creditcard: {
                    button: '',
                    createInfo: formatCreditCard(),
                    actions: {
                        html: {
                            widget: {
                                button: '',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'CreditCardNotifications',
                                    'CreditCardOrderPin'
                                ]
                            },
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: '',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'CreditCardDetail'
                                ]
                            },
                            products: {
                                button: '',
                                actions: [
                                    'CreditCardNotifications',
                                    'CreditCardOrderPin'
                                ]
                            },
                            notifications: [
                            ]
                        }
                    }
                },
                lifeinsurance: {
                    button: '',
                    createInfo: formatLifeInsurance(),
                    actions: {
                        html: {
                            widget: {
                                button: '',
                                actions: [
                                    'LifeInsuranceDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'LifeInsuranceDetail'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        },
                        mobile: {
                            widget: {
                                button: '',
                                actions: [
                                    'LifeInsuranceDetail'
                                ]
                            },
                            balancesheet: {
                                button: '',
                                actions: [
                                    'LifeInsuranceDetail'
                                ]
                            },
                            products: [
                            ],
                            notifications: [
                            ]
                        }
                    }
                }
            };
        return {
            getProperties: function (type, portalType, target) {
                return productProperties[type].actions[portalType][target]
            },
            createAccountStructure: createAccountStructure,
            createAccountStructureMobile: createAccountStructureMobile,
            findAccount: findAccount,
            getProductTypeKey: getProductTypeKey,
            getProductUniqueKey: getProductUniqueKey,
            getProductType: getProductType,
            getInstanceType: getInstanceType,
            getActions: getActions
        }
    })
}();
define('fipo/lib/shared/modules/products', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-pseudowidget', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-util',
        'pf-shared-modules-platform',
        'pf-angular-common',
        'directive-widget-common',
        'pf-shared-modules-translate_engine'
    ], function (require) {
        function PseudoWidgetController($scope) {
            var translationPromise = translateEngine.requestTranslationModules(['widgets.pseudowidget']),
                tile = this;
            tile.textKey = 'widgets.' + widgetName;
            var tileContainer = document.getElementsByClassName('pf-tiles-container') [0].getAttribute('data-pid');
            tile.init = function init(widgetId, fullInstanceType) {
                translationPromise.then(function () {
                    tile.widgetId = [
                        tileContainer,
                        widgetId
                    ].join('-');
                    tile.title = (fullInstanceType ? fullInstanceType : util.generateWidgetShopIdentifier(widgetId)) + 'Title';
                    scopes[tile.widgetId] = $scope;
                    $scope.$applyAsync()
                })
            };
            tile.removeWidget = function removeWidget() {
                if (_.isFunction(removeCallback)) removeCallback(tile.widgetId)
            };
            tile.isMobile = platform.isMobile
        }
        var _ = require('lodash'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            platform = require('pf-shared-modules-platform'),
            pfAngularCommon = require('pf-angular-common'),
            directiveWidgetCommon = require('directive-widget-common'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            widgetName = 'pseudowidget',
            widgetModuleName = 'postfinance.' + widgetName,
            module = angular.module(widgetModuleName, [
            ]),
            removeCallback,
            scopes = {
            };
        module.controller('PseudoWidgetController', PseudoWidgetController);
        PseudoWidgetController.$inject = [
            '$scope'
        ];
        return {
            bootstrap: function bootstrap(element) {
                angular.bootstrap(element, [
                    module.name,
                    pfAngularCommon.moduleName
                ], {
                    strictDi: true
                })
            },
            onRemove: function (callback) {
                removeCallback = callback
            },
            destroy: function (widgetId) {
                if (scopes[widgetId]) {
                    scopes[widgetId].$destroy();
                    delete scopes[widgetId]
                }
            }
        }
    })
}();
define('fipo/lib/shared/modules/pseudoWidget', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-pubsub', [
    ], function () {
        function subscribe(eventName, callback) {
            gadgets.pubsub.subscribe(eventName, callback)
        }
        function unsubscribe(eventName, callback) {
            gadgets.pubsub.unsubscribe(eventName, callback)
        }
        function publish(eventName, data) {
            gadgets.pubsub.publish(eventName, data)
        }
        function register($scope, eventName, callback) {
            subscribe(eventName, callback);
            $scope.$on('$destroy', function () {
                unsubscribe(eventName, callback)
            })
        }
        return {
            register: register,
            subscribe: subscribe,
            unsubscribe: unsubscribe,
            publish: publish
        }
    })
}();
define('fipo/lib/shared/modules/pubsub', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-rest_ng', [
        'require',
        'lodash',
        'jquery',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-http_cache',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-util',
        'pf-shared-modules-pageleave',
        'pf-shared-modules-abshandler',
        'pf-shared-modules-cookies',
        'pf-shared-modules-loggerfactory'
    ], function restngDefineFn(require) {
        function isJsonTechnicalError(obj) {
            if (util.hasValue(obj.error)) return errorMessageNotEmpty(obj.error);
            else return false
        }
        function errorMessageNotEmpty(error) {
            if (!error || 0 === _.keys(error).length) return false;
            if (!!error.message) return true;
            else return true
        }
        function postFormData2Json(url, postData, urlParams, config) {
            var restConfig = createDefaultConfig(url, postData, urlParams);
            _.assign(restConfig, config);
            restConfig.setMethod(options.method.POST);
            return doRequest(restConfig)
        }
        function postJson(url, postData, urlParams, config) {
            var sendEmptyParams = _.get(config, 'sendEmptyParams', false),
                restConfig = createDefaultConfig(url, postData, urlParams, sendEmptyParams);
            _.assign(restConfig, config);
            restConfig.setMethod(options.method.POST);
            restConfig.setRequestFormat(options.format.JSON);
            return doRequest(restConfig)
        }
        function postJsonWithEmptyParams(url, postData, urlParams, urlHeaders) {
            var config = createDefaultConfig(url, postData, urlParams);
            config.sendEmptyParams = true;
            config = config.setMethod(options.method.POST);
            config = config.setRequestFormat(options.format.JSON);
            if (urlHeaders) config = config.setHeaders(urlHeaders);
            return doRequest(config)
        }
        function getJson(url, urlParams, urlHeaders, config) {
            var restConfig = createDefaultConfig(url, void 0, urlParams);
            _.assign(restConfig, config);
            restConfig.setResponseFormat(options.format.JSON);
            if (urlHeaders) restConfig.setHeaders(urlHeaders);
            return doRequest(restConfig)
        }
        function getWcmsPage(url) {
            return doRequest(createDefaultConfig(url).setResponseFormat(options.format.HTML))
        }
        function getScriptResource(url) {
            return doRequest(createDefaultConfig(url).setResponseFormat(options.format.JS))
        }
        function getWcmsPages(urls) {
            var allPages = [
            ];
            _.forEach(urls, function (url) {
                var page = doRequest(createDefaultConfig(url).setResponseFormat(options.format.HTML));
                allPages.push(page)
            });
            return $q.all(allPages)
        }
        function sendRequest(url, type, method, urlParams, data, headers, aggregateRequests) {
            var responseFormat;
            switch (type.toLowerCase()) {
                case options.type.JSON:
                    responseFormat = options.format.JSON;
                    break;
                case options.type.XML:
                    responseFormat = options.format.XML;
                    break;
                case options.type.FORM:
                    responseFormat = options.format.FORM;
                    break;
                case options.type.HTML:
                    responseFormat = options.format.HTML;
                    break;
                case options.type.JS:
                    responseFormat = options.format.JS
            }
            var methodType;
            switch (adjustHttpMethod(method)) {
                case options.method.GET:
                    methodType = options.method.GET;
                    break;
                case options.method.POST:
                    methodType = options.method.POST
            }
            var config = createDefaultConfig(url, data, urlParams);
            if (methodType) config = config.setMethod(methodType);
            if (responseFormat) config = config.setResponseFormat(responseFormat);
            if (headers) config = config.setHeaders(headers);
            if (!!aggregateRequests) config = config.setAggregateRequests(aggregateRequests);
            return doRequest(config)
        }
        function doRequest(config) {
            if (_.includes(config.url, pf.globals.urlprefix.NOT_IN_DEMO)) {
                notInDemo();
                return $q.resolve({
                    result: {
                    }
                })
            }
            if (config.postData instanceof FormData) {
                config.requestFormat = options.format.MULTIPART;
                config.transformRequest = angular.identity
            }
            var cleanedUrlParam = util.removeEmptyProperties(config.urlParameter),
                cleanedPostData = '';
            if (_.isString(config.postData) || config.postData instanceof FormData) cleanedPostData = config.postData;
            else {
                cleanedPostData = config.sendEmptyParams ? config.postData : util.removeEmptyProperties(config.postData);
                if (config.requestFormat === options.format.FORM) {
                    cleanedPostData = util.objectToParamString(cleanedPostData);
                    if (config.method === options.method.POST && 0 === cleanedPostData.length) config.method = options.method.GET
                }
            }
            if (platform.isMobile() && !platform.isEUser()) cleanedUrlParam.mobile = true;
            if (config.aggregateRequests) {
                var cachedPromise = promiseCache.getCachedPromise(config.url, cleanedUrlParam, config.method);
                if (cachedPromise) return cachedPromise
            }
            if (REQUEST_LOG.isDebugEnabled()) REQUEST_LOG.debug('[{0}] {1} [{2}]', [
                config.method,
                util.createUrlWithParams(config.url, cleanedUrlParam),
                cleanedPostData
            ]);
            var httpPromise = $http({
                    method: config.method,
                    url: config.url,
                    headers: getHttpHeaders(config),
                    params: cleanedUrlParam,
                    data: cleanedPostData,
                    timeout: config.timeout,
                    transformRequest: _.isFunction(config.transformRequest) ? config.transformRequest : $http.defaults.transformRequest
                }),
                returnedPromise = httpPromise.then(function success(response) {
                    if (_.isEmpty(response) || _.isEmpty(response.data)) {
                        LOG.error('The request for {0} returned no data!', [
                            config.url
                        ]);
                        var emptyMessage = clientMessages.createTechnicalErrorResponse();
                        if (platform.isDemo()) {
                            emptyMessage.error.message.fullKey = true;
                            emptyMessage.error.message.message = 'widgets.efgenericdetail.FunctionalityIsNotInDemo';
                            gadgets.pubsub.publish(pf.globals.pubsub.NOT_IN_DEMO)
                        }
                        return $q.reject(emptyMessage)
                    }
                    if (RESPONSE_LOG.isDebugEnabled()) {
                        var responseText;
                        try {
                            responseText = JSON.stringify(response)
                        } catch (err) {
                            responseText = 'Error parsing response: ' + _.toString(response)
                        }
                        RESPONSE_LOG.debug('[{0}] {1} [{2}]: {3}', [
                            config.method,
                            util.createUrlWithParams(config.url, cleanedUrlParam),
                            cleanedPostData,
                            responseText
                        ])
                    }
                    if (config.aggregateRequests) promiseCache.clearCachedPromise(config.url, cleanedUrlParam, config.method);
                    var responseContentType = getResponseContentType(response),
                        hasContentTypeMismatch = !_.includes(responseContentType, config.responseFormat),
                        isContentTypeHtml = _.includes(responseContentType, 'text/html');
                    if (hasContentTypeMismatch || isContentTypeHtml) {
                        var handleErrors = checkForEsErrors(response, config.url);
                        if (handleErrors) return $q.reject(clientMessages.createConnectionErrorResponse());
                        if (hasContentTypeMismatch && !handleErrors) LOG.error('The requested content type {0} does not match the received type: {1}. Service is {2}', [
                            config.responseFormat,
                            getResponseContentType(response),
                            config.url
                        ]);
                        if (config.responseFormat === options.format.JSON) {
                            var jsonObject = util.parseJSON(response.data);
                            if (null === jsonObject) {
                                LOG.error('JSON was expected but response {0} with type {1} could not be parsed as JSON. Service is {2}', [
                                    response.data,
                                    getResponseContentType(response),
                                    config.url
                                ]);
                                return $q.reject(clientMessages.createConnectionErrorResponse())
                            } else if (isJsonTechnicalError(response.data)) return $q.reject(response.data);
                            response.data = jsonObject
                        }
                        return response.data
                    }
                    if (_.includes(responseContentType, options.format.JSON)) if (isJsonTechnicalError(response.data)) return $q.reject(response.data);
                    return absHandler.responseHandler(response.data)
                }, function failure(response) {
                    if (config.aggregateRequests) promiseCache.clearCachedPromise(config.url, '', config.method);
                    if (response.status >= 400) {
                        LOG.error('The request for {0} failed! HTTP status is {1}, message is {2}. Create a HTTP error', [
                            config.url,
                            response.status,
                            response.data
                        ]);
                        return $q.reject(clientMessages.createHttpErrorResponse())
                    } else if (0 === response.status) if (isAboutToLeave) return null;
                    else return $q.reject(clientMessages.createTimeoutErrorResponse());
                    else if (response.status === - 1) {
                        if (isAboutToLeave) return null;
                        LOG.error('The request for {0} has been aborted! Create a technical error', [
                            config.url,
                            response.status
                        ]);
                        return $q.reject(clientMessages.createTechnicalErrorResponse())
                    }
                    LOG.error('The request for {0} failed! HTTP status is {1}, message is {2}. Create a technical error', [
                        config.url,
                        response.status,
                        response.data || response.message
                    ]);
                    return $q.reject(clientMessages.createTechnicalErrorResponse())
                });
            if (config.aggregateRequests) promiseCache.storeCachedPromise(returnedPromise, config.url, cleanedUrlParam, config.method);
            return returnedPromise
        }
        function checkForEsErrors(response, dataUrl) {
            var data = response.data,
                handleError = false;
            if (_.isString(data)) if (_.includes(data, pf.globals.errors.ERROR_PORTAL_PAGE)) {
                LOG.error('The call to {0} received ERROR_PORTAL_PAGE response. Going to error page.', [
                    dataUrl
                ]);
                var pageContents = document.documentElement.outerHTML;
                platform.sendErrorLog(pageContents).finally (function () {
                    platform.goToPortalPageErrorPage()
                });
                handleError = true
            } else if (_.includes(data, pf.globals.errors.ERROR_LOGINPAGE)) {
                LOG.error('The call to {0} received ERROR_LOGINPAGE response. Reloading page', [
                    dataUrl
                ]);
                cookies.setSecure(pf.globals.cookies.SESSION, pf.globals.cookieValues.TIMEOUT);
                window.location.href = 'home';
                handleError = true
            } else if (_.includes(data, pf.globals.errors.ERROR_ERROR) || _.includes(data, pf.globals.errors.ERROR_MAINTENANCE)) {
                if (_.includes(dataUrl, platform.getEfPrefix())) {
                    LOG.error('The call to {0} received ERROR_MAINTENANCE response. Replacing tiles container.', [
                        dataUrl
                    ]);
                    var pageLanguage = platform.getPageLanguage(),
                        sorryContentSelector = '#detail_page',
                        $mainContent = jQuery('#main-content');
                    $mainContent.children().hide();
                    $mainContent.prepend(util.extractElement(data, sorryContentSelector));
                    jQuery('html').removeClass('has-lightbox');
                    $timeout(function () {
                        document.getElementById('chooseLanguage').style.display = 'none';
                        document.getElementById('msg-de').style.display = 'none';
                        document.getElementById('msg-fr').style.display = 'none';
                        document.getElementById('msg-it').style.display = 'none';
                        document.getElementById('msg-en').style.display = 'none';
                        document.getElementById('msg-' + pageLanguage).style.display = 'block'
                    })
                }
                handleError = true
            } else if (_.includes(data, pf.globals.errors.ERROR_RE_MAINTENANCE)) {
                LOG.error('The call to {0} received ERROR_RE_MAINTENANCE response. Reloading page', [
                    dataUrl
                ]);
                window.location.reload();
                handleError = true
            }
            return handleError
        }
        function adjustHttpMethod(method) {
            var result = method;
            switch (method.toUpperCase()) {
                case options.method.GET:
                    result = options.method.GET;
                    break;
                case options.method.POST:
                    result = options.method.POST
            }
            return result
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            promiseCache = require('pf-shared-modules-http_cache'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            util = require('pf-shared-modules-util'),
            pageLeave = require('pf-shared-modules-pageleave'),
            absHandler = require('pf-shared-modules-abshandler'),
            cookies = require('pf-shared-modules-cookies'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $http = initInjector.get('$http'),
            $q = initInjector.get('$q'),
            $timeout = initInjector.get('$timeout'),
            LOG = loggerFactory.getLogger('RestNg'),
            REQUEST_LOG = loggerFactory.getLogger('RestNgRequest'),
            RESPONSE_LOG = loggerFactory.getLogger('RestNgResponse'),
            isAboutToLeave = false;
        pageLeave.onBeforeUnload(function () {
            isAboutToLeave = true
        });
        var options = {
                format: {
                    JSON: 'application/json',
                    XML: 'application/xml',
                    FORM: 'application/x-www-form-urlencoded',
                    HTML: 'text/html',
                    JS: 'application/javascript',
                    MULTIPART: void 0
                },
                type: {
                    JSON: 'json',
                    XML: 'xml',
                    FORM: 'form',
                    HTML: 'html',
                    JS: 'js'
                },
                method: {
                    GET: 'GET',
                    POST: 'POST'
                }
            },
            Config = function Config(url) {
                this.url = url ? url : '';
                this.method = options.method.GET;
                this.requestFormat = options.format.FORM;
                this.responseFormat = options.format.JSON;
                this.urlParameter = {
                };
                this.postData = {
                };
                this.timeout = pf.globals.settings.HTTP_TIMEOUT;
                this.headers = {
                };
                this.aggregateRequests = false;
                this.sendEmptyParams = false
            };
        Config.prototype.setMethod = function setMethod(method) {
            this.method = method;
            return this
        };
        Config.prototype.setResponseFormat = function setResponseFormat(responseFormat) {
            this.responseFormat = responseFormat;
            return this
        };
        Config.prototype.setRequestFormat = function setRequestFormat(requestFormat) {
            this.requestFormat = requestFormat;
            return this
        };
        Config.prototype.setHeaders = function setHeaders(headers) {
            this.headers = headers;
            return this
        };
        Config.prototype.setAggregateRequests = function setAggregateRequests(aggregateRequest) {
            this.aggregateRequests = aggregateRequest;
            return this
        };
        var createDefaultConfig = function createDefaultConfig(url, postData, urlParameter, sendEmptyParams) {
                var result = new Config(url);
                if (postData) result.postData = postData;
                if (urlParameter) result.urlParameter = urlParameter;
                if (sendEmptyParams) result.sendEmptyParams = sendEmptyParams;
                return result
            },
            getHttpHeaders = function getHttpHeaders(config) {
                var headers = null;
                if (config.headers) {
                    headers = {
                    };
                    _.forEach(config.headers, function (value, key) {
                        headers[key] = value
                    })
                }
                if (config.method === options.method.POST) {
                    headers = headers || {
                    };
                    headers['Content-Type'] = config.requestFormat
                }
                return headers
            },
            getResponseContentType = function getResponseContentType(response) {
                var result = response.headers() ['content-type'];
                if (result) return result;
                else return ''
            };
        return {
            doRequest: doRequest,
            sendRequest: sendRequest,
            postFormData2Json: postFormData2Json,
            postJson: postJson,
            postJsonWithEmptyParams: postJsonWithEmptyParams,
            getJson: getJson,
            getScriptResource: getScriptResource,
            getWcmsPage: getWcmsPage,
            getWcmsPages: getWcmsPages,
            createDefaultConfig: createDefaultConfig,
            options: options,
            adjustHttpMethod: adjustHttpMethod
        }
    })
}(window);
define('fipo/lib/shared/modules/restng', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-rest_ng_detailpages', [
        'require',
        'lodash',
        'angular',
        'bluebird',
        'pf-shared-modules-historyservice',
        'pf-shared-modules-rest_ng'
    ], function (require) {
        function doRequest(config, requestConfig) {
            return requestHandler(restng.doRequest(requestConfig), config)
        }
        function sendRequest(config, url, type, method, urlParams, data, aggregateRequests) {
            return requestHandler(restng.sendRequest(url, type, method, urlParams, data, aggregateRequests), config)
        }
        function postFormData2Json(config, url, postData, urlParams) {
            var request = restng.postFormData2Json(url, postData, urlParams, config);
            return requestHandler(request, config)
        }
        function postJson(config, url, postData, urlParams) {
            var request = restng.postJson(url, postData, urlParams, config);
            return requestHandler(request, config)
        }
        function postJsonWithEmptyParams(config, url, postData, urlParams) {
            return requestHandler(restng.postJsonWithEmptyParams(url, postData, urlParams), config)
        }
        function getJson(config, url, urlParams, urlHeaders) {
            var request = restng.getJson(url, urlParams, urlHeaders, config);
            return requestHandler(request, config)
        }
        function getWcmsPage(config, url) {
            config.successHandler = function (response) {
                return response
            };
            return requestHandler(restng.getWcmsPage(url), config)
        }
        function createDefaultConfig(config, url, postData, urlParameter) {
            return requestHandler(restng.createDefaultConfig(url, postData, urlParameter), config)
        }
        function adjustHttpMethod(config, method) {
            return requestHandler(restng.adjustHttpMethod(method), config)
        }
        function requestHandler(requestPromise, config) {
            if (_.get(config, 'showLoader', false)) gadgets.pubsub.publish(pf.globals.pubsub.SHOW_PAGE_LOADER);
            if (!config.preserveLoader) config.service = {
                showSpinner: config.showSpinner || false,
                showLoader: config.showLoader || false,
                isLoading: config.showSpinner || false
            };
            return requestPromise.then(createSuccessHandler(config)).finally (createFinallyHandler(config)).catch (createErrorHandler(config)).finally (function () {
                config.scope.$applyAsync()
            })
        }
        function createSuccessHandler(config) {
            if (_.isFunction(_.get(config, 'successHandler'))) return config.successHandler;
            else return function (response) {
                if (_.isNil(response.result)) return _Promise.reject(response);
                else return response
            }
        }
        function createErrorHandler(config) {
            if (_.isFunction(_.get(config, 'errorHandler'))) return config.errorHandler;
            var scope = config.scope,
                helper = config.helper;
            return function (errorResponse) {
                if (errorResponse.abs) _.noop();
                else if (errorResponse.messages) helper.applyMessages(errorResponse.messages);
                else {
                    helper.clearMessages();
                    angular.extend(scope, errorResponse);
                    gadgets.pubsub.publish(pf.globals.pubsub.HIDE_DIALOG);
                    historyService.clear();
                    helper.goToErrorState()
                }
                return _Promise.reject(errorResponse)
            }
        }
        function createFinallyHandler(config) {
            if (_.isFunction(_.get(config, 'finallyHandler'))) return config.finallyHandler;
            else return function () {
                if (!config.preserveLoader) {
                    if (_.has(config, 'service')) {
                        config.service.isLoading = false;
                        config.service.showLoader = false;
                        config.service.showSpinner = false;
                        config.scope.$apply()
                    }
                    gadgets.pubsub.publish(pf.globals.pubsub.HIDE_PAGE_LOADER)
                }
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            _Promise = require('bluebird'),
            historyService = require('pf-shared-modules-historyservice'),
            restng = require('pf-shared-modules-rest_ng');
        return {
            doRequest: doRequest,
            sendRequest: sendRequest,
            postFormData2Json: postFormData2Json,
            postJson: postJson,
            postJsonWithEmptyParams: postJsonWithEmptyParams,
            getJson: getJson,
            getWcmsPage: getWcmsPage,
            createDefaultConfig: createDefaultConfig,
            options: restng.options,
            adjustHttpMethod: adjustHttpMethod
        }
    })
}();
define('fipo/lib/shared/modules/restngDetailpages', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-scrolling', [
        'require',
        'lodash',
        'jquery'
    ], function (require) {
        function scrollToId(id, margin) {
            var $target = jQuery('#' + id);
            if ($target && $target.length) scrollToElement($target, margin)
        }
        function scrollToElement($el, margin) {
            if ($el && _.isFunction($el.offset)) scrollToPosition($el.offset().top - (margin || 0), $el)
        }
        function scrollToPosition(pos, $el, preventAnimation) {
            var scrollingContainer = 'html, body',
                scrollingPos = pos;
            if ($el) {
                var parent = getScrollParent($el[0]);
                if (parent && _.includes(parent.classList, 'detail_overlay--content')) {
                    scrollingPos = 0;
                    scrollingContainer = parent
                }
            }
            var scrollingDuration = preventAnimation ? 0 : SCROLLING_DURATION;
            jQuery(scrollingContainer).animate({
                scrollTop: scrollingPos
            }, scrollingDuration)
        }
        function getScrollParent($el) {
            constisElement = $el instanceof HTMLElement,
                overflowY = isElement && window.getComputedStyle($el).overflowY,
                isScrollable = 'visible' !== overflowY && 'hidden' !== overflowY;
            if (!$el) return null;
            else if (isScrollable && $el.scrollHeight >= $el.clientHeight) return $el;
            return getScrollParent($el.parentNode) || document.body
        }
        function getScrollPosition() {
            return window.pageYOffset
        }
        function storeScrollPosition() {
            scrollPosition = getScrollPosition()
        }
        function restoreScrollPosition() {
            if (!_.isNil(scrollPosition)) {
                scrollToPosition(scrollPosition);
                clearScrollPosition()
            }
        }
        function clearScrollPosition() {
            scrollPosition = null
        }
        function scrollToTop() {
            window.scrollTo(0, SCROLLING_DURATION)
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            SCROLLING_DURATION = 500,
            scrollPosition = null;
        return {
            scrollToId: scrollToId,
            scrollToElement: scrollToElement,
            scrollToPosition: scrollToPosition,
            scrollToTop: scrollToTop,
            getScrollPosition: getScrollPosition,
            storeScrollPosition: storeScrollPosition,
            restoreScrollPosition: restoreScrollPosition,
            clearScrollPosition: clearScrollPosition
        }
    })
}(window);
define('fipo/lib/shared/modules/scrolling', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-storage', [
        'require',
        'lodash'
    ], function (require) {
        function createWrapper(storageName) {
            var storageAvailable = false,
                storage = null;
            try {
                storage = window[storageName];
                storageAvailable = function checkStorageAvailable(someStorage) {
                    if (_.isNil(someStorage)) return false;
                    var result = _.attempt(function () {
                        someStorage.setItem(storageName, storageName);
                        someStorage.removeItem(storageName)
                    });
                    if (_.isError(result)) return false;
                    else return 'chrome-extension:' !== window.location.protocol
                }(storage)
            } catch (error) {
            }
            return {
                getItem: function (key) {
                    if (storageAvailable) return storage.getItem(key);
                    else return null
                },
                setItem: function (key, value) {
                    if (storageAvailable) return _.attempt(function () {
                        storage.setItem(key, value)
                    });
                    else return null
                },
                removeItem: function (key) {
                    if (storageAvailable) return _.attempt(function () {
                        storage.removeItem(key)
                    });
                    else return null
                },
                clear: function () {
                    if (storageAvailable) storage.clear()
                },
                key: function (index) {
                    if (storageAvailable) return storage.key(index);
                    else return null
                },
                isAvailable: function () {
                    return storageAvailable
                }
            }
        }
        var _ = require('lodash'),
            sessionStorageWrapper = createWrapper('sessionStorage'),
            localStorageWrapper = createWrapper('localStorage');
        return {
            sessionStorage: sessionStorageWrapper,
            localStorage: localStorageWrapper
        }
    })
}(window);
define('fipo/lib/shared/modules/storage', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-tabs', [
        'require',
        'lodash',
        'pf-shared-modules-util',
        'pf-widget-functions',
        'pf-shared-modules-detail_page_names'
    ], function (require) {
        function getSelectedTab(widget, tabKey) {
            for (var tabState = widget.getPreference('tabsState'), states = tabState.split(','), i = 0; i < states.length; i++) if (_.includes(states[i], tabKey)) return states[i].split(':') [1];
            return null
        }
        function setSelectedTab(widget, tabKey, value) {
            var tabState = widget.getPreference('tabsState');
            if (util.hasValue(tabState)) if (_.includes(tabState, tabKey)) {
                tabState = tabState.replace(new RegExp('(' + tabKey + '\\:\\d+)'), tabKey + ':' + value);
                widget.setPreference('tabsState', tabState)
            } else widget.setPreference('tabsState', tabState + ',' + tabKey + ':' + value);
            else widget.setPreference('tabsState', tabKey + ':' + value)
        }
        function getTabSet(detailPageName) {
            if (!tabSetStore[detailPageName]) {
                var tabSet = new TabSet;
                tabSet.init(detailPageName);
                tabSetStore[detailPageName] = tabSet
            }
            return tabSetStore[detailPageName]
        }
        function TabSet() {
            function init(detailPageName) {
                var tabUrls = pfWidgetFunctions.getDataUrlForDetailPage(detailPageName);
                if (!_.isNil(tabUrls)) tabs = _.map(_.filter(_.castArray(tabUrls), 'config.isTab'), function (url) {
                    var tabName = url.config.state;
                    return {
                        stateName: tabName,
                        fullStateName: detailPageNames.createModuleName(detailPageName, tabName),
                        tabTitleKey: detailPageNames.createTranslationKey(detailPageName, tabName, 'TabTitle'),
                        tabTitleIcon: url.config.tabIcon
                    }
                })
            }
            function getTabs() {
                return _.cloneDeep(tabs)
            }
            function getFirstTab() {
                return _.cloneDeep(_.head(tabs))
            }
            function getFirstState() {
                return _.get(getFirstTab(), 'fullStateName')
            }
            function containsState(stateName) {
                return _.some(tabs, {
                    fullStateName: stateName
                })
            }
            function isEmpty() {
                return _.isEmpty(tabs)
            }
            function notEmpty() {
                return !isEmpty()
            }
            var tabs = null;
            return {
                init: init,
                getTabs: getTabs,
                containsState: containsState,
                getFirstTab: getFirstTab,
                getFirstState: getFirstState,
                isEmpty: isEmpty,
                notEmpty: notEmpty
            }
        }
        var _ = require('lodash'),
            util = require('pf-shared-modules-util'),
            pfWidgetFunctions = require('pf-widget-functions'),
            detailPageNames = require('pf-shared-modules-detail_page_names'),
            tabSetStore = {
            };
        return {
            getSelectedTab: getSelectedTab,
            setSelectedTab: setSelectedTab,
            TabSet: TabSet,
            getTabSet: getTabSet
        }
    })
}();
define('fipo/lib/shared/modules/tabs', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-tooltips', [
        'require',
        'lodash',
        'pf-sessiondata-userdata'
    ], function (require) {
        function isDisabled() {
            return true === _.get(userData, 'hideTooltips', false)
        }
        var _ = require('lodash'),
            userData = require('pf-sessiondata-userdata');
        return {
            isDisabled: isDisabled
        }
    })
}();
define('fipo/lib/shared/modules/tooltips', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translate_engine', [
        'require',
        'lodash',
        'pf-shared-modules-translate_storage',
        'pf-shared-modules-platform',
        'pf-shared-modules-rest_ng',
        'bluebird',
        'pf-shared-modules-pageleave'
    ], function (require) {
        function requestTranslationModules(translations) {
            var listOfTranslationNodes = _.map(translations, mapTranslationNode());
            return resolveTranslations(listOfTranslationNodes)
        }
        function exists(item) {
            return !_.isUndefined(item)
        }
        function mapTranslationNode() {
            var storedModuleTree = storage.getCurrentModules();
            return function (moduleName) {
                var splittedModuleNames = moduleName.split('.'),
                    moduleNode = storedModuleTree;
                _.forOwn(splittedModuleNames, function (splittedModuleName, index) {
                    if (_.exists(moduleNode.modules[splittedModuleName])) {
                        moduleNode = moduleNode.modules[splittedModuleName];
                        if (_.exists(moduleNode.promise)) return false
                    } else {
                        var createCurrentModuleName = _.join(_.slice(splittedModuleNames, 0, index + 1), '.');
                        moduleNode.modules[splittedModuleName] = {
                            name: createCurrentModuleName,
                            promise: void 0,
                            modules: {
                            }
                        };
                        moduleNode = moduleNode.modules[splittedModuleName]
                    }
                    return true
                });
                return moduleNode
            }
        }
        function resolveTranslations(requestedModuleNodes) {
            var requiredModuleNodes = _.reject(requestedModuleNodes, 'promise');
            if (requiredModuleNodes.length > 0) {
                var params = {
                        lang: platform.getPageLanguage(),
                        module: _.map(requiredModuleNodes, 'name'),
                        mobile: platform.isMobile()
                    },
                    url = platform.getMessagesUrl(),
                    loadedTranslations,
                    promise = restng.getJson(url, params).then(function success(data, status) {
                        if (status === pf.globals.statuscode.NO_CONTENT) {
                            handleError();
                            return _Promise.reject()
                        }
                        loadedTranslations = data;
                        return _Promise.resolve()
                    }, function failure() {
                        handleError();
                        return _Promise.reject()
                    });
                promise.finally (function () {
                    storage.save(loadedTranslations)
                });
                _.forEach(requiredModuleNodes, function (module) {
                    module.promise = promise
                })
            }
            return _Promise.all(_.map(requestedModuleNodes, 'promise'))
        }
        function handleError() {
            try {
                storage.clear()
            } finally {
                if (!isAboutToLeave) platform.performLogout()
            }
        }
        var _ = require('lodash'),
            storage = require('pf-shared-modules-translate_storage'),
            platform = require('pf-shared-modules-platform'),
            restng = require('pf-shared-modules-rest_ng'),
            _Promise = require('bluebird'),
            pageLeave = require('pf-shared-modules-pageleave'),
            isAboutToLeave = false;
        pageLeave.onBeforeUnload(function () {
            isAboutToLeave = true
        });
        _.mixin({
            exists: exists
        });
        return {
            requestTranslationModules: requestTranslationModules
        }
    })
}();
define('fipo/lib/shared/modules/translate/translateEngine', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translate_interpolator', [
        'require',
        'angular',
        'pf-angular-filters-format'
    ], function (require) {
        function interpolate(translation, translateValues) {
            var params = translateValues || {
            };
            return $interpolate(translation) (params)
        }
        var angular = require('angular'),
            pfAngularFilters = require('pf-angular-filters-format'),
            injector = angular.injector(['ng',
                pfAngularFilters.moduleName], {
                strictDi: true
            }),
            $interpolate = injector.get('$interpolate');
        return {
            interpolate: interpolate
        }
    })
}();
define('fipo/lib/shared/modules/translate/translateInterpolator', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translate_keys', [
        'require',
        'lodash',
        'pf-shared-modules-util',
        'pf-shared-modules-wcms_enum_generator'
    ], function (require) {
        function generateFullKeys(key, scope) {
            var translateKey,
                globalKey,
                globalShortKey,
                isEnum;
            if (/^.*([a-z][a-zA-Z]*)\.((-?\d+)|null)$/.test(key)) isEnum = true;
            if ('undefined' === key || void 0 === key) key = 'Undefined';
            if (_.isNil(scope)) {
                translateKey = key;
                if (isEnum) globalKey = 'global.' + _.slice(_.split(key, '.'), - 2).join('.');
                else {
                    var subKeyStart = key.lastIndexOf('.');
                    globalKey = 'global.' + key.slice(subKeyStart + 1)
                }
            } else {
                var textKey = util.createTextKey(scope);
                translateKey = textKey + '.' + key;
                globalKey = 'global.' + key;
                var subKeys = _.split(key, '.');
                if (_.size(subKeys) > 1) globalShortKey = 'global.' + _.last(subKeys)
            }
            if (isEnum) {
                var enumKeys = enumGenerator.generateKeys(translateKey, globalKey);
                translateKey = enumKeys.translateKey;
                globalKey = enumKeys.globalKey
            }
            return {
                translateKey: translateKey,
                globalKey: globalKey,
                globalShortKey: globalShortKey,
                all: [
                    translateKey,
                    globalKey,
                    globalShortKey
                ]
            }
        }
        var _ = require('lodash'),
            util = require('pf-shared-modules-util'),
            enumGenerator = require('pf-shared-modules-wcms_enum_generator');
        return {
            generateFullKeys: generateFullKeys
        }
    })
}();
define('fipo/lib/shared/modules/translate/translateKeys', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translate_storage', [
        'require',
        'lodash',
        'pf-shared-modules-storage',
        'pf-shared-modules-platform',
        'bluebird'
    ], function (require) {
        function loadFromStorage() {
            var modulesFromStorage = storage.sessionStorage.getItem(MODULES),
                tablesFromStorage = storage.sessionStorage.getItem(TABLES);
            if (!(_.isUndefined(modulesFromStorage) || _.isUndefined(tablesFromStorage))) {
                var parseModulesAttempt = _.attempt(JSON.parse.bind(null, modulesFromStorage)),
                    parseTablesAttempt = _.attempt(JSON.parse.bind(null, tablesFromStorage));
                if (!(_.isError(parseModulesAttempt) || _.isError(parseTablesAttempt))) {
                    _translations = parseTablesAttempt || {
                    };
                    _modules = restoreModuleTree(parseModulesAttempt) || {
                    };
                    return
                }
            }
            _translations = {
            };
            _modules = {
            }
        }
        function clearStorage() {
            storage.sessionStorage.removeItem(MODULES);
            storage.sessionStorage.removeItem(TABLES)
        }
        function saveToStorage(translationValues) {
            _.assignIn(getCurrentTranslationsTable(), translationValues);
            var serializeModulesAttempt = _.attempt(JSON.stringify.bind(null, extractLoadedModules(getModules()))),
                serializeTablesAttempt = _.attempt(JSON.stringify.bind(null, getTranslationsTable()));
            if (!(_.isError(serializeModulesAttempt) || _.isError(serializeTablesAttempt))) {
                var storeModulesAttempt = storage.sessionStorage.setItem(MODULES, serializeModulesAttempt),
                    storeTablesAttempt = storage.sessionStorage.setItem(TABLES, serializeTablesAttempt);
                if (_.isError(storeModulesAttempt) || _.isError(storeTablesAttempt)) clearStorage()
            }
        }
        function restoreModuleTree(modulesInStorage) {
            var rootModule = {
            };
            _.forOwn(modulesInStorage, function (modules, language) {
                rootModule[language] = {
                    modules: {
                    },
                    promise: void 0
                };
                createTreeStructure(modules, rootModule[language])
            });
            return rootModule
        }
        function createTreeStructure(loadedModules, rootNode) {
            _.forEach(loadedModules, function (moduleName) {
                var moduleNode = rootNode,
                    splittedModuleName = _.split(moduleName, '.');
                _.forOwn(splittedModuleName, function (module, index) {
                    if (_.isUndefined(moduleNode.modules[module])) {
                        var createCurrentModuleName = _.join(_.slice(splittedModuleName, 0, index + 1), '.');
                        moduleNode.modules[module] = {
                            name: createCurrentModuleName,
                            modules: {
                            },
                            promise: void 0
                        }
                    }
                    moduleNode = moduleNode.modules[module]
                });
                moduleNode.promise = _Promise.resolve()
            })
        }
        function extractLoadedModules(translationModules) {
            var loadedModules = {
            };
            _.forOwn(translationModules, function (module, language) {
                loadedModules[language] = getLoadedModules(module)
            });
            return loadedModules
        }
        function getLoadedModules(module) {
            if (isResolvedPromise(module.promise)) return [module.name];
            var loadedModules = [
            ];
            _.forEach(module.modules, function (subModule) {
                loadedModules = loadedModules.concat(getLoadedModules(subModule))
            });
            return loadedModules
        }
        function isResolvedPromise(promise) {
            if (_.isUndefined(promise)) return false;
            if (_.isFunction(promise.isFulfilled)) return promise.isFulfilled();
            if (_.isUndefined(promise.$$state)) return false;
            else return 1 === promise.$$state.status
        }
        function getModules() {
            if (_.isUndefined(_modules)) loadFromStorage();
            return _modules
        }
        function getCurrentModules() {
            var modules = getModules();
            if (_.isUndefined(modules[_lang])) modules[_lang] = {
                modules: {
                }
            };
            return modules[_lang]
        }
        function getTranslationsTable() {
            if (_.isUndefined(_translations)) loadFromStorage();
            return _translations
        }
        function getCurrentTranslationsTable() {
            var tables = getTranslationsTable();
            if (_.isUndefined(tables[_lang])) tables[_lang] = {
            };
            return _translations[_lang]
        }
        var _ = require('lodash'),
            storage = require('pf-shared-modules-storage'),
            platform = require('pf-shared-modules-platform'),
            _Promise = require('bluebird'),
            MODULES = 'modules',
            TABLES = 'tables',
            _translations,
            _modules,
            _lang = platform.getPageLanguage();
        return {
            clear: clearStorage,
            save: saveToStorage,
            getCurrentModules: getCurrentModules,
            getTranslations: getTranslationsTable,
            getCurrentTranslations: getCurrentTranslationsTable
        }
    })
}();
define('fipo/lib/shared/modules/translate/translateStorage', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translator', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'pf-shared-modules-translate_storage',
        'pf-shared-modules-translate_keys',
        'pf-shared-modules-translate_interpolator',
        'pf-pattern'
    ], function (require) {
        function translate(key, scope, interpolationParams) {
            var params = interpolationParams;
            if (!_.isObject(params)) params = $parse(params) (this);
            var keys = translateKeys.generateFullKeys(key, scope),
                translations = translateDirectly(keys.all, params);
            return extractTranslation(keys, translations)
        }
        function translateDirectly(key, interpolationParams) {
            var table = translateStorage.getCurrentTranslations();
            if (_.isArray(key)) {
                var candidates = {
                };
                _.forEach(key, function (candidateKey) {
                    candidates[candidateKey] = translateKey(table, candidateKey, interpolationParams)
                });
                return candidates
            }
            return translateKey(table, key, interpolationParams)
        }
        function translateKey(table, key, interpolationParams) {
            if (table[key] || '' === table[key]) {
                var translation = table[key];
                if (interpolationParams) translation = translateInterpolator.interpolate(translation, interpolationParams);
                return translation
            }
            return key
        }
        function extractTranslation(keys, translations) {
            var specific = keys.translateKey,
                globalShort = keys.globalShortKey,
                global = keys.globalKey;
            if (translations[specific] !== specific) return translations[specific];
            else if (translations[global] !== global) return translations[global];
            else if (translations[globalShort] !== globalShort) return translations[globalShort];
            if (platform.isMessagesShowKeys() || !pattern.TRANSLATION_KEY.test(specific)) return specific;
            else return ''
        }
        function createTranslator(scope) {
            return function (key, interpolationParams) {
                return translate(key, scope, interpolationParams)
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            translateStorage = require('pf-shared-modules-translate_storage'),
            translateKeys = require('pf-shared-modules-translate_keys'),
            translateInterpolator = require('pf-shared-modules-translate_interpolator'),
            pattern = require('pf-pattern'),
            injector = angular.injector(['ng'], {
                strictDi: true
            }),
            $parse = injector.get('$parse');
        return {
            translateDirectly: translateDirectly,
            translate: translate,
            createTranslator: createTranslator
        }
    })
}();
define('fipo/lib/shared/modules/translate/translator', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-translator_direct', [
        'require',
        'lodash',
        'pf-shared-modules-translate_storage',
        'pf-shared-modules-translate_keys',
        'pf-shared-modules-platform',
        'pf-pattern'
    ], function (require) {
        function translate(key, scope) {
            var keys = translateKeys.generateFullKeys(key, scope),
                translations = translateDirectly(keys.all);
            return extractTranslation(keys, translations)
        }
        function translateDirectly(key) {
            var table = translateStorage.getCurrentTranslations();
            if (_.isArray(key)) {
                var candidates = {
                };
                _.forEach(key, function (candidateKey) {
                    candidates[candidateKey] = translateKey(table, candidateKey)
                });
                return candidates
            }
            return translateKey(table, key)
        }
        function translateKey(table, key) {
            if (table[key] || '' === table[key]) return table[key];
            else return key
        }
        function extractTranslation(keys, translations) {
            var specific = keys.translateKey,
                globalShort = keys.globalShortKey,
                global = keys.globalKey;
            if (translations[specific] !== specific) return translations[specific];
            else if (translations[global] !== global) return translations[global];
            else if (translations[globalShort] !== globalShort) return translations[globalShort];
            if (platform.isMessagesShowKeys() || !pattern.TRANSLATION_KEY.test(specific)) return specific;
            else return ''
        }
        var _ = require('lodash'),
            translateStorage = require('pf-shared-modules-translate_storage'),
            translateKeys = require('pf-shared-modules-translate_keys'),
            platform = require('pf-shared-modules-platform'),
            pattern = require('pf-pattern');
        return {
            translateDirectly: translateDirectly,
            translate: translate
        }
    })
}();
define('fipo/lib/shared/modules/translate/translatorDirect', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-uisettings', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform'
    ], function (require) {
        function loadUiSettings() {
            loadInProgress = true;
            return $http({
                method: 'GET',
                url: platform.getUiSettingsUrl(),
                timeout: pf.globals.settings.HTTP_TIMEOUT
            }).then(function (result) {
                return result.data.settings
            }, _.constant(null)).finally (function () {
                loadInProgress = false
            })
        }
        function getUiSettings() {
            if (!uiSettings) uiSettings = loadUiSettings();
            return uiSettings
        }
        function getUiSettingsForItem(prefix, name) {
            return getUiSettings().then(function (data) {
                if (data && data[prefix]) return data[prefix][name];
                else return null
            })
        }
        function getUiSettingsForWidget(widgetName) {
            return getUiSettingsForItem(widgetPrefix, widgetName)
        }
        function getUiSettingsForDetailPage(detailPageName) {
            return getUiSettingsForItem(detailPagePrefix, detailPageName)
        }
        function storeUiSettings(settings) {
            return $http({
                method: 'POST',
                url: platform.getUiSettingsUrl(),
                timeout: pf.globals.settings.HTTP_TIMEOUT,
                data: {
                    settings: JSON.stringify(settings)
                }
            }).then(function () {
                _.noop()
            })
        }
        function storeUiSettingsForItem(prefix, name, settings) {
            var settingsData = {
            };
            settingsData[prefix] = {
            };
            settingsData[prefix][name] = settings;
            return storeUiSettings(settingsData)
        }
        function storeUiSettingsForWidget(widgetName, settings) {
            return storeUiSettingsForItem(widgetPrefix, widgetName, settings)
        }
        function storeUiSettingsForDetailPage(detailPageName, settings) {
            return storeUiSettingsForItem(detailPagePrefix, detailPageName, settings)
        }
        function reloadUiSettings() {
            if (uiSettings && !loadInProgress) uiSettings = null;
            return getUiSettings()
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            initInjector = angular.injector(['ng'], {
                strictDi: true
            }),
            $http = initInjector.get('$http'),
            uiSettings = null,
            widgetPrefix = pf.globals.uiSettings.PREFIX_WIDGETS,
            detailPagePrefix = pf.globals.uiSettings.PREFIX_DETAILPAGES,
            loadInProgress = false;
        return {
            getUiSettingsForWidget: getUiSettingsForWidget,
            getUiSettingsForDetailPage: getUiSettingsForDetailPage,
            storeUiSettingsForWidget: storeUiSettingsForWidget,
            storeUiSettingsForDetailPage: storeUiSettingsForDetailPage,
            reloadUiSettings: reloadUiSettings
        }
    })
}();
define('fipo/lib/shared/modules/uiSettings', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-urls', [
        'require',
        'lodash',
        'moment',
        'pf-sessiondata-userdata',
        'pf-shared-modules-platform',
        'pf-shared-modules-util',
        'pf-pattern',
        'pf-app-detect',
        'pf-shared-modules-pageloader'
    ], function (require) {
        function replaceStaticParameter(input, parameter, value) {
            if (input && _.includes(input, parameter)) return _.replace(input, parameter, value);
            else return input
        }
        function getRequestParamsFromUrl() {
            var query = location.search.substr(1),
                result = {
                };
            if (!query) return result;
            _.forEach(_.split(query, '&'), function (part) {
                var item = _.split(part, '=');
                result[decodeURIComponent(item[0])] = decodeURIComponent(item[1])
            });
            return result
        }
        function getActualUrl(url) {
            var actualUrl = url;
            if (!_.isString(url)) actualUrl = util.createUrlWithParams(url.url, url.params);
            if (_.startsWith(actualUrl, '/')) actualUrl = platform.getLocationOrigin() + actualUrl;
            return actualUrl
        }
        var _ = require('lodash'),
            moment = require('moment'),
            userData = require('pf-sessiondata-userdata'),
            platform = require('pf-shared-modules-platform'),
            util = require('pf-shared-modules-util'),
            pattern = require('pf-pattern'),
            appDetect = require('pf-app-detect'),
            pageLoader = require('pf-shared-modules-pageloader'),
            PARAM_REPLACEMENT_REGEX = /\$\{([a-z0-9._]+)}/i,
            PARAM_REPLACEMENT_FUNCS = {
                standardAccountIban: function standardAccountIban() {
                    return userData.standardAccount.iban
                },
                standardAccountProductUniqueKey: function standardAccountProductUniqueKey() {
                    return userData.standardAccount.productUniqueKey
                },
                numberOfMovements: function numberOfMovements() {
                    return userData.numberOfMovements
                },
                movementsBuchArt: function movementsBuchArt() {
                    return userData.movementsBuchArt
                },
                numberOfAccounts: function numberOfAccounts() {
                    return userData.accountList.length
                },
                numberOfPaymentAccounts: function numberOfPaymentAccounts() {
                    return userData.numberOfPaymentAccounts
                },
                endOfMonthDateLocalized: function endOfMonthDateLocalized() {
                    return moment().endOf('month').format('DD.MM.YYYY')
                },
                endOfMonthDateISO: function endOfMonthDateISO() {
                    return moment().endOf('month').format('YYYY-MM-DD')
                },
                tomorrowDateLocalized: function tomorrowDateLocalized() {
                    return moment().add(1, 'days').format('DD.MM.YYYY')
                },
                todayInAMonthDateLocalized: function todayInAMonthDateLocalized() {
                    return moment().add(30, 'days').format('DD.MM.YYYY')
                }
            },
            replaceParameter = function replaceParameter(urlObj, replacementObj) {
                var doReplacement = function doReplacement(param) {
                    var matches = PARAM_REPLACEMENT_REGEX.exec(param),
                        result = param;
                    if (null !== matches && matches.length > 1) {
                        var placeholder = matches[1];
                        if (_.isFunction(PARAM_REPLACEMENT_FUNCS[placeholder])) result = PARAM_REPLACEMENT_FUNCS[placeholder]();
                        else if (!_.isNil(replacementObj) && _.has(replacementObj, placeholder)) {
                            var replacement = _.get(replacementObj, placeholder);
                            if (_.isFunction(replacement)) result = replacement();
                            else result = replacement
                        } else result = ''
                    }
                    return result
                };
                if (_.isString(urlObj)) return doReplacement(urlObj);
                var cloneParams = _.assign({
                }, urlObj.params);
                _.forOwn(cloneParams, function (value, key) {
                    cloneParams[key] = doReplacement(value)
                });
                return cloneParams
            },
            replaceLanguageInUrl = function replaceLanguageInUrl(url) {
                return replaceStaticParameter(url, pf.globals.urlprefix.LANGUAGE_PARAM, platform.getPageLanguage())
            },
            replacePortalTypeInUrl = function replacePortalTypeInUrl(url) {
                var portalType = platform.isMobile() ? pf.globals.urlprefix.PORTAL_TYPE_MOBILE : pf.globals.urlprefix.PORTAL_TYPE_HTML;
                return replaceStaticParameter(url, pf.globals.urlprefix.PORTAL_TYPE, portalType)
            },
            replaceUiMarketSegmentInUrl = function replaceUiMarketSegmentInUrl(url) {
                var uiMarketSegment = 0 === userData.uiMarketSegment ? 'priv' : 'biz';
                return replaceStaticParameter(url, pf.globals.urlprefix.UI_MARKET_SEGMENT, uiMarketSegment)
            },
            replaceWcmsTypeInUrl = function replaceWcmsTypeInUrl(url) {
                var wcmsType = platform.isMobile() ? pf.globals.urlprefix.WCMS_TYPE_MOBILE : pf.globals.urlprefix.WCMS_TYPE_DESKTOP;
                return replaceStaticParameter(url, pf.globals.urlprefix.WCMS_TYPE, wcmsType)
            },
            replaceStaticContentInUrl = function replaceStaticContentInUrl(url) {
                return replaceStaticParameter(url, pf.globals.urlprefix.STATIC_CONTENT, platform.getStaticContentPath())
            },
            openFipoUrl = function openFipoUrl(url) {
                pageLoader.showLoader();
                window.location.href = getActualUrl(url)
            },
            openInternalUrl = function openInternalUrl(url) {
                if (appDetect.isApp()) gadgets.pubsub.publish(pf.globals.pubsub.AMS_OPEN_URL, {
                    url: getActualUrl(url),
                    forceExternalBrowser: false
                });
                else openFipoUrl(url)
            },
            openExternalUrl = function openExternalUrl(url, deferredWindow) {
                var actualUrl = getActualUrl(url);
                if (appDetect.isApp()) gadgets.pubsub.publish(pf.globals.pubsub.AMS_OPEN_URL, {
                    url: actualUrl,
                    forceExternalBrowser: true
                });
                else if (deferredWindow) deferredWindow.openLocation(actualUrl);
                else {
                    var newWindow = window.open(actualUrl, '_blank');
                    if (newWindow && _.isFunction(newWindow.focus)) newWindow.focus()
                }
            },
            openDocumentUrl = function openDocumentUrl(url) {
                var actualUrl = getActualUrl(url);
                if (appDetect.isApp()) gadgets.pubsub.publish(pf.globals.pubsub.AMS_OPEN_URL, {
                    url: actualUrl,
                    forceExternalBrowser: false
                });
                else {
                    var newWindow = window.open(actualUrl, '_blank');
                    if (newWindow && _.isFunction(newWindow.focus)) newWindow.focus()
                }
            },
            openHelpUrl = function openHelpUrl(url) {
                var actualUrl = getActualUrl(url);
                if (appDetect.isApp()) gadgets.pubsub.publish(pf.globals.pubsub.AMS_OPEN_URL, {
                    url: actualUrl,
                    forceExternalBrowser: false
                });
                else {
                    var newWindow = window.open(actualUrl, pf.globals.windows.HELP, pf.globals.settings.POPUP_WINDOW_PARAMS);
                    if (newWindow && _.isFunction(newWindow.focus)) newWindow.focus()
                }
            },
            openBillerRegistrationUrl = function openBillerUrl(url, deferredWindow) {
                var actualUrl = getActualUrl(url);
                if (appDetect.isApp()) gadgets.pubsub.publish(pf.globals.pubsub.AMS_OPEN_URL, {
                    url: actualUrl,
                    forceExternalBrowser: true
                });
                else if (deferredWindow) deferredWindow.openLocation(actualUrl);
                else {
                    var newWindow = window.open(actualUrl, pf.globals.windows.BILLER_REGISTRATION, pf.globals.settings.POPUP_WINDOW_PARAMS);
                    if (newWindow && _.isFunction(newWindow.focus)) newWindow.focus()
                }
            },
            openAutoDetectUrl = function openAutoDetectUrl(url) {
                var actualUrl = getActualUrl(url);
                if (pattern.URL_FIPO_INTERNAL.test(actualUrl)) openFipoUrl(actualUrl);
                else if (pattern.URL_PF_INTERNAL.test(actualUrl)) openInternalUrl(actualUrl);
                else openExternalUrl(actualUrl)
            };
        return {
            replaceParameter: replaceParameter,
            replaceLanguageInUrl: replaceLanguageInUrl,
            replacePortalTypeInUrl: replacePortalTypeInUrl,
            replaceUiMarketSegmentInUrl: replaceUiMarketSegmentInUrl,
            replaceWcmsTypeInUrl: replaceWcmsTypeInUrl,
            replaceStaticContentInUrl: replaceStaticContentInUrl,
            getRequestParamsFromUrl: getRequestParamsFromUrl,
            openFipoUrl: openFipoUrl,
            openInternalUrl: openInternalUrl,
            openExternalUrl: openExternalUrl,
            openDocumentUrl: openDocumentUrl,
            openHelpUrl: openHelpUrl,
            openBillerRegistrationUrl: openBillerRegistrationUrl,
            openAutoDetectUrl: openAutoDetectUrl
        }
    })
}(window);
define('fipo/lib/shared/modules/urls', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-util', [
        'require',
        'lodash',
        'jquery'
    ], function (require) {
        function hasValue(arg) {
            return !_.isNil(arg) && (_.isString(arg) ? !_.isEmpty(arg)  : true)
        }
        function isNumber(arg) {
            return !isNaN(parseFloat(arg))
        }
        function isNaN(arg) {
            return _.isNaN(arg)
        }
        function executeIfDefined(fn, param) {
            var result = _.isFunction(fn);
            if (result) fn(param);
            return result
        }
        function containsErrorTag(data) {
            if (_.isString(data)) return _.some(ERRORS, function (error) {
                return _.includes(data, error)
            });
            else return false
        }
        function extractElement(element, selector) {
            if (!element) return null;
            var escapedElement = element.replace(/(<img[^>]*)[ ]src=/gi, '$1 img-src='),
                $element = jQuery(escapedElement),
                content = $element.find(selector);
            if (0 === content.length) content = $element.filter(selector);
            return content
        }
        function extractBody(htmlString) {
            var result = htmlString,
                bodyStartIndex = htmlString.indexOf('<body>'),
                bodyEndIndex = htmlString.indexOf('</body>');
            if (bodyStartIndex >= 0 && bodyEndIndex >= 0) result = htmlString.substring(bodyStartIndex + 6, bodyEndIndex);
            return result
        }
        function deparamUrl() {
            var obj = {
                },
                params = window.location.href.replace(/^([^#]*)#?(.*)$/, '$2'),
                splittedParams = params.replace(/\+/g, ' ').split('&');
            _.forEach(splittedParams, function (paramElement) {
                var param = paramElement.split('='),
                    key = decodeURIComponent(param[0]),
                    value;
                if (param.length > 2) {
                    var paramKey = param.shift();
                    value = param.join('=');
                    obj[paramKey] = value
                } else if (2 === param.length) {
                    value = decodeURIComponent(param[1]);
                    if (_.isUndefined(obj[key])) obj[key] = value;
                    else obj[key] = [
                        obj[key],
                        value
                    ]
                } else if (key) obj[key] = ''
            });
            return obj
        }
        function parseJSON(data) {
            var json = _.attempt(JSON.parse.bind(null, data));
            if (_.isError(json)) return null;
            else return json
        }
        function getUrlParamSeparator(url) {
            if (!_.includes(url, '?')) return '?';
            if (_.endsWith(url, '?')) return '';
            else return '&'
        }
        function generateId() {
            var s4 = function () {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
            };
            return '_' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4()
        }
        function generateWidgetShopIdentifier(widgetId) {
            return _.upperFirst(_.camelCase(widgetId))
        }
        function createTextKey(scope) {
            var textKey = _.get(scope, 'textKey');
            if (_.isNil(textKey)) textKey = _.get(scope, '$root.$$childHead.textKey');
            return textKey
        }
        function translateBoolean(value, translator) {
            if (value) return translator('Yes');
            else return translator('No')
        }
        function makePromise(arg) {
            var candidate = _.isFunction(arg) ? arg()  : arg;
            if (isPromise(candidate)) return candidate;
            else return window.Promise.resolve(candidate)
        }
        function isPromise(candidate) {
            if (_.isNil(candidate)) return false;
            else return _.isFunction(candidate.then)
        }
        function convertBooleanToInt(value) {
            return value ? 1 : 0
        }
        function convertIntToBoolean(value) {
            return 1 === value
        }
        function removeWhitespaceAndSymbols(value) {
            return _.replace(removeWhitespace(value), /[.:=\/-]/g, '')
        }
        function normalizePostAccount(accountNumber) {
            var tempAccountNumber = _.replace(accountNumber, /-/g, ''),
                firstTwoNumbers = tempAccountNumber.substring(0, 2),
                middlePart = _.padStart(tempAccountNumber.substring(2, tempAccountNumber.length - 1), 6, '0'),
                lastNumber = tempAccountNumber.substring(tempAccountNumber.length - 1, tempAccountNumber.length);
            return firstTwoNumbers + middlePart + lastNumber
        }
        function normalizeIban(value) {
            var normalized = removeWhitespaceAndSymbols(value).toUpperCase();
            normalized = normalized.replace('IBAN', '');
            return normalized
        }
        function mergeMessages() {
            var mergedMessages = {
            };
            _.forEach(arguments, function (messageToMerge) {
                _.forEach(_.keys(messageToMerge), function (type) {
                    var messagesByType = messageToMerge[type];
                    if (messagesByType) {
                        if (!mergedMessages[type]) mergedMessages[type] = [
                        ];
                        Array.prototype.push.apply(mergedMessages[type], messagesByType)
                    }
                })
            });
            return mergedMessages
        }
        function removeWhitespace(value) {
            return _.replace(_.toString(value), /\s/g, '')
        }
        function normalizeText(value) {
            return _.toLower(removeWhitespace(value))
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            ERRORS = [
                pf.globals.errors.ERROR_PORTAL_PAGE,
                pf.globals.errors.ERROR_LOGINPAGE,
                pf.globals.errors.ERROR_MAINTENANCE,
                pf.globals.errors.ERROR_RE_MAINTENANCE,
                pf.globals.errors.ERROR_ERROR
            ],
            isInArray = function isInArray(obj, array) {
                return _.some(array, function (element) {
                    return _.isEqual(element, obj)
                })
            },
            removeEmptyProperties = function removeEmptyProperties(paramObj) {
                var cleanedParams = {
                };
                if (paramObj) _.forOwn(paramObj, function (value, key) {
                    if (hasValue(value)) cleanedParams[key] = value
                });
                return cleanedParams
            },
            createParamEntry = function createParamEntry(name, value) {
                if (!hasValue(value)) return '';
                else return '&' + name + '=' + window.encodeURIComponent(value)
            },
            objectToParamString = function objectToParamString(paramObj) {
                var paramString = '';
                _.forOwn(paramObj, function (value, key) {
                    if (_.isArray(value)) _.forEach(value, function (arrayVal) {
                        paramString += createParamEntry(key, arrayVal)
                    });
                    else paramString += createParamEntry(key, value)
                });
                return paramString.substring(1)
            },
            createUrlWithParams = function createUrlWithParams(baseUrl, params) {
                var paramString = objectToParamString(params);
                if (!_.isEmpty(paramString)) return baseUrl + getUrlParamSeparator(baseUrl) + paramString;
                else return baseUrl
            },
            pad = function pad(number, digits) {
                if (number.toString().length >= digits) return number;
                else return (Math.pow(10, digits) + Math.floor(number)).toString().substring(1)
            },
            expandKey = function expandKey(key, scope) {
                if (scope.textKey) return scope.textKey + '.' + key;
                else return scope.$root.$$childHead.textKey + '.' + key
            },
            getTiles = function getTiles() {
                var newArray = [
                    ],
                    widgetList = document.getElementsByClassName('widget_list bp-area') [0];
                if (widgetList && widgetList.children.length) Array.prototype.forEach.call(widgetList.children, function (child) {
                    var pid = child.getAttribute('data-pid');
                    if (!!pid) newArray.push(pid)
                });
                return newArray
            },
            getWidgetOrder = function getWidgetOrder() {
                return _.map(getTiles(), function (pid, ix) {
                    return {
                        itemName: pid,
                        contextName: b$.portal.portalName,
                        properties: {
                            order: ix + 1
                        }
                    }
                })
            };
        return {
            containsErrorTag: containsErrorTag,
            parseJSON: parseJSON,
            convertBooleanToInt: convertBooleanToInt,
            convertIntToBoolean: convertIntToBoolean,
            createParamEntry: createParamEntry,
            createUrlWithParams: createUrlWithParams,
            deparamUrl: deparamUrl,
            executeIfDefined: executeIfDefined,
            expandKey: expandKey,
            extractBody: extractBody,
            extractElement: extractElement,
            generateId: generateId,
            generateWidgetShopIdentifier: generateWidgetShopIdentifier,
            getTiles: getTiles,
            getWidgetOrder: getWidgetOrder,
            hasValue: hasValue,
            isInArray: isInArray,
            isNaN: isNaN,
            isNumber: isNumber,
            objectToParamString: objectToParamString,
            pad: pad,
            removeEmptyProperties: removeEmptyProperties,
            createTextKey: createTextKey,
            translateBoolean: translateBoolean,
            makePromise: makePromise,
            isPromise: isPromise,
            removeWhitespaceAndSymbols: removeWhitespaceAndSymbols,
            normalizePostAccount: normalizePostAccount,
            normalizeIban: normalizeIban,
            mergeMessages: mergeMessages,
            removeWhitespace: removeWhitespace,
            normalizeText: normalizeText
        }
    })
}(window);
define('fipo/lib/shared/modules/util', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-validator', [
        'require',
        'pf-pattern',
        'pf-shared-modules-util'
    ], function (require) {
        function isIban(iban) {
            var normalizedIban = util.normalizeIban(iban);
            return pattern.IBAN.test(normalizedIban)
        }
        function isPostAccount(accountNumber) {
            return pattern.POST_ACCOUNT.test(String(accountNumber))
        }
        function isValidPostAccount(accountNumber) {
            if (!isPostAccount(accountNumber)) return false;
            var normalizedAccountNumber = util.normalizePostAccount(accountNumber);
            return 0 !== _.toNumber(normalizedAccountNumber) && normalizedAccountNumber.substring(8, 9) === calculateCheckDigitModulo10(normalizedAccountNumber)
        }
        function calculateCheckDigitModulo10(value) {
            for (var checksum = 0, i = 0; i < value.length - 1; ++i) {
                var substringPos = (_.parseInt(value.substring(i, i + 1), 10) + checksum) % 10;
                checksum = _.parseInt('0946827135'.substring(substringPos, substringPos + 1), 10)
            }
            return '0987654321'.substring(checksum, checksum + 1)
        }
        function isValidPostIban(iban) {
            return isValidIban(iban) && pattern.POST_ACCOUNT_IBAN.test(String(iban))
        }
        function isValidIban(iban) {
            if (!isIban(iban)) return false;
            var normalizedIban = util.normalizeIban(iban);
            normalizedIban = _.replace(normalizedIban, /^(.{4})(.*)$/, '$2$1');
            normalizedIban = _.replace(normalizedIban, /[A-Z]/g, function (c) {
                return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10
            });
            for (var sum = 0, exponent = 1, i = normalizedIban.length - 1; i >= 0; i--) {
                sum += exponent * _.parseInt(normalizedIban.charAt(i), 10);
                exponent = 10 * exponent % 97
            }
            return sum % 97 === 1
        }
        function isEuroEsrNumber(esrNumber) {
            return pattern.EUR_ESR.test(String(esrNumber))
        }
        function isChfEsrNumber(esrNumber) {
            return pattern.CHF_ESR.test(String(esrNumber))
        }
        function isValidForeignAccount(accountNumber) {
            var normalizedAccountNumber = util.removeWhitespaceAndSymbols(accountNumber),
                isValid = pattern.AT_LEAST_ONE_DIGIT.test(normalizedAccountNumber);
            isValid = isValid && !isChfEsrNumber(normalizedAccountNumber);
            isValid = isValid && normalizedAccountNumber.length <= 34;
            return isValid
        }
        function isValidSwissAccount(accountNumber) {
            var isValid = isIban(accountNumber) && isValidIban(accountNumber);
            isValid = isValid || isValidPostAccount(accountNumber) && !isEuroEsrNumber(accountNumber);
            return isValid
        }
        function isIsrCodeLine(codeLine) {
            return pattern.ISR_CODE_LINE.test(codeLine)
        }
        function isValidIsrCodeLine(codeLine) {
            var isValid = isIsrCodeLine(codeLine);
            _.forEach(codeLine.match(pattern.ISR_CODE_LINE), function (match, index) {
                if (0 !== index && !_.isUndefined(match)) isValid &= calculateCheckDigitModulo10(match) === match.charAt(match.length - 1)
            });
            return isValid
        }
        function isValidReferenceNumber(referenceNumber) {
            var normalizedReferenceNumber = util.removeWhitespace(referenceNumber),
                isValid = pattern.REFERENCE_NUMBER.test(normalizedReferenceNumber);
            isValid = isValid && calculateCheckDigitModulo10(normalizedReferenceNumber) === normalizedReferenceNumber.charAt(normalizedReferenceNumber.length - 1);
            return isValid
        }
        var pattern = require('pf-pattern'),
            util = require('pf-shared-modules-util');
        return {
            isIban: isIban,
            isPostAccount: isPostAccount,
            isValidPostAccount: isValidPostAccount,
            isValidPostIban: isValidPostIban,
            isValidIban: isValidIban,
            isEuroEsrNumber: isEuroEsrNumber,
            isChfEsrNumber: isChfEsrNumber,
            isValidForeignAccount: isValidForeignAccount,
            isValidSwissAccount: isValidSwissAccount,
            isIsrCodeLine: isIsrCodeLine,
            isValidIsrCodeLine: isValidIsrCodeLine,
            isValidReferenceNumber: isValidReferenceNumber
        }
    })
}();
define('fipo/lib/shared/modules/validator', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-wcms_enum_generator', [
        'require',
        'lodash',
        'pf-shared-modules-util',
        'pf-shared-modules-translate_storage'
    ], function (require) {
        function getEnumArray(key, scope) {
            for (var textKey = util.createTextKey(scope), wcmsEnum = getEnum(textKey, key), enumArray = [
            ], keys = Object.keys(wcmsEnum), len = keys.length, index = 0; index < len; ++index) {
                var property = keys[index];
                if (!_.isNaN(property) || 'null' === property) {
                    var wcmsEnumProperty = wcmsEnum[property];
                    for (var sortNumber in wcmsEnumProperty) if (wcmsEnumProperty.hasOwnProperty(sortNumber) && !_.isNaN(sortNumber)) enumArray.push(buildEntry(property, sortNumber, key, wcmsEnumProperty[sortNumber]))
                }
            }
            return sortBySortNumber(enumArray)
        }
        function getEnumObject(key, scope) {
            var textKey = util.createTextKey(scope),
                wcmsEnum = getEnum(textKey, key),
                enumObject = {
                };
            for (var property in wcmsEnum) if (wcmsEnum.hasOwnProperty(property) && (!_.isNaN(property) || 'null' === property)) {
                var wcmsEnumProperty = wcmsEnum[property];
                if (_.isString(wcmsEnumProperty)) continue;
                for (var sortNumber in wcmsEnumProperty) if (wcmsEnumProperty.hasOwnProperty(sortNumber) && !_.isNaN(sortNumber)) enumObject['null' === property ? '' : property] = buildEntry(property, sortNumber, key, wcmsEnumProperty[sortNumber])
            }
            return enumObject
        }
        function expandEnum(prefix, key, value) {
            for (var enumModule = getEnum(prefix, key), enumValueModule = enumModule[value], order, keys = _.keys(enumValueModule), len = keys.length, index = 0; index < len; ++index) order = keys[index];
            return order ? _.join([prefix,
                key,
                value,
                order], '.')  : _.join([prefix,
                key,
                value], '.')
        }
        function buildEntry(id, sortNumber, key, text) {
            return {
                id: parseInt(id, 10),
                sortNumber: parseInt(sortNumber, 10),
                key: [
                    key,
                    id,
                    sortNumber
                ].join('.'),
                text: text
            }
        }
        function sortBySortNumber(list) {
            return _.orderBy(list, [
                'sortNumber'
            ])
        }
        function getEnum(prefix, key) {
            var prefixList,
                globalKeyList,
                keyList,
                storageKey = [
                    prefix,
                    key
                ].join('.');
            if (enumStore[storageKey]) return enumStore[storageKey];
            var subKeys = _.split(key, '.');
            if (!_.isEmpty(prefix)) {
                prefixList = _.split(prefix, '.');
                keyList = _.concat(prefixList, subKeys);
                globalKeyList = [
                    'global'
                ].concat(subKeys)
            } else {
                keyList = subKeys;
                globalKeyList = [
                    'global'
                ];
                globalKeyList.push(_.last(subKeys))
            }
            var langModule = translateStorage.getCurrentTranslations(),
                tempModule = goToModule(langModule, keyList);
            if (tempModule.length <= 0) tempModule = goToModule(langModule, globalKeyList);
            enumStore[storageKey] = tempModule;
            return tempModule
        }
        function goToModule(module, keysList) {
            var tempModule = module,
                filterString = keysList.join('.').concat('.'),
                keyList = _.filter(_.keys(tempModule), function (o) {
                    return _.startsWith(o, filterString)
                });
            if (!keyList.length) return [];
            var objectMap = _.map(keyList, function (item) {
                var objectItem = {
                    },
                    keys = _.reverse(_.split(item, '.'));
                objectItem[keys[1]] = tempModule[item];
                var objectItem2 = {
                };
                objectItem2[keys[0]] = objectItem;
                return objectItem2
            });
            return _.reduce(objectMap, function (object, value) {
                var level1 = _.keys(value) [0],
                    level2 = _.keys(value[level1]) [0],
                    subobject = {
                    };
                subobject[level1] = value[level1][level2];
                object[level2] = subobject;
                return object
            }, {
            })
        }
        function generateKeys(translateKey, globalKey) {
            var tVal = _.split(translateKey, '.'),
                enumValue = tVal.pop(),
                enumKey = tVal.pop(),
                enumPrefix = tVal.join('.'),
                expandedTranslateKey = expandEnum(enumPrefix, enumKey, enumValue),
                gVal = _.split(globalKey, '.'),
                gValue = gVal.pop(),
                gKey = gVal.pop(),
                globalPrefix = gVal.join('.'),
                expandedGlobalKey = expandEnum(globalPrefix, gKey, gValue);
            return {
                translateKey: expandedTranslateKey,
                globalKey: expandedGlobalKey
            }
        }
        var _ = require('lodash'),
            util = require('pf-shared-modules-util'),
            translateStorage = require('pf-shared-modules-translate_storage'),
            enumStore = {
            };
        return {
            getEnumObject: getEnumObject,
            getEnumArray: getEnumArray,
            expandEnum: expandEnum,
            generateKeys: generateKeys
        }
    })
}();
define('fipo/lib/shared/modules/wcmsEnumGenerator', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-wcms_links', [
        'require',
        'lodash',
        'jquery',
        'pf-shared-modules-util',
        'pf-shared-modules-urls',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform'
    ], function (require) {
        function registerListeners() {
            if (!registered) {
                jQuery(document).on('click', '.wcms a.newWindow', function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    urls.openDocumentUrl(event.target.href)
                });
                jQuery(document).on('click', '.wcms a.helpBrowser', function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    urls.openHelpUrl(event.target.href)
                });
                jQuery(document).on('click', '.wcms a.externalBrowser', function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    urls.openExternalUrl(event.target.href)
                });
                jQuery(document).on('click', '.wcms a.contentOverlay', function (event) {
                    event.preventDefault();
                    event.stopPropagation();
                    var linkElement = event.target,
                        wcmsPageUrl = platform.getStaticContentPath() + linkElement.pathname + '.html',
                        content;
                    restng.getWcmsPage(wcmsPageUrl).then(function (response) {
                        content = util.extractBody(response)
                    }).then(function () {
                        var config = {
                            title: _.replace(linkElement.innerHTML, /<span.*<\/span>/, ''),
                            content: content,
                            focusOnReturn: linkElement
                        };
                        gadgets.pubsub.publish(pf.globals.pubsub.TNB_LINK_CLICKED, config)
                    })
                });
                jQuery(document).on('click', '.wcms a:not(.newWindow):not(.helpBrowser):not(.externalBrowser):not(.contentOverlay)', function (evt) {
                    var linkElement = evt.target;
                    if (!_.isUndefined(linkElement.href)) {
                        event.preventDefault();
                        event.stopPropagation();
                        urls.openAutoDetectUrl(linkElement.href)
                    }
                });
                registered = true
            }
        }
        var _ = require('lodash'),
            jQuery = require('jquery'),
            util = require('pf-shared-modules-util'),
            urls = require('pf-shared-modules-urls'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            registered = false;
        return {
            registerListeners: registerListeners
        }
    })
}();
define('fipo/lib/shared/modules/wcmsLinks', function () {
});
!function (window) {
    'use strict';
    define('pf-shared-modules-webtrendstracker', [
        'require',
        'lodash',
        'pf-shared-modules-platform',
        'pf-shared-modules-util'
    ], function (require) {
        function trackWebtrends() {
            if (!_.isUndefined(window._tag) && platform.isNotDemo()) window._tag.dcsAdTrack.apply(window._tag, arguments)
        }
        function generateRandomNumber() {
            return (new Date).getTime().toString(16) + util.pad(Math.ceil(65535 * Math.random()).toString(16), 4)
        }
        var _ = require('lodash'),
            platform = require('pf-shared-modules-platform'),
            util = require('pf-shared-modules-util');
        return {
            trackWebtrends: trackWebtrends,
            generateRandomNumber: generateRandomNumber
        }
    })
}(window);
define('fipo/lib/shared/modules/webtrendsTracker', function () {
});
!function () {
    'use strict';
    define('pf-shared-modules-widgetloadingstatus', [
        'require',
        'jquery'
    ], function (require) {
        function registerOnPubsub() {
            if (!registered) {
                gadgets.pubsub.subscribe(pf.globals.pubsub.SHOW_WIDGET_LOADING, function (target) {
                    var $trigger = jQuery(target);
                    $trigger.attr('aria-busy', 'true').addClass('is-loading')
                });
                gadgets.pubsub.subscribe(pf.globals.pubsub.HIDE_WIDGET_LOADING, function (target) {
                    var $trigger = jQuery(target);
                    $trigger.find('.is-loading').attr('aria-busy', '').removeClass('is-loading')
                });
                registered = true
            }
        }
        var jQuery = require('jquery'),
            registered = false;
        return {
            registerOnPubsub: registerOnPubsub
        }
    })
}();
define('fipo/lib/shared/modules/widgetLoadingStatus', function () {
}); /* @preserve
 * The MIT License (MIT)
 *
 * Copyright (c) 2013-2018 Petka Antonov
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
!function (t) {
    if ('object' == typeof exports && 'undefined' != typeof module) module.exports = t();
    else if ('function' == typeof define && define.amd) define('bluebird', [
    ], t);
    else {
        var e;
        'undefined' != typeof window ? e = window : 'undefined' != typeof global ? e = global : 'undefined' != typeof self && (e = self),
            e.Promise = t()
    }
}(function () {
    var t,
        e,
        n;
    return function r(t, e, n) {
        function i(s, a) {
            if (!e[s]) {
                if (!t[s]) {
                    var c = 'function' == typeof _dereq_ && _dereq_;
                    if (!a && c) return c(s, !0);
                    if (o) return o(s, !0);
                    var l = new Error('Cannot find module \'' + s + '\'');
                    throw l.code = 'MODULE_NOT_FOUND',
                        l
                }
                var u = e[s] = {
                    exports: {
                    }
                };
                t[s][0].call(u.exports, function (e) {
                    var n = t[s][1][e];
                    return i(n ? n : e)
                }, u, u.exports, r, t, e, n)
            }
            return e[s].exports
        }
        for (var o = 'function' == typeof _dereq_ && _dereq_, s = 0; s < n.length; s++) i(n[s]);
        return i
    }({
            1: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t) {
                        function e(t) {
                            var e = new n(t),
                                r = e.promise();
                            return e.setHowMany(1),
                                e.setUnwrap(),
                                e.init(),
                                r
                        }
                        var n = t._SomePromiseArray;
                        t.any = function (t) {
                            return e(t)
                        },
                            t.prototype.any = function () {
                                return e(this)
                            }
                    }
                },
                {
                }
            ],
            2: [
                function (t, e, n) {
                    'use strict';
                    function r() {
                        this._customScheduler = !1,
                            this._isTickUsed = !1,
                            this._lateQueue = new h(16),
                            this._normalQueue = new h(16),
                            this._haveDrainedQueues = !1,
                            this._trampolineEnabled = !0;
                        var t = this;
                        this.drainQueues = function () {
                            t._drainQueues()
                        },
                            this._schedule = p
                    }
                    function i(t, e, n) {
                        this._lateQueue.push(t, e, n),
                            this._queueTick()
                    }
                    function o(t, e, n) {
                        this._normalQueue.push(t, e, n),
                            this._queueTick()
                    }
                    function s(t) {
                        this._normalQueue._pushOne(t),
                            this._queueTick()
                    }
                    function a(t) {
                        for (; t.length() > 0; ) c(t)
                    }
                    function c(t) {
                        var e = t.shift();
                        if ('function' != typeof e) e._settlePromises();
                        else {
                            var n = t.shift(),
                                r = t.shift();
                            e.call(n, r)
                        }
                    }
                    var l;
                    try {
                        throw new Error
                    } catch (u) {
                        l = u
                    }
                    var p = t('./schedule'),
                        h = t('./queue'),
                        f = t('./util');
                    r.prototype.setScheduler = function (t) {
                        var e = this._schedule;
                        return this._schedule = t,
                            this._customScheduler = !0,
                            e
                    },
                        r.prototype.hasCustomScheduler = function () {
                            return this._customScheduler
                        },
                        r.prototype.enableTrampoline = function () {
                            this._trampolineEnabled = !0
                        },
                        r.prototype.disableTrampolineIfNecessary = function () {
                            f.hasDevTools && (this._trampolineEnabled = !1)
                        },
                        r.prototype.haveItemsQueued = function () {
                            return this._isTickUsed || this._haveDrainedQueues
                        },
                        r.prototype.fatalError = function (t, e) {
                            e ? (process.stderr.write('Fatal ' + (t instanceof Error ? t.stack : t) + '\n'), process.exit(2))  : this.throwLater(t)
                        },
                        r.prototype.throwLater = function (t, e) {
                            if (1 === arguments.length && (e = t, t = function () {
                                throw e
                            }), 'undefined' != typeof setTimeout) setTimeout(function () {
                                t(e)
                            }, 0);
                            else try {
                                this._schedule(function () {
                                    t(e)
                                })
                            } catch (n) {
                                throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n')
                            }
                        },
                        f.hasDevTools ? (r.prototype.invokeLater = function (t, e, n) {
                            this._trampolineEnabled ? i.call(this, t, e, n)  : this._schedule(function () {
                                setTimeout(function () {
                                    t.call(e, n)
                                }, 100)
                            })
                        }, r.prototype.invoke = function (t, e, n) {
                            this._trampolineEnabled ? o.call(this, t, e, n)  : this._schedule(function () {
                                t.call(e, n)
                            })
                        }, r.prototype.settlePromises = function (t) {
                            this._trampolineEnabled ? s.call(this, t)  : this._schedule(function () {
                                t._settlePromises()
                            })
                        })  : (r.prototype.invokeLater = i, r.prototype.invoke = o, r.prototype.settlePromises = s),
                        r.prototype._drainQueues = function () {
                            a(this._normalQueue),
                                this._reset(),
                                this._haveDrainedQueues = !0,
                                a(this._lateQueue)
                        },
                        r.prototype._queueTick = function () {
                            this._isTickUsed || (this._isTickUsed = !0, this._schedule(this.drainQueues))
                        },
                        r.prototype._reset = function () {
                            this._isTickUsed = !1
                        },
                        e.exports = r,
                        e.exports.firstLineError = l
                },
                {
                    './queue': 26,
                    './schedule': 29,
                    './util': 36
                }
            ],
            3: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t, e, n, r) {
                        var i = !1,
                            o = function (t, e) {
                                this._reject(e)
                            },
                            s = function (t, e) {
                                e.promiseRejectionQueued = !0,
                                    e.bindingPromise._then(o, o, null, this, t)
                            },
                            a = function (t, e) {
                                0 === (50397184 & this._bitField) && this._resolveCallback(e.target)
                            },
                            c = function (t, e) {
                                e.promiseRejectionQueued || this._reject(t)
                            };
                        t.prototype.bind = function (o) {
                            i || (i = !0, t.prototype._propagateFrom = r.propagateFromFunction(), t.prototype._boundValue = r.boundValueFunction());
                            var l = n(o),
                                u = new t(e);
                            u._propagateFrom(this, 1);
                            var p = this._target();
                            if (u._setBoundTo(l), l instanceof t) {
                                var h = {
                                    promiseRejectionQueued: !1,
                                    promise: u,
                                    target: p,
                                    bindingPromise: l
                                };
                                p._then(e, s, void 0, u, h),
                                    l._then(a, c, void 0, u, h),
                                    u._setOnCancel(l)
                            } else u._resolveCallback(p);
                            return u
                        },
                            t.prototype._setBoundTo = function (t) {
                                void 0 !== t ? (this._bitField = 2097152 | this._bitField, this._boundTo = t)  : this._bitField = - 2097153 & this._bitField
                            },
                            t.prototype._isBound = function () {
                                return 2097152 === (2097152 & this._bitField)
                            },
                            t.bind = function (e, n) {
                                return t.resolve(n).bind(e)
                            }
                    }
                },
                {
                }
            ],
            4: [
                function (t, e, n) {
                    'use strict';
                    function r() {
                        try {
                            Promise === o && (Promise = i)
                        } catch (t) {
                        }
                        return o
                    }
                    var i;
                    'undefined' != typeof Promise && (i = Promise);
                    var o = t('./promise') ();
                    o.noConflict = r,
                        e.exports = o
                },
                {
                    './promise': 22
                }
            ],
            5: [
                function (t, e, n) {
                    'use strict';
                    var r = Object.create;
                    if (r) {
                        var i = r(null),
                            o = r(null);
                        i[' size'] = o[' size'] = 0
                    }
                    e.exports = function (e) {
                        function n(t, n) {
                            var r;
                            if (null != t && (r = t[n]), 'function' != typeof r) {
                                var i = 'Object ' + a.classString(t) + ' has no method \'' + a.toString(n) + '\'';
                                throw new e.TypeError(i)
                            }
                            return r
                        }
                        function r(t) {
                            var e = this.pop(),
                                r = n(t, e);
                            return r.apply(t, this)
                        }
                        function i(t) {
                            return t[this]
                        }
                        function o(t) {
                            var e = + this;
                            return 0 > e && (e = Math.max(0, e + t.length)),
                                t[e]
                        }
                        var s,
                            a = t('./util'),
                            c = a.canEvaluate;
                        a.isIdentifier;
                        e.prototype.call = function (t) {
                            var e = [
                            ].slice.call(arguments, 1);
                            return e.push(t),
                                this._then(r, void 0, void 0, e, void 0)
                        },
                            e.prototype.get = function (t) {
                                var e,
                                    n = 'number' == typeof t;
                                if (n) e = o;
                                else if (c) {
                                    var r = s(t);
                                    e = null !== r ? r : i
                                } else e = i;
                                return this._then(e, void 0, void 0, t, void 0)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            6: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i) {
                        var o = t('./util'),
                            s = o.tryCatch,
                            a = o.errorObj,
                            c = e._async;
                        e.prototype['break'] = e.prototype.cancel = function () {
                            if (!i.cancellation()) return this._warn('cancellation is disabled');
                            for (var t = this, e = t; t._isCancellable(); ) {
                                if (!t._cancelBy(e)) {
                                    e._isFollowing() ? e._followee().cancel()  : e._cancelBranched();
                                    break
                                }
                                var n = t._cancellationParent;
                                if (null == n || !n._isCancellable()) {
                                    t._isFollowing() ? t._followee().cancel()  : t._cancelBranched();
                                    break
                                }
                                t._isFollowing() && t._followee().cancel(),
                                    t._setWillBeCancelled(),
                                    e = t,
                                    t = n
                            }
                        },
                            e.prototype._branchHasCancelled = function () {
                                this._branchesRemainingToCancel--
                            },
                            e.prototype._enoughBranchesHaveCancelled = function () {
                                return void 0 === this._branchesRemainingToCancel || this._branchesRemainingToCancel <= 0
                            },
                            e.prototype._cancelBy = function (t) {
                                return t === this ? (this._branchesRemainingToCancel = 0, this._invokeOnCancel(), !0)  : (this._branchHasCancelled(), this._enoughBranchesHaveCancelled() ? (this._invokeOnCancel(), !0)  : !1)
                            },
                            e.prototype._cancelBranched = function () {
                                this._enoughBranchesHaveCancelled() && this._cancel()
                            },
                            e.prototype._cancel = function () {
                                this._isCancellable() && (this._setCancelled(), c.invoke(this._cancelPromises, this, void 0))
                            },
                            e.prototype._cancelPromises = function () {
                                this._length() > 0 && this._settlePromises()
                            },
                            e.prototype._unsetOnCancel = function () {
                                this._onCancelField = void 0
                            },
                            e.prototype._isCancellable = function () {
                                return this.isPending() && !this._isCancelled()
                            },
                            e.prototype.isCancellable = function () {
                                return this.isPending() && !this.isCancelled()
                            },
                            e.prototype._doInvokeOnCancel = function (t, e) {
                                if (o.isArray(t)) for (var n = 0; n < t.length; ++n) this._doInvokeOnCancel(t[n], e);
                                else if (void 0 !== t) if ('function' == typeof t) {
                                    if (!e) {
                                        var r = s(t).call(this._boundValue());
                                        r === a && (this._attachExtraTrace(r.e), c.throwLater(r.e))
                                    }
                                } else t._resultCancelled(this)
                            },
                            e.prototype._invokeOnCancel = function () {
                                var t = this._onCancel();
                                this._unsetOnCancel(),
                                    c.invoke(this._doInvokeOnCancel, this, t)
                            },
                            e.prototype._invokeInternalOnCancel = function () {
                                this._isCancellable() && (this._doInvokeOnCancel(this._onCancel(), !0), this._unsetOnCancel())
                            },
                            e.prototype._resultCancelled = function () {
                                this.cancel()
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            7: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e) {
                        function n(t, n, a) {
                            return function (c) {
                                var l = a._boundValue();
                                t: for (var u = 0; u < t.length; ++u) {
                                    var p = t[u];
                                    if (p === Error || null != p && p.prototype instanceof Error) {
                                        if (c instanceof p) return o(n).call(l, c)
                                    } else if ('function' == typeof p) {
                                        var h = o(p).call(l, c);
                                        if (h === s) return h;
                                        if (h) return o(n).call(l, c)
                                    } else if (r.isObject(c)) {
                                        for (var f = i(p), _ = 0; _ < f.length; ++_) {
                                            var d = f[_];
                                            if (p[d] != c[d]) continue t
                                        }
                                        return o(n).call(l, c)
                                    }
                                }
                                return e
                            }
                        }
                        var r = t('./util'),
                            i = t('./es5').keys,
                            o = r.tryCatch,
                            s = r.errorObj;
                        return n
                    }
                },
                {
                    './es5': 13,
                    './util': 36
                }
            ],
            8: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t) {
                        function e() {
                            this._trace = new e.CapturedTrace(r())
                        }
                        function n() {
                            return i ? new e : void 0
                        }
                        function r() {
                            var t = o.length - 1;
                            return t >= 0 ? o[t] : void 0
                        }
                        var i = !1,
                            o = [
                            ];
                        return t.prototype._promiseCreated = function () {
                        },
                            t.prototype._pushContext = function () {
                            },
                            t.prototype._popContext = function () {
                                return null
                            },
                            t._peekContext = t.prototype._peekContext = function () {
                            },
                            e.prototype._pushContext = function () {
                                void 0 !== this._trace && (this._trace._promiseCreated = null, o.push(this._trace))
                            },
                            e.prototype._popContext = function () {
                                if (void 0 !== this._trace) {
                                    var t = o.pop(),
                                        e = t._promiseCreated;
                                    return t._promiseCreated = null,
                                        e
                                }
                                return null
                            },
                            e.CapturedTrace = null,
                            e.create = n,
                            e.deactivateLongStackTraces = function () {
                            },
                            e.activateLongStackTraces = function () {
                                var n = t.prototype._pushContext,
                                    o = t.prototype._popContext,
                                    s = t._peekContext,
                                    a = t.prototype._peekContext,
                                    c = t.prototype._promiseCreated;
                                e.deactivateLongStackTraces = function () {
                                    t.prototype._pushContext = n,
                                        t.prototype._popContext = o,
                                        t._peekContext = s,
                                        t.prototype._peekContext = a,
                                        t.prototype._promiseCreated = c,
                                        i = !1
                                },
                                    i = !0,
                                    t.prototype._pushContext = e.prototype._pushContext,
                                    t.prototype._popContext = e.prototype._popContext,
                                    t._peekContext = t.prototype._peekContext = r,
                                    t.prototype._promiseCreated = function () {
                                        var t = this._peekContext();
                                        t && null == t._promiseCreated && (t._promiseCreated = this)
                                    }
                            },
                            e
                    }
                },
                {
                }
            ],
            9: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n) {
                        function r(t, e) {
                            return {
                                promise: e
                            }
                        }
                        function i() {
                            return !1
                        }
                        function o(t, e, n) {
                            var r = this;
                            try {
                                t(e, n, function (t) {
                                    if ('function' != typeof t) throw new TypeError('onCancel must be a function, got: ' + H.toString(t));
                                    r._attachCancellationCallback(t)
                                })
                            } catch (i) {
                                return i
                            }
                        }
                        function s(t) {
                            if (!this._isCancellable()) return this;
                            var e = this._onCancel();
                            void 0 !== e ? H.isArray(e) ? e.push(t)  : this._setOnCancel([e,
                                t])  : this._setOnCancel(t)
                        }
                        function a() {
                            return this._onCancelField
                        }
                        function c(t) {
                            this._onCancelField = t
                        }
                        function l() {
                            this._cancellationParent = void 0,
                                this._onCancelField = void 0
                        }
                        function u(t, e) {
                            if (0 !== (1 & e)) {
                                this._cancellationParent = t;
                                var n = t._branchesRemainingToCancel;
                                void 0 === n && (n = 0),
                                    t._branchesRemainingToCancel = n + 1
                            }
                            0 !== (2 & e) && t._isBound() && this._setBoundTo(t._boundTo)
                        }
                        function p(t, e) {
                            0 !== (2 & e) && t._isBound() && this._setBoundTo(t._boundTo)
                        }
                        function h() {
                            var t = this._boundTo;
                            return void 0 !== t && t instanceof e ? t.isFulfilled() ? t.value()  : void 0 : t
                        }
                        function f() {
                            this._trace = new O(this._peekContext())
                        }
                        function _(t, e) {
                            if (U(t)) {
                                var n = this._trace;
                                if (void 0 !== n && e && (n = n._parent), void 0 !== n) n.attachExtraTrace(t);
                                else if (!t.__stackCleaned__) {
                                    var r = E(t);
                                    H.notEnumerableProp(t, 'stack', r.message + '\n' + r.stack.join('\n')),
                                        H.notEnumerableProp(t, '__stackCleaned__', !0)
                                }
                            }
                        }
                        function d() {
                            this._trace = void 0
                        }
                        function v(t, e, n, r, i) {
                            if (void 0 === t && null !== e && J) {
                                if (void 0 !== i && i._returnedNonUndefined()) return;
                                if (0 === (65535 & r._bitField)) return;
                                n && (n += ' ');
                                var o = '',
                                    s = '';
                                if (e._trace) {
                                    for (var a = e._trace.stack.split('\n'), c = C(a), l = c.length - 1; l >= 0; --l) {
                                        var u = c[l];
                                        if (!q.test(u)) {
                                            var p = u.match($);
                                            p && (o = 'at ' + p[1] + ':' + p[2] + ':' + p[3] + ' ');
                                            break
                                        }
                                    }
                                    if (c.length > 0) for (var h = c[0], l = 0; l < a.length; ++l) if (a[l] === h) {
                                        l > 0 && (s = '\n' + a[l - 1]);
                                        break
                                    }
                                }
                                var f = 'a promise was created in a ' + n + 'handler ' + o + 'but was not returned from it, see http://goo.gl/rRqMUw' + s;
                                r._warn(f, !0, e)
                            }
                        }
                        function y(t, e) {
                            var n = t + ' is deprecated and will be removed in a future version.';
                            return e && (n += ' Use ' + e + ' instead.'),
                                m(n)
                        }
                        function m(t, n, r) {
                            if (at.warnings) {
                                var i,
                                    o = new N(t);
                                if (n) r._attachExtraTrace(o);
                                else if (at.longStackTraces && (i = e._peekContext())) i.attachExtraTrace(o);
                                else {
                                    var s = E(o);
                                    o.stack = s.message + '\n' + s.stack.join('\n')
                                }
                                nt('warning', o) || k(o, '', !0)
                            }
                        }
                        function g(t, e) {
                            for (var n = 0; n < e.length - 1; ++n) e[n].push('From previous event:'),
                                e[n] = e[n].join('\n');
                            return n < e.length && (e[n] = e[n].join('\n')),
                            t + '\n' + e.join('\n')
                        }
                        function b(t) {
                            for (var e = 0; e < t.length; ++e) (0 === t[e].length || e + 1 < t.length && t[e][0] === t[e + 1][0]) && (t.splice(e, 1), e--)
                        }
                        function w(t) {
                            for (var e = t[0], n = 1; n < t.length; ++n) {
                                for (var r = t[n], i = e.length - 1, o = e[i], s = - 1, a = r.length - 1; a >= 0; --a) if (r[a] === o) {
                                    s = a;
                                    break
                                }
                                for (var a = s; a >= 0; --a) {
                                    var c = r[a];
                                    if (e[i] !== c) break;
                                    e.pop(),
                                        i--
                                }
                                e = r
                            }
                        }
                        function C(t) {
                            for (var e = [
                            ], n = 0; n < t.length; ++n) {
                                var r = t[n],
                                    i = '    (No stack trace)' === r || Q.test(r),
                                    o = i && it(r);
                                i && !o && (z && ' ' !== r.charAt(0) && (r = '    ' + r), e.push(r))
                            }
                            return e
                        }
                        function j(t) {
                            for (var e = t.stack.replace(/\s+$/g, '').split('\n'), n = 0; n < e.length; ++n) {
                                var r = e[n];
                                if ('    (No stack trace)' === r || Q.test(r)) break
                            }
                            return n > 0 && 'SyntaxError' != t.name && (e = e.slice(n)),
                                e
                        }
                        function E(t) {
                            var e = t.stack,
                                n = t.toString();
                            return e = 'string' == typeof e && e.length > 0 ? j(t)  : [
                                '    (No stack trace)'
                            ],
                                {
                                    message: n,
                                    stack: 'SyntaxError' == t.name ? e : C(e)
                                }
                        }
                        function k(t, e, n) {
                            if ('undefined' != typeof console) {
                                var r;
                                if (H.isObject(t)) {
                                    var i = t.stack;
                                    r = e + G(i, t)
                                } else r = e + String(t);
                                'function' == typeof V ? V(r, n)  : ('function' == typeof console.log || 'object' == typeof console.log) && void 0
                            }
                        }
                        function F(t, e, n, r) {
                            var i = !1;
                            try {
                                'function' == typeof e && (i = !0, 'rejectionHandled' === t ? e(r)  : e(n, r))
                            } catch (o) {
                                L.throwLater(o)
                            }
                            'unhandledRejection' === t ? nt(t, n, r) || i || k(n, 'Unhandled rejection ')  : nt(t, r)
                        }
                        function T(t) {
                            var e;
                            if ('function' == typeof t) e = '[function ' + (t.name || 'anonymous') + ']';
                            else {
                                e = t && 'function' == typeof t.toString ? t.toString()  : H.toString(t);
                                var n = /\[object [a-zA-Z0-9$_]+\]/;
                                if (n.test(e)) try {
                                    var r = JSON.stringify(t);
                                    e = r
                                } catch (i) {
                                }
                                0 === e.length && (e = '(empty array)')
                            }
                            return '(<' + x(e) + '>, no stack trace)'
                        }
                        function x(t) {
                            var e = 41;
                            return t.length < e ? t : t.substr(0, e - 3) + '...'
                        }
                        function P() {
                            return 'function' == typeof st
                        }
                        function S(t) {
                            var e = t.match(ot);
                            return e ? {
                                    fileName: e[1],
                                    line: parseInt(e[2], 10)
                                }
                                : void 0
                        }
                        function R(t, e) {
                            if (P()) {
                                for (var n, r, i = (t.stack || '').split('\n'), o = (e.stack || '').split('\n'), s = - 1, a = - 1, c = 0; c < i.length; ++c) {
                                    var l = S(i[c]);
                                    if (l) {
                                        n = l.fileName,
                                            s = l.line;
                                        break
                                    }
                                }
                                for (var c = 0; c < o.length; ++c) {
                                    var l = S(o[c]);
                                    if (l) {
                                        r = l.fileName,
                                            a = l.line;
                                        break
                                    }
                                }
                                0 > s || 0 > a || !n || !r || n !== r || s >= a || (it = function (t) {
                                    if (M.test(t)) return !0;
                                    var e = S(t);
                                    return e && e.fileName === n && s <= e.line && e.line <= a ? !0 : !1
                                })
                            }
                        }
                        function O(t) {
                            this._parent = t,
                                this._promisesCreated = 0;
                            var e = this._length = 1 + (void 0 === t ? 0 : t._length);
                            st(this, O),
                            e > 32 && this.uncycle()
                        }
                        var A,
                            D,
                            V,
                            I = e._getDomain,
                            L = e._async,
                            N = t('./errors').Warning,
                            H = t('./util'),
                            B = t('./es5'),
                            U = H.canAttachTrace,
                            M = /[\\\/]bluebird[\\\/]js[\\\/](release|debug|instrumented)/,
                            q = /\((?:timers\.js):\d+:\d+\)/,
                            $ = /[\/<\(](.+?):(\d+):(\d+)\)?\s*$/,
                            Q = null,
                            G = null,
                            z = !1,
                            X = !(0 == H.env('BLUEBIRD_DEBUG') || !H.env('BLUEBIRD_DEBUG') && 'development' !== H.env('NODE_ENV')),
                            W = !(0 == H.env('BLUEBIRD_WARNINGS') || !X && !H.env('BLUEBIRD_WARNINGS')),
                            K = !(0 == H.env('BLUEBIRD_LONG_STACK_TRACES') || !X && !H.env('BLUEBIRD_LONG_STACK_TRACES')),
                            J = 0 != H.env('BLUEBIRD_W_FORGOTTEN_RETURN') && (W || !!H.env('BLUEBIRD_W_FORGOTTEN_RETURN'));
                        e.prototype.suppressUnhandledRejections = function () {
                            var t = this._target();
                            t._bitField = - 1048577 & t._bitField | 524288
                        },
                            e.prototype._ensurePossibleRejectionHandled = function () {
                                if (0 === (524288 & this._bitField)) {
                                    this._setRejectionIsUnhandled();
                                    var t = this;
                                    setTimeout(function () {
                                        t._notifyUnhandledRejection()
                                    }, 1)
                                }
                            },
                            e.prototype._notifyUnhandledRejectionIsHandled = function () {
                                F('rejectionHandled', A, void 0, this)
                            },
                            e.prototype._setReturnedNonUndefined = function () {
                                this._bitField = 268435456 | this._bitField
                            },
                            e.prototype._returnedNonUndefined = function () {
                                return 0 !== (268435456 & this._bitField)
                            },
                            e.prototype._notifyUnhandledRejection = function () {
                                if (this._isRejectionUnhandled()) {
                                    var t = this._settledValue();
                                    this._setUnhandledRejectionIsNotified(),
                                        F('unhandledRejection', D, t, this)
                                }
                            },
                            e.prototype._setUnhandledRejectionIsNotified = function () {
                                this._bitField = 262144 | this._bitField
                            },
                            e.prototype._unsetUnhandledRejectionIsNotified = function () {
                                this._bitField = - 262145 & this._bitField
                            },
                            e.prototype._isUnhandledRejectionNotified = function () {
                                return (262144 & this._bitField) > 0
                            },
                            e.prototype._setRejectionIsUnhandled = function () {
                                this._bitField = 1048576 | this._bitField
                            },
                            e.prototype._unsetRejectionIsUnhandled = function () {
                                this._bitField = - 1048577 & this._bitField,
                                this._isUnhandledRejectionNotified() && (this._unsetUnhandledRejectionIsNotified(), this._notifyUnhandledRejectionIsHandled())
                            },
                            e.prototype._isRejectionUnhandled = function () {
                                return (1048576 & this._bitField) > 0
                            },
                            e.prototype._warn = function (t, e, n) {
                                return m(t, e, n || this)
                            },
                            e.onPossiblyUnhandledRejection = function (t) {
                                var e = I();
                                D = 'function' == typeof t ? null === e ? t : H.domainBind(e, t)  : void 0
                            },
                            e.onUnhandledRejectionHandled = function (t) {
                                var e = I();
                                A = 'function' == typeof t ? null === e ? t : H.domainBind(e, t)  : void 0
                            };
                        var Y = function () {
                        };
                        e.longStackTraces = function () {
                            if (L.haveItemsQueued() && !at.longStackTraces) throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
                            if (!at.longStackTraces && P()) {
                                var t = e.prototype._captureStackTrace,
                                    r = e.prototype._attachExtraTrace,
                                    i = e.prototype._dereferenceTrace;
                                at.longStackTraces = !0,
                                    Y = function () {
                                        if (L.haveItemsQueued() && !at.longStackTraces) throw new Error('cannot enable long stack traces after promises have been created\n\n    See http://goo.gl/MqrFmX\n');
                                        e.prototype._captureStackTrace = t,
                                            e.prototype._attachExtraTrace = r,
                                            e.prototype._dereferenceTrace = i,
                                            n.deactivateLongStackTraces(),
                                            L.enableTrampoline(),
                                            at.longStackTraces = !1
                                    },
                                    e.prototype._captureStackTrace = f,
                                    e.prototype._attachExtraTrace = _,
                                    e.prototype._dereferenceTrace = d,
                                    n.activateLongStackTraces(),
                                    L.disableTrampolineIfNecessary()
                            }
                        },
                            e.hasLongStackTraces = function () {
                                return at.longStackTraces && P()
                            };
                        var Z = function () {
                                try {
                                    if ('function' == typeof CustomEvent) {
                                        var t = new CustomEvent('CustomEvent');
                                        return H.global.dispatchEvent(t),
                                            function (t, e) {
                                                var n = {
                                                    detail: e,
                                                    cancelable: !0
                                                };
                                                B.defineProperty(n, 'promise', {
                                                    value: e.promise
                                                }),
                                                    B.defineProperty(n, 'reason', {
                                                        value: e.reason
                                                    });
                                                var r = new CustomEvent(t.toLowerCase(), n);
                                                return !H.global.dispatchEvent(r)
                                            }
                                    }
                                    if ('function' == typeof Event) {
                                        var t = new Event('CustomEvent');
                                        return H.global.dispatchEvent(t),
                                            function (t, e) {
                                                var n = new Event(t.toLowerCase(), {
                                                    cancelable: !0
                                                });
                                                return n.detail = e,
                                                    B.defineProperty(n, 'promise', {
                                                        value: e.promise
                                                    }),
                                                    B.defineProperty(n, 'reason', {
                                                        value: e.reason
                                                    }),
                                                    !H.global.dispatchEvent(n)
                                            }
                                    }
                                    var t = document.createEvent('CustomEvent');
                                    return t.initCustomEvent('testingtheevent', !1, !0, {
                                    }),
                                        H.global.dispatchEvent(t),
                                        function (t, e) {
                                            var n = document.createEvent('CustomEvent');
                                            return n.initCustomEvent(t.toLowerCase(), !1, !0, e),
                                                !H.global.dispatchEvent(n)
                                        }
                                } catch (e) {
                                }
                                return function () {
                                    return !1
                                }
                            }(),
                            tt = function () {
                                return H.isNode ? function () {
                                        return process.emit.apply(process, arguments)
                                    }
                                    : H.global ? function (t) {
                                            var e = 'on' + t.toLowerCase(),
                                                n = H.global[e];
                                            return n ? (n.apply(H.global, [
                                            ].slice.call(arguments, 1)), !0)  : !1
                                        }
                                        : function () {
                                            return !1
                                        }
                            }(),
                            et = {
                                promiseCreated: r,
                                promiseFulfilled: r,
                                promiseRejected: r,
                                promiseResolved: r,
                                promiseCancelled: r,
                                promiseChained: function (t, e, n) {
                                    return {
                                        promise: e,
                                        child: n
                                    }
                                },
                                warning: function (t, e) {
                                    return {
                                        warning: e
                                    }
                                },
                                unhandledRejection: function (t, e, n) {
                                    return {
                                        reason: e,
                                        promise: n
                                    }
                                },
                                rejectionHandled: r
                            },
                            nt = function (t) {
                                var e = !1;
                                try {
                                    e = tt.apply(null, arguments)
                                } catch (n) {
                                    L.throwLater(n),
                                        e = !0
                                }
                                var r = !1;
                                try {
                                    r = Z(t, et[t].apply(null, arguments))
                                } catch (n) {
                                    L.throwLater(n),
                                        r = !0
                                }
                                return r || e
                            };
                        e.config = function (t) {
                            if (t = Object(t), 'longStackTraces' in t && (t.longStackTraces ? e.longStackTraces()  : !t.longStackTraces && e.hasLongStackTraces() && Y()), 'warnings' in t) {
                                var n = t.warnings;
                                at.warnings = !!n,
                                    J = at.warnings,
                                H.isObject(n) && 'wForgottenReturn' in n && (J = !!n.wForgottenReturn)
                            }
                            if ('cancellation' in t && t.cancellation && !at.cancellation) {
                                if (L.haveItemsQueued()) throw new Error('cannot enable cancellation after promises are in use');
                                e.prototype._clearCancellationData = l,
                                    e.prototype._propagateFrom = u,
                                    e.prototype._onCancel = a,
                                    e.prototype._setOnCancel = c,
                                    e.prototype._attachCancellationCallback = s,
                                    e.prototype._execute = o,
                                    rt = u,
                                    at.cancellation = !0
                            }
                            return 'monitoring' in t && (t.monitoring && !at.monitoring ? (at.monitoring = !0, e.prototype._fireEvent = nt)  : !t.monitoring && at.monitoring && (at.monitoring = !1, e.prototype._fireEvent = i)),
                                e
                        },
                            e.prototype._fireEvent = i,
                            e.prototype._execute = function (t, e, n) {
                                try {
                                    t(e, n)
                                } catch (r) {
                                    return r
                                }
                            },
                            e.prototype._onCancel = function () {
                            },
                            e.prototype._setOnCancel = function (t) {
                            },
                            e.prototype._attachCancellationCallback = function (t) {
                            },
                            e.prototype._captureStackTrace = function () {
                            },
                            e.prototype._attachExtraTrace = function () {
                            },
                            e.prototype._dereferenceTrace = function () {
                            },
                            e.prototype._clearCancellationData = function () {
                            },
                            e.prototype._propagateFrom = function (t, e) {
                            };
                        var rt = p,
                            it = function () {
                                return !1
                            },
                            ot = /[\/<\(]([^:\/]+):(\d+):(?:\d+)\)?\s*$/;
                        H.inherits(O, Error),
                            n.CapturedTrace = O,
                            O.prototype.uncycle = function () {
                                var t = this._length;
                                if (!(2 > t)) {
                                    for (var e = [
                                    ], n = {
                                    }, r = 0, i = this; void 0 !== i; ++r) e.push(i),
                                        i = i._parent;
                                    t = this._length = r;
                                    for (var r = t - 1; r >= 0; --r) {
                                        var o = e[r].stack;
                                        void 0 === n[o] && (n[o] = r)
                                    }
                                    for (var r = 0; t > r; ++r) {
                                        var s = e[r].stack,
                                            a = n[s];
                                        if (void 0 !== a && a !== r) {
                                            a > 0 && (e[a - 1]._parent = void 0, e[a - 1]._length = 1),
                                                e[r]._parent = void 0,
                                                e[r]._length = 1;
                                            var c = r > 0 ? e[r - 1] : this;
                                            t - 1 > a ? (c._parent = e[a + 1], c._parent.uncycle(), c._length = c._parent._length + 1)  : (c._parent = void 0, c._length = 1);
                                            for (var l = c._length + 1, u = r - 2; u >= 0; --u) e[u]._length = l,
                                                l++;
                                            return
                                        }
                                    }
                                }
                            },
                            O.prototype.attachExtraTrace = function (t) {
                                if (!t.__stackCleaned__) {
                                    this.uncycle();
                                    for (var e = E(t), n = e.message, r = [
                                        e.stack
                                    ], i = this; void 0 !== i; ) r.push(C(i.stack.split('\n'))),
                                        i = i._parent;
                                    w(r),
                                        b(r),
                                        H.notEnumerableProp(t, 'stack', g(n, r)),
                                        H.notEnumerableProp(t, '__stackCleaned__', !0)
                                }
                            };
                        var st = function () {
                            var t = /^\s*at\s*/,
                                e = function (t, e) {
                                    return 'string' == typeof t ? t : void 0 !== e.name && void 0 !== e.message ? e.toString()  : T(e)
                                };
                            if ('number' == typeof Error.stackTraceLimit && 'function' == typeof Error.captureStackTrace) {
                                Error.stackTraceLimit += 6,
                                    Q = t,
                                    G = e;
                                var n = Error.captureStackTrace;
                                return it = function (t) {
                                    return M.test(t)
                                },
                                    function (t, e) {
                                        Error.stackTraceLimit += 6,
                                            n(t, e),
                                            Error.stackTraceLimit -= 6
                                    }
                            }
                            var r = new Error;
                            if ('string' == typeof r.stack && r.stack.split('\n') [0].indexOf('stackDetection@') >= 0) return Q = /@/,
                                G = e,
                                z = !0,
                                function (t) {
                                    t.stack = (new Error).stack
                                };
                            var i;
                            try {
                                throw new Error
                            } catch (o) {
                                i = 'stack' in o
                            }
                            return 'stack' in r || !i || 'number' != typeof Error.stackTraceLimit ? (G = function (t, e) {
                                return 'string' == typeof t ? t : 'object' != typeof e && 'function' != typeof e || void 0 === e.name || void 0 === e.message ? T(e)  : e.toString()
                            }, null)  : (Q = t, G = e, function (t) {
                                Error.stackTraceLimit += 6;
                                try {
                                    throw new Error
                                } catch (e) {
                                    t.stack = e.stack
                                }
                                Error.stackTraceLimit -= 6
                            })
                        }([]);
                        'undefined' != typeof console && 'undefined' != typeof console.warn && (V = function (t) {
                        }, H.isNode && process.stderr.isTTY ? V = function (t, e) {
                                var n = e ? '[33m' : '[31m'
                            }
                            : H.isNode || 'string' != typeof (new Error).stack || (V = function (t, e) {
                        }));
                        var at = {
                            warnings: W,
                            longStackTraces: !1,
                            cancellation: !1,
                            monitoring: !1
                        };
                        return K && e.longStackTraces(),
                            {
                                longStackTraces: function () {
                                    return at.longStackTraces
                                },
                                warnings: function () {
                                    return at.warnings
                                },
                                cancellation: function () {
                                    return at.cancellation
                                },
                                monitoring: function () {
                                    return at.monitoring
                                },
                                propagateFromFunction: function () {
                                    return rt
                                },
                                boundValueFunction: function () {
                                    return h
                                },
                                checkForgottenReturns: v,
                                setBounds: R,
                                warn: m,
                                deprecated: y,
                                CapturedTrace: O,
                                fireDomEvent: Z,
                                fireGlobalEvent: tt
                            }
                    }
                },
                {
                    './errors': 12,
                    './es5': 13,
                    './util': 36
                }
            ],
            10: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t) {
                        function e() {
                            return this.value
                        }
                        function n() {
                            throw this.reason
                        }
                        t.prototype['return'] = t.prototype.thenReturn = function (n) {
                            return n instanceof t && n.suppressUnhandledRejections(),
                                this._then(e, void 0, void 0, {
                                    value: n
                                }, void 0)
                        },
                            t.prototype['throw'] = t.prototype.thenThrow = function (t) {
                                return this._then(n, void 0, void 0, {
                                    reason: t
                                }, void 0)
                            },
                            t.prototype.catchThrow = function (t) {
                                if (arguments.length <= 1) return this._then(void 0, n, void 0, {
                                    reason: t
                                }, void 0);
                                var e = arguments[1],
                                    r = function () {
                                        throw e
                                    };
                                return this.caught(t, r)
                            },
                            t.prototype.catchReturn = function (n) {
                                if (arguments.length <= 1) return n instanceof t && n.suppressUnhandledRejections(),
                                    this._then(void 0, e, void 0, {
                                        value: n
                                    }, void 0);
                                var r = arguments[1];
                                r instanceof t && r.suppressUnhandledRejections();
                                var i = function () {
                                    return r
                                };
                                return this.caught(n, i)
                            }
                    }
                },
                {
                }
            ],
            11: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t, e) {
                        function n() {
                            return o(this)
                        }
                        function r(t, n) {
                            return i(t, n, e, e)
                        }
                        var i = t.reduce,
                            o = t.all;
                        t.prototype.each = function (t) {
                            return i(this, t, e, 0)._then(n, void 0, void 0, this, void 0)
                        },
                            t.prototype.mapSeries = function (t) {
                                return i(this, t, e, e)
                            },
                            t.each = function (t, r) {
                                return i(t, r, e, 0)._then(n, void 0, void 0, t, void 0)
                            },
                            t.mapSeries = r
                    }
                },
                {
                }
            ],
            12: [
                function (t, e, n) {
                    'use strict';
                    function r(t, e) {
                        function n(r) {
                            return this instanceof n ? (p(this, 'message', 'string' == typeof r ? r : e), p(this, 'name', t), void (Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor)  : Error.call(this)))  : new n(r)
                        }
                        return u(n, Error),
                            n
                    }
                    function i(t) {
                        return this instanceof i ? (p(this, 'name', 'OperationalError'), p(this, 'message', t), this.cause = t, this.isOperational = !0, void (t instanceof Error ? (p(this, 'message', t.message), p(this, 'stack', t.stack))  : Error.captureStackTrace && Error.captureStackTrace(this, this.constructor)))  : new i(t)
                    }
                    var o,
                        s,
                        a = t('./es5'),
                        c = a.freeze,
                        l = t('./util'),
                        u = l.inherits,
                        p = l.notEnumerableProp,
                        h = r('Warning', 'warning'),
                        f = r('CancellationError', 'cancellation error'),
                        _ = r('TimeoutError', 'timeout error'),
                        d = r('AggregateError', 'aggregate error');
                    try {
                        o = TypeError,
                            s = RangeError
                    } catch (v) {
                        o = r('TypeError', 'type error'),
                            s = r('RangeError', 'range error')
                    }
                    for (var y = 'join pop push shift unshift slice filter forEach some every map indexOf lastIndexOf reduce reduceRight sort reverse'.split(' '), m = 0; m < y.length; ++m) 'function' == typeof Array.prototype[y[m]] && (d.prototype[y[m]] = Array.prototype[y[m]]);
                    a.defineProperty(d.prototype, 'length', {
                        value: 0,
                        configurable: !1,
                        writable: !0,
                        enumerable: !0
                    }),
                        d.prototype.isOperational = !0;
                    var g = 0;
                    d.prototype.toString = function () {
                        var t = Array(4 * g + 1).join(' '),
                            e = '\n' + t + 'AggregateError of:\n';
                        g++,
                            t = Array(4 * g + 1).join(' ');
                        for (var n = 0; n < this.length; ++n) {
                            for (var r = this[n] === this ? '[Circular AggregateError]' : this[n] + '', i = r.split('\n'), o = 0; o < i.length; ++o) i[o] = t + i[o];
                            r = i.join('\n'),
                                e += r + '\n'
                        }
                        return g--,
                            e
                    },
                        u(i, Error);
                    var b = Error.__BluebirdErrorTypes__;
                    b || (b = c({
                        CancellationError: f,
                        TimeoutError: _,
                        OperationalError: i,
                        RejectionError: i,
                        AggregateError: d
                    }), a.defineProperty(Error, '__BluebirdErrorTypes__', {
                        value: b,
                        writable: !1,
                        enumerable: !1,
                        configurable: !1
                    })),
                        e.exports = {
                            Error: Error,
                            TypeError: o,
                            RangeError: s,
                            CancellationError: b.CancellationError,
                            OperationalError: b.OperationalError,
                            TimeoutError: b.TimeoutError,
                            AggregateError: b.AggregateError,
                            Warning: h
                        }
                },
                {
                    './es5': 13,
                    './util': 36
                }
            ],
            13: [
                function (t, e, n) {
                    var r = function () {
                        'use strict';
                        return void 0 === this
                    }();
                    if (r) e.exports = {
                        freeze: Object.freeze,
                        defineProperty: Object.defineProperty,
                        getDescriptor: Object.getOwnPropertyDescriptor,
                        keys: Object.keys,
                        names: Object.getOwnPropertyNames,
                        getPrototypeOf: Object.getPrototypeOf,
                        isArray: Array.isArray,
                        isES5: r,
                        propertyIsWritable: function (t, e) {
                            var n = Object.getOwnPropertyDescriptor(t, e);
                            return !(n && !n.writable && !n.set)
                        }
                    };
                    else {
                        var i = {
                            }.hasOwnProperty,
                            o = {
                            }.toString,
                            s = {
                            }.constructor.prototype,
                            a = function (t) {
                                var e = [
                                ];
                                for (var n in t) i.call(t, n) && e.push(n);
                                return e
                            },
                            c = function (t, e) {
                                return {
                                    value: t[e]
                                }
                            },
                            l = function (t, e, n) {
                                return t[e] = n.value,
                                    t
                            },
                            u = function (t) {
                                return t
                            },
                            p = function (t) {
                                try {
                                    return Object(t).constructor.prototype
                                } catch (e) {
                                    return s
                                }
                            },
                            h = function (t) {
                                try {
                                    return '[object Array]' === o.call(t)
                                } catch (e) {
                                    return !1
                                }
                            };
                        e.exports = {
                            isArray: h,
                            keys: a,
                            names: a,
                            defineProperty: l,
                            getDescriptor: c,
                            freeze: u,
                            getPrototypeOf: p,
                            isES5: r,
                            propertyIsWritable: function () {
                                return !0
                            }
                        }
                    }
                },
                {
                }
            ],
            14: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t, e) {
                        var n = t.map;
                        t.prototype.filter = function (t, r) {
                            return n(this, t, r, e)
                        },
                            t.filter = function (t, r, i) {
                                return n(t, r, i, e)
                            }
                    }
                },
                {
                }
            ],
            15: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r) {
                        function i(t, e, n) {
                            this.promise = t,
                                this.type = e,
                                this.handler = n,
                                this.called = !1,
                                this.cancelPromise = null
                        }
                        function o(t) {
                            this.finallyHandler = t
                        }
                        function s(t, e) {
                            return null != t.cancelPromise ? (arguments.length > 1 ? t.cancelPromise._reject(e)  : t.cancelPromise._cancel(), t.cancelPromise = null, !0)  : !1
                        }
                        function a() {
                            return l.call(this, this.promise._target()._settledValue())
                        }
                        function c(t) {
                            return s(this, t) ? void 0 : (h.e = t, h)
                        }
                        function l(t) {
                            var i = this.promise,
                                l = this.handler;
                            if (!this.called) {
                                this.called = !0;
                                var u = this.isFinallyHandler() ? l.call(i._boundValue())  : l.call(i._boundValue(), t);
                                if (u === r) return u;
                                if (void 0 !== u) {
                                    i._setReturnedNonUndefined();
                                    var f = n(u, i);
                                    if (f instanceof e) {
                                        if (null != this.cancelPromise) {
                                            if (f._isCancelled()) {
                                                var _ = new p('late cancellation observer');
                                                return i._attachExtraTrace(_),
                                                    h.e = _,
                                                    h
                                            }
                                            f.isPending() && f._attachCancellationCallback(new o(this))
                                        }
                                        return f._then(a, c, void 0, this, void 0)
                                    }
                                }
                            }
                            return i.isRejected() ? (s(this), h.e = t, h)  : (s(this), t)
                        }
                        var u = t('./util'),
                            p = e.CancellationError,
                            h = u.errorObj,
                            f = t('./catch_filter') (r);
                        return i.prototype.isFinallyHandler = function () {
                            return 0 === this.type
                        },
                            o.prototype._resultCancelled = function () {
                                s(this.finallyHandler)
                            },
                            e.prototype._passThrough = function (t, e, n, r) {
                                return 'function' != typeof t ? this.then()  : this._then(n, r, void 0, new i(this, e, t), void 0)
                            },
                            e.prototype.lastly = e.prototype['finally'] = function (t) {
                                return this._passThrough(t, 0, l, l)
                            },
                            e.prototype.tap = function (t) {
                                return this._passThrough(t, 1, l)
                            },
                            e.prototype.tapCatch = function (t) {
                                var n = arguments.length;
                                if (1 === n) return this._passThrough(t, 1, void 0, l);
                                var r,
                                    i = new Array(n - 1),
                                    o = 0;
                                for (r = 0; n - 1 > r; ++r) {
                                    var s = arguments[r];
                                    if (!u.isObject(s)) return e.reject(new TypeError('tapCatch statement predicate: expecting an object but got ' + u.classString(s)));
                                    i[o++] = s
                                }
                                i.length = o;
                                var a = arguments[r];
                                return this._passThrough(f(i, a, this), 1, void 0, l)
                            },
                            i
                    }
                },
                {
                    './catch_filter': 7,
                    './util': 36
                }
            ],
            16: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o, s) {
                        function a(t, n, r) {
                            for (var o = 0; o < n.length; ++o) {
                                r._pushContext();
                                var s = f(n[o]) (t);
                                if (r._popContext(), s === h) {
                                    r._pushContext();
                                    var a = e.reject(h.e);
                                    return r._popContext(),
                                        a
                                }
                                var c = i(s, r);
                                if (c instanceof e) return c
                            }
                            return null
                        }
                        function c(t, n, i, o) {
                            if (s.cancellation()) {
                                var a = new e(r),
                                    c = this._finallyPromise = new e(r);
                                this._promise = a.lastly(function () {
                                    return c
                                }),
                                    a._captureStackTrace(),
                                    a._setOnCancel(this)
                            } else {
                                var l = this._promise = new e(r);
                                l._captureStackTrace()
                            }
                            this._stack = o,
                                this._generatorFunction = t,
                                this._receiver = n,
                                this._generator = void 0,
                                this._yieldHandlers = 'function' == typeof i ? [
                                    i
                                ].concat(_)  : _,
                                this._yieldedPromise = null,
                                this._cancellationPhase = !1
                        }
                        var l = t('./errors'),
                            u = l.TypeError,
                            p = t('./util'),
                            h = p.errorObj,
                            f = p.tryCatch,
                            _ = [
                            ];
                        p.inherits(c, o),
                            c.prototype._isResolved = function () {
                                return null === this._promise
                            },
                            c.prototype._cleanup = function () {
                                this._promise = this._generator = null,
                                s.cancellation() && null !== this._finallyPromise && (this._finallyPromise._fulfill(), this._finallyPromise = null)
                            },
                            c.prototype._promiseCancelled = function () {
                                if (!this._isResolved()) {
                                    var t,
                                        n = 'undefined' != typeof this._generator['return'];
                                    if (n) this._promise._pushContext(),
                                        t = f(this._generator['return']).call(this._generator, void 0),
                                        this._promise._popContext();
                                    else {
                                        var r = new e.CancellationError('generator .return() sentinel');
                                        e.coroutine.returnSentinel = r,
                                            this._promise._attachExtraTrace(r),
                                            this._promise._pushContext(),
                                            t = f(this._generator['throw']).call(this._generator, r),
                                            this._promise._popContext()
                                    }
                                    this._cancellationPhase = !0,
                                        this._yieldedPromise = null,
                                        this._continue(t)
                                }
                            },
                            c.prototype._promiseFulfilled = function (t) {
                                this._yieldedPromise = null,
                                    this._promise._pushContext();
                                var e = f(this._generator.next).call(this._generator, t);
                                this._promise._popContext(),
                                    this._continue(e)
                            },
                            c.prototype._promiseRejected = function (t) {
                                this._yieldedPromise = null,
                                    this._promise._attachExtraTrace(t),
                                    this._promise._pushContext();
                                var e = f(this._generator['throw']).call(this._generator, t);
                                this._promise._popContext(),
                                    this._continue(e)
                            },
                            c.prototype._resultCancelled = function () {
                                if (this._yieldedPromise instanceof e) {
                                    var t = this._yieldedPromise;
                                    this._yieldedPromise = null,
                                        t.cancel()
                                }
                            },
                            c.prototype.promise = function () {
                                return this._promise
                            },
                            c.prototype._run = function () {
                                this._generator = this._generatorFunction.call(this._receiver),
                                    this._receiver = this._generatorFunction = void 0,
                                    this._promiseFulfilled(void 0)
                            },
                            c.prototype._continue = function (t) {
                                var n = this._promise;
                                if (t === h) return this._cleanup(),
                                    this._cancellationPhase ? n.cancel()  : n._rejectCallback(t.e, !1);
                                var r = t.value;
                                if (t.done === !0) return this._cleanup(),
                                    this._cancellationPhase ? n.cancel()  : n._resolveCallback(r);
                                var o = i(r, this._promise);
                                if (!(o instanceof e) && (o = a(o, this._yieldHandlers, this._promise), null === o)) return void this._promiseRejected(new u('A value %s was yielded that could not be treated as a promise\n\n    See http://goo.gl/MqrFmX\n\n'.replace('%s', String(r)) + 'From coroutine:\n' + this._stack.split('\n').slice(1, - 7).join('\n')));
                                o = o._target();
                                var s = o._bitField;
                                0 === (50397184 & s) ? (this._yieldedPromise = o, o._proxy(this, null))  : 0 !== (33554432 & s) ? e._async.invoke(this._promiseFulfilled, this, o._value())  : 0 !== (16777216 & s) ? e._async.invoke(this._promiseRejected, this, o._reason())  : this._promiseCancelled()
                            },
                            e.coroutine = function (t, e) {
                                if ('function' != typeof t) throw new u('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
                                var n = Object(e).yieldHandler,
                                    r = c,
                                    i = (new Error).stack;
                                return function () {
                                    var e = t.apply(this, arguments),
                                        o = new r(void 0, void 0, n, i),
                                        s = o.promise();
                                    return o._generator = e,
                                        o._promiseFulfilled(void 0),
                                        s
                                }
                            },
                            e.coroutine.addYieldHandler = function (t) {
                                if ('function' != typeof t) throw new u('expecting a function but got ' + p.classString(t));
                                _.push(t)
                            },
                            e.spawn = function (t) {
                                if (s.deprecated('Promise.spawn()', 'Promise.coroutine()'), 'function' != typeof t) return n('generatorFunction must be a function\n\n    See http://goo.gl/MqrFmX\n');
                                var r = new c(t, this),
                                    i = r.promise();
                                return r._run(e.spawn),
                                    i
                            }
                    }
                },
                {
                    './errors': 12,
                    './util': 36
                }
            ],
            17: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o, s) {
                        var a = t('./util');
                        a.canEvaluate,
                            a.tryCatch,
                            a.errorObj;
                        e.join = function () {
                            var t,
                                e = arguments.length - 1;
                            if (e > 0 && 'function' == typeof arguments[e]) {
                                t = arguments[e];
                                var r
                            }
                            var i = [
                            ].slice.call(arguments);
                            t && i.pop();
                            var r = new n(i).promise();
                            return void 0 !== t ? r.spread(t)  : r
                        }
                    }
                },
                {
                    './util': 36
                }
            ],
            18: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o, s) {
                        function a(t, e, n, r) {
                            this.constructor$(t),
                                this._promise._captureStackTrace();
                            var i = l();
                            this._callback = null === i ? e : u.domainBind(i, e),
                                this._preservedValues = r === o ? new Array(this.length())  : null,
                                this._limit = n,
                                this._inFlight = 0,
                                this._queue = [
                                ],
                                f.invoke(this._asyncInit, this, void 0)
                        }
                        function c(t, n, i, o) {
                            if ('function' != typeof n) return r('expecting a function but got ' + u.classString(n));
                            var s = 0;
                            if (void 0 !== i) {
                                if ('object' != typeof i || null === i) return e.reject(new TypeError('options argument must be an object but it is ' + u.classString(i)));
                                if ('number' != typeof i.concurrency) return e.reject(new TypeError('\'concurrency\' must be a number but it is ' + u.classString(i.concurrency)));
                                s = i.concurrency
                            }
                            return s = 'number' == typeof s && isFinite(s) && s >= 1 ? s : 0,
                                new a(t, n, s, o).promise()
                        }
                        var l = e._getDomain,
                            u = t('./util'),
                            p = u.tryCatch,
                            h = u.errorObj,
                            f = e._async;
                        u.inherits(a, n),
                            a.prototype._asyncInit = function () {
                                this._init$(void 0, - 2)
                            },
                            a.prototype._init = function () {
                            },
                            a.prototype._promiseFulfilled = function (t, n) {
                                var r = this._values,
                                    o = this.length(),
                                    a = this._preservedValues,
                                    c = this._limit;
                                if (0 > n) {
                                    if (n = - 1 * n - 1, r[n] = t, c >= 1 && (this._inFlight--, this._drainQueue(), this._isResolved())) return !0
                                } else {
                                    if (c >= 1 && this._inFlight >= c) return r[n] = t,
                                        this._queue.push(n),
                                        !1;
                                    null !== a && (a[n] = t);
                                    var l = this._promise,
                                        u = this._callback,
                                        f = l._boundValue();
                                    l._pushContext();
                                    var _ = p(u).call(f, t, n, o),
                                        d = l._popContext();
                                    if (s.checkForgottenReturns(_, d, null !== a ? 'Promise.filter' : 'Promise.map', l), _ === h) return this._reject(_.e),
                                        !0;
                                    var v = i(_, this._promise);
                                    if (v instanceof e) {
                                        v = v._target();
                                        var y = v._bitField;
                                        if (0 === (50397184 & y)) return c >= 1 && this._inFlight++,
                                            r[n] = v,
                                            v._proxy(this, - 1 * (n + 1)),
                                            !1;
                                        if (0 === (33554432 & y)) return 0 !== (16777216 & y) ? (this._reject(v._reason()), !0)  : (this._cancel(), !0);
                                        _ = v._value()
                                    }
                                    r[n] = _
                                }
                                var m = ++this._totalResolved;
                                return m >= o ? (null !== a ? this._filter(r, a)  : this._resolve(r), !0)  : !1
                            },
                            a.prototype._drainQueue = function () {
                                for (var t = this._queue, e = this._limit, n = this._values; t.length > 0 && this._inFlight < e; ) {
                                    if (this._isResolved()) return;
                                    var r = t.pop();
                                    this._promiseFulfilled(n[r], r)
                                }
                            },
                            a.prototype._filter = function (t, e) {
                                for (var n = e.length, r = new Array(n), i = 0, o = 0; n > o; ++o) t[o] && (r[i++] = e[o]);
                                r.length = i,
                                    this._resolve(r)
                            },
                            a.prototype.preservedValues = function () {
                                return this._preservedValues
                            },
                            e.prototype.map = function (t, e) {
                                return c(this, t, e, null)
                            },
                            e.map = function (t, e, n, r) {
                                return c(t, e, n, r)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            19: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o) {
                        var s = t('./util'),
                            a = s.tryCatch;
                        e.method = function (t) {
                            if ('function' != typeof t) throw new e.TypeError('expecting a function but got ' + s.classString(t));
                            return function () {
                                var r = new e(n);
                                r._captureStackTrace(),
                                    r._pushContext();
                                var i = a(t).apply(this, arguments),
                                    s = r._popContext();
                                return o.checkForgottenReturns(i, s, 'Promise.method', r),
                                    r._resolveFromSyncValue(i),
                                    r
                            }
                        },
                            e.attempt = e['try'] = function (t) {
                                if ('function' != typeof t) return i('expecting a function but got ' + s.classString(t));
                                var r = new e(n);
                                r._captureStackTrace(),
                                    r._pushContext();
                                var c;
                                if (arguments.length > 1) {
                                    o.deprecated('calling Promise.try with more than 1 argument');
                                    var l = arguments[1],
                                        u = arguments[2];
                                    c = s.isArray(l) ? a(t).apply(u, l)  : a(t).call(u, l)
                                } else c = a(t) ();
                                var p = r._popContext();
                                return o.checkForgottenReturns(c, p, 'Promise.try', r),
                                    r._resolveFromSyncValue(c),
                                    r
                            },
                            e.prototype._resolveFromSyncValue = function (t) {
                                t === s.errorObj ? this._rejectCallback(t.e, !1)  : this._resolveCallback(t, !0)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            20: [
                function (t, e, n) {
                    'use strict';
                    function r(t) {
                        return t instanceof Error && u.getPrototypeOf(t) === Error.prototype
                    }
                    function i(t) {
                        var e;
                        if (r(t)) {
                            e = new l(t),
                                e.name = t.name,
                                e.message = t.message,
                                e.stack = t.stack;
                            for (var n = u.keys(t), i = 0; i < n.length; ++i) {
                                var o = n[i];
                                p.test(o) || (e[o] = t[o])
                            }
                            return e
                        }
                        return s.markAsOriginatingFromRejection(t),
                            t
                    }
                    function o(t, e) {
                        return function (n, r) {
                            if (null !== t) {
                                if (n) {
                                    var o = i(a(n));
                                    t._attachExtraTrace(o),
                                        t._reject(o)
                                } else if (e) {
                                    var s = [
                                    ].slice.call(arguments, 1);
                                    t._fulfill(s)
                                } else t._fulfill(r);
                                t = null
                            }
                        }
                    }
                    var s = t('./util'),
                        a = s.maybeWrapAsError,
                        c = t('./errors'),
                        l = c.OperationalError,
                        u = t('./es5'),
                        p = /^(?:name|message|stack|cause)$/;
                    e.exports = o
                },
                {
                    './errors': 12,
                    './es5': 13,
                    './util': 36
                }
            ],
            21: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e) {
                        function n(t, e) {
                            var n = this;
                            if (!o.isArray(t)) return r.call(n, t, e);
                            var i = a(e).apply(n._boundValue(), [
                                null
                            ].concat(t));
                            i === c && s.throwLater(i.e)
                        }
                        function r(t, e) {
                            var n = this,
                                r = n._boundValue(),
                                i = void 0 === t ? a(e).call(r, null)  : a(e).call(r, null, t);
                            i === c && s.throwLater(i.e)
                        }
                        function i(t, e) {
                            var n = this;
                            if (!t) {
                                var r = new Error(t + '');
                                r.cause = t,
                                    t = r
                            }
                            var i = a(e).call(n._boundValue(), t);
                            i === c && s.throwLater(i.e)
                        }
                        var o = t('./util'),
                            s = e._async,
                            a = o.tryCatch,
                            c = o.errorObj;
                        e.prototype.asCallback = e.prototype.nodeify = function (t, e) {
                            if ('function' == typeof t) {
                                var o = r;
                                void 0 !== e && Object(e).spread && (o = n),
                                    this._then(o, i, void 0, this, t)
                            }
                            return this
                        }
                    }
                },
                {
                    './util': 36
                }
            ],
            22: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function () {
                        function n() {
                        }
                        function r(t, e) {
                            if (null == t || t.constructor !== i) throw new m('the promise constructor cannot be invoked directly\n\n    See http://goo.gl/MqrFmX\n');
                            if ('function' != typeof e) throw new m('expecting a function but got ' + f.classString(e))
                        }
                        function i(t) {
                            t !== b && r(this, t),
                                this._bitField = 0,
                                this._fulfillmentHandler0 = void 0,
                                this._rejectionHandler0 = void 0,
                                this._promise0 = void 0,
                                this._receiver0 = void 0,
                                this._resolveFromExecutor(t),
                                this._promiseCreated(),
                                this._fireEvent('promiseCreated', this)
                        }
                        function o(t) {
                            this.promise._resolveCallback(t)
                        }
                        function s(t) {
                            this.promise._rejectCallback(t, !1)
                        }
                        function a(t) {
                            var e = new i(b);
                            e._fulfillmentHandler0 = t,
                                e._rejectionHandler0 = t,
                                e._promise0 = t,
                                e._receiver0 = t
                        }
                        var c,
                            l = function () {
                                return new m('circular promise resolution chain\n\n    See http://goo.gl/MqrFmX\n')
                            },
                            u = function () {
                                return new i.PromiseInspection(this._target())
                            },
                            p = function (t) {
                                return i.reject(new m(t))
                            },
                            h = {
                            },
                            f = t('./util');
                        c = f.isNode ? function () {
                                var t = process.domain;
                                return void 0 === t && (t = null),
                                    t
                            }
                            : function () {
                                return null
                            },
                            f.notEnumerableProp(i, '_getDomain', c);
                        var _ = t('./es5'),
                            d = t('./async'),
                            v = new d;
                        _.defineProperty(i, '_async', {
                            value: v
                        });
                        var y = t('./errors'),
                            m = i.TypeError = y.TypeError;
                        i.RangeError = y.RangeError;
                        var g = i.CancellationError = y.CancellationError;
                        i.TimeoutError = y.TimeoutError,
                            i.OperationalError = y.OperationalError,
                            i.RejectionError = y.OperationalError,
                            i.AggregateError = y.AggregateError;
                        var b = function () {
                            },
                            w = {
                            },
                            C = {
                            },
                            j = t('./thenables') (i, b),
                            E = t('./promise_array') (i, b, j, p, n),
                            k = t('./context') (i),
                            F = k.create,
                            T = t('./debuggability') (i, k),
                            x = (T.CapturedTrace, t('./finally') (i, j, C)),
                            P = t('./catch_filter') (C),
                            S = t('./nodeback'),
                            R = f.errorObj,
                            O = f.tryCatch;
                        return i.prototype.toString = function () {
                            return '[object Promise]'
                        },
                            i.prototype.caught = i.prototype['catch'] = function (t) {
                                var e = arguments.length;
                                if (e > 1) {
                                    var n,
                                        r = new Array(e - 1),
                                        i = 0;
                                    for (n = 0; e - 1 > n; ++n) {
                                        var o = arguments[n];
                                        if (!f.isObject(o)) return p('Catch statement predicate: expecting an object but got ' + f.classString(o));
                                        r[i++] = o
                                    }
                                    if (r.length = i, t = arguments[n], 'function' != typeof t) throw new m('The last argument to .catch() must be a function, got ' + f.toString(t));
                                    return this.then(void 0, P(r, t, this))
                                }
                                return this.then(void 0, t)
                            },
                            i.prototype.reflect = function () {
                                return this._then(u, u, void 0, this, void 0)
                            },
                            i.prototype.then = function (t, e) {
                                if (T.warnings() && arguments.length > 0 && 'function' != typeof t && 'function' != typeof e) {
                                    var n = '.then() only accepts functions but was passed: ' + f.classString(t);
                                    arguments.length > 1 && (n += ', ' + f.classString(e)),
                                        this._warn(n)
                                }
                                return this._then(t, e, void 0, void 0, void 0)
                            },
                            i.prototype.done = function (t, e) {
                                var n = this._then(t, e, void 0, void 0, void 0);
                                n._setIsFinal()
                            },
                            i.prototype.spread = function (t) {
                                return 'function' != typeof t ? p('expecting a function but got ' + f.classString(t))  : this.all()._then(t, void 0, void 0, w, void 0)
                            },
                            i.prototype.toJSON = function () {
                                var t = {
                                    isFulfilled: !1,
                                    isRejected: !1,
                                    fulfillmentValue: void 0,
                                    rejectionReason: void 0
                                };
                                return this.isFulfilled() ? (t.fulfillmentValue = this.value(), t.isFulfilled = !0)  : this.isRejected() && (t.rejectionReason = this.reason(), t.isRejected = !0),
                                    t
                            },
                            i.prototype.all = function () {
                                return arguments.length > 0 && this._warn('.all() was passed arguments but it does not take any'),
                                    new E(this).promise()
                            },
                            i.prototype.error = function (t) {
                                return this.caught(f.originatesFromRejection, t)
                            },
                            i.getNewLibraryCopy = e.exports,
                            i.is = function (t) {
                                return t instanceof i
                            },
                            i.fromNode = i.fromCallback = function (t) {
                                var e = new i(b);
                                e._captureStackTrace();
                                var n = arguments.length > 1 ? !!Object(arguments[1]).multiArgs : !1,
                                    r = O(t) (S(e, n));
                                return r === R && e._rejectCallback(r.e, !0),
                                e._isFateSealed() || e._setAsyncGuaranteed(),
                                    e
                            },
                            i.all = function (t) {
                                return new E(t).promise()
                            },
                            i.cast = function (t) {
                                var e = j(t);
                                return e instanceof i || (e = new i(b), e._captureStackTrace(), e._setFulfilled(), e._rejectionHandler0 = t),
                                    e
                            },
                            i.resolve = i.fulfilled = i.cast,
                            i.reject = i.rejected = function (t) {
                                var e = new i(b);
                                return e._captureStackTrace(),
                                    e._rejectCallback(t, !0),
                                    e
                            },
                            i.setScheduler = function (t) {
                                if ('function' != typeof t) throw new m('expecting a function but got ' + f.classString(t));
                                return v.setScheduler(t)
                            },
                            i.prototype._then = function (t, e, n, r, o) {
                                var s = void 0 !== o,
                                    a = s ? o : new i(b),
                                    l = this._target(),
                                    u = l._bitField;
                                s || (a._propagateFrom(this, 3), a._captureStackTrace(), void 0 === r && 0 !== (2097152 & this._bitField) && (r = 0 !== (50397184 & u) ? this._boundValue()  : l === this ? void 0 : this._boundTo), this._fireEvent('promiseChained', this, a));
                                var p = c();
                                if (0 !== (50397184 & u)) {
                                    var h,
                                        _,
                                        d = l._settlePromiseCtx;
                                    0 !== (33554432 & u) ? (_ = l._rejectionHandler0, h = t)  : 0 !== (16777216 & u) ? (_ = l._fulfillmentHandler0, h = e, l._unsetRejectionIsUnhandled())  : (d = l._settlePromiseLateCancellationObserver, _ = new g('late cancellation observer'), l._attachExtraTrace(_), h = e),
                                        v.invoke(d, l, {
                                            handler: null === p ? h : 'function' == typeof h && f.domainBind(p, h),
                                            promise: a,
                                            receiver: r,
                                            value: _
                                        })
                                } else l._addCallbacks(t, e, a, r, p);
                                return a
                            },
                            i.prototype._length = function () {
                                return 65535 & this._bitField
                            },
                            i.prototype._isFateSealed = function () {
                                return 0 !== (117506048 & this._bitField)
                            },
                            i.prototype._isFollowing = function () {
                                return 67108864 === (67108864 & this._bitField)
                            },
                            i.prototype._setLength = function (t) {
                                this._bitField = - 65536 & this._bitField | 65535 & t
                            },
                            i.prototype._setFulfilled = function () {
                                this._bitField = 33554432 | this._bitField,
                                    this._fireEvent('promiseFulfilled', this)
                            },
                            i.prototype._setRejected = function () {
                                this._bitField = 16777216 | this._bitField,
                                    this._fireEvent('promiseRejected', this)
                            },
                            i.prototype._setFollowing = function () {
                                this._bitField = 67108864 | this._bitField,
                                    this._fireEvent('promiseResolved', this)
                            },
                            i.prototype._setIsFinal = function () {
                                this._bitField = 4194304 | this._bitField
                            },
                            i.prototype._isFinal = function () {
                                return (4194304 & this._bitField) > 0
                            },
                            i.prototype._unsetCancelled = function () {
                                this._bitField = - 65537 & this._bitField
                            },
                            i.prototype._setCancelled = function () {
                                this._bitField = 65536 | this._bitField,
                                    this._fireEvent('promiseCancelled', this)
                            },
                            i.prototype._setWillBeCancelled = function () {
                                this._bitField = 8388608 | this._bitField
                            },
                            i.prototype._setAsyncGuaranteed = function () {
                                v.hasCustomScheduler() || (this._bitField = 134217728 | this._bitField)
                            },
                            i.prototype._receiverAt = function (t) {
                                var e = 0 === t ? this._receiver0 : this[4 * t - 4 + 3];
                                return e === h ? void 0 : void 0 === e && this._isBound() ? this._boundValue()  : e
                            },
                            i.prototype._promiseAt = function (t) {
                                return this[4 * t - 4 + 2]
                            },
                            i.prototype._fulfillmentHandlerAt = function (t) {
                                return this[4 * t - 4 + 0]
                            },
                            i.prototype._rejectionHandlerAt = function (t) {
                                return this[4 * t - 4 + 1]
                            },
                            i.prototype._boundValue = function () {
                            },
                            i.prototype._migrateCallback0 = function (t) {
                                var e = (t._bitField, t._fulfillmentHandler0),
                                    n = t._rejectionHandler0,
                                    r = t._promise0,
                                    i = t._receiverAt(0);
                                void 0 === i && (i = h),
                                    this._addCallbacks(e, n, r, i, null)
                            },
                            i.prototype._migrateCallbackAt = function (t, e) {
                                var n = t._fulfillmentHandlerAt(e),
                                    r = t._rejectionHandlerAt(e),
                                    i = t._promiseAt(e),
                                    o = t._receiverAt(e);
                                void 0 === o && (o = h),
                                    this._addCallbacks(n, r, i, o, null)
                            },
                            i.prototype._addCallbacks = function (t, e, n, r, i) {
                                var o = this._length();
                                if (o >= 65531 && (o = 0, this._setLength(0)), 0 === o) this._promise0 = n,
                                    this._receiver0 = r,
                                'function' == typeof t && (this._fulfillmentHandler0 = null === i ? t : f.domainBind(i, t)),
                                'function' == typeof e && (this._rejectionHandler0 = null === i ? e : f.domainBind(i, e));
                                else {
                                    var s = 4 * o - 4;
                                    this[s + 2] = n,
                                        this[s + 3] = r,
                                    'function' == typeof t && (this[s + 0] = null === i ? t : f.domainBind(i, t)),
                                    'function' == typeof e && (this[s + 1] = null === i ? e : f.domainBind(i, e))
                                }
                                return this._setLength(o + 1),
                                    o
                            },
                            i.prototype._proxy = function (t, e) {
                                this._addCallbacks(void 0, void 0, e, t, null)
                            },
                            i.prototype._resolveCallback = function (t, e) {
                                if (0 === (117506048 & this._bitField)) {
                                    if (t === this) return this._rejectCallback(l(), !1);
                                    var n = j(t, this);
                                    if (!(n instanceof i)) return this._fulfill(t);
                                    e && this._propagateFrom(n, 2);
                                    var r = n._target();
                                    if (r === this) return void this._reject(l());
                                    var o = r._bitField;
                                    if (0 === (50397184 & o)) {
                                        var s = this._length();
                                        s > 0 && r._migrateCallback0(this);
                                        for (var a = 1; s > a; ++a) r._migrateCallbackAt(this, a);
                                        this._setFollowing(),
                                            this._setLength(0),
                                            this._setFollowee(r)
                                    } else if (0 !== (33554432 & o)) this._fulfill(r._value());
                                    else if (0 !== (16777216 & o)) this._reject(r._reason());
                                    else {
                                        var c = new g('late cancellation observer');
                                        r._attachExtraTrace(c),
                                            this._reject(c)
                                    }
                                }
                            },
                            i.prototype._rejectCallback = function (t, e, n) {
                                var r = f.ensureErrorObject(t),
                                    i = r === t;
                                if (!i && !n && T.warnings()) {
                                    var o = 'a promise was rejected with a non-error: ' + f.classString(t);
                                    this._warn(o, !0)
                                }
                                this._attachExtraTrace(r, e ? i : !1),
                                    this._reject(t)
                            },
                            i.prototype._resolveFromExecutor = function (t) {
                                if (t !== b) {
                                    var e = this;
                                    this._captureStackTrace(),
                                        this._pushContext();
                                    var n = !0,
                                        r = this._execute(t, function (t) {
                                            e._resolveCallback(t)
                                        }, function (t) {
                                            e._rejectCallback(t, n)
                                        });
                                    n = !1,
                                        this._popContext(),
                                    void 0 !== r && e._rejectCallback(r, !0)
                                }
                            },
                            i.prototype._settlePromiseFromHandler = function (t, e, n, r) {
                                var i = r._bitField;
                                if (0 === (65536 & i)) {
                                    r._pushContext();
                                    var o;
                                    e === w ? n && 'number' == typeof n.length ? o = O(t).apply(this._boundValue(), n)  : (o = R, o.e = new m('cannot .spread() a non-array: ' + f.classString(n)))  : o = O(t).call(e, n);
                                    var s = r._popContext();
                                    i = r._bitField,
                                    0 === (65536 & i) && (o === C ? r._reject(n)  : o === R ? r._rejectCallback(o.e, !1)  : (T.checkForgottenReturns(o, s, '', r, this), r._resolveCallback(o)))
                                }
                            },
                            i.prototype._target = function () {
                                for (var t = this; t._isFollowing(); ) t = t._followee();
                                return t
                            },
                            i.prototype._followee = function () {
                                return this._rejectionHandler0
                            },
                            i.prototype._setFollowee = function (t) {
                                this._rejectionHandler0 = t
                            },
                            i.prototype._settlePromise = function (t, e, r, o) {
                                var s = t instanceof i,
                                    a = this._bitField,
                                    c = 0 !== (134217728 & a);
                                0 !== (65536 & a) ? (s && t._invokeInternalOnCancel(), r instanceof x && r.isFinallyHandler() ? (r.cancelPromise = t, O(e).call(r, o) === R && t._reject(R.e))  : e === u ? t._fulfill(u.call(r))  : r instanceof n ? r._promiseCancelled(t)  : s || t instanceof E ? t._cancel()  : r.cancel())  : 'function' == typeof e ? s ? (c && t._setAsyncGuaranteed(), this._settlePromiseFromHandler(e, r, o, t))  : e.call(r, o, t)  : r instanceof n ? r._isResolved() || (0 !== (33554432 & a) ? r._promiseFulfilled(o, t)  : r._promiseRejected(o, t))  : s && (c && t._setAsyncGuaranteed(), 0 !== (33554432 & a) ? t._fulfill(o)  : t._reject(o))
                            },
                            i.prototype._settlePromiseLateCancellationObserver = function (t) {
                                var e = t.handler,
                                    n = t.promise,
                                    r = t.receiver,
                                    o = t.value;
                                'function' == typeof e ? n instanceof i ? this._settlePromiseFromHandler(e, r, o, n)  : e.call(r, o, n)  : n instanceof i && n._reject(o)
                            },
                            i.prototype._settlePromiseCtx = function (t) {
                                this._settlePromise(t.promise, t.handler, t.receiver, t.value)
                            },
                            i.prototype._settlePromise0 = function (t, e, n) {
                                var r = this._promise0,
                                    i = this._receiverAt(0);
                                this._promise0 = void 0,
                                    this._receiver0 = void 0,
                                    this._settlePromise(r, t, i, e)
                            },
                            i.prototype._clearCallbackDataAtIndex = function (t) {
                                var e = 4 * t - 4;
                                this[e + 2] = this[e + 3] = this[e + 0] = this[e + 1] = void 0
                            },
                            i.prototype._fulfill = function (t) {
                                var e = this._bitField;
                                if (!((117506048 & e) >>> 16)) {
                                    if (t === this) {
                                        var n = l();
                                        return this._attachExtraTrace(n),
                                            this._reject(n)
                                    }
                                    this._setFulfilled(),
                                        this._rejectionHandler0 = t,
                                    (65535 & e) > 0 && (0 !== (134217728 & e) ? this._settlePromises()  : v.settlePromises(this), this._dereferenceTrace())
                                }
                            },
                            i.prototype._reject = function (t) {
                                var e = this._bitField;
                                if (!((117506048 & e) >>> 16)) return this._setRejected(),
                                    this._fulfillmentHandler0 = t,
                                    this._isFinal() ? v.fatalError(t, f.isNode)  : void ((65535 & e) > 0 ? v.settlePromises(this)  : this._ensurePossibleRejectionHandled())
                            },
                            i.prototype._fulfillPromises = function (t, e) {
                                for (var n = 1; t > n; n++) {
                                    var r = this._fulfillmentHandlerAt(n),
                                        i = this._promiseAt(n),
                                        o = this._receiverAt(n);
                                    this._clearCallbackDataAtIndex(n),
                                        this._settlePromise(i, r, o, e)
                                }
                            },
                            i.prototype._rejectPromises = function (t, e) {
                                for (var n = 1; t > n; n++) {
                                    var r = this._rejectionHandlerAt(n),
                                        i = this._promiseAt(n),
                                        o = this._receiverAt(n);
                                    this._clearCallbackDataAtIndex(n),
                                        this._settlePromise(i, r, o, e)
                                }
                            },
                            i.prototype._settlePromises = function () {
                                var t = this._bitField,
                                    e = 65535 & t;
                                if (e > 0) {
                                    if (0 !== (16842752 & t)) {
                                        var n = this._fulfillmentHandler0;
                                        this._settlePromise0(this._rejectionHandler0, n, t),
                                            this._rejectPromises(e, n)
                                    } else {
                                        var r = this._rejectionHandler0;
                                        this._settlePromise0(this._fulfillmentHandler0, r, t),
                                            this._fulfillPromises(e, r)
                                    }
                                    this._setLength(0)
                                }
                                this._clearCancellationData()
                            },
                            i.prototype._settledValue = function () {
                                var t = this._bitField;
                                return 0 !== (33554432 & t) ? this._rejectionHandler0 : 0 !== (16777216 & t) ? this._fulfillmentHandler0 : void 0
                            },
                        'undefined' != typeof Symbol && Symbol.toStringTag && _.defineProperty(i.prototype, Symbol.toStringTag, {
                            get: function () {
                                return 'Object'
                            }
                        }),
                            i.defer = i.pending = function () {
                                T.deprecated('Promise.defer', 'new Promise');
                                var t = new i(b);
                                return {
                                    promise: t,
                                    resolve: o,
                                    reject: s
                                }
                            },
                            f.notEnumerableProp(i, '_makeSelfResolutionError', l),
                            t('./method') (i, b, j, p, T),
                            t('./bind') (i, b, j, T),
                            t('./cancel') (i, E, p, T),
                            t('./direct_resolve') (i),
                            t('./synchronous_inspection') (i),
                            t('./join') (i, E, j, b, v, c),
                            i.Promise = i,
                            i.version = '3.5.5',
                            t('./call_get.js') (i),
                            t('./generators.js') (i, p, b, j, n, T),
                            t('./map.js') (i, E, p, j, b, T),
                            t('./nodeify.js') (i),
                            t('./promisify.js') (i, b),
                            t('./props.js') (i, E, j, p),
                            t('./race.js') (i, b, j, p),
                            t('./reduce.js') (i, E, p, j, b, T),
                            t('./settle.js') (i, E, T),
                            t('./some.js') (i, E, p),
                            t('./timers.js') (i, b, T),
                            t('./using.js') (i, p, j, F, b, T),
                            t('./any.js') (i),
                            t('./each.js') (i, b),
                            t('./filter.js') (i, b),
                            f.toFastProperties(i),
                            f.toFastProperties(i.prototype),
                            a({
                                a: 1
                            }),
                            a({
                                b: 2
                            }),
                            a({
                                c: 3
                            }),
                            a(1),
                            a(function () {
                            }),
                            a(void 0),
                            a(!1),
                            a(new i(b)),
                            T.setBounds(d.firstLineError, f.lastLineError),
                            i
                    }
                },
                {
                    './any.js': 1,
                    './async': 2,
                    './bind': 3,
                    './call_get.js': 5,
                    './cancel': 6,
                    './catch_filter': 7,
                    './context': 8,
                    './debuggability': 9,
                    './direct_resolve': 10,
                    './each.js': 11,
                    './errors': 12,
                    './es5': 13,
                    './filter.js': 14,
                    './finally': 15,
                    './generators.js': 16,
                    './join': 17,
                    './map.js': 18,
                    './method': 19,
                    './nodeback': 20,
                    './nodeify.js': 21,
                    './promise_array': 23,
                    './promisify.js': 24,
                    './props.js': 25,
                    './race.js': 27,
                    './reduce.js': 28,
                    './settle.js': 30,
                    './some.js': 31,
                    './synchronous_inspection': 32,
                    './thenables': 33,
                    './timers.js': 34,
                    './using.js': 35,
                    './util': 36
                }
            ],
            23: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o) {
                        function s(t) {
                            switch (t) {
                                case - 2:
                                    return [];
                                case - 3:
                                    return {
                                    };
                                case - 6:
                                    return new Map
                            }
                        }
                        function a(t) {
                            var r = this._promise = new e(n);
                            t instanceof e && r._propagateFrom(t, 3),
                                r._setOnCancel(this),
                                this._values = t,
                                this._length = 0,
                                this._totalResolved = 0,
                                this._init(void 0, - 2)
                        }
                        var c = t('./util');
                        c.isArray;
                        return c.inherits(a, o),
                            a.prototype.length = function () {
                                return this._length
                            },
                            a.prototype.promise = function () {
                                return this._promise
                            },
                            a.prototype._init = function l(t, n) {
                                var o = r(this._values, this._promise);
                                if (o instanceof e) {
                                    o = o._target();
                                    var a = o._bitField;
                                    if (this._values = o, 0 === (50397184 & a)) return this._promise._setAsyncGuaranteed(),
                                        o._then(l, this._reject, void 0, this, n);
                                    if (0 === (33554432 & a)) return 0 !== (16777216 & a) ? this._reject(o._reason())  : this._cancel();
                                    o = o._value()
                                }
                                if (o = c.asArray(o), null === o) {
                                    var u = i('expecting an array or an iterable object but got ' + c.classString(o)).reason();
                                    return void this._promise._rejectCallback(u, !1)
                                }
                                return 0 === o.length ? void ( - 5 === n ? this._resolveEmptyArray()  : this._resolve(s(n)))  : void this._iterate(o)
                            },
                            a.prototype._iterate = function (t) {
                                var n = this.getActualLength(t.length);
                                this._length = n,
                                    this._values = this.shouldCopyValues() ? new Array(n)  : this._values;
                                for (var i = this._promise, o = !1, s = null, a = 0; n > a; ++a) {
                                    var c = r(t[a], i);
                                    c instanceof e ? (c = c._target(), s = c._bitField)  : s = null,
                                        o ? null !== s && c.suppressUnhandledRejections()  : null !== s ? 0 === (50397184 & s) ? (c._proxy(this, a), this._values[a] = c)  : o = 0 !== (33554432 & s) ? this._promiseFulfilled(c._value(), a)  : 0 !== (16777216 & s) ? this._promiseRejected(c._reason(), a)  : this._promiseCancelled(a)  : o = this._promiseFulfilled(c, a)
                                }
                                o || i._setAsyncGuaranteed()
                            },
                            a.prototype._isResolved = function () {
                                return null === this._values
                            },
                            a.prototype._resolve = function (t) {
                                this._values = null,
                                    this._promise._fulfill(t)
                            },
                            a.prototype._cancel = function () {
                                !this._isResolved() && this._promise._isCancellable() && (this._values = null, this._promise._cancel())
                            },
                            a.prototype._reject = function (t) {
                                this._values = null,
                                    this._promise._rejectCallback(t, !1)
                            },
                            a.prototype._promiseFulfilled = function (t, e) {
                                this._values[e] = t;
                                var n = ++this._totalResolved;
                                return n >= this._length ? (this._resolve(this._values), !0)  : !1
                            },
                            a.prototype._promiseCancelled = function () {
                                return this._cancel(),
                                    !0
                            },
                            a.prototype._promiseRejected = function (t) {
                                return this._totalResolved++,
                                    this._reject(t),
                                    !0
                            },
                            a.prototype._resultCancelled = function () {
                                if (!this._isResolved()) {
                                    var t = this._values;
                                    if (this._cancel(), t instanceof e) t.cancel();
                                    else for (var n = 0; n < t.length; ++n) t[n] instanceof e && t[n].cancel()
                                }
                            },
                            a.prototype.shouldCopyValues = function () {
                                return !0
                            },
                            a.prototype.getActualLength = function (t) {
                                return t
                            },
                            a
                    }
                },
                {
                    './util': 36
                }
            ],
            24: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n) {
                        function r(t) {
                            return !C.test(t)
                        }
                        function i(t) {
                            try {
                                return t.__isPromisified__ === !0
                            } catch (e) {
                                return !1
                            }
                        }
                        function o(t, e, n) {
                            var r = f.getDataPropertyOrDefault(t, e + n, b);
                            return r ? i(r)  : !1
                        }
                        function s(t, e, n) {
                            for (var r = 0; r < t.length; r += 2) {
                                var i = t[r];
                                if (n.test(i)) for (var o = i.replace(n, ''), s = 0; s < t.length; s += 2) if (t[s] === o) throw new m('Cannot promisify an API that has normal methods with \'%s\'-suffix\n\n    See http://goo.gl/MqrFmX\n'.replace('%s', e))
                            }
                        }
                        function a(t, e, n, r) {
                            for (var a = f.inheritedDataKeys(t), c = [
                            ], l = 0; l < a.length; ++l) {
                                var u = a[l],
                                    p = t[u],
                                    h = r === j ? !0 : j(u, p, t);
                                'function' != typeof p || i(p) || o(t, u, e) || !r(u, p, t, h) || c.push(u, p)
                            }
                            return s(c, e, n),
                                c
                        }
                        function c(t, r, i, o, s, a) {
                            function c() {
                                var i = r;
                                r === h && (i = this);
                                var o = new e(n);
                                o._captureStackTrace();
                                var s = 'string' == typeof u && this !== l ? this[u] : t,
                                    c = _(o, a);
                                try {
                                    s.apply(i, d(arguments, c))
                                } catch (p) {
                                    o._rejectCallback(v(p), !0, !0)
                                }
                                return o._isFateSealed() || o._setAsyncGuaranteed(),
                                    o
                            }
                            var l = function () {
                                    return this
                                }(),
                                u = t;
                            return 'string' == typeof u && (t = o),
                                f.notEnumerableProp(c, '__isPromisified__', !0),
                                c
                        }
                        function l(t, e, n, r, i) {
                            for (var o = new RegExp(E(e) + '$'), s = a(t, e, o, n), c = 0, l = s.length; l > c; c += 2) {
                                var u = s[c],
                                    p = s[c + 1],
                                    _ = u + e;
                                if (r === k) t[_] = k(u, h, u, p, e, i);
                                else {
                                    var d = r(p, function () {
                                        return k(u, h, u, p, e, i)
                                    });
                                    f.notEnumerableProp(d, '__isPromisified__', !0),
                                        t[_] = d
                                }
                            }
                            return f.toFastProperties(t),
                                t
                        }
                        function u(t, e, n) {
                            return k(t, e, void 0, t, null, n)
                        }
                        var p,
                            h = {
                            },
                            f = t('./util'),
                            _ = t('./nodeback'),
                            d = f.withAppended,
                            v = f.maybeWrapAsError,
                            y = f.canEvaluate,
                            m = t('./errors').TypeError,
                            g = 'Async',
                            b = {
                                __isPromisified__: !0
                            },
                            w = [
                                'arity',
                                'length',
                                'name',
                                'arguments',
                                'caller',
                                'callee',
                                'prototype',
                                '__isPromisified__'
                            ],
                            C = new RegExp('^(?:' + w.join('|') + ')$'),
                            j = function (t) {
                                return f.isIdentifier(t) && '_' !== t.charAt(0) && 'constructor' !== t
                            },
                            E = function (t) {
                                return t.replace(/([$])/, '\\$')
                            },
                            k = y ? p : c;
                        e.promisify = function (t, e) {
                            if ('function' != typeof t) throw new m('expecting a function but got ' + f.classString(t));
                            if (i(t)) return t;
                            e = Object(e);
                            var n = void 0 === e.context ? h : e.context,
                                o = !!e.multiArgs,
                                s = u(t, n, o);
                            return f.copyDescriptors(t, s, r),
                                s
                        },
                            e.promisifyAll = function (t, e) {
                                if ('function' != typeof t && 'object' != typeof t) throw new m('the target of promisifyAll must be an object or a function\n\n    See http://goo.gl/MqrFmX\n');
                                e = Object(e);
                                var n = !!e.multiArgs,
                                    r = e.suffix;
                                'string' != typeof r && (r = g);
                                var i = e.filter;
                                'function' != typeof i && (i = j);
                                var o = e.promisifier;
                                if ('function' != typeof o && (o = k), !f.isIdentifier(r)) throw new RangeError('suffix must be a valid identifier\n\n    See http://goo.gl/MqrFmX\n');
                                for (var s = f.inheritedDataKeys(t), a = 0; a < s.length; ++a) {
                                    var c = t[s[a]];
                                    'constructor' !== s[a] && f.isClass(c) && (l(c.prototype, r, i, o, n), l(c, r, i, o, n))
                                }
                                return l(t, r, i, o, n)
                            }
                    }
                },
                {
                    './errors': 12,
                    './nodeback': 20,
                    './util': 36
                }
            ],
            25: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i) {
                        function o(t) {
                            var e,
                                n = !1;
                            if (void 0 !== a && t instanceof a) e = p(t),
                                n = !0;
                            else {
                                var r = u.keys(t),
                                    i = r.length;
                                e = new Array(2 * i);
                                for (var o = 0; i > o; ++o) {
                                    var s = r[o];
                                    e[o] = t[s],
                                        e[o + i] = s
                                }
                            }
                            this.constructor$(e),
                                this._isMap = n,
                                this._init$(void 0, n ? - 6 : - 3)
                        }
                        function s(t) {
                            var n,
                                s = r(t);
                            return l(s) ? (n = s instanceof e ? s._then(e.props, void 0, void 0, void 0, void 0)  : new o(s).promise(), s instanceof e && n._propagateFrom(s, 2), n)  : i('cannot await properties of a non-object\n\n    See http://goo.gl/MqrFmX\n')
                        }
                        var a,
                            c = t('./util'),
                            l = c.isObject,
                            u = t('./es5');
                        'function' == typeof Map && (a = Map);
                        var p = function () {
                                function t(t, r) {
                                    this[e] = t,
                                        this[e + n] = r,
                                        e++
                                }
                                var e = 0,
                                    n = 0;
                                return function (r) {
                                    n = r.size,
                                        e = 0;
                                    var i = new Array(2 * r.size);
                                    return r.forEach(t, i),
                                        i
                                }
                            }(),
                            h = function (t) {
                                for (var e = new a, n = t.length / 2 | 0, r = 0; n > r; ++r) {
                                    var i = t[n + r],
                                        o = t[r];
                                    e.set(i, o)
                                }
                                return e
                            };
                        c.inherits(o, n),
                            o.prototype._init = function () {
                            },
                            o.prototype._promiseFulfilled = function (t, e) {
                                this._values[e] = t;
                                var n = ++this._totalResolved;
                                if (n >= this._length) {
                                    var r;
                                    if (this._isMap) r = h(this._values);
                                    else {
                                        r = {
                                        };
                                        for (var i = this.length(), o = 0, s = this.length(); s > o; ++o) r[this._values[o + i]] = this._values[o]
                                    }
                                    return this._resolve(r),
                                        !0
                                }
                                return !1
                            },
                            o.prototype.shouldCopyValues = function () {
                                return !1
                            },
                            o.prototype.getActualLength = function (t) {
                                return t >> 1
                            },
                            e.prototype.props = function () {
                                return s(this)
                            },
                            e.props = function (t) {
                                return s(t)
                            }
                    }
                },
                {
                    './es5': 13,
                    './util': 36
                }
            ],
            26: [
                function (t, e, n) {
                    'use strict';
                    function r(t, e, n, r, i) {
                        for (var o = 0; i > o; ++o) n[o + r] = t[o + e],
                            t[o + e] = void 0
                    }
                    function i(t) {
                        this._capacity = t,
                            this._length = 0,
                            this._front = 0
                    }
                    i.prototype._willBeOverCapacity = function (t) {
                        return this._capacity < t
                    },
                        i.prototype._pushOne = function (t) {
                            var e = this.length();
                            this._checkCapacity(e + 1);
                            var n = this._front + e & this._capacity - 1;
                            this[n] = t,
                                this._length = e + 1
                        },
                        i.prototype.push = function (t, e, n) {
                            var r = this.length() + 3;
                            if (this._willBeOverCapacity(r)) return this._pushOne(t),
                                this._pushOne(e),
                                void this._pushOne(n);
                            var i = this._front + r - 3;
                            this._checkCapacity(r);
                            var o = this._capacity - 1;
                            this[i + 0 & o] = t,
                                this[i + 1 & o] = e,
                                this[i + 2 & o] = n,
                                this._length = r
                        },
                        i.prototype.shift = function () {
                            var t = this._front,
                                e = this[t];
                            return this[t] = void 0,
                                this._front = t + 1 & this._capacity - 1,
                                this._length--,
                                e
                        },
                        i.prototype.length = function () {
                            return this._length
                        },
                        i.prototype._checkCapacity = function (t) {
                            this._capacity < t && this._resizeTo(this._capacity << 1)
                        },
                        i.prototype._resizeTo = function (t) {
                            var e = this._capacity;
                            this._capacity = t;
                            var n = this._front,
                                i = this._length,
                                o = n + i & e - 1;
                            r(this, 0, this, e, o)
                        },
                        e.exports = i
                },
                {
                }
            ],
            27: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i) {
                        function o(t, o) {
                            var c = r(t);
                            if (c instanceof e) return a(c);
                            if (t = s.asArray(t), null === t) return i('expecting an array or an iterable object but got ' + s.classString(t));
                            var l = new e(n);
                            void 0 !== o && l._propagateFrom(o, 3);
                            for (var u = l._fulfill, p = l._reject, h = 0, f = t.length; f > h; ++h) {
                                var _ = t[h];
                                (void 0 !== _ || h in t) && e.cast(_)._then(u, p, void 0, l, null)
                            }
                            return l
                        }
                        var s = t('./util'),
                            a = function (t) {
                                return t.then(function (e) {
                                    return o(e, t)
                                })
                            };
                        e.race = function (t) {
                            return o(t, void 0)
                        },
                            e.prototype.race = function () {
                                return o(this, void 0)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            28: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o, s) {
                        function a(t, n, r, i) {
                            this.constructor$(t);
                            var s = h();
                            this._fn = null === s ? n : f.domainBind(s, n),
                            void 0 !== r && (r = e.resolve(r), r._attachCancellationCallback(this)),
                                this._initialValue = r,
                                this._currentCancellable = null,
                                i === o ? this._eachValues = Array(this._length)  : 0 === i ? this._eachValues = null : this._eachValues = void 0,
                                this._promise._captureStackTrace(),
                                this._init$(void 0, - 5)
                        }
                        function c(t, e) {
                            this.isFulfilled() ? e._resolve(t)  : e._reject(t)
                        }
                        function l(t, e, n, i) {
                            if ('function' != typeof e) return r('expecting a function but got ' + f.classString(e));
                            var o = new a(t, e, n, i);
                            return o.promise()
                        }
                        function u(t) {
                            this.accum = t,
                                this.array._gotAccum(t);
                            var n = i(this.value, this.array._promise);
                            return n instanceof e ? (this.array._currentCancellable = n, n._then(p, void 0, void 0, this, void 0))  : p.call(this, n)
                        }
                        function p(t) {
                            var n = this.array,
                                r = n._promise,
                                i = _(n._fn);
                            r._pushContext();
                            var o;
                            o = void 0 !== n._eachValues ? i.call(r._boundValue(), t, this.index, this.length)  : i.call(r._boundValue(), this.accum, t, this.index, this.length),
                            o instanceof e && (n._currentCancellable = o);
                            var a = r._popContext();
                            return s.checkForgottenReturns(o, a, void 0 !== n._eachValues ? 'Promise.each' : 'Promise.reduce', r),
                                o
                        }
                        var h = e._getDomain,
                            f = t('./util'),
                            _ = f.tryCatch;
                        f.inherits(a, n),
                            a.prototype._gotAccum = function (t) {
                                void 0 !== this._eachValues && null !== this._eachValues && t !== o && this._eachValues.push(t)
                            },
                            a.prototype._eachComplete = function (t) {
                                return null !== this._eachValues && this._eachValues.push(t),
                                    this._eachValues
                            },
                            a.prototype._init = function () {
                            },
                            a.prototype._resolveEmptyArray = function () {
                                this._resolve(void 0 !== this._eachValues ? this._eachValues : this._initialValue)
                            },
                            a.prototype.shouldCopyValues = function () {
                                return !1
                            },
                            a.prototype._resolve = function (t) {
                                this._promise._resolveCallback(t),
                                    this._values = null
                            },
                            a.prototype._resultCancelled = function (t) {
                                return t === this._initialValue ? this._cancel()  : void (this._isResolved() || (this._resultCancelled$(), this._currentCancellable instanceof e && this._currentCancellable.cancel(), this._initialValue instanceof e && this._initialValue.cancel()))
                            },
                            a.prototype._iterate = function (t) {
                                this._values = t;
                                var n,
                                    r,
                                    i = t.length;
                                if (void 0 !== this._initialValue ? (n = this._initialValue, r = 0)  : (n = e.resolve(t[0]), r = 1), this._currentCancellable = n, !n.isRejected()) for (; i > r; ++r) {
                                    var o = {
                                        accum: null,
                                        value: t[r],
                                        index: r,
                                        length: i,
                                        array: this
                                    };
                                    n = n._then(u, void 0, void 0, o, void 0)
                                }
                                void 0 !== this._eachValues && (n = n._then(this._eachComplete, void 0, void 0, this, void 0)),
                                    n._then(c, c, void 0, n, this)
                            },
                            e.prototype.reduce = function (t, e) {
                                return l(this, t, e, null)
                            },
                            e.reduce = function (t, e, n, r) {
                                return l(t, e, n, r)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            29: [
                function (t, e, n) {
                    'use strict';
                    var r,
                        i = t('./util'),
                        o = function () {
                            throw new Error('No async scheduler available\n\n    See http://goo.gl/MqrFmX\n')
                        },
                        s = i.getNativePromise();
                    if (i.isNode && 'undefined' == typeof MutationObserver) {
                        var a = global.setImmediate,
                            c = process.nextTick;
                        r = i.isRecentNode ? function (t) {
                                a.call(global, t)
                            }
                            : function (t) {
                                c.call(process, t)
                            }
                    } else if ('function' == typeof s && 'function' == typeof s.resolve) {
                        var l = s.resolve();
                        r = function (t) {
                            l.then(t)
                        }
                    } else r = 'undefined' != typeof MutationObserver && ('undefined' == typeof window || !window.navigator || !window.navigator.standalone && !window.cordova) && 'classList' in document.documentElement ? function () {
                        var t = document.createElement('div'),
                            e = {
                                attributes: !0
                            },
                            n = !1,
                            r = document.createElement('div'),
                            i = new MutationObserver(function () {
                                t.classList.toggle('foo'),
                                    n = !1
                            });
                        i.observe(r, e);
                        var o = function () {
                            n || (n = !0, r.classList.toggle('foo'))
                        };
                        return function (n) {
                            var r = new MutationObserver(function () {
                                r.disconnect(),
                                    n()
                            });
                            r.observe(t, e),
                                o()
                        }
                    }()  : 'undefined' != typeof setImmediate ? function (t) {
                            setImmediate(t)
                        }
                        : 'undefined' != typeof setTimeout ? function (t) {
                                setTimeout(t, 0)
                            }
                            : o;
                    e.exports = r
                },
                {
                    './util': 36
                }
            ],
            30: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r) {
                        function i(t) {
                            this.constructor$(t)
                        }
                        var o = e.PromiseInspection,
                            s = t('./util');
                        s.inherits(i, n),
                            i.prototype._promiseResolved = function (t, e) {
                                this._values[t] = e;
                                var n = ++this._totalResolved;
                                return n >= this._length ? (this._resolve(this._values), !0)  : !1
                            },
                            i.prototype._promiseFulfilled = function (t, e) {
                                var n = new o;
                                return n._bitField = 33554432,
                                    n._settledValueField = t,
                                    this._promiseResolved(e, n)
                            },
                            i.prototype._promiseRejected = function (t, e) {
                                var n = new o;
                                return n._bitField = 16777216,
                                    n._settledValueField = t,
                                    this._promiseResolved(e, n)
                            },
                            e.settle = function (t) {
                                return r.deprecated('.settle()', '.reflect()'),
                                    new i(t).promise()
                            },
                            e.prototype.settle = function () {
                                return e.settle(this)
                            }
                    }
                },
                {
                    './util': 36
                }
            ],
            31: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r) {
                        function i(t) {
                            this.constructor$(t),
                                this._howMany = 0,
                                this._unwrap = !1,
                                this._initialized = !1
                        }
                        function o(t, e) {
                            if ((0 | e) !== e || 0 > e) return r('expecting a positive integer\n\n    See http://goo.gl/MqrFmX\n');
                            var n = new i(t),
                                o = n.promise();
                            return n.setHowMany(e),
                                n.init(),
                                o
                        }
                        var s = t('./util'),
                            a = t('./errors').RangeError,
                            c = t('./errors').AggregateError,
                            l = s.isArray,
                            u = {
                            };
                        s.inherits(i, n),
                            i.prototype._init = function () {
                                if (this._initialized) {
                                    if (0 === this._howMany) return void this._resolve([]);
                                    this._init$(void 0, - 5);
                                    var t = l(this._values);
                                    !this._isResolved() && t && this._howMany > this._canPossiblyFulfill() && this._reject(this._getRangeError(this.length()))
                                }
                            },
                            i.prototype.init = function () {
                                this._initialized = !0,
                                    this._init()
                            },
                            i.prototype.setUnwrap = function () {
                                this._unwrap = !0
                            },
                            i.prototype.howMany = function () {
                                return this._howMany
                            },
                            i.prototype.setHowMany = function (t) {
                                this._howMany = t
                            },
                            i.prototype._promiseFulfilled = function (t) {
                                return this._addFulfilled(t),
                                    this._fulfilled() === this.howMany() ? (this._values.length = this.howMany(), 1 === this.howMany() && this._unwrap ? this._resolve(this._values[0])  : this._resolve(this._values), !0)  : !1
                            },
                            i.prototype._promiseRejected = function (t) {
                                return this._addRejected(t),
                                    this._checkOutcome()
                            },
                            i.prototype._promiseCancelled = function () {
                                return this._values instanceof e || null == this._values ? this._cancel()  : (this._addRejected(u), this._checkOutcome())
                            },
                            i.prototype._checkOutcome = function () {
                                if (this.howMany() > this._canPossiblyFulfill()) {
                                    for (var t = new c, e = this.length(); e < this._values.length; ++e) this._values[e] !== u && t.push(this._values[e]);
                                    return t.length > 0 ? this._reject(t)  : this._cancel(),
                                        !0
                                }
                                return !1
                            },
                            i.prototype._fulfilled = function () {
                                return this._totalResolved
                            },
                            i.prototype._rejected = function () {
                                return this._values.length - this.length()
                            },
                            i.prototype._addRejected = function (t) {
                                this._values.push(t)
                            },
                            i.prototype._addFulfilled = function (t) {
                                this._values[this._totalResolved++] = t
                            },
                            i.prototype._canPossiblyFulfill = function () {
                                return this.length() - this._rejected()
                            },
                            i.prototype._getRangeError = function (t) {
                                var e = 'Input array must contain at least ' + this._howMany + ' items but contains only ' + t + ' items';
                                return new a(e)
                            },
                            i.prototype._resolveEmptyArray = function () {
                                this._reject(this._getRangeError(0))
                            },
                            e.some = function (t, e) {
                                return o(t, e)
                            },
                            e.prototype.some = function (t) {
                                return o(this, t)
                            },
                            e._SomePromiseArray = i
                    }
                },
                {
                    './errors': 12,
                    './util': 36
                }
            ],
            32: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (t) {
                        function e(t) {
                            void 0 !== t ? (t = t._target(), this._bitField = t._bitField, this._settledValueField = t._isFateSealed() ? t._settledValue()  : void 0)  : (this._bitField = 0, this._settledValueField = void 0)
                        }
                        e.prototype._settledValue = function () {
                            return this._settledValueField
                        };
                        var n = e.prototype.value = function () {
                                if (!this.isFulfilled()) throw new TypeError('cannot get fulfillment value of a non-fulfilled promise\n\n    See http://goo.gl/MqrFmX\n');
                                return this._settledValue()
                            },
                            r = e.prototype.error = e.prototype.reason = function () {
                                if (!this.isRejected()) throw new TypeError('cannot get rejection reason of a non-rejected promise\n\n    See http://goo.gl/MqrFmX\n');
                                return this._settledValue()
                            },
                            i = e.prototype.isFulfilled = function () {
                                return 0 !== (33554432 & this._bitField)
                            },
                            o = e.prototype.isRejected = function () {
                                return 0 !== (16777216 & this._bitField)
                            },
                            s = e.prototype.isPending = function () {
                                return 0 === (50397184 & this._bitField)
                            },
                            a = e.prototype.isResolved = function () {
                                return 0 !== (50331648 & this._bitField)
                            };
                        e.prototype.isCancelled = function () {
                            return 0 !== (8454144 & this._bitField)
                        },
                            t.prototype.__isCancelled = function () {
                                return 65536 === (65536 & this._bitField)
                            },
                            t.prototype._isCancelled = function () {
                                return this._target().__isCancelled()
                            },
                            t.prototype.isCancelled = function () {
                                return 0 !== (8454144 & this._target()._bitField)
                            },
                            t.prototype.isPending = function () {
                                return s.call(this._target())
                            },
                            t.prototype.isRejected = function () {
                                return o.call(this._target())
                            },
                            t.prototype.isFulfilled = function () {
                                return i.call(this._target())
                            },
                            t.prototype.isResolved = function () {
                                return a.call(this._target())
                            },
                            t.prototype.value = function () {
                                return n.call(this._target())
                            },
                            t.prototype.reason = function () {
                                var t = this._target();
                                return t._unsetRejectionIsUnhandled(),
                                    r.call(t)
                            },
                            t.prototype._value = function () {
                                return this._settledValue()
                            },
                            t.prototype._reason = function () {
                                return this._unsetRejectionIsUnhandled(),
                                    this._settledValue()
                            },
                            t.PromiseInspection = e
                    }
                },
                {
                }
            ],
            33: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n) {
                        function r(t, r) {
                            if (u(t)) {
                                if (t instanceof e) return t;
                                var i = o(t);
                                if (i === l) {
                                    r && r._pushContext();
                                    var c = e.reject(i.e);
                                    return r && r._popContext(),
                                        c
                                }
                                if ('function' == typeof i) {
                                    if (s(t)) {
                                        var c = new e(n);
                                        return t._then(c._fulfill, c._reject, void 0, c, null),
                                            c
                                    }
                                    return a(t, i, r)
                                }
                            }
                            return t
                        }
                        function i(t) {
                            return t.then
                        }
                        function o(t) {
                            try {
                                return i(t)
                            } catch (e) {
                                return l.e = e,
                                    l
                            }
                        }
                        function s(t) {
                            try {
                                return p.call(t, '_promise0')
                            } catch (e) {
                                return !1
                            }
                        }
                        function a(t, r, i) {
                            function o(t) {
                                a && (a._resolveCallback(t), a = null)
                            }
                            function s(t) {
                                a && (a._rejectCallback(t, p, !0), a = null)
                            }
                            var a = new e(n),
                                u = a;
                            i && i._pushContext(),
                                a._captureStackTrace(),
                            i && i._popContext();
                            var p = !0,
                                h = c.tryCatch(r).call(t, o, s);
                            return p = !1,
                            a && h === l && (a._rejectCallback(h.e, !0, !0), a = null),
                                u
                        }
                        var c = t('./util'),
                            l = c.errorObj,
                            u = c.isObject,
                            p = {
                            }.hasOwnProperty;
                        return r
                    }
                },
                {
                    './util': 36
                }
            ],
            34: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r) {
                        function i(t) {
                            this.handle = t
                        }
                        function o(t) {
                            return clearTimeout(this.handle),
                                t
                        }
                        function s(t) {
                            throw clearTimeout(this.handle),
                                t
                        }
                        var a = t('./util'),
                            c = e.TimeoutError;
                        i.prototype._resultCancelled = function () {
                            clearTimeout(this.handle)
                        };
                        var l = function (t) {
                                return u( + this).thenReturn(t)
                            },
                            u = e.delay = function (t, o) {
                                var s,
                                    a;
                                return void 0 !== o ? (s = e.resolve(o)._then(l, null, null, t, void 0), r.cancellation() && o instanceof e && s._setOnCancel(o))  : (s = new e(n), a = setTimeout(function () {
                                    s._fulfill()
                                }, + t), r.cancellation() && s._setOnCancel(new i(a)), s._captureStackTrace()),
                                    s._setAsyncGuaranteed(),
                                    s
                            };
                        e.prototype.delay = function (t) {
                            return u(t, this)
                        };
                        var p = function (t, e, n) {
                            var r;
                            r = 'string' != typeof e ? e instanceof Error ? e : new c('operation timed out')  : new c(e),
                                a.markAsOriginatingFromRejection(r),
                                t._attachExtraTrace(r),
                                t._reject(r),
                            null != n && n.cancel()
                        };
                        e.prototype.timeout = function (t, e) {
                            t = + t;
                            var n,
                                a,
                                c = new i(setTimeout(function () {
                                    n.isPending() && p(n, e, a)
                                }, t));
                            return r.cancellation() ? (a = this.then(), n = a._then(o, s, void 0, c, void 0), n._setOnCancel(c))  : n = this._then(o, s, void 0, c, void 0),
                                n
                        }
                    }
                },
                {
                    './util': 36
                }
            ],
            35: [
                function (t, e, n) {
                    'use strict';
                    e.exports = function (e, n, r, i, o, s) {
                        function a(t) {
                            setTimeout(function () {
                                throw t
                            }, 0)
                        }
                        function c(t) {
                            var e = r(t);
                            return e !== t && 'function' == typeof t._isDisposable && 'function' == typeof t._getDisposer && t._isDisposable() && e._setDisposable(t._getDisposer()),
                                e
                        }
                        function l(t, n) {
                            function i() {
                                if (s >= l) return u._fulfill();
                                var o = c(t[s++]);
                                if (o instanceof e && o._isDisposable()) {
                                    try {
                                        o = r(o._getDisposer().tryDispose(n), t.promise)
                                    } catch (p) {
                                        return a(p)
                                    }
                                    if (o instanceof e) return o._then(i, a, null, null, null)
                                }
                                i()
                            }
                            var s = 0,
                                l = t.length,
                                u = new e(o);
                            return i(),
                                u
                        }
                        function u(t, e, n) {
                            this._data = t,
                                this._promise = e,
                                this._context = n
                        }
                        function p(t, e, n) {
                            this.constructor$(t, e, n)
                        }
                        function h(t) {
                            return u.isDisposer(t) ? (this.resources[this.index]._setDisposable(t), t.promise())  : t
                        }
                        function f(t) {
                            this.length = t,
                                this.promise = null,
                                this[t - 1] = null
                        }
                        var _ = t('./util'),
                            d = t('./errors').TypeError,
                            v = t('./util').inherits,
                            y = _.errorObj,
                            m = _.tryCatch,
                            g = {
                            };
                        u.prototype.data = function () {
                            return this._data
                        },
                            u.prototype.promise = function () {
                                return this._promise
                            },
                            u.prototype.resource = function () {
                                return this.promise().isFulfilled() ? this.promise().value()  : g
                            },
                            u.prototype.tryDispose = function (t) {
                                var e = this.resource(),
                                    n = this._context;
                                void 0 !== n && n._pushContext();
                                var r = e !== g ? this.doDispose(e, t)  : null;
                                return void 0 !== n && n._popContext(),
                                    this._promise._unsetDisposable(),
                                    this._data = null,
                                    r
                            },
                            u.isDisposer = function (t) {
                                return null != t && 'function' == typeof t.resource && 'function' == typeof t.tryDispose
                            },
                            v(p, u),
                            p.prototype.doDispose = function (t, e) {
                                var n = this.data();
                                return n.call(t, t, e)
                            },
                            f.prototype._resultCancelled = function () {
                                for (var t = this.length, n = 0; t > n; ++n) {
                                    var r = this[n];
                                    r instanceof e && r.cancel()
                                }
                            },
                            e.using = function () {
                                var t = arguments.length;
                                if (2 > t) return n('you must pass at least 2 arguments to Promise.using');
                                var i = arguments[t - 1];
                                if ('function' != typeof i) return n('expecting a function but got ' + _.classString(i));
                                var o,
                                    a = !0;
                                2 === t && Array.isArray(arguments[0]) ? (o = arguments[0], t = o.length, a = !1)  : (o = arguments, t--);
                                for (var c = new f(t), p = 0; t > p; ++p) {
                                    var d = o[p];
                                    if (u.isDisposer(d)) {
                                        var v = d;
                                        d = d.promise(),
                                            d._setDisposable(v)
                                    } else {
                                        var g = r(d);
                                        g instanceof e && (d = g._then(h, null, null, {
                                            resources: c,
                                            index: p
                                        }, void 0))
                                    }
                                    c[p] = d
                                }
                                for (var b = new Array(c.length), p = 0; p < b.length; ++p) b[p] = e.resolve(c[p]).reflect();
                                var w = e.all(b).then(function (t) {
                                        for (var e = 0; e < t.length; ++e) {
                                            var n = t[e];
                                            if (n.isRejected()) return y.e = n.error(),
                                                y;
                                            if (!n.isFulfilled()) return void w.cancel();
                                            t[e] = n.value()
                                        }
                                        C._pushContext(),
                                            i = m(i);
                                        var r = a ? i.apply(void 0, t)  : i(t),
                                            o = C._popContext();
                                        return s.checkForgottenReturns(r, o, 'Promise.using', C),
                                            r
                                    }),
                                    C = w.lastly(function () {
                                        var t = new e.PromiseInspection(w);
                                        return l(c, t)
                                    });
                                return c.promise = C,
                                    C._setOnCancel(c),
                                    C
                            },
                            e.prototype._setDisposable = function (t) {
                                this._bitField = 131072 | this._bitField,
                                    this._disposer = t
                            },
                            e.prototype._isDisposable = function () {
                                return (131072 & this._bitField) > 0
                            },
                            e.prototype._getDisposer = function () {
                                return this._disposer
                            },
                            e.prototype._unsetDisposable = function () {
                                this._bitField = - 131073 & this._bitField,
                                    this._disposer = void 0
                            },
                            e.prototype.disposer = function (t) {
                                if ('function' == typeof t) return new p(t, this, i());
                                throw new d
                            }
                    }
                },
                {
                    './errors': 12,
                    './util': 36
                }
            ],
            36: [
                function (t, e, n) {
                    'use strict';
                    function r() {
                        try {
                            var t = P;
                            return P = null,
                                t.apply(this, arguments)
                        } catch (e) {
                            return x.e = e,
                                x
                        }
                    }
                    function i(t) {
                        return P = t,
                            r
                    }
                    function o(t) {
                        return null == t || t === !0 || t === !1 || 'string' == typeof t || 'number' == typeof t
                    }
                    function s(t) {
                        return 'function' == typeof t || 'object' == typeof t && null !== t
                    }
                    function a(t) {
                        return o(t) ? new Error(v(t))  : t
                    }
                    function c(t, e) {
                        var n,
                            r = t.length,
                            i = new Array(r + 1);
                        for (n = 0; r > n; ++n) i[n] = t[n];
                        return i[n] = e,
                            i
                    }
                    function l(t, e, n) {
                        if (!F.isES5) return {
                        }.hasOwnProperty.call(t, e) ? t[e] : void 0;
                        var r = Object.getOwnPropertyDescriptor(t, e);
                        return null != r ? null == r.get && null == r.set ? r.value : n : void 0
                    }
                    function u(t, e, n) {
                        if (o(t)) return t;
                        var r = {
                            value: n,
                            configurable: !0,
                            enumerable: !1,
                            writable: !0
                        };
                        return F.defineProperty(t, e, r),
                            t
                    }
                    function p(t) {
                        throw t
                    }
                    function h(t) {
                        try {
                            if ('function' == typeof t) {
                                var e = F.names(t.prototype),
                                    n = F.isES5 && e.length > 1,
                                    r = e.length > 0 && !(1 === e.length && 'constructor' === e[0]),
                                    i = A.test(t + '') && F.names(t).length > 0;
                                if (n || r || i) return !0
                            }
                            return !1
                        } catch (o) {
                            return !1
                        }
                    }
                    function f(t) {
                        function e() {
                        }
                        function n() {
                            return typeof r.foo
                        }
                        e.prototype = t;
                        var r = new e;
                        return n(),
                            n(),
                            t
                    }
                    function _(t) {
                        return D.test(t)
                    }
                    function d(t, e, n) {
                        for (var r = new Array(t), i = 0; t > i; ++i) r[i] = e + i + n;
                        return r
                    }
                    function v(t) {
                        try {
                            return t + ''
                        } catch (e) {
                            return '[no string representation]'
                        }
                    }
                    function y(t) {
                        return t instanceof Error || null !== t && 'object' == typeof t && 'string' == typeof t.message && 'string' == typeof t.name
                    }
                    function m(t) {
                        try {
                            u(t, 'isOperational', !0)
                        } catch (e) {
                        }
                    }
                    function g(t) {
                        return null == t ? !1 : t instanceof Error.__BluebirdErrorTypes__.OperationalError || t.isOperational === !0
                    }
                    function b(t) {
                        return y(t) && F.propertyIsWritable(t, 'stack')
                    }
                    function w(t) {
                        return {
                        }.toString.call(t)
                    }
                    function C(t, e, n) {
                        for (var r = F.names(t), i = 0; i < r.length; ++i) {
                            var o = r[i];
                            if (n(o)) try {
                                F.defineProperty(e, o, F.getDescriptor(t, o))
                            } catch (s) {
                            }
                        }
                    }
                    function j(t) {
                        return H ? process.env[t] : void 0
                    }
                    function E() {
                        if ('function' == typeof Promise) try {
                            var t = new Promise(function () {
                            });
                            if ('[object Promise]' === {
                            }.toString.call(t)) return Promise
                        } catch (e) {
                        }
                    }
                    function k(t, e) {
                        return t.bind(e)
                    }
                    var F = t('./es5'),
                        T = 'undefined' == typeof navigator,
                        x = {
                            e: {
                            }
                        },
                        P,
                        S = 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : void 0 !== this ? this : null,
                        R = function (t, e) {
                            function n() {
                                this.constructor = t,
                                    this.constructor$ = e;
                                for (var n in e.prototype) r.call(e.prototype, n) && '$' !== n.charAt(n.length - 1) && (this[n + '$'] = e.prototype[n])
                            }
                            var r = {
                            }.hasOwnProperty;
                            return n.prototype = e.prototype,
                                t.prototype = new n,
                                t.prototype
                        },
                        O = function () {
                            var t = [
                                    Array.prototype,
                                    Object.prototype,
                                    Function.prototype
                                ],
                                e = function (e) {
                                    for (var n = 0; n < t.length; ++n) if (t[n] === e) return !0;
                                    return !1
                                };
                            if (F.isES5) {
                                var n = Object.getOwnPropertyNames;
                                return function (t) {
                                    for (var r = [
                                    ], i = Object.create(null); null != t && !e(t); ) {
                                        var o;
                                        try {
                                            o = n(t)
                                        } catch (s) {
                                            return r
                                        }
                                        for (var a = 0; a < o.length; ++a) {
                                            var c = o[a];
                                            if (!i[c]) {
                                                i[c] = !0;
                                                var l = Object.getOwnPropertyDescriptor(t, c);
                                                null != l && null == l.get && null == l.set && r.push(c)
                                            }
                                        }
                                        t = F.getPrototypeOf(t)
                                    }
                                    return r
                                }
                            }
                            var r = {
                            }.hasOwnProperty;
                            return function (n) {
                                if (e(n)) return [];
                                var i = [
                                ];
                                t: for (var o in n) if (r.call(n, o)) i.push(o);
                                else {
                                    for (var s = 0; s < t.length; ++s) if (r.call(t[s], o)) continue t;
                                    i.push(o)
                                }
                                return i
                            }
                        }(),
                        A = /this\s*\.\s*\S+\s*=/,
                        D = /^[a-z$_][a-z$_0-9]*$/i,
                        V = function () {
                            return 'stack' in new Error ? function (t) {
                                    return b(t) ? t : new Error(v(t))
                                }
                                : function (t) {
                                    if (b(t)) return t;
                                    try {
                                        throw new Error(v(t))
                                    } catch (e) {
                                        return e
                                    }
                                }
                        }(),
                        I = function (t) {
                            return F.isArray(t) ? t : null
                        };
                    if ('undefined' != typeof Symbol && Symbol.iterator) {
                        var L = 'function' == typeof Array.from ? function (t) {
                                return Array.from(t)
                            }
                            : function (t) {
                                for (var e, n = [
                                ], r = t[Symbol.iterator](); !(e = r.next()).done; ) n.push(e.value);
                                return n
                            };
                        I = function (t) {
                            return F.isArray(t) ? t : null != t && 'function' == typeof t[Symbol.iterator] ? L(t)  : null
                        }
                    }
                    var N = 'undefined' != typeof process && '[object process]' === w(process).toLowerCase(),
                        H = 'undefined' != typeof process && 'undefined' != typeof process.env,
                        B = {
                            isClass: h,
                            isIdentifier: _,
                            inheritedDataKeys: O,
                            getDataPropertyOrDefault: l,
                            thrower: p,
                            isArray: F.isArray,
                            asArray: I,
                            notEnumerableProp: u,
                            isPrimitive: o,
                            isObject: s,
                            isError: y,
                            canEvaluate: T,
                            errorObj: x,
                            tryCatch: i,
                            inherits: R,
                            withAppended: c,
                            maybeWrapAsError: a,
                            toFastProperties: f,
                            filledRange: d,
                            toString: v,
                            canAttachTrace: b,
                            ensureErrorObject: V,
                            originatesFromRejection: g,
                            markAsOriginatingFromRejection: m,
                            classString: w,
                            copyDescriptors: C,
                            hasDevTools: 'undefined' != typeof chrome && chrome && 'function' == typeof chrome.loadTimes,
                            isNode: N,
                            hasEnvVariables: H,
                            env: j,
                            global: S,
                            getNativePromise: E,
                            domainBind: k
                        };
                    B.isRecentNode = B.isNode && function () {
                        var t;
                        return process.versions && process.versions.node ? t = process.versions.node.split('.').map(Number)  : process.version && (t = process.version.split('.').map(Number)),
                        0 === t[0] && t[1] > 10 || t[0] > 0
                    }(),
                    B.isNode && B.toFastProperties(process);
                    try {
                        throw new Error
                    } catch (U) {
                        B.lastLineError = U
                    }
                    e.exports = B
                },
                {
                    './es5': 13
                }
            ]
        },
        {
        },
        [
            4
        ]) (4)
}), 'undefined' != typeof window && null !== window ? window.P = window.Promise : 'undefined' != typeof self && null !== self && (self.P = self.Promise); !function () {
    'use strict';
    define('pf-app-detect', [
        'require',
        'pf-shared-modules-cookies'
    ], function (require) {
        var cookies = require('pf-shared-modules-cookies'),
            getOs = function getOs() {
                return cookies.get(pf.globals.cookies.APP_OS)
            },
            getDeviceType = function getDeviceType() {
                return cookies.get(pf.globals.cookies.APP_DEVICE)
            },
            getRelease = function getRelease() {
                return cookies.get(pf.globals.cookies.APP_RELEASE)
            },
            getAppVersion = function getAppVersion() {
                return cookies.get(pf.globals.cookies.APP_VERSION)
            },
            isTabletApp = function isTabletApp() {
                var result = getDeviceType() === pf.globals.cookieValues.APP_DEVICE_TABLET;
                this.isTabletApp = function isTabletApp() {
                    return result
                };
                return result
            },
            isSmartphoneApp = function isSmartphoneApp() {
                var result = getDeviceType() === pf.globals.cookieValues.APP_DEVICE_HANDHELD;
                this.isSmartphoneApp = function isSmartphoneApp() {
                    return result
                };
                return result
            },
            isApp = function isApp() {
                var result = this.isTabletApp() || this.isSmartphoneApp();
                this.isApp = function isApp() {
                    return result
                };
                return result
            },
            isIOS = function isIOS() {
                var result = getOs() === pf.globals.cookieValues.APP_OS_IOS;
                this.isIOS = function isIOS() {
                    return result
                };
                return result
            },
            isAndroid = function isAndroid() {
                var result = getOs() === pf.globals.cookieValues.APP_OS_ANDROID;
                this.isAndroid = function isAndroid() {
                    return result
                };
                return result
            },
            useNewAmsBridgeCalls = function useNewAmsBridgeCalls() {
                var mappsNewAmsBridgeAppVersions = _.split(b$.portal.mappsNewAmsBridgeAppVersions, '|'),
                    release = getRelease(),
                    isNewApp = false;
                _.forEach(mappsNewAmsBridgeAppVersions, function (version) {
                    if (_.startsWith(release, version)) isNewApp = true
                });
                return isNewApp
            },
            isOpera = !!window.opr && !!opr.addons || window.opera || navigator.userAgent.indexOf(' OPR/') >= 0,
            isFirefox = 'undefined' !== typeof InstallTrigger,
            isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > - 1,
            isIE = /*@cc_on!@*/
                false || !!document.documentMode,
            isEdge = !isIE && !!window.StyleMedia,
            isChrome = !!window.chrome && !!window.chrome.webstore,
            isBlink = (isChrome || isOpera) && !!window.CSS;
        return {
            isApp: isApp,
            isTabletApp: isTabletApp,
            isSmartphoneApp: isSmartphoneApp,
            isIOS: isIOS,
            isAndroid: isAndroid,
            browser: {
                isIE: isIE,
                isEdge: isEdge,
                isChrome: isChrome,
                isFirefox: isFirefox,
                isSafari: isSafari,
                isBlink: isBlink,
                isOpera: isOpera
            },
            getOs: getOs,
            getType: getDeviceType,
            getRelease: getRelease,
            getAppVersion: getAppVersion,
            useNewAmsBridgeCalls: useNewAmsBridgeCalls
        }
    })
}(); !function () {
    'use strict';
    define('pf-pattern', [
    ], function () {
        return {
            FLOATING_NUMBER: /^\d{1,3}(?:(?:'\d{3})*(?:[.]\d{2})?|\d*(?:[.']\d{0,2})?)$/,
            NEGATIVE_FLOATING_NUMBER: /^-?\d{1,3}(?:(?:'\d{3})*(?:[.]\d{2})?|\d*(?:[.']\d{0,2})?)$/,
            IBAN: /^(IBAN|IBAN:|iban|iban:)?\s*[A-Za-z]{2}\d{2}[0-9A-Za-z]{11,30}$/,
            POST_ACCOUNT_IBAN: /^(IBAN|IBAN:|iban|iban:)?\s*[A-Za-z]{2}\d{2}09000\d{12}$/,
            POST_ACCOUNT: /^(?:\d{4,9})$|^(?:\d{2}-\d{1,6}-\d)$/,
            EUR_ESR: /^03-\d{1,6}-\d/,
            CHF_ESR: /^01-\d{1,6}-\d/,
            AT_LEAST_ONE_DIGIT: /.*\d.*/,
            TRANSLATION_KEY: /^[a-z][A-Za-z]+\.[A-Za-z]+/,
            PRODUCT_UNIQUE_KEY: /^(.*)_(\d+)_(\d+)$/,
            URL_PF_INTERNAL: /^(?:https?:\/\/(?:www(?:-dev|-dev2|-test|-t2)?\.(?:postfinance|post)\.ch|localhost:\d+)+)?\//,
            URL_FIPO_INTERNAL: /^(?:https?:\/\/(?:www(?:-dev|-dev2|-test|-t2)?\.(?:postfinance|post)\.ch|localhost:\d+)+)?\/ap\/(?:ba|ga)\/fp\//,
            URL_CERT_PINNING_OK: /^https:\/\/www(?:-test|-t2)?\.postfinance\.ch\/(?:ap\/|cc\/|help\/|content\/help\/|fipo\/|content\/fipo\/|.*\.pdf$)/i,
            ISR_CODE_LINE: /^(?:(\d{3}|\d{13})>(\d{27})\+ )?(\d{9})>$/,
            REFERENCE_NUMBER: /^\d{2,27}/
        }
    })
}(); !function () {
    'use strict';
    define('pf-angular-logger_supplant', function (require) {
        var _ = require('lodash');
        return function (template, values, pattern) {
            var replacePattern = pattern || /\{([^\{}]*)}/g;
            return _.replace(template, replacePattern, function (a, b) {
                var p = _.split(b, '.'),
                    r = values;
                try {
                    for (var keys = _.keys(p), len = keys.length, index = 0; index < len; ++index) {
                        var s = keys[index];
                        r = r[p[s]]
                    }
                } catch (e) {
                    r = a
                }
                if (_.isString(r) || _.isNumber(r)) return r;
                else if (_.isObject(r)) return '\n' + JSON.stringify(r, null, ' ');
                return a
            })
        }
    })
}(); !function () {
    'use strict';
    define('pf-angular-logger', function loggerDefineFn(require) {
        function logConfigurator($logProvider) {
            $logProvider.debugEnabled(true)
        }
        function logDecorator($provide) {
            function delegator($delegate) {
                enhanceLogger($delegate);
                return $delegate
            }
            delegator.$inject = [
                '$delegate'
            ];
            $provide.decorator('$log', delegator)
        }
        var _ = require('lodash'),
            angular = require('angular'),
            supplant = require('pf-angular-logger_supplant'),
            platform = require('pf-shared-modules-platform'),
            moduleName = 'postfinance.shared.logger',
            module = angular.module(moduleName, [
            ]),
            enhanceLogger = function ($log) {
                var _$log = function (original) {
                        return {
                            log: original.log,
                            debug: original.debug,
                            info: original.info,
                            warn: original.warn,
                            error: original.error
                        }
                    }($log),
                    prepareLogFn = function (level, logFn, name) {
                        var enhancedLogFn = function () {
                            try {
                                for (var length = arguments.length, args = [
                                ], i = 0; i < length; ++i) args[i] = arguments[i];
                                var now = new Date(Date.now());
                                args[0] = supplant('{0} - {1}', [
                                    name,
                                    args[0]
                                ]);
                                args = supplant.apply(null, args);
                                if (!_.includes(args, 'Possibly unhandled rejection')) platform.sendLog(name, level, args, now);
                                if (platform.isClientLoggingEnabled(level)) {
                                    args = supplant('{0} - {1}', [
                                        now.toISOString(),
                                        args
                                    ]);
                                    logFn.apply(null, [
                                        args
                                    ])
                                }
                            } catch (error) {
                                $log.error('Error in $log decorator: ' + error)
                            }
                        };
                        enhancedLogFn.logs = [
                        ];
                        return enhancedLogFn
                    };
                $log.getInstance = function (name) {
                    var loggerName = _.defaultTo(name, 'Client'),
                        debugEnabled = platform.isDebugRemoteLoggingEnabled(loggerName);
                    return {
                        debug: prepareLogFn(pf.globals.logging.levels.DEBUG, _$log.debug, loggerName),
                        info: prepareLogFn(pf.globals.logging.levels.INFO, _$log.info, loggerName),
                        warn: prepareLogFn(pf.globals.logging.levels.WARN, _$log.warn, loggerName),
                        error: prepareLogFn(pf.globals.logging.levels.ERROR, _$log.error, loggerName),
                        isDebugEnabled: function () {
                            return debugEnabled
                        }
                    }
                };
                return $log
            };
        logConfigurator.$inject = [
            '$logProvider'
        ];
        module.config(logConfigurator);
        logDecorator.$inject = [
            '$provide'
        ];
        module.config(logDecorator);
        return {
            moduleName: moduleName
        }
    })
}(); !function () {
    'use strict';
    define('pf-angular-filters-format', [
        'require',
        'lodash',
        'angular',
        'jquery',
        'moment',
        'pf-shared-modules-numbers',
        'pf-shared-modules-phone',
        'pf-shared-modules-wcms_enum_generator',
        'pf-shared-modules-platform',
        'pf-shared-modules-formatter',
        'pf-shared-modules-credit_card',
        'pf-shared-modules-translator_direct',
        'pf-shared-modules-currencies'
    ], function (require) {
        function unsafe($sce) {
            return function (value) {
                return $sce.trustAsHtml(value || '')
            }
        }
        function safe($sce) {
            return function (value) {
                var safeVal = _.escape(value);
                safeVal = safeVal.replace(/(?:\r\n|\r|\n|\\n)/g, '<br/>');
                return $sce.trustAsHtml(safeVal)
            }
        }
        function highlight($sce) {
            return function (value, term) {
                var replaceTerm = _.escapeRegExp(formatter.formatGenericAccount(_.trim(term))),
                    regexp = new RegExp(replaceTerm, 'ig'),
                    match = value.match(regexp),
                    safeVal = _.escape(value);
                if (match) safeVal = safeVal.replace(match[0], '<b>' + _.escape(match[0]) + '</b>');
                return $sce.trustAsHtml(safeVal)
            }
        }
        function isoDateToFullLocalized() {
            var scope = {
                    textKey: 'global'
                },
                enumMonth = wcmsEnum.getEnumObject('monthfull', scope);
            return function (date) {
                if (!date) return '';
                var fullDate = moment(date, 'YYYY-MM-DD');
                if (fullDate.isValid()) {
                    var day = fullDate.format('D'),
                        month = fullDate.format('M'),
                        year = fullDate.format('YYYY');
                    _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
                    var fullDateTranslation = translatorDirect.translate('FullDate', scope);
                    return _.template(fullDateTranslation) ({
                        day: day,
                        month: translatorDirect.translate(enumMonth[month].key, scope),
                        year: year
                    })
                }
                return null
            }
        }
        function isoDateToMonthYear() {
            return function (date) {
                if (!date) return '';
                var fullDate = moment(date, 'YYYY-MM-DD');
                if (fullDate.isValid()) return fullDate.format('MM/YYYY');
                else return null
            }
        }
        function isoDateToFullMonthLocalized() {
            var scope = {
                    textKey: 'global'
                },
                enumMonth = wcmsEnum.getEnumObject('monthfull', scope);
            return function (date) {
                if (!date) return '';
                var fullDate = moment(date, 'YYYY-MM-DD');
                if (fullDate.isValid()) {
                    var month = fullDate.format('M');
                    return translatorDirect.translate(enumMonth[month].key, scope)
                }
                return null
            }
        }
        function localeSorter(a, b) {
            if (a && b) return a.localeCompare(b, currentLocale);
            else return null
        }
        var _ = require('lodash'),
            angular = require('angular'),
            jQuery = require('jquery'),
            moment = require('moment'),
            numbers = require('pf-shared-modules-numbers'),
            phone = require('pf-shared-modules-phone'),
            wcmsEnum = require('pf-shared-modules-wcms_enum_generator'),
            platform = require('pf-shared-modules-platform'),
            formatter = require('pf-shared-modules-formatter'),
            creditCard = require('pf-shared-modules-credit_card'),
            translatorDirect = require('pf-shared-modules-translator_direct'),
            currencies = require('pf-shared-modules-currencies'),
            moduleName = 'postfinance.shared.filters.format',
            module = angular.module(moduleName, [
            ]);
        unsafe.$inject = [
            '$sce'
        ];
        module.filter('unsafe', unsafe);
        module.filter('content', unsafe);
        safe.$inject = [
            '$sce'
        ];
        module.filter('safe', safe);
        module.filter('renderHtml', function renderHtml() {
            return function (value) {
                return jQuery('<div/>').html(value).text()
            }
        });
        highlight.$inject = [
            '$sce'
        ];
        module.filter('highlight', highlight);
        module.filter('postalAccountNumberToIban', function postalAccountNumberToIban() {
            return function (number, withoutSpaces) {
                return formatter.postalAccountNumberToIban(number, withoutSpaces)
            }
        });
        module.filter('number', function amount() {
            return numbers.formatNumber
        });
        module.filter('amount', function amount() {
            return numbers.filterAmount
        });
        module.filter('fundShares', function amountShares() {
            return numbers.formatFundShares
        });
        module.filter('amountWithForeignCurrency', function amountWithForeignCurrency() {
            return numbers.formatAmountWithCurrency
        });
        module.filter('amountWithCurrency', function amountWithCurrency() {
            return numbers.formatAmountWithCurrency
        });
        module.filter('amountWithCurrencyMobile', function amountWithCurrencyMobile() {
            return numbers.formatAmountWithCurrencyMobile
        });
        module.filter('currency', function amountWithCurrency() {
            return currencies.format
        });
        module.filter('eBillContractNumber', function eBillContractNumber() {
            return function (value) {
                return formatter.formatEBillContractNumber(value)
            }
        });
        module.filter('iban', function iban() {
            return function (value) {
                return formatter.formatIban(value)
            }
        });
        module.filter('postalAccount', function postalAccount() {
            return function (value) {
                return formatter.formatAccountNumber(value)
            }
        });
        module.filter('genericAccount', function genericAccount() {
            return function (value) {
                return formatter.formatGenericAccount(value)
            }
        });
        module.filter('ibanToPostalAccount', function postalAccount() {
            return function (value) {
                return formatter.extractAccountNumber(value)
            }
        });
        module.filter('esr', function esr() {
            return function (value) {
                return formatter.formatEsrNumber(value)
            }
        });
        module.filter('referenceNumber', function referenceNumber() {
            return function (value) {
                return formatter.formatReferenceNumber(value)
            }
        });
        module.filter('poolNumber', function poolNumber() {
            return function (value, currency) {
                return formatter.formatPoolNumber(value, currency)
            }
        });
        module.filter('isoDateToLocalized', function isoDateToLocalized() {
            return function (date) {
                return formatter.isoDateToLocalized(date)
            }
        });
        module.filter('localizedDateToIso', function localizedDateToIso() {
            return function (date) {
                return formatter.localizedDateToIso(date)
            }
        });
        module.filter('isoDateToTime', function isoDateToTime() {
            return function (date) {
                return formatter.isoDateToTime(date)
            }
        });
        module.filter('isoDateToDatetime', function isoDateToDatetime() {
            return function (date) {
                return formatter.isoDateToDatetime(date)
            }
        });
        module.filter('isoDateToFullLocalized', isoDateToFullLocalized);
        module.filter('isoDateToMonthYear', isoDateToMonthYear);
        module.filter('isoDateToFullMonthLocalized', isoDateToFullMonthLocalized);
        module.filter('retirementAccountNumber', function retirementAccountNumber() {
            return function (nr) {
                return formatter.formatRetirementAccountNumber(nr)
            }
        });
        module.filter('truncate', function truncate() {
            return function (text, length, end) {
                return formatter.truncate(text, length, end)
            }
        });
        module.filter('normalizedSwissPhoneNumber', function normalizedSwissPhoneNumber() {
            return phone.normalizedSwissPhoneNumber
        });
        module.filter('normalizedPhoneNumber', function normalizedPhoneNumber() {
            return phone.normalizedPhoneNumber
        });
        module.filter('cardId', function cardId() {
            return function (value) {
                return formatter.formatCardId(value)
            }
        });
        module.filter('shortenString', function shortenString() {
            return function (input, maxLength, suffix) {
                return formatter.shortenString(input, maxLength, suffix)
            }
        });
        module.filter('toCamelCase', function toCamelCase() {
            return function (input) {
                return _.camelCase(input)
            }
        });
        module.filter('orderObjectBy', function () {
            return function (items, field, reverse, useLocaleSorter) {
                var filtered = [
                ];
                angular.forEach(items, function (item) {
                    filtered.push(item)
                });
                filtered.sort(function (a, b) {
                    if (useLocaleSorter) return localeSorter(a[field], b[field]);
                    else return a[field] > b[field] ? 1 : - 1
                });
                if (reverse) filtered.reverse();
                return filtered
            }
        });
        module.filter('orderCurrencies', function () {
            return function (items, field, reverse) {
                var filtered = [
                ];
                angular.forEach(items, function (item) {
                    filtered.push(item)
                });
                if (null === reverse) filtered.sort(function (a, b) {
                    if (a.isMainCurrency === b.isMainCurrency) return localeSorter(a.country, b.country);
                    else return a.isMainCurrency ? - 1 : 1
                });
                else {
                    filtered.sort(function (a, b) {
                        return localeSorter(a[field], b[field])
                    });
                    if (reverse) filtered.reverse()
                }
                return filtered
            }
        });
        module.filter('percentRaw', function percentRaw() {
            return function (value, digits) {
                return formatter.percentRaw(value, digits)
            }
        });
        module.filter('formatPhone', function formatPhone() {
            return phone.formatPhone
        });
        module.filter('creditCardAccountNumber', function creditCardAccountNumber() {
            return creditCard.formatAccountNumber
        });
        module.filter('creditCardCardNumber', function creditCardCardNumber() {
            return creditCard.formatCardNumber
        });
        module.filter('creditCardCardNumberShort', function creditCardCardNumberShort() {
            return creditCard.formatCardNumberShort
        });
        module.filter('capitalize', function capitalize() {
            return function (input) {
                return !!input ? _.capitalize(input)  : ''
            }
        });
        module.filter('floor', function floor() {
            return function (input) {
                if (input) return formatter.floor(input);
                else return null
            }
        });
        module.filter('telephoneLink', function telephoneLink() {
            return function (input) {
                if (input) return formatter.wrapInTelephoneLink(input);
                else return null
            }
        });
        module.filter('currencyRate', function currencyRate() {
            return function (input, digits) {
                if (!_.isNil(input)) return formatter.currencyRate(input, digits);
                else return null
            }
        });
        module.filter('performance', function performance() {
            return function (input, digits) {
                if (!_.isNil(input)) return formatter.performance(input, digits);
                else return null
            }
        });
        var currentLocale = platform.getPageLocale();
        return {
            moduleName: moduleName
        }
    })
}(); !function () {
    'use strict';
    define('pf-angular-filters-translate', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-util',
        'pf-shared-modules-translator'
    ], function (require) {
        function pfAriaText() {
            return {
                scope: {
                },
                bindToController: {
                    pfAriaText: '@'
                },
                controllerAs: 'vm',
                controller: _.noop,
                restrict: 'A',
                template: '<span pf-translate="{{vm.pfAriaText}}"></span><span class="is-visuallyhidden">&nbsp;<span pf-translate="{{vm.pfAriaText + \'Aria\'}}" translate-keep-content=""></span></span>'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            util = require('pf-shared-modules-util'),
            translator = require('pf-shared-modules-translator'),
            moduleName = 'postfinance.shared.filters.translate',
            module = angular.module(moduleName, [
            ]);
        module.filter('pfTranslate', function pfTranslate() {
            return function translateFilter(key, scope, interpolateParams) {
                if (!key) return null;
                else return translator.translate(key, scope, interpolateParams)
            }
        });
        module.filter('pfExpandKey', function pfExpandKey() {
            return function (key, scope) {
                return util.expandKey(key, scope)
            }
        });
        module.filter('pfchReplace', function pfchReplace() {
            return function (text, params) {
                var result = text;
                if (result) for (var i = 0; i < params.length; i++) result = result.replace('::' + i + '::', params[i]);
                return result
            }
        });
        module.filter('widgetTitleFromInstanceId', function widgetTitleFromInstanceId() {
            return function (key) {
                if (!key) return null;
                else return 'widgets.' + _.last(_.split(key, '-')) + '.WidgetTitle'
            }
        });
        module.directive('pfAriaText', pfAriaText);
        return {
            moduleName: moduleName
        }
    })
}(); !function () {
    'use strict';
    define('pf-angular-filters', [
        'require',
        'lodash',
        'angular',
        'pf-angular-filters-format',
        'pf-angular-filters-translate',
        'pf-shared-modules-util',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        var _ = require('lodash'),
            angular = require('angular'),
            pfAngularFiltersFormat = require('pf-angular-filters-format'),
            pfAngularFiltersTranslate = require('pf-angular-filters-translate'),
            util = require('pf-shared-modules-util'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            moduleName = 'postfinance.shared.filters',
            module = angular.module(moduleName, [
                pfAngularFiltersFormat.moduleName,
                pfAngularFiltersTranslate.moduleName
            ]);
        module.filter('visibleFilter', function () {
            function extractTableRowContents(tableId) {
                var table = document.getElementById(tableId),
                    selector = tableSelectorTemplate({
                        tableId: tableId
                    }),
                    rows = table.querySelectorAll(selector);
                return _.map(rows, function (row) {
                    var columns = _.filter(row.children, function (child) {
                            return !_.some(excludedColumns, function (exludedColumn) {
                                return _.includes(child.classList, exludedColumn)
                            })
                        }),
                        rowContent = _.join(_.map(columns, 'textContent'), '');
                    return {
                        id: row.id,
                        text: util.normalizeText(rowContent)
                    }
                })
            }
            function modelChanged(oldModel, newModel) {
                if (oldModel.length !== newModel.length) return true;
                else return !_.isEqual(oldModel, newModel)
            }
            var LOG = loggerFactory.getLogger('VisibleFilter'),
                tableSelector = '#<%- tableId %>>li:not(.is-dummy), #<%- tableId %>>tr, #<%- tableId %>>tbody>tr',
                tableSelectorTemplate = _.template(tableSelector),
                excludedColumns = [
                    'pf-table_list--actions'
                ],
                globalFilterData = {
                };
            return function (model, searchQuery, tableId) {
                if (!util.hasValue(model) || !util.hasValue(searchQuery)) return model;
                if (!_.isArray(model)) throw new Error('Model must be an array, received: ' + typeof model);
                if (!_.isString(searchQuery)) throw new Error('Search query must be a string, received: ' + typeof searchQuery);
                if (_.isEmpty(globalFilterData[tableId]) || modelChanged(globalFilterData[tableId].model, model)) {
                    var visibleTableRows = extractTableRowContents(tableId);
                    if (visibleTableRows.length !== model.length) {
                        LOG.warn('Not all model rows are displayed, can not create table model for table [{0}] ', [
                            tableId
                        ]);
                        return model
                    }
                    globalFilterData[tableId] = {
                        model: model,
                        searchCache: {
                        },
                        entries: _.map(visibleTableRows, function (tableRow, index) {
                            return {
                                rowId: tableRow.id,
                                text: tableRow.text,
                                modelItem: model[index]
                            }
                        })
                    }
                }
                var tableData = globalFilterData[tableId],
                    searchTerm = util.normalizeText(searchQuery),
                    searchResult = tableData.searchCache[searchTerm];
                if (_.isNil(searchResult)) {
                    var filteredRows = _.filter(tableData.entries, function (entry) {
                        return _.includes(entry.text, searchTerm)
                    });
                    searchResult = _.map(filteredRows, 'modelItem') || [
                    ];
                    tableData.searchCache[searchTerm] = searchResult
                }
                return searchResult
            }
        });
        return {
            moduleName: moduleName
        }
    })
}(); !function () {
    'use strict';
    define('pf-widget-functions', [
        'require',
        'lodash',
        'pf-sessiondata-urlmapping',
        'pf-shared-modules-platform',
        'pf-shared-modules-detail_page_names',
        'pf-shared-modules-urls',
        'pf-shared-modules-loggerfactory'
    ], function (require) {
        var _ = require('lodash'),
            urlMapping = require('pf-sessiondata-urlmapping'),
            platform = require('pf-shared-modules-platform'),
            detailPageNames = require('pf-shared-modules-detail_page_names'),
            urls = require('pf-shared-modules-urls'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            getUrlMappingForWidget = function getUrlMappingForWidget(widgetName) {
                if (!urlMapping.widgets[widgetName]) throw new Error('URL mapping not found for widget with ID ' + widgetName);
                return urlMapping.widgets[widgetName]
            },
            getUrlMappingForPage = function getUrlMappingForPage() {
                if (!urlMapping.pages || !urlMapping.pages[platform.getPageName()]) return null;
                else return urlMapping.pages[platform.getPageName()]
            },
            getUrlMappingForDetailPage = function getUrlMappingForDetailPage(detailPageName) {
                if (!urlMapping.detailpages[detailPageName]) throw new Error('URL mapping not found for detailpage with ID ' + detailPageName);
                return urlMapping.detailpages[detailPageName]
            },
            cloneUrlObject = function cloneUrlObject(widgetName, obj, replacementObj) {
                var url = urls.replaceLanguageInUrl(platform.absoluteUrl(obj.url));
                url = urls.replacePortalTypeInUrl(url);
                url = urls.replaceUiMarketSegmentInUrl(url);
                url = urls.replaceWcmsTypeInUrl(url);
                url = urls.replaceStaticContentInUrl(url);
                var params = urls.replaceParameter(obj, replacementObj);
                return {
                    widgetName: widgetName,
                    url: url,
                    params: params,
                    headers: obj.headers || null,
                    type: obj.type || 'PFJSON',
                    groupTitleKey: obj.groupTitleKey,
                    config: obj.config || {
                    }
                }
            },
            cloneAndSetupUrlObject = function cloneAndSetupUrlObject(widgetName, obj, replacementObj) {
                var resultObj = obj;
                if (!obj || _.isArray(obj) && _.isEmpty(obj)) return null;
                if (_.isArray(obj) && 1 === obj.length) resultObj = obj[0];
                if (_.isArray(resultObj)) return _.map(resultObj, function (item) {
                    return cloneUrlObject(widgetName, item, replacementObj)
                });
                else return cloneUrlObject(widgetName, resultObj, replacementObj)
            },
            getWidgetPath = function getWidgetPath(widgetName) {
                return pf.globals.urlprefix.BUNDLE + '/widgets/' + widgetName
            },
            getDetailPagePath = function getDetailPagePath(detailPageName) {
                return pf.globals.urlprefix.BUNDLE + '/detailpages/' + detailPageName
            },
            getDataUrl = function getDataUrl(widgetName, replacementObj) {
                var urlObj = getUrlMappingForWidget(widgetName).dataUrls;
                if (urlObj && 1 === urlObj.length) urlObj = urlObj[0];
                return cloneAndSetupUrlObject(widgetName, urlObj, replacementObj)
            },
            getDataUrlForDetailPage = function getDataUrlForDetailPage(detailPageName, replacementObj) {
                var dataUrl = getUrlMappingForDetailPage(detailPageName).dataUrls;
                if (dataUrl && 1 === dataUrl.length) dataUrl = dataUrl[0];
                return cloneAndSetupUrlObject(detailPageName, dataUrl, replacementObj)
            },
            getAdditionalDataUrl = function getAdditionalDataUrl(widgetName, replacementObj) {
                var urlObj = getUrlMappingForWidget(widgetName).additionalDataUrl;
                return cloneAndSetupUrlObject(widgetName, urlObj, replacementObj)
            },
            getDetailUrls = function getDetailUrls(widgetName, replacementObj) {
                var urlObjs = getUrlMappingForWidget(widgetName).detailUrls;
                return cloneAndSetupUrlObject(widgetName, urlObjs, replacementObj)
            },
            getActionUrl = function getActionUrl(widgetName, actionId, replacementObj) {
                var urlObj = getUrlMappingForWidget(widgetName).actionUrls[actionId];
                return cloneAndSetupUrlObject(widgetName, urlObj, replacementObj)
            },
            hasActionUrl = function (widgetName, actionId) {
                return null !== getActionUrl(widgetName, actionId)
            },
            getActionUrlForDetailPage = function getActionUrlForDetailPage(detailPageName, actionId, replacementObj) {
                var urlObj = getUrlMappingForDetailPage(detailPageName).actionUrls[actionId];
                return cloneAndSetupUrlObject(detailPageName, urlObj, replacementObj)
            },
            hasActionUrlForDetailPage = function (detailPageName, actionId) {
                return null !== getActionUrlForDetailPage(detailPageName, actionId)
            },
            getActionUrlForPage = function getActionUrlForPage(actionId, replacementObj) {
                var urlMappingObj = getUrlMappingForPage();
                if (!urlMappingObj) return null;
                var urlObj = getUrlMappingForPage().actionUrls[actionId];
                return cloneAndSetupUrlObject(platform.getPageName(), urlObj, replacementObj)
            },
            hasActionUrlForPage = function (actionId) {
                return null !== getActionUrlForPage(actionId)
            },
            getHelpUrl = function getHelpUrl(widgetName, helpId, replacementObj) {
                var helpUrls = getUrlMappingForWidget(widgetName).helpUrls;
                if (!helpUrls) return null;
                else return cloneAndSetupUrlObject(widgetName, helpUrls[helpId], replacementObj)
            },
            getHelpUrlForDetailPage = function getHelpUrlForDetailPage(detailPageName, helpId, replacementObj) {
                var helpUrls = getUrlMappingForDetailPage(detailPageName).helpUrls;
                if (!helpUrls) return null;
                else return cloneAndSetupUrlObject(detailPageName, helpUrls[helpId], replacementObj)
            },
            openDetailPage = function openDetailPage(urlObj) {
                if ('overlay' === _.get(urlObj, 'config.target')) gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_OVERLAY, urlObj);
                else gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_IN_POPUP, urlObj)
            },
            processUrlObject = function processUrlObject(urlObj) {
                if (!_.isEmpty(urlObj)) {
                    if (_.includes(urlObj.url, pf.globals.urlprefix.NOT_IN_DEMO)) {
                        notInDemo();
                        return
                    }
                    switch (urlObj.type) {
                        case pf.globals.pageTypes.PORTAL:
                            urls.openFipoUrl(urlObj);
                            break;
                        case pf.globals.pageTypes.INTERNAL:
                            urls.openInternalUrl(urlObj);
                            break;
                        case pf.globals.pageTypes.EXTERNAL:
                            urls.openExternalUrl(urlObj);
                            break;
                        default:
                            openDetailPage(urlObj)
                    }
                }
            },
            buildJsonUrlObject = function buildJsonUrlObject(detailpageName, stateToGo, params, data) {
                var urlObj = {
                    url: detailPageNames.createRequireName(detailpageName),
                    type: 'JSON'
                };
                if (stateToGo) urlObj.config = {
                    stateToGo: stateToGo
                };
                if (!_.isEmpty(params)) urlObj.params = params;
                if (!_.isEmpty(data)) urlObj.data = data;
                return urlObj
            },
            openDeeplink = function openDeeplink(actionType, params, widgetName) {
                var LOG = loggerFactory.getLogger('Deeplinks');
                if (actionType) {
                    var urlObj = getActionUrl(widgetName, actionType, params);
                    if (urlObj) {
                        urlObj.params = urlObj.params || {
                        };
                        _.assign(urlObj.params, params);
                        urlObj.actionType = urlObj.actionType || actionType;
                        processUrlObject(urlObj)
                    } else {
                        LOG.error('Error opening deeplink {0}. Does not exist in URL mapping.', [
                            actionType
                        ]);
                        window.location.href = 'home'
                    }
                } else {
                    var detailUrls;
                    if (this.service) detailUrls = this.service.detailUrls;
                    else detailUrls = getDetailUrls(widgetName, params);
                    this.openDetailPage(detailUrls)
                }
            },
            toggleMobileMainPageTitle = function toggleMobileMainPageTitle(isDetailPage) {
                if (platform.isMobile()) {
                    var titleNode = document.querySelector('.site-content--page--title');
                    if (titleNode) if (isDetailPage) titleNode.classList.add('display-none');
                    else titleNode.classList.remove('display-none')
                }
            };
        return {
            getUrlMappingForDetailPage: getUrlMappingForDetailPage,
            getUrlMappingForPage: getUrlMappingForPage,
            cloneAndSetupUrlObject: cloneAndSetupUrlObject,
            getWidgetPath: getWidgetPath,
            getDetailPagePath: getDetailPagePath,
            getDataUrl: getDataUrl,
            getDataUrlForDetailPage: getDataUrlForDetailPage,
            getAdditionalDataUrl: getAdditionalDataUrl,
            getDetailUrls: getDetailUrls,
            getActionUrl: getActionUrl,
            hasActionUrl: hasActionUrl,
            getActionUrlForDetailPage: getActionUrlForDetailPage,
            hasActionUrlForDetailPage: hasActionUrlForDetailPage,
            getActionUrlForPage: getActionUrlForPage,
            hasActionUrlForPage: hasActionUrlForPage,
            getHelpUrl: getHelpUrl,
            getHelpUrlForDetailPage: getHelpUrlForDetailPage,
            openDetailPage: openDetailPage,
            toggleMobileMainPageTitle: toggleMobileMainPageTitle,
            openDeeplink: openDeeplink,
            processUrlObject: processUrlObject,
            buildJsonUrlObject: buildJsonUrlObject
        }
    })
}();
!function () {
    'use strict';
    define('pf-formly-config', [
        'require',
        'lodash',
        'angular',
        'pf-shared-modules-platform',
        'angular-formly',
        'directive-emit_on_ngrepeat_end',
        'directive-email_validation_attr',
        'directive-widget-dropdown'
    ], function (require) {
        function _baseTemplateUrl(name, type) {
            return platform.getFormlyTemplateRoot() + type + '-' + name + '.html'
        }
        function _wrapperTemplateUrl(name) {
            return _baseTemplateUrl(name, '/wrappers/formly-wrapper')
        }
        function _fieldTemplateUrl(name) {
            return _baseTemplateUrl(name, '/fields/formly-field')
        }
        function setWrappers(formlyConfigProvider) {
            WRAPPERS.map(function (wrapper) {
                formlyConfigProvider.setWrapper({
                    name: wrapper.name,
                    templateUrl: wrapper.templateUrl ? wrapper.templateUrl : _wrapperTemplateUrl(wrapper.name)
                });
                return wrapper.name
            })
        }
        function setFields(formlyConfig) {
            FIELDS.map(function (field) {
                formlyConfig.setType({
                    name: field.name,
                    templateUrl: field.templateUrl && !field.extends ? field.templateUrl : field.extends ? void 0 : _fieldTemplateUrl(field.name),
                    extends: field.extends ? field.extends : void 0,
                    wrapper: field.wrapper ? field.wrapper : void 0,
                    controller: field.controller ? field.controller : void 0,
                    link: field.link ? field.link : void 0
                })
            })
        }
        function setDefaults(formlyConfig, formlyValidationMessages) {
            formlyConfig.extras.ngModelAttrsManipulatorPreferBound = true;
            formlyConfig.disableWarnings = true;
            VALIDATION_MESSAGES.map(function (validation) {
                formlyValidationMessages.addStringMessage(validation.name, validation.message)
            });
            formlyValidationMessages.messages.pattern = function (viewValue, modelValue) {
                return (viewValue || modelValue) + ' is invalid'
            }
        }
        var _ = require('lodash'),
            angular = require('angular'),
            platform = require('pf-shared-modules-platform'),
            angularFormly = require('angular-formly'),
            directiveEmitOnNgrepeatEnd = require('directive-emit_on_ngrepeat_end'),
            directiveEmailValidationAttr = require('directive-email_validation_attr'),
            directiveWidgetDropdown = require('directive-widget-dropdown'),
            moduleName = 'postfinance.shared.formly-config',
            VALIDATION_MESSAGES = [
                {
                    name: 'required',
                    message: 'global.messages.Required'
                },
                {
                    name: 'maxlength',
                    message: 'global.messages.Maxlength'
                },
                {
                    name: 'minlength',
                    message: 'global.messages.Minlength'
                },
                {
                    name: 'serverResult',
                    message: 'global.messages.Invalid'
                }
            ],
            WRAPPERS = [
                {
                    name: 'label-before'
                },
                {
                    name: 'label-after'
                },
                {
                    name: 'fieldset-row'
                },
                {
                    name: 'fieldset-column'
                },
                {
                    name: 'ul'
                },
                {
                    name: 'checkbox'
                },
                {
                    name: 'error'
                },
                {
                    name: 'label-before-error'
                }
            ],
            FIELDS = [
                {
                    name: 'readonly'
                },
                {
                    name: 'readonly-with-label',
                    extends: 'readonly',
                    wrapper: 'label-before'
                },
                {
                    name: 'input'
                },
                {
                    name: 'text-input'
                },
                {
                    name: 'text-input-with-label',
                    extends: 'text-input',
                    wrapper: 'label-before-error'
                },
                {
                    name: 'radio'
                },
                {
                    name: 'radio-with-label',
                    extends: 'radio',
                    wrapper: 'label-before-error'
                },
                {
                    name: 'radio-vertical'
                },
                {
                    name: 'radio-vertical-with-label',
                    extends: 'radio-vertical',
                    wrapper: 'label-before-error'
                },
                {
                    name: 'datepicker'
                },
                {
                    name: 'datepicker-with-label',
                    extends: 'datepicker',
                    wrapper: 'label-before'
                },
                {
                    name: 'datepicker-apo'
                },
                {
                    name: 'datepicker-apo-with-label',
                    extends: 'datepicker-apo',
                    wrapper: 'label-before'
                },
                {
                    name: 'select'
                },
                {
                    name: 'select-with-label',
                    extends: 'select',
                    wrapper: 'label-before-error'
                },
                {
                    name: 'select-runtime',
                    wrapper: 'label-before-error'
                },
                {
                    name: 'checkbox',
                    wrapper: [
                        'label-after',
                        'checkbox',
                        'error'
                    ]
                },
                {
                    name: 'multicheckbox',
                    wrapper: 'label-before-error',
                    controller: [
                        '$scope',
                        function ($scope) {
                            function setModel() {
                                $scope.model[opts.key] = '';
                                _.forEach($scope.multiCheckbox.checked, function (checkbox, i) {
                                    if (checkbox) {
                                        $scope.model[opts.key] += _.orderBy(to.options, [
                                            'sortNumber'
                                        ]) [i].value;
                                        if (i < $scope.multiCheckbox.checked.length - 1) $scope.model[opts.key] += ','
                                    }
                                });
                                if (_.endsWith($scope.model[opts.key], ',')) $scope.model[opts.key] = $scope.model[opts.key].slice(0, - 1);
                                if (!_.isUndefined($scope.fc)) $scope.fc.$setTouched()
                            }
                            var to = $scope.to,
                                opts = $scope.options;
                            $scope.multiCheckbox = {
                                checked: [
                                ],
                                change: setModel
                            };
                            $scope.$watch('model', function modelWatcher(newModelValue) {
                                if (Object.keys(newModelValue).length) {
                                    var modelValue = newModelValue[opts.key];
                                    $scope.$watch('to.options', function optionsWatcher(newOptionsValues) {
                                        if (newOptionsValues && _.isArray(newOptionsValues) && !_.isUndefined(modelValue)) for (var i = 0; i < newOptionsValues.length; i++) $scope.multiCheckbox.checked[i] = modelValue.split(',').indexOf(String(_.orderBy(newOptionsValues, [
                                            'sortNumber'
                                        ]) [i].value)) !== - 1
                                    })
                                }
                            }, true);
                            if (opts.initialValue) {
                                var initialValue = opts.initialValue;
                                if (initialValue.split(',').length > 1) {
                                    $scope.model[opts.key] = '';
                                    _.forEach(initialValue.split(','), function (value) {
                                        var index = _.findKey(_.orderBy(to.options, [
                                            'sortNumber'
                                        ]), {
                                            value: parseInt(value, 10)
                                        });
                                        if (index !== - 1) $scope.multiCheckbox.checked[index] = true
                                    }.bind(this));
                                    setModel()
                                } else {
                                    var index = _.findKey(_.orderBy(to.options, [
                                        'sortNumber'
                                    ]), {
                                        value: parseInt(initialValue, 10)
                                    });
                                    if (index !== - 1) {
                                        $scope.multiCheckbox.checked[index] = true;
                                        setModel()
                                    }
                                }
                            }
                        }
                    ],
                    link: function (scope, element, attrs) {
                        var unsubscribe = scope.$onRootScope('ngRepeatFinished', angular.bind(this, function (s, e) {
                            var checkboxes = angular.element(e).find('input'),
                                values;
                            if (_.isUndefined(scope.model[scope.options.key])) values = s.options.initialValue;
                            else values = s.model[s.options.key];
                            if (_.isArray(values) && !_.isEmpty(values)) _.forEach(values.split(','), function (value) {
                                var index = _.findKey(s.to.options, {
                                    value: value
                                });
                                checkboxes[index].checked = true
                            }.bind(this));
                            unsubscribe()
                        }, scope, element, attrs))
                    }
                },
                {
                    name: 'paragraph-text',
                    templateUrl: _baseTemplateUrl('paragraph-text', '/text/formly-text')
                },
                {
                    name: 'paragraph-title',
                    templateUrl: _baseTemplateUrl('heading-h2', '/text/formly-text')
                },
                {
                    name: 'screenkey',
                    templateUrl: _baseTemplateUrl('screenkey', '/text/formly-text')
                }
            ];
        angular.module(moduleName, [
            'formly',
            'directive.emit_on_ngrepeat_end',
            'directive.email_validation_attr',
            'directive.widget.dropdown'
        ]).config(['formlyConfigProvider',
            setWrappers]).run(['formlyConfig',
            setFields]).run(['formlyConfig',
            'formlyValidationMessages',
            setDefaults]);
        return {
            moduleName: moduleName
        }
    })
}();
!function () {
    'use strict';
    define('angular-lodash', [
        'require',
        'angular',
        'lodash'
    ], function (require) {
        function register(methodName, $rootScope) {
            $rootScope[methodName] = _.bind(_[methodName], _)
        }
        var angular = require('angular'),
            _ = require('lodash'),
            lodashModule = angular.module('ng.lodash', [
            ]),
            utilsModule = angular.module('ng.lodash/utils', [
            ]);
        lodashModule.factory('_', [
            '$window',
            function ($window) {
                return $window._
            }
        ]);
        _.each(_.functions(_), function (methodName) {
            _.each([lodashModule,
                utilsModule,
                angular.module('ng.lodash/utils/' + methodName, [
                ])], function (module) {
                module.run(['$rootScope',
                    register.bind(register, methodName)])
            })
        });
        return _
    })
}();
!function (window) {
    'use strict';
    define('pf-angular-common', [
        'require',
        'lodash',
        'domReady',
        'angular',
        'ne',
        'jquery',
        'pf-shared-modules-platform',
        'pf-shared-modules-util',
        'pf-shared-modules-numbers',
        'pf-shared-modules-pageloader',
        'pf-app-detect',
        'pf-shared-modules-wcms_links',
        'pf-shared-modules-app_links',
        'pf-angular-logger',
        'pf-shared-modules-widgetloadingstatus',
        'pf-angular-directives',
        'pf-angular-filters',
        'postfinance.shared.directives.templates.html',
        'directive-widget-common',
        'directive-ng_attr',
        'pf-formly-config',
        'directive-widget-messages',
        'pf-shared-modules-loggerfactory',
        'angular-aria',
        'angular-aria-extended',
        'angular-messages',
        'angular-ui-router',
        'angular-lodash'
    ], function commonDefineFn(require) {
        function stateConfig($stateProvider) {
            $stateProvider.state(pf.globals.states.widget.initial, {
                template: '<div></div>'
            }).state(pf.globals.states.widget.ready, {
                template: '<div ng-include="widgetInstance.state.template.readyWidgetUrl"></div>'
            }).state(pf.globals.states.widget.empty, {
                template: '<div ng-include="widgetInstance.state.template.emptyWidgetUrl"></div>'
            }).state(pf.globals.states.widget.error, {
                template: '<div ng-include="widgetInstance.state.template.errorWidgetUrl"></div>'
            }).state(pf.globals.states.widget.info, {
                template: '<div ng-include="widgetInstance.state.template.infoWidgetUrl"></div>'
            }).state(pf.globals.states.widget.notice, {
                template: '<div ng-include="widgetInstance.state.template.noticeWidgetUrl"></div>'
            })
        }
        function provideConfig($provide) {
            $provide.decorator('$rootScope', [
                '$delegate',
                function ($delegate) {
                    Object.defineProperty($delegate.constructor.prototype, '$onRootScope', {
                        value: function (name, listener) {
                            var unsubscribe = $delegate.$on(name, listener);
                            this.$on('$destroy', unsubscribe);
                            return unsubscribe
                        },
                        enumerable: false
                    });
                    return $delegate
                }
            ]);
            $provide.decorator('$exceptionHandler', function () {
                function toString(obj) {
                    if (obj && _.isFunction(obj.toString)) return obj.toString();
                    else return obj
                }
                var LOG = loggerFactory.getLogger('ExceptionHandler');
                return function (exception, cause) {
                    var stack = exception.stack || '',
                        exceptionStr = toString(exception);
                    if (util.hasValue(exceptionStr)) {
                        var causeStr = toString(cause) || 'n/a',
                            stackStr = toString(stack) || 'n/a';
                        LOG.error('Angular exception detected! Exception: {0}, cause: {1}, stack: {2}', [
                            exceptionStr,
                            causeStr,
                            stackStr
                        ])
                    }
                }
            });
            $provide.decorator('ngClickDirective', [
                '$delegate',
                '$timeout',
                function ($delegate, $timeout) {
                    var compile = $delegate[0].compile,
                        delay = pf.globals.settings.DOUBLE_CLICK_DELAY;
                    $delegate[0].compile = function () {
                        var link = compile.apply(this, arguments);
                        return function (scope, element, attrs) {
                            function protectedClick(evt) {
                                if (disabled) {
                                    evt.preventDefault();
                                    evt.stopImmediatePropagation()
                                } else {
                                    disabled = true;
                                    $timeout(function () {
                                        disabled = false
                                    }, delay, false)
                                }
                            }
                            var disabled = false;
                            if ('BUTTON' === element[0].nodeName && _.isNil(attrs.allowDoubleClick)) {
                                element.on('click', protectedClick);
                                scope.$on('$destroy', function () {
                                    element.off('click', protectedClick)
                                })
                            }
                            return link.apply(this, arguments)
                        }
                    };
                    return $delegate
                }
            ])
        }
        function compileProviderConfig($compileProvider) {
            $compileProvider.debugInfoEnabled(platform.isDebugEnabled());
            $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|javascript|tel):/)
        }
        function httpProviderConfig($httpProvider) {
            $httpProvider.useApplyAsync(true)
        }
        function locationProviderConfig($locationProvider) {
            $locationProvider.hashPrefix('')
        }
        function focusHandler() {
            if (detect.browser.isIE) {
                for (var numberNormalized = numbers.normalizeNumber(this.value), cursorPos = this.selectionStart, d = 0, i = 0; i < cursorPos; i++) d = this.value[i] === numberNormalized[i - d] ? d : d + 1;
                this.value = numberNormalized;
                this.setSelectionRange(cursorPos - d, cursorPos - d)
            } else this.value = numbers.normalizeNumber(this.value);
            this.trigger('input')
        }
        function blurHandler() {
            numbers.formatAmount(this);
            this.trigger('input')
        }
        function blurNegativeHandler() {
            numbers.formatNegativeAmount(this);
            this.trigger('input')
        }
        function focus(targetElement) {
            if (targetElement) {
                var length;
                if (platform.isIOS() && targetElement.setSelectionRange) {
                    length = targetElement.value.length;
                    targetElement.setSelectionRange(0, length)
                } else {
                    targetElement.focus();
                    setTimeout(function () {
                        targetElement.focus()
                    }, 10)
                }
            }
        }
        function hideBackbaseDivsForPrint() {
            $('div.undefined').addClass('is-hidden-print');
            $('div.absolutePool').addClass('is-hidden-print')
        }
        var _ = require('lodash'),
            domReady = require('domReady'),
            angular = require('angular'),
            _ne = require('ne'),
            jQuery = require('jquery'),
            platform = require('pf-shared-modules-platform'),
            util = require('pf-shared-modules-util'),
            numbers = require('pf-shared-modules-numbers'),
            pageLoader = require('pf-shared-modules-pageloader'),
            detect = require('pf-app-detect'),
            wcmsLinks = require('pf-shared-modules-wcms_links'),
            appLinks = require('pf-shared-modules-app_links'),
            pfAngularLogger = require('pf-angular-logger'),
            widgetLoadingStatus = require('pf-shared-modules-widgetloadingstatus'),
            pfAngularDirectives = require('pf-angular-directives'),
            pfAngularFilters = require('pf-angular-filters'),
            templates = require('postfinance.shared.directives.templates.html'),
            directiveWidgetCommon = require('directive-widget-common'),
            directiveNgAttr = require('directive-ng_attr'),
            pfFormlyConfig = require('pf-formly-config'),
            messages = require('directive-widget-messages'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            angularAria = require('angular-aria'),
            angularAriaExtended = require('angular-aria-extended'),
            angularMessages = require('angular-messages'),
            angularUiRouter = require('angular-ui-router'),
            angularLodash = require('angular-lodash');
        pageLoader.registerOnPubsub();
        widgetLoadingStatus.registerOnPubsub();
        wcmsLinks.registerListeners();
        appLinks.registerListeners();
        var moduleName = 'postfinance.shared.common',
            module = angular.module(moduleName, [
                'ngAria',
                angularAriaExtended.moduleName,
                'ngMessages',
                'ng.lodash',
                'ui.router',
                pfAngularLogger.moduleName,
                pfAngularFilters.moduleName,
                pfAngularDirectives.moduleName,
                'postfinance.shared.directives.templates.html',
                directiveWidgetCommon.moduleName,
                directiveNgAttr.moduleName,
                pfFormlyConfig.moduleName,
                messages.moduleName
            ]),
            defaultErrorLogger = loggerFactory.getLogger('window.onerror'),
            hidePageLoader = detect.isAndroid() || detect.isIOS() && detect.isApp();
        if (!hidePageLoader) {
            var selectors = [
            ];
            if (platform.isMobile()) selectors = [
                '.mobile_nav--link:not(.js-pf-no_pageloader)',
                '.link_list_footer--menu_item--link'
            ];
            else selectors = [
                '.header_main_nav--item--link:not(.js-pf-no_pageloader)',
                '.link_list_footer--menu_item--link'
            ];
            domReady(function domReadyFn() {
                jQuery(selectors.join(', ')).on('click', function () {
                    pageLoader.showLoader()
                })
            })
        }
        stateConfig.$inject = [
            '$stateProvider'
        ];
        module.config(stateConfig);
        provideConfig.$inject = [
            '$provide'
        ];
        module.config(provideConfig);
        compileProviderConfig.$inject = [
            '$compileProvider'
        ];
        module.config(compileProviderConfig);
        httpProviderConfig.$inject = [
            '$httpProvider'
        ];
        module.config(httpProviderConfig);
        locationProviderConfig.$inject = [
            '$locationProvider'
        ];
        module.config(locationProviderConfig);
        var isUselessErrorContent = function isUselessErrorContent(errorMsg, url, lineNumber) {
            return 'Script error.' === errorMsg && '' === url && 0 === lineNumber
        };
        window.onerror = function errorHandler(errorMsg, url, lineNumber, column, errorObj) {
            if (util.hasValue(errorMsg) && !isUselessErrorContent(errorMsg, url, lineNumber)) {
                var message = _ne.template('Error [{errorMsg}] at URL [{url}], line [{lineNumber}]', {
                    errorMsg: errorMsg,
                    url: url || 'n/a',
                    lineNumber: lineNumber || 'n/a'
                });
                if (util.hasValue(errorObj) && util.hasValue(errorObj.stack)) message += _ne.template(', Stack [{stack}]', {
                    stack: errorObj.stack
                });
                defaultErrorLogger.error(message)
            }
            return true
        };
        var configureAmountInput = function configureAmountInput(domTextNode) {
                var $el = jQuery(domTextNode);
                if (platform.isNumberKeyboardEnabled()) new InputNumberKeyboard($el).initElement();
                else {
                    $el.focus(focusHandler);
                    $el.blur(blurHandler)
                }
            },
            configureNegativeAmountInput = function configureNegativeAmountInput(domTextNode) {
                var $el = jQuery(domTextNode);
                if (platform.isNumberKeyboardEnabled()) new InputNumberKeyboard($el).initElement();
                else {
                    $el.focus(focusHandler);
                    $el.blur(blurNegativeHandler)
                }
            },
            InputNumberKeyboard = function InputNumberKeyboard(element, delegateFocus) {
                this.$input = jQuery(element);
                this.delegateFocus = delegateFocus;
                return this
            };
        InputNumberKeyboard.prototype.initElement = function initElement() {
            function switchId($src, $dest) {
                var id = $src.attr('id');
                if (id) {
                    $src.attr('id', id + '-hidden');
                    $dest.attr('id', id)
                }
            }
            function setShadowActive() {
                switchId($input, $shadowInput)
            }
            function setOriginalActive() {
                switchId($shadowInput, $input)
            }
            var $input = this.$input,
                $shadowInput = this.createShadowInput($input);
            this.$input.parent().append($shadowInput);
            $input.attr('tabindex', '-1').attr('aria-hidden', 'true');
            $input.focus(function (event) {
                event.preventDefault();
                focus($shadowInput.get(0));
                $shadowInput.select()
            });
            $shadowInput.focus(function () {
                setShadowActive();
                $input.css('visibility', 'hidden');
                var num = numbers.normalizeNumber($input.val());
                $input.val(numbers.formatAmountValue(num));
                $input[0].trigger('change');
                $shadowInput.val(num);
                $shadowInput.css('opacity', '1')
            });
            $shadowInput.blur(function () {
                setOriginalActive();
                $shadowInput.css('opacity', '0');
                $input.css('visibility', '');
                $input.val(numbers.formatAmountValue($shadowInput.val()));
                $input[0].trigger('change')
            });
            var allowedChars = [
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                96,
                97,
                98,
                99,
                100,
                101,
                102,
                103,
                104,
                105,
                188,
                110,
                189,
                222,
                107,
                109
            ];
            $shadowInput.keydown(function (e) {
                if (this.value.length >= 19 && _.includes(allowedChars, e.keyCode)) e.preventDefault()
            });
            $shadowInput.keyup(function () {
                $input.val(numbers.formatAmountValue($shadowInput.val()));
                $input[0].trigger('change')
            });
            if (this.delegateFocus) {
                $input.blur();
                focus($shadowInput.get(0))
            }
        };
        InputNumberKeyboard.prototype.createShadowInput = function createShadowInput($input) {
            for (var $shadowInput = jQuery('<input>').attr(platform.isAndroid() ? {
                    type: 'tel',
                    pattern: '[-+]?[0-9]{1,11}[.,]?[0-9]{0,3}',
                    maxlength: '19',
                    name: ''
                }
                : {
                    type: 'number',
                    step: '0.001',
                    max: '999999999999.99',
                    min: '-999999999999.99',
                    name: ''
                }), newList = [
            ], classList = $input.get(0).className.split(/\s+/), i = 0, len = classList.length; i < len; i++) {
                var classListItem = classList[i];
                if (!/(ng|js)/.test(classListItem)) newList.push(classListItem)
            }
            $shadowInput.attr({
                class: newList.join(' '),
                tabindex: '0'
            });
            $shadowInput.val(numbers.normalizeNumber($input.val()));
            $shadowInput.css({
                position: 'absolute',
                left: 0,
                bottom: 0,
                right: 0,
                zIndex: 1,
                opacity: 0
            });
            return $shadowInput
        };
        domReady(function () {
            pf.globals.WIDGET_COUNTER.register(function () {
                var contentArea = document.querySelector('#main-content');
                if (contentArea) {
                    contentArea.setAttribute('resolved', '');
                    contentArea.removeAttribute('unresolved')
                }
            })
        });
        if (window.matchMedia) {
            var mediaQueryList = window.matchMedia('print');
            mediaQueryList.addListener(function () {
                hideBackbaseDivsForPrint()
            })
        }
        window.addEventListener('beforeprint', function () {
            hideBackbaseDivsForPrint()
        });
        return {
            moduleName: moduleName,
            configureAmountInput: configureAmountInput,
            configureNegativeAmountInput: configureNegativeAmountInput
        }
    })
}(window);
!function (window) {
    'use strict';
    define('pf-widget', [
        'require',
        'lodash',
        'jquery',
        'angular',
        'pf-widget-functions',
        'pf-shared-modules-rest_ng',
        'pf-shared-modules-platform',
        'pf-shared-modules-initialization',
        'pf-shared-modules-clientmessages',
        'pf-shared-modules-webtrendstracker',
        'pf-sessiondata-userdata',
        'pf-requestdata-widgetlist',
        'pf-shared-modules-uisettings',
        'pf-shared-modules-storage',
        'pf-shared-modules-fipowidgetshopservice',
        'pf-angular-logger',
        'pf-shared-modules-translator',
        'pf-shared-modules-translate_engine',
        'pf-shared-modules-pageloader',
        'pf-shared-modules-util',
        'pf-shared-modules-loggerfactory'
    ], function widgetDefineFn(require) {
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            pfWidgetFunctions = require('pf-widget-functions'),
            restng = require('pf-shared-modules-rest_ng'),
            platform = require('pf-shared-modules-platform'),
            initialization = require('pf-shared-modules-initialization'),
            clientMessages = require('pf-shared-modules-clientmessages'),
            webtrendsTracker = require('pf-shared-modules-webtrendstracker'),
            userData = require('pf-sessiondata-userdata'),
            widgetList = require('pf-requestdata-widgetlist'),
            uiSettings = require('pf-shared-modules-uisettings'),
            storage = require('pf-shared-modules-storage'),
            widgetShopService = require('pf-shared-modules-fipowidgetshopservice'),
            pfAngularLogger = require('pf-angular-logger'),
            translator = require('pf-shared-modules-translator'),
            translateEngine = require('pf-shared-modules-translate_engine'),
            pageLoader = require('pf-shared-modules-pageloader'),
            util = require('pf-shared-modules-util'),
            loggerFactory = require('pf-shared-modules-loggerfactory'),
            LOG = loggerFactory.getLogger('BaseWidget'),
            initInjector = angular.injector(['ng',
                pfAngularLogger.moduleName], {
                strictDi: true
            }),
            $timeout = initInjector.get('$timeout'),
            $q = initInjector.get('$q'),
            globalTranslateModules = [
                'global',
                'directives',
                'livesupport',
                'widgets.pseudowidget'
            ],
            widgetTranslateModules;
        if (_.isEmpty(widgetList)) widgetTranslateModules = [
            'widgets'
        ];
        else {
            widgetTranslateModules = [
            ];
            _.forEach(widgetList, function (widget) {
                var widgetName = 'widgets.' + widget.replace('-', '.');
                widgetTranslateModules.push(widgetName)
            })
        }
        var translateModules = widgetTranslateModules.concat(globalTranslateModules),
            waitForTranslations = translateEngine.requestTranslationModules(translateModules);
        uiSettings.reloadUiSettings();
        var Widget = function Widget() {
            var waitForDataReady;
            this.state = {
            };
            this.state.template = {
            };
            this.preference = {
            };
            this.preference.eagerLoad = false;
            this.preference.collapsible = false;
            this.preference.reorderable = false;
            this.preference.instanceType = null;
            this.preference.settingData = {
            };
            this.preference.hintKey = null;
            this.preference.alwaysOpen = false;
            this.preference.widgetShop = false;
            this.service = {
            };
            this.service.httpMethod = 'GET';
            this.service.httpFormat = 'json';
            this.service.dataUrl = null;
            this.service.additionalDataUrl = null;
            this.service.detailUrls = null;
            this.i18n = {
            };
            this.i18n.mappingKey = null;
            this.i18n.textKey = null;
            this.callback = {
            };
            this.callback.onDataLoaded = null;
            this.callback.onAdditionalDataLoaded = null;
            this.callback.onVerifyData = null;
            this.callback.onReady = null;
            this.callback.onError = null;
            this.callback.beforeDetailPage = null;
            this.backbaseWidget = null;
            this.widgetName = null;
            this.$scope = null;
            this.$state = null;
            this.dataUrlReplacementObj = null;
            this.additionalDataUrlReplacementObj = null;
            this.detailUrlsReplacementObj = null;
            this.aggregateRequests = false;
            this.isCurrentlyBusy = false;
            this.readyFunction = null;
            this.callReadyOnlyOnce = false;
            this.isReorderable = function isReorderable() {
                if (platform.isMobile()) return this.preference.reorderable;
                else return true
            }.bind(this);
            this.init = function init(name, backbaseWidget, $scope, $state, params) {
                function reloadUISettingsFn() {
                    uiSettings.reloadUiSettings().then(loadUiSettings)
                }
                function closePopupContainerFn() {
                    $scope.canGainFocus = false
                }
                this.backbaseWidget = backbaseWidget;
                this.loadingElement = angular.element(backbaseWidget.body).find('article');
                this.widgetName = name;
                this.$scope = $scope;
                this.$state = $state;
                this.initBbPreferences(this.backbaseWidget, $scope);
                if (!this.isReorderable()) backbaseWidget.htmlNode.classList.add('no-draggable');
                if (this.preference.instanceType) {
                    this.i18n.mappingKey = this.widgetName + '-' + this.preference.instanceType;
                    this.i18n.textKey = 'widgets.' + this.widgetName + '.' + this.preference.instanceType
                } else {
                    this.i18n.mappingKey = this.widgetName;
                    this.i18n.textKey = 'widgets.' + this.widgetName
                }
                waitForTranslations.then(function success() {
                    this.$scope.$emit('$translateChangeSuccess')
                }.bind(this));
                var widgetNameForUiSettings = this.i18n.mappingKey,
                    originalSettings = null,
                    storeOriginalSettings = function storeOriginalSettings() {
                        originalSettings = angular.copy($scope.settingData)
                    },
                    waitForUiSettings,
                    loadUiSettings = function loadUiSettings() {
                        waitForUiSettings = uiSettings.getUiSettingsForWidget(widgetNameForUiSettings).then(function success(data) {
                            $scope.settingData = data || {
                            };
                            storeOriginalSettings()
                        });
                        waitForDataReady = $q.all([waitForTranslations,
                            waitForUiSettings]);
                        return waitForUiSettings
                    };
                loadUiSettings();
                gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_UISETTINGS, reloadUISettingsFn);
                var unbindSettingsFn = $scope.$on(pf.globals.events.WIDGET_SETTINGS_OPEN, function widgetSettingsOpenFn() {
                        angular.extend($scope.settingData, originalSettings)
                    }),
                    unbindWidgetSaveFn = $scope.$on(pf.globals.events.WIDGET_SETTINGS_SAVE, function widgetSettingsSaveFn() {
                        uiSettings.storeUiSettingsForWidget(widgetNameForUiSettings, $scope.settingData).then(function success() {
                            storeOriginalSettings();
                            this.reloadData()
                        }.bind(this));
                        var closeButton = this.backbaseWidget.htmlNode.querySelector(pf.globals.selectors.WIDGET_SETTINGS_CLOSE_BUTTON);
                        if (closeButton) closeButton.click()
                    }.bind(this));
                $scope.textKey = this.i18n.textKey;
                $scope.mappingKey = this.i18n.mappingKey;
                $scope.isMobile = platform.isMobile();
                $scope.canGainFocus = false;
                if (_.has(params, 'dataUrlReplacementObj')) this.service.dataUrl = this.getDataUrl(params.dataUrlReplacementObj);
                else this.service.dataUrl = this.getDataUrl();
                if (_.has(params, 'additionalDataUrlReplacementObj')) {
                    var replacementObj = params.additionalDataUrlReplacementObj;
                    if (!util.isPromise(replacementObj)) this.service.additionalDataUrl = this.getAdditionalDataUrl(replacementObj)
                } else this.service.additionalDataUrl = this.getAdditionalDataUrl();
                if (_.has(params, 'detailUrlsReplacementObj')) this.service.detailUrls = this.getDetailUrls(params.detailUrlsReplacementObj);
                else this.service.detailUrls = this.getDetailUrls();
                this.state.template.emptyWidgetUrl = pf.globals.urlprefix.BUNDLE + '/templates/emptyWidget.html';
                this.state.template.errorWidgetUrl = pf.globals.urlprefix.BUNDLE + '/templates/errorWidget.html';
                this.state.template.infoWidgetUrl = pf.globals.urlprefix.BUNDLE + '/templates/infoWidget.html';
                this.state.template.noticeWidgetUrl = pf.globals.urlprefix.BUNDLE + '/templates/noticeWidget.html';
                this.state.template.readyWidgetUrl = this.getWidgetPath() + '/content.html';
                $scope.standardAccount = userData.standardAccount;
                $scope.showDetailPage = function showDetailPage(actionType, actionUrlReplacementObj, mappingKey) {
                    var usedMappingKey = mappingKey || this.i18n.mappingKey;
                    if (window.event) gadgets.pubsub.publish(pf.globals.pubsub.SHOW_WIDGET_LOADING, event.currentTarget);
                    getAndProcessUrl(usedMappingKey, actionType, actionUrlReplacementObj)
                }.bind(this);
                $scope.openDeeplink = function openDeeplink(actionType, tabPosition, _params) {
                    pfWidgetFunctions.openDeeplink(actionType, tabPosition, _params, this.i18n.mappingKey)
                }.bind(this);
                $scope.onConfirmation = function onConfirmation() {
                    this._onConfirmation()
                }.bind(this);
                this.state.goState = function goState(state) {
                    if (state === pf.globals.states.widget.initial) this.setBusy(true);
                    else this.setBusy(false);
                    this.$state.go(state)
                }.bind(this);
                this.showHelp = function showHelp() {
                    this._showHelp()
                }.bind(this);
                this.removeWidget = function removeWidget() {
                    this._removeWidget()
                }.bind(this);
                this.isRemovable = function isRemovable() {
                    return this.preference.widgetShop
                }.bind(this);
                this.isCollapsible = function isCollapsible() {
                    var collapsible = this.preference.collapsible;
                    return platform.isMobile() && (_.isUndefined(collapsible) || true === collapsible)
                }.bind(this);
                $scope[this.widgetName] = {
                };
                if (params) {
                    this.state.template.emptyWidgetUrl = params.emptyWidgetUrl || this.state.template.emptyWidgetUrl;
                    this.state.template.errorWidgetUrl = params.errorWidgetUrl || this.state.template.errorWidgetUrl;
                    this.state.template.readyWidgetUrl = params.readyWidgetUrl || this.state.template.readyWidgetUrl;
                    this.state.template.infoWidgetUrl = params.infoWidgetUrl || this.state.template.infoWidgetUrl;
                    this.state.template.noticeWidgetUrl = params.noticeWidgetUrl || this.state.template.noticeWidgetUrl;
                    $scope.showDetailPage = params.showDetailPage || $scope.showDetailPage;
                    $scope.openDeeplink = params.openDeeplink || $scope.openDeeplink;
                    this.service.httpMethod = params.httpMethod || this.service.httpMethod;
                    this.service.httpFormat = params.httpFormat || this.service.httpFormat;
                    this.dataUrlReplacementObj = params.dataUrlReplacementObj;
                    this.additionalDataUrlReplacementObj = params.additionalDataUrlReplacementObj;
                    this.detailUrlsReplacementObj = params.detailUrlsReplacementObj;
                    this.callback.onDataLoaded = params.onDataLoaded;
                    this.callback.onAdditionalDataLoaded = params.onAdditionalDataLoaded;
                    this.callback.onVerifyData = params.onVerifyData;
                    this.callback.onReady = params.onReady;
                    this.callback.onError = params.onError;
                    this.callback.beforeDetailPage = params.beforeDetailPage;
                    this.aggregateRequests = params.aggregateRequests || false;
                    this.callReadyOnlyOnce = params.callReadyOnlyOnce || false;
                    this.readyFunction = params.readyFunction || null;
                    if (this.callReadyOnlyOnce && _.isFunction(this.callback.onReady)) this.callback.onReady = _.once(params.onReady);
                    this.service.dataUrl = params.dataUrl || this.service.dataUrl;
                    this.service.additionalDataUrl = params.additionalDataUrl || this.service.additionalDataUrl;
                    this.service.detailUrls = params.detailUrls || this.service.detailUrls;
                    $scope.onConfirmation = params.onConfirmation || $scope.onConfirmation
                }
                this.helpUrl = this.getHelpUrl('general');
                this.isHelpPagePresent = null !== this.helpUrl;
                var getWidgetStateSessionStorage = function getWidgetStateSessionStorage() {
                        var storedItem = storage.sessionStorage.getItem(pf.globals.keys.WIDGET_STATE),
                            parsedResult = _.attempt(JSON.parse.bind(null, storedItem || '{}'));
                        if (_.isError(parsedResult)) return {
                        };
                        else return parsedResult
                    },
                    getAndProcessUrl = function getAndProcessUrl(mappingKey, actionType, actionUrlReplacementObj) {
                        var urlObj;
                        if (actionType) {
                            urlObj = pfWidgetFunctions.getActionUrl(mappingKey, actionType, actionUrlReplacementObj);
                            urlObj.data = {
                                object: actionUrlReplacementObj
                            };
                            if (!urlObj) {
                                var errorMessage = clientMessages.createErrorMessage('GeneralError', false, 'Error');
                                gadgets.pubsub.publish(pf.globals.pubsub.SHOW_DETAIL_PAGE_FROM_PFJSON, errorMessage);
                                return
                            }
                            this.trackWebtrends('WT.ac', '_li_ef_' + b$.portal.pageName + '_' + mappingKey + '_' + actionType);
                            pfWidgetFunctions.processUrlObject(urlObj)
                        } else {
                            this.trackWebtrends('WT.ac', '_li_ef_' + b$.portal.pageName + '_' + mappingKey + '_detail');
                            if (actionUrlReplacementObj) {
                                urlObj = pfWidgetFunctions.getDetailUrls(name, actionUrlReplacementObj);
                                pfWidgetFunctions.processUrlObject(urlObj)
                            } else pfWidgetFunctions.processUrlObject(this.service.detailUrls)
                        }
                    }.bind(this),
                    getWidgetState = function getWidgetState() {
                        var widgetStateSessionStorage = getWidgetStateSessionStorage();
                        return widgetStateSessionStorage[$scope.widgetInstanceId]
                    },
                    setWidgetState = function setWidgetState(status) {
                        $scope.isOpen = status;
                        var widgetStateSessionStorage = getWidgetStateSessionStorage();
                        widgetStateSessionStorage[$scope.widgetInstanceId] = status;
                        storage.sessionStorage.setItem(pf.globals.keys.WIDGET_STATE, JSON.stringify(widgetStateSessionStorage))
                    },
                    widgetState = getWidgetState();
                if (_.isUndefined(widgetState)) {
                    $scope.isOpen = this.preference.alwaysOpen;
                    if (true === $scope.isOpen) setWidgetState(true)
                } else $scope.isOpen = widgetState;
                this.reloadData(true);
                var reloadWidgetsFn = function () {
                    this.reloadData()
                }.bind(this);
                gadgets.pubsub.subscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn);
                gadgets.pubsub.subscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, closePopupContainerFn);
                var unbindGoToDetailpageFn = $scope.$on(pf.globals.events.GO_TO_DETAIL_PAGE, function goToDetailPageFn(event, args) {
                        var goToDetailPage = true;
                        if (_.isFunction(this.callback.beforeDetailPage)) goToDetailPage = this.callback.beforeDetailPage(event, args);
                        if (goToDetailPage) {
                            var mappingKey = args.mappingKey || this.i18n.mappingKey;
                            if (args.source && _.isFunction(args.source.focus)) args.source.focus();
                            if (event) gadgets.pubsub.publish(pf.globals.pubsub.SHOW_WIDGET_LOADING, event.currentTarget);
                            getAndProcessUrl(mappingKey, args.actionType, args.actionUrlReplacementObj)
                        }
                    }.bind(this)),
                    $htmlElement = jQuery(this.backbaseWidget.htmlNode);
                initialization.setInitializedFromElement($htmlElement);
                pf.globals.WIDGET_COUNTER.notify();
                $htmlElement.on(pf.globals.hvevents.WIDGET_OPEN, function widgetOpenFn() {
                    setWidgetState(true);
                    this.reloadData()
                }.bind(this));
                $htmlElement.on(pf.globals.hvevents.WIDGET_CLOSE, function widgetCloseFn() {
                    setWidgetState(false)
                });
                this.getLogger().debug('Starting {0}', [
                    this.i18n.mappingKey
                ]);
                this.$scope.$on('$destroy', function () {
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.RELOAD_WIDGETS, reloadWidgetsFn);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.CLOSE_POPUP_CONTAINER, closePopupContainerFn);
                    gadgets.pubsub.unsubscribe(pf.globals.pubsub.RELOAD_UISETTINGS, reloadUISettingsFn);
                    unbindSettingsFn();
                    unbindWidgetSaveFn();
                    unbindGoToDetailpageFn()
                });
                return this
            };
            this.reloadData = function reloadData(ignoreWidgetFlag) {
                this.$scope.showDetailLink = false;
                this.service.dataUrl = this.getDataUrl(this.dataUrlReplacementObj);
                this.service.detailUrls = this.getDetailUrls(this.detailUrlsReplacementObj);
                this.service.hasDataUrl = !!this.service.dataUrl && !!this.service.dataUrl.url;
                var shouldLoadData = ignoreWidgetFlag || !this.$scope.doNotReload,
                    isMobile = platform.isMobile(),
                    isOpen = this.$scope.isOpen,
                    isNotMobileOrMobileAndOpenOrEagerLoad = !isMobile || isOpen || this.preference.eagerLoad;
                if (this.service.hasDataUrl && shouldLoadData && isNotMobileOrMobileAndOpenOrEagerLoad) {
                    this.loadWidgetData(this.service.dataUrl, this.$scope, this.callback.onDataLoaded, this.callback.onVerifyData, this.aggregateRequests);
                    this.handleAdditionalData(isMobile, isOpen)
                } else {
                    if (shouldLoadData && isMobile && isOpen && util.hasValue(this.getAdditionalDataUrl(this.additionalDataUrlReplacementObj))) this.handleAdditionalData(isMobile, isOpen);
                    if (!_.isFunction(this.readyFunction)) this.readyFunction = this.createReadyFunction();
                    waitForTranslations.then(function () {
                        this.readyFunction()
                    }.bind(this))
                }
            }.bind(this);
            this.handleAdditionalData = function (isMobile, isOpen) {
                if (_.isFunction(this.additionalDataUrlReplacementObj)) this.additionalDataUrlReplacementObj().then(function (replacementObj) {
                    this.loadAdditionalData(replacementObj, isMobile, isOpen)
                }.bind(this));
                else this.loadAdditionalData(this.additionalDataUrlReplacementObj, isMobile, isOpen)
            }.bind(this);
            this.loadAdditionalData = function (replacementObj, isMobile, isOpen) {
                this.service.additionalDataUrl = this.getAdditionalDataUrl(replacementObj);
                this.service.hasAdditionalDataUrl = !!this.service.additionalDataUrl && !!this.service.additionalDataUrl.url;
                if (this.service.hasAdditionalDataUrl && isMobile && isOpen) this.loadWidgetData(this.service.additionalDataUrl, this.$scope, this.callback.onAdditionalDataLoaded, this.callback.onVerifyData, this.aggregateRequests, true)
            }.bind(this);
            this.createReadyFunction = function () {
                return function () {
                    waitForDataReady.then(function success() {
                        this.state.goState(pf.globals.states.widget.ready);
                        if (_.isFunction(this.callback.onReady)) this.callback.onReady()
                    }.bind(this))
                }
            };
            this.loadWidgetData = function loadWidgetData(dataUrl, $scope, onDataLoaded, onVerifyData, aggregateRequests, isAdditionalDataUrl) {
                var stateName;
                this.setBusy(true);
                restng.sendRequest(dataUrl.url, this.service.httpFormat, this.service.httpMethod, dataUrl.params, null, dataUrl.headers, aggregateRequests).then(function success(response) {
                    if (response) $timeout(function loadWidgetDataSuccessFn() {
                        if (response.messages) $scope.messages = response.messages;
                        $scope.rawData = response.result;
                        angular.extend($scope, response.result);
                        waitForDataReady.then(function success() {
                            stateName = this.checkResponse(response);
                            var message = this.checkMessage(response, stateName);
                            if (message) $scope.message = message;
                            if ('nodata' === stateName) {
                                var errorMessage = clientMessages.createErrorMessage('widgets.efgenericdetail.GeneralError', false);
                                angular.extend($scope, errorMessage);
                                $scope.messages.fullKey = true;
                                stateName = pf.globals.states.widget.error
                            }
                            if (stateName === pf.globals.states.widget.error && _.isFunction(this.callback.onError)) this.callback.onError(response);
                            if (!stateName) {
                                var callbackPromise;
                                if (_.isFunction(onDataLoaded)) try {
                                    callbackPromise = onDataLoaded(response);
                                    $scope.$applyAsync()
                                } catch (throwable) {
                                    var catchMessage = throwable ? throwable.message : {
                                    };
                                    this.getLogger().error('dataLoaded callback for widget {0} threw an error: {1}.', [
                                        this.i18n.mappingKey,
                                        catchMessage
                                    ]);
                                    $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                                    $timeout(function onDataLoadedCatchFn() {
                                        this.state.goState(pf.globals.states.widget.error)
                                    }.bind(this));
                                    return
                                }
                                if (!callbackPromise || !_.isFunction(callbackPromise.then)) callbackPromise = $q.when();
                                callbackPromise.then(function resolveFn() {
                                    if (_.isFunction(onVerifyData)) {
                                        stateName = onVerifyData();
                                        $scope.$applyAsync();
                                        this.state.goState(stateName)
                                    } else this.state.goState(pf.globals.states.widget.ready)
                                }.bind(this), function rejectFn() {
                                    $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                                    this.state.goState(pf.globals.states.widget.error)
                                }.bind(this))
                            } else this.state.goState(stateName)
                        }.bind(this))
                    }.bind(this))
                }.bind(this), function failure(response) {
                    $scope.message = clientMessages.createConnectionErrorResponse().error.message;
                    if (!!response.error.message) $scope.message = response.error.message;
                    if (_.isFunction(this.callback.onError)) this.callback.onError(response);
                    if (!isAdditionalDataUrl) this.state.goState(pf.globals.states.widget.error)
                }.bind(this))
            };
            this._showHelp = function _showHelp() {
                var widgetHelpWrapper = {
                };
                widgetHelpWrapper.widgetHelp = {
                };
                if (this.helpUrl) {
                    widgetHelpWrapper.widgetHelp.url = this.helpUrl.url;
                    var tooltipUrl = this.helpUrl.url.replace('.html', '.widgettooltip.html');
                    restng.getWcmsPage(tooltipUrl).then(function success(response) {
                        widgetHelpWrapper.widgetHelp.html = response;
                        angular.extend(this.$scope, widgetHelpWrapper);
                        this.$scope.$apply()
                    }.bind(this), function failure() {
                        widgetHelpWrapper.widgetHelp.html = translator.translate('WcmsNotAvailable', this.$scope);
                        angular.extend(this.$scope, widgetHelpWrapper);
                        this.$scope.$apply()
                    }.bind(this))
                }
            };
            this._onConfirmation = function _onConfirmation() {
                this.reloadData()
            };
            this._removeWidget = function _removeWidget() {
                widgetShopService.removeWidget(this.$scope.widgetInstanceId).then(function () {
                    this.$scope.$destroy()
                }.bind(this))
            };
            this.initBbPreferences = function initBbPreferences(bbWidget) {
                this.preference.eagerLoad = bbWidget.getPreference('eagerLoad') || false;
                this.preference.collapsible = bbWidget.getPreference('collapsible');
                var disableWidgetReordering = bbWidget.parentNode.getPreference('disableWidgetReordering');
                this.preference.reorderable = _.isUndefined(disableWidgetReordering) || false === disableWidgetReordering;
                this.preference.widgetShop = bbWidget.getPreference('widgetShop');
                var instanceType = bbWidget.getPreference('instanceType');
                if (instanceType) this.preference.instanceType = instanceType;
                this.preference.alwaysOpen = bbWidget.getPreference('alwaysOpen') || false
            }
        };
        Widget.prototype.getDataUrl = function getDataUrl(replacementObject) {
            return pfWidgetFunctions.getDataUrl(this.i18n.mappingKey, replacementObject)
        };
        Widget.prototype.getAdditionalDataUrl = function getAdditionalDataUrl(replacementObject) {
            return pfWidgetFunctions.getAdditionalDataUrl(this.i18n.mappingKey, replacementObject)
        };
        Widget.prototype.openDetailPage = function openDetailPage(url) {
            pfWidgetFunctions.processUrlObject(url)
        };
        Widget.prototype.getActionUrl = function getActionUrl(actionName, replacementObject) {
            return pfWidgetFunctions.getActionUrl(this.i18n.mappingKey, actionName, replacementObject)
        };
        Widget.prototype.hasActionUrl = function hasActionUrl(actionName) {
            return pfWidgetFunctions.hasActionUrl(this.i18n.mappingKey, actionName)
        };
        Widget.prototype.getDetailUrls = function getDetailUrls(replacementObject) {
            return pfWidgetFunctions.getDetailUrls(this.i18n.mappingKey, replacementObject)
        };
        Widget.prototype.getHelpUrl = function getHelpUrl(helpId, replacementObject) {
            return pfWidgetFunctions.getHelpUrl(this.i18n.mappingKey, helpId, replacementObject)
        };
        Widget.prototype.getWidgetPath = function getWidgetPath() {
            return pfWidgetFunctions.getWidgetPath(this.widgetName)
        };
        Widget.prototype.checkResponse = function checkResponse(response) {
            if (!response) return 'nodata';
            if (response.error && response.error.message) return pf.globals.states.widget.error;
            else if (response.messages) if (response.messages.errors) return pf.globals.states.widget.error;
            else if (response.messages.infos) return pf.globals.states.widget.info;
            else if (response.messages.notices) return pf.globals.states.widget.notice;
            return null
        };
        Widget.prototype.checkMessage = function checkMessage(response, stateName) {
            var result = null;
            if (_.has(response, 'messages')) switch (stateName) {
                case pf.globals.states.widget.error:
                    result = response.messages.errors ? response.messages.errors[0] : null;
                    break;
                case pf.globals.states.widget.info:
                    result = response.messages.infos ? response.messages.infos[0] : null;
                    break;
                case pf.globals.states.widget.notice:
                    result = response.messages.notices ? response.messages.notices[0] : null
            }
            return result
        };
        Widget.prototype.getLogger = function () {
            return LOG
        };
        Widget.prototype.trackWebtrends = webtrendsTracker.trackWebtrends;
        Widget.prototype.setLoading = function setLoading(isLoading) {
            if (isLoading) this.loadingElement.addClass('is-loading');
            else this.loadingElement.removeClass('is-loading')
        };
        Widget.prototype.setBusy = function setBusy(isBusy) {
            this.isCurrentlyBusy = isBusy;
            this.setLoading(isBusy)
        };
        Widget.prototype.isBusy = function isBusy() {
            return this.isCurrentlyBusy
        };
        var BaseWidget = function BaseWidget(name, backbaseWidget, $scope, $state, params) {
            var widget = new Widget;
            $scope.widgetInstance = widget;
            pageLoader.hideLoader();
            return widget.init(name, backbaseWidget, $scope, $state, params)
        };
        return {
            BaseWidget: BaseWidget,
            Widget: Widget
        }
    })
}(window);
!function () {
    'use strict';
    define('pf-ecwidget', [
        'require',
        'lodash',
        'jquery',
        'angular',
        'pf-widget',
        'pf-shared-modules-platform',
        'pf-shared-modules-translator'
    ], function (require) {
        var _ = require('lodash'),
            jQuery = require('jquery'),
            angular = require('angular'),
            pfWidget = require('pf-widget'),
            platform = require('pf-shared-modules-platform'),
            translator = require('pf-shared-modules-translator'),
            translate = translator.translate,
            EcWidget = function EcWidget(params) {
                this.initialized = false;
                this.scope = params.scope;
                this.state = params.state;
                this.widget = params.widget;
                this.module = params.module;
                this.widgetName = params.widgetName;
                this.detailPageWebtrends = params.detailPageWebtrends;
                this.states = params.states;
                this.onDataLoaded = params.onDataLoaded;
                this.onDataVerify = params.onDataVerify;
                this.oldSelectedState = null;
                var onDataLoaded = function onDataLoaded() {
                        this._onDataLoaded()
                    }.bind(this),
                    onDataVerify = function onDataVerify() {
                        return this._onDataVerify()
                    }.bind(this),
                    baseParams = angular.extend(params, {
                        onDataLoaded: onDataLoaded,
                        onVerifyData: onDataVerify,
                        readyWidgetUrl: pf.globals.urlprefix.BUNDLE + '/templates/ecInitialWidget.html',
                        infoWidgetUrl: pf.globals.urlprefix.BUNDLE + '/templates/ecInfoWidget.html',
                        emptyWidgetUrl: pf.globals.urlprefix.BUNDLE + '/templates/ecEmptyWidget.html'
                    });
                this.baseWidget = pfWidget.BaseWidget(this.widgetName, this.widget, this.scope, this.state, baseParams);
                var unbindGoToDetailpageFn = this.scope.$on(pf.globals.events.GO_TO_DETAIL_PAGE, function () {
                    var accessString = this.getAccessString('Detail');
                    this.baseWidget.trackWebtrends('WT.cg_n', 'E-Cockpit', 'WT.cg_s', this.detailPageWebtrends, 'WT.pf_seg', 'e-cockpit', 'WT.ac', accessString)
                }.bind(this));
                this.scope.$on('$destroy', function () {
                    unbindGoToDetailpageFn()
                })
            };
        EcWidget.prototype.initWidget = function initWidget() {
            this.scope.static = {
            };
            this.scope.static.states = [
            ];
            this.scope.dynamic = this.scope.dynamic || {
            };
            _.forEach(this.states, function (state) {
                var stateObj = this.createState(state);
                this.scope.static.states.push(stateObj)
            }.bind(this));
            var storedState = this.scope.settingData ? this.scope.settingData.state : null,
                stateFromName = this.stateFromName(storedState);
            this.scope.dynamic.selectedState = stateFromName.state || this.scope.static.states[0];
            this.scope.dynamic.selectedIndex = stateFromName.index || 0;
            this.scope.dynamic.selectedStateModel = this.scope.dynamic.selectedState.value;
            this.scope.stateSelected = function stateSelected(item) {
                this.scope.dynamic.selectedState = item;
                this.scope.dynamic.selectedIndex = this.stateFromName(item.value).index;
                angular.extend(this.scope.settingData, {
                    state: item.value
                })
            }.bind(this);
            this.scope.showWidgetSettings = function showWidgetSettings() {
                if (!this.oldSelectedState) this.oldSelectedState = this.state.current.name
            }.bind(this);
            var settingsOpenButton = jQuery(this.baseWidget.backbaseWidget.htmlNode).find(pf.globals.selectors.WIDGET_SETTINGS_OPEN_BUTTON);
            if (settingsOpenButton) settingsOpenButton.on('click', function () {
                var accessString = this.getAccessString('WidgetSettings');
                this.baseWidget.trackWebtrends('WT.ac', accessString)
            }.bind(this));
            var helpOpenButton = jQuery(this.baseWidget.backbaseWidget.htmlNode).find(pf.globals.selectors.WIDGET_HELP_OPEN_BUTTON);
            if (helpOpenButton) helpOpenButton.on('click', function () {
                var accessString = this.getAccessString('Hilfe');
                this.baseWidget.trackWebtrends('WT.ac', accessString)
            }.bind(this));
            this.initialized = true
        };
        EcWidget.prototype._onDataLoaded = function _onDataLoaded() {
            if (!this.initialized) this.initWidget();
            if (_.isFunction(this.onDataLoaded)) this.onDataLoaded()
        };
        EcWidget.prototype._onDataVerify = function _onDataVerify() {
            var widgetResult;
            if (_.isFunction(this.onDataVerify)) widgetResult = this.onDataVerify();
            var error = this.scope.error,
                hasBackendError = error && error.length && error[0].message;
            if (hasBackendError) {
                this.scope.message = error[0];
                return pf.globals.states.widget.error
            }
            if (!this.hasData()) {
                this.scope.hasWidgetSettings = false;
                return pf.globals.states.widget.empty
            }
            return widgetResult || this.scope.dynamic.selectedState.value
        };
        EcWidget.prototype.createState = function createState(state) {
            return {
                name: translate(state.key, this.scope),
                value: state.name
            }
        };
        EcWidget.prototype.stateFromName = function stateFromName(stateName) {
            var allStates = this.scope.static.states,
                resultState = null,
                resultIndex = null;
            _.forEach(allStates, function (state, index) {
                if (state.value === stateName) {
                    resultState = state;
                    resultIndex = index
                }
            });
            return {
                state: resultState,
                index: resultIndex
            }
        };
        EcWidget.prototype.hasData = function hasData() {
            var data = this.scope.rawData;
            if (_.isArray(data)) return data.length;
            else if (_.isObject(data)) return data;
            return false
        };
        EcWidget.prototype.getAccessString = function getAccessString(feature) {
            return '_li_ec_' + platform.getPageName() + '_' + this.widgetName + '_' + feature
        };
        var init = function init(params) {
            if (!params.scope) return null;
            else return new EcWidget(params)
        };
        return {
            init: init
        }
    })
}();
define('app', [
    'infrastructure',
    'pf-angular-common',
    'pf-angular-logger',
    'pf-angular-filters',
    'pf-angular-filters-format',
    'pf-angular-filters-translate',
    'pf-formly-config',
    'pf-widget',
    'pf-widget-functions',
    'pf-ecwidget',
    'pf-pattern',
    'pf-app-detect'
], function () {
    'use strict';
    return true
});
require.config({
    paths: {
        text: 'fipo/lib/vendor/require/text.min',
        domReady: 'fipo/lib/vendor/require/domReady.min',
        'dust.core': 'fipo/lib/vendor/dust/dust-core.min',
        'dust-helpers': 'fipo/lib/vendor/dust/dust-helpers.min',
        'dust-pfhelpers': 'fipo/lib/vendor/dust/dust-pfhelpers',
        'dust-templates': 'fipo/lib/postfinance/dust-templates-compiled',
        'dust-templates-mobile': 'fipo/lib/postfinance/dust-mobile-templates-compiled',
        bluebird: 'fipo/lib/vendor/bluebird/bluebird.min',
        moment: 'fipo/lib/vendor/moment/moment.min',
        highcharts: 'fipo/lib/vendor/highcharts',
        jquery: 'fipo/lib/vendor/jquery/jquery',
        'jquery-flot': 'fipo/lib/vendor/jquery/jquery.flot-0.8.3.min',
        'jquery-flot-time': 'fipo/lib/vendor/jquery/jquery.flot.time-1.0.min',
        'jquery-scrollto': 'fipo/lib/vendor/jquery/jquery.scrollTo-2.1.2.min',
        'jquery-tablesorter': 'fipo/lib/vendor/jquery/jquery.tablesorter-2.17.8.min',
        'js-cookie': 'fipo/lib/vendor/js-cookie/js.cookie-2.2.1.min',
        angular: 'fipo/lib/vendor/angular/core/angular.min',
        'angular-aria': 'fipo/lib/vendor/angular/core/angular-aria.min',
        'angular-route': 'fipo/lib/vendor/angular/core/angular-route.min',
        'angular-messages': 'fipo/lib/vendor/angular/core/angular-messages.min',
        'angular-ui-router': 'fipo/lib/vendor/angular/angular-ui-router.min',
        'angular-aria-extended': 'fipo/lib/vendor/angular/angular-aria-extended',
        'angular-dynamic-module': 'fipo/lib/vendor/angular/angular-dynamic-module',
        'angular-lodash': 'fipo/lib/vendor/angular/angular-lodash',
        'angular-formly': 'fipo/lib/vendor/angular/formly/formly.min',
        'api-check': 'fipo/lib/vendor/api-check/api-check.min',
        bignumber: 'fipo/lib/vendor/bignumber/bignumber.min',
        filesaver: 'fipo/lib/vendor/filesaver/FileSaver.min',
        'iframe-resizer': 'fipo/lib/vendor/iframe-resizer/iframeResizer.min',
        lodash: 'fipo/lib/vendor/lodash/lodash.min',
        ne: 'fipo/lib/vendor/native-extensions/native-extensions',
        'pf-angular-common': 'fipo/lib/shared/common',
        'pf-angular-filters': 'fipo/lib/shared/filters/filters',
        'pf-angular-filters-format': 'fipo/lib/shared/filters/filters-format',
        'pf-angular-filters-translate': 'fipo/lib/shared/filters/filters-translate',
        'pf-angular-logger': 'fipo/lib/shared/logger',
        'pf-ecwidget': 'fipo/lib/postfinance/ecwidget',
        'pf-formly-config': 'fipo/lib/shared/formly-config',
        'pf-pattern': 'fipo/lib/shared/pattern',
        'pf-widget': 'fipo/lib/postfinance/widget',
        'pf-widget-functions': 'fipo/lib/postfinance/widget-functions',
        'pf-app-detect': 'fipo/lib/app/detect',
        'pf-app-navigation': 'empty:',
        'pf-mobile-ams-bridge': 'empty:',
        'postfinance.shared.directives.templates.html': 'empty:',
        'pf-requestdata-widgetlist': 'empty:',
        'pf-requestdata-widgetretainedlist': 'empty:',
        'pf-requestdata-widgetshoplist': 'empty:',
        'pf-requestdata-widgetshopproductmapping': 'empty:',
        'pf-sessiondata-teaserdata': 'empty:',
        'pf-sessiondata-urlmapping': 'empty:',
        'pf-sessiondata-userdata': 'empty:',
        'pf-detail-albertnotification-service': 'fipo/detailpages/albertnotification/pf-detail-albertnotification',
        'pf-detail-albertnotification': 'fipo/detailpages/albertnotification/pf-detail-albertnotification',
        'pf-detail-albertnotification-settings': 'fipo/detailpages/albertnotification/pf-detail-albertnotification',
        'pf-detail-crmpfappointmentplanner-service': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner-callback': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner-date': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner-location': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner-overview': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfappointmentplanner-topic': 'fipo/detailpages/crmpfappointmentplanner/pf-detail-crmpfappointmentplanner',
        'pf-detail-crmpfphoneauthentication-service': 'fipo/detailpages/crmpfphoneauthentication/pf-detail-crmpfphoneauthentication',
        'pf-detail-crmpfphoneauthentication': 'fipo/detailpages/crmpfphoneauthentication/pf-detail-crmpfphoneauthentication',
        'pf-detail-crmpfphoneauthentication-change': 'fipo/detailpages/crmpfphoneauthentication/pf-detail-crmpfphoneauthentication',
        'pf-detail-ecsettings-service': 'fipo/detailpages/ecsettings/pf-detail-ecsettings',
        'pf-detail-ecsettings': 'fipo/detailpages/ecsettings/pf-detail-ecsettings',
        'pf-detail-ecsettings-activation': 'fipo/detailpages/ecsettings/pf-detail-ecsettings',
        'pf-detail-ecsettings-rules': 'fipo/detailpages/ecsettings/pf-detail-ecsettings',
        'pf-detail-efabssettings-service': 'fipo/detailpages/efabssettings/pf-detail-efabssettings',
        'pf-detail-efabssettings': 'fipo/detailpages/efabssettings/pf-detail-efabssettings',
        'pf-detail-efabssettings-settings': 'fipo/detailpages/efabssettings/pf-detail-efabssettings',
        'pf-detail-efaccountdirectory-service': 'fipo/detailpages/efaccountdirectory/pf-detail-efaccountdirectory',
        'pf-detail-efaccountdirectory': 'fipo/detailpages/efaccountdirectory/pf-detail-efaccountdirectory',
        'pf-detail-efaccountdirectory-search': 'fipo/detailpages/efaccountdirectory/pf-detail-efaccountdirectory',
        'pf-detail-efaccountnotification-service': 'fipo/detailpages/efaccountnotification/pf-detail-efaccountnotification',
        'pf-detail-efaccountnotification': 'fipo/detailpages/efaccountnotification/pf-detail-efaccountnotification',
        'pf-detail-efaccountnotification-detail': 'fipo/detailpages/efaccountnotification/pf-detail-efaccountnotification',
        'pf-detail-efaccountnotification-edit': 'fipo/detailpages/efaccountnotification/pf-detail-efaccountnotification',
        'pf-detail-efaccountnotification-overview': 'fipo/detailpages/efaccountnotification/pf-detail-efaccountnotification',
        'pf-detail-efaccountsettings-service': 'fipo/detailpages/efaccountsettings/pf-detail-efaccountsettings',
        'pf-detail-efaccountsettings': 'fipo/detailpages/efaccountsettings/pf-detail-efaccountsettings',
        'pf-detail-efaccountsettings-details': 'fipo/detailpages/efaccountsettings/pf-detail-efaccountsettings',
        'pf-detail-efaccountsettings-settings': 'fipo/detailpages/efaccountsettings/pf-detail-efaccountsettings',
        'pf-detail-efaccountsettings-transfer': 'fipo/detailpages/efaccountsettings/pf-detail-efaccountsettings',
        'pf-detail-efapprovebgsic-service': 'fipo/detailpages/efapprovebgsic/pf-detail-efapprovebgsic',
        'pf-detail-efapprovebgsic': 'fipo/detailpages/efapprovebgsic/pf-detail-efapprovebgsic',
        'pf-detail-efapprovebgsic-approve': 'fipo/detailpages/efapprovebgsic/pf-detail-efapprovebgsic',
        'pf-detail-efapprovebgsic-confirm': 'fipo/detailpages/efapprovebgsic/pf-detail-efapprovebgsic',
        'pf-detail-efapprovebgsic-details': 'fipo/detailpages/efapprovebgsic/pf-detail-efapprovebgsic',
        'pf-detail-efapproveebills-service': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-billerlist': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-done': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-inbox': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-notifications': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-pay-installment': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efapproveebills-process': 'fipo/detailpages/efapproveebills/pf-detail-efapproveebills',
        'pf-detail-efbalancehistory-service': 'fipo/detailpages/efbalancehistory/pf-detail-efbalancehistory',
        'pf-detail-efbalancehistory': 'fipo/detailpages/efbalancehistory/pf-detail-efbalancehistory',
        'pf-detail-efbalancehistory-history': 'fipo/detailpages/efbalancehistory/pf-detail-efbalancehistory',
        'pf-detail-efbalancesheet-service': 'fipo/detailpages/efbalancesheet/pf-detail-efbalancesheet',
        'pf-detail-efbalancesheet': 'fipo/detailpages/efbalancesheet/pf-detail-efbalancesheet',
        'pf-detail-efbalancesheet-overview': 'fipo/detailpages/efbalancesheet/pf-detail-efbalancesheet',
        'pf-detail-efbasicagreement-service': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efbasicagreement': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efbasicagreement-beneficialowner': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efbasicagreement-conditions': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efbasicagreement-explanation': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efbasicagreement-identification': 'fipo/detailpages/efbasicagreement/pf-detail-efbasicagreement',
        'pf-detail-efchangeaddress-service': 'fipo/detailpages/efchangeaddress/pf-detail-efchangeaddress',
        'pf-detail-efchangeaddress': 'fipo/detailpages/efchangeaddress/pf-detail-efchangeaddress',
        'pf-detail-efchangeaddress-change': 'fipo/detailpages/efchangeaddress/pf-detail-efchangeaddress',
        'pf-detail-efchangeaddress-persons': 'fipo/detailpages/efchangeaddress/pf-detail-efchangeaddress',
        'pf-detail-efchangeaddress-summary': 'fipo/detailpages/efchangeaddress/pf-detail-efchangeaddress',
        'pf-detail-efcipages-service': 'fipo/detailpages/efcipages/pf-detail-efcipages',
        'pf-detail-efcipages': 'fipo/detailpages/efcipages/pf-detail-efcipages',
        'pf-detail-efcipages-show': 'fipo/detailpages/efcipages/pf-detail-efcipages',
        'pf-detail-efcontactdata-service': 'fipo/detailpages/efcontactdata/pf-detail-efcontactdata',
        'pf-detail-efcontactdata': 'fipo/detailpages/efcontactdata/pf-detail-efcontactdata',
        'pf-detail-efcontactdata-edit': 'fipo/detailpages/efcontactdata/pf-detail-efcontactdata',
        'pf-detail-efcreditcard-service': 'fipo/detailpages/efcreditcard/pf-detail-efcreditcard',
        'pf-detail-efcreditcard': 'fipo/detailpages/efcreditcard/pf-detail-efcreditcard',
        'pf-detail-efcreditcard-list': 'fipo/detailpages/efcreditcard/pf-detail-efcreditcard',
        'pf-detail-efcreditcard-overview': 'fipo/detailpages/efcreditcard/pf-detail-efcreditcard',
        'pf-detail-efcreditcardload-service': 'fipo/detailpages/efcreditcardload/pf-detail-efcreditcardload',
        'pf-detail-efcreditcardload': 'fipo/detailpages/efcreditcardload/pf-detail-efcreditcardload',
        'pf-detail-efcreditcardload-load': 'fipo/detailpages/efcreditcardload/pf-detail-efcreditcardload',
        'pf-detail-efcreditcardnotification-service': 'fipo/detailpages/efcreditcardnotification/pf-detail-efcreditcardnotification',
        'pf-detail-efcreditcardnotification': 'fipo/detailpages/efcreditcardnotification/pf-detail-efcreditcardnotification',
        'pf-detail-efcreditcardnotification-settings': 'fipo/detailpages/efcreditcardnotification/pf-detail-efcreditcardnotification',
        'pf-detail-efcreditcardsettings-service': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-activate3dappid': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-activate3dphone': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-activate3dsms': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-changepaymenttype': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-options': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-overview': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-select': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcreditcardsettings-select3dmobiledevice': 'fipo/detailpages/efcreditcardsettings/pf-detail-efcreditcardsettings',
        'pf-detail-efcurrencies-service': 'fipo/detailpages/efcurrencies/pf-detail-efcurrencies',
        'pf-detail-efcurrencies': 'fipo/detailpages/efcurrencies/pf-detail-efcurrencies',
        'pf-detail-efcurrencies-moneytransfer': 'fipo/detailpages/efcurrencies/pf-detail-efcurrencies',
        'pf-detail-efcurrencydetail-service': 'fipo/detailpages/efcurrencydetail/pf-detail-efcurrencydetail',
        'pf-detail-efcurrencydetail': 'fipo/detailpages/efcurrencydetail/pf-detail-efcurrencydetail',
        'pf-detail-efcurrencydetail-chart': 'fipo/detailpages/efcurrencydetail/pf-detail-efcurrencydetail',
        'pf-detail-efcustomerbasefee-service': 'fipo/detailpages/efcustomerbasefee/pf-detail-efcustomerbasefee',
        'pf-detail-efcustomerbasefee': 'fipo/detailpages/efcustomerbasefee/pf-detail-efcustomerbasefee',
        'pf-detail-efcustomerbasefee-detail': 'fipo/detailpages/efcustomerbasefee/pf-detail-efcustomerbasefee',
        'pf-detail-efdebitcard-service': 'fipo/detailpages/efdebitcard/pf-detail-efdebitcard',
        'pf-detail-efdebitcard': 'fipo/detailpages/efdebitcard/pf-detail-efdebitcard',
        'pf-detail-efdebitcard-options': 'fipo/detailpages/efdebitcard/pf-detail-efdebitcard',
        'pf-detail-efdebitcard-overview': 'fipo/detailpages/efdebitcard/pf-detail-efdebitcard',
        'pf-detail-efdigitalgoods-service': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdigitalgoods': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdigitalgoods-buy': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdigitalgoods-message': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdigitalgoods-redemption': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdigitalgoods-show': 'fipo/detailpages/efdigitalgoods/pf-detail-efdigitalgoods',
        'pf-detail-efdomesticpayment-service': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efdomesticpayment': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efdomesticpayment-capturefinancialinstitute': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efdomesticpayment-detail': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efdomesticpayment-initial': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efdomesticpayment-postaccountsearch': 'fipo/detailpages/efdomesticpayment/pf-detail-efdomesticpayment',
        'pf-detail-efemoneybox-service': 'fipo/detailpages/efemoneybox/pf-detail-efemoneybox',
        'pf-detail-efemoneybox': 'fipo/detailpages/efemoneybox/pf-detail-efemoneybox',
        'pf-detail-efemoneybox-configure': 'fipo/detailpages/efemoneybox/pf-detail-efemoneybox',
        'pf-detail-efemoneybox-history': 'fipo/detailpages/efemoneybox/pf-detail-efemoneybox',
        'pf-detail-efenquiry-service': 'fipo/detailpages/efenquiry/pf-detail-efenquiry',
        'pf-detail-efenquiry': 'fipo/detailpages/efenquiry/pf-detail-efenquiry',
        'pf-detail-efenquiry-create': 'fipo/detailpages/efenquiry/pf-detail-efenquiry',
        'pf-detail-efenquiry-detail': 'fipo/detailpages/efenquiry/pf-detail-efenquiry',
        'pf-detail-efenquiry-overview': 'fipo/detailpages/efenquiry/pf-detail-efenquiry',
        'pf-detail-efepoupload-service': 'fipo/detailpages/efepoupload/pf-detail-efepoupload',
        'pf-detail-efepoupload': 'fipo/detailpages/efepoupload/pf-detail-efepoupload',
        'pf-detail-efepoupload-options': 'fipo/detailpages/efepoupload/pf-detail-efepoupload',
        'pf-detail-effastservice-service': 'fipo/detailpages/effastservice/pf-detail-effastservice',
        'pf-detail-effastservice': 'fipo/detailpages/effastservice/pf-detail-effastservice',
        'pf-detail-effastservice-edit': 'fipo/detailpages/effastservice/pf-detail-effastservice',
        'pf-detail-effastservice-list': 'fipo/detailpages/effastservice/pf-detail-effastservice',
        'pf-detail-efforeignpayment-service': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment-bicsearch': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment-currencyandbic': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment-detail': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment-initial': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforeignpayment-products': 'fipo/detailpages/efforeignpayment/pf-detail-efforeignpayment',
        'pf-detail-efforexorders-service': 'fipo/detailpages/efforexorders/pf-detail-efforexorders',
        'pf-detail-efforexorders': 'fipo/detailpages/efforexorders/pf-detail-efforexorders',
        'pf-detail-efforexorders-list': 'fipo/detailpages/efforexorders/pf-detail-efforexorders',
        'pf-detail-efforexrates-service': 'fipo/detailpages/efforexrates/pf-detail-efforexrates',
        'pf-detail-efforexrates': 'fipo/detailpages/efforexrates/pf-detail-efforexrates',
        'pf-detail-efforexrates-list': 'fipo/detailpages/efforexrates/pf-detail-efforexrates',
        'pf-detail-efforextrade-service': 'fipo/detailpages/efforextrade/pf-detail-efforextrade',
        'pf-detail-efforextrade': 'fipo/detailpages/efforextrade/pf-detail-efforextrade',
        'pf-detail-efforextrade-confirmation': 'fipo/detailpages/efforextrade/pf-detail-efforextrade',
        'pf-detail-efforextrade-intro': 'fipo/detailpages/efforextrade/pf-detail-efforextrade',
        'pf-detail-efforextrade-transaction': 'fipo/detailpages/efforextrade/pf-detail-efforextrade',
        'pf-detail-efgenericdocuments-service': 'fipo/detailpages/efgenericdocuments/pf-detail-efgenericdocuments',
        'pf-detail-efgenericdocuments': 'fipo/detailpages/efgenericdocuments/pf-detail-efgenericdocuments',
        'pf-detail-efgenericdocuments-overview': 'fipo/detailpages/efgenericdocuments/pf-detail-efgenericdocuments',
        'pf-detail-efgenericoverlay-service': 'fipo/detailpages/efgenericoverlay/pf-detail-efgenericoverlay',
        'pf-detail-efgenericoverlay': 'fipo/detailpages/efgenericoverlay/pf-detail-efgenericoverlay',
        'pf-detail-eflifeinsurance-service': 'fipo/detailpages/eflifeinsurance/pf-detail-eflifeinsurance',
        'pf-detail-eflifeinsurance': 'fipo/detailpages/eflifeinsurance/pf-detail-eflifeinsurance',
        'pf-detail-eflifeinsurance-detail': 'fipo/detailpages/eflifeinsurance/pf-detail-eflifeinsurance',
        'pf-detail-efmailbox-service': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmailbox': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmailbox-mailbox': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmailbox-new': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmailbox-read': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmailbox-write': 'fipo/detailpages/efmailbox/pf-detail-efmailbox',
        'pf-detail-efmoneymarketdetail-service': 'fipo/detailpages/efmoneymarketdetail/pf-detail-efmoneymarketdetail',
        'pf-detail-efmoneymarketdetail': 'fipo/detailpages/efmoneymarketdetail/pf-detail-efmoneymarketdetail',
        'pf-detail-efmoneymarketdetail-overview': 'fipo/detailpages/efmoneymarketdetail/pf-detail-efmoneymarketdetail',
        'pf-detail-efmortgagedetail-service': 'fipo/detailpages/efmortgagedetail/pf-detail-efmortgagedetail',
        'pf-detail-efmortgagedetail': 'fipo/detailpages/efmortgagedetail/pf-detail-efmortgagedetail',
        'pf-detail-efmortgagedetail-overview': 'fipo/detailpages/efmortgagedetail/pf-detail-efmortgagedetail',
        'pf-detail-efmovementdetails-service': 'fipo/detailpages/efmovementdetails/pf-detail-efmovementdetails',
        'pf-detail-efmovementdetails': 'fipo/detailpages/efmovementdetails/pf-detail-efmovementdetails',
        'pf-detail-efmovementdetails-detail': 'fipo/detailpages/efmovementdetails/pf-detail-efmovementdetails',
        'pf-detail-efmovementdetails-payment': 'fipo/detailpages/efmovementdetails/pf-detail-efmovementdetails',
        'pf-detail-efmovements-service': 'fipo/detailpages/efmovements/pf-detail-efmovements',
        'pf-detail-efmovements': 'fipo/detailpages/efmovements/pf-detail-efmovements',
        'pf-detail-efmovements-overview': 'fipo/detailpages/efmovements/pf-detail-efmovements',
        'pf-detail-efnewsletterpage-service': 'fipo/detailpages/efnewsletterpage/pf-detail-efnewsletterpage',
        'pf-detail-efnewsletterpage': 'fipo/detailpages/efnewsletterpage/pf-detail-efnewsletterpage',
        'pf-detail-efnewsletterpage-administration': 'fipo/detailpages/efnewsletterpage/pf-detail-efnewsletterpage',
        'pf-detail-efnewsletterpage-success': 'fipo/detailpages/efnewsletterpage/pf-detail-efnewsletterpage',
        'pf-detail-eforderoverview-service': 'fipo/detailpages/eforderoverview/pf-detail-eforderoverview',
        'pf-detail-eforderoverview': 'fipo/detailpages/eforderoverview/pf-detail-eforderoverview',
        'pf-detail-eforderoverview-overview': 'fipo/detailpages/eforderoverview/pf-detail-eforderoverview',
        'pf-detail-efpaybgsic-service': 'fipo/detailpages/efpaybgsic/pf-detail-efpaybgsic',
        'pf-detail-efpaybgsic': 'fipo/detailpages/efpaybgsic/pf-detail-efpaybgsic',
        'pf-detail-efpaybgsic-pay': 'fipo/detailpages/efpaybgsic/pf-detail-efpaybgsic',
        'pf-detail-efpaybgsic-verify': 'fipo/detailpages/efpaybgsic/pf-detail-efpaybgsic',
        'pf-detail-efpayment-service': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment-approveresult': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment-approvesingleorder': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment-detail': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment-searchpaymentlistpayment': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpayment-searchsingleorder': 'fipo/detailpages/efpayment/pf-detail-efpayment',
        'pf-detail-efpaymentlist-service': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-add': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-confirm': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-detail': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-edit': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-move': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-overview': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-paymentdetail': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymentlist-summary': 'fipo/detailpages/efpaymentlist/pf-detail-efpaymentlist',
        'pf-detail-efpaymenttemplate-service': 'fipo/detailpages/efpaymenttemplate/pf-detail-efpaymenttemplate',
        'pf-detail-efpaymenttemplate': 'fipo/detailpages/efpaymenttemplate/pf-detail-efpaymenttemplate',
        'pf-detail-efpaymenttemplate-detail': 'fipo/detailpages/efpaymenttemplate/pf-detail-efpaymenttemplate',
        'pf-detail-efpaymenttemplate-list': 'fipo/detailpages/efpaymenttemplate/pf-detail-efpaymenttemplate',
        'pf-detail-efpaymenttemplate-overview': 'fipo/detailpages/efpaymenttemplate/pf-detail-efpaymenttemplate',
        'pf-detail-efpoolasset-service': 'fipo/detailpages/efpoolasset/pf-detail-efpoolasset',
        'pf-detail-efpoolasset': 'fipo/detailpages/efpoolasset/pf-detail-efpoolasset',
        'pf-detail-efpoolasset-overview': 'fipo/detailpages/efpoolasset/pf-detail-efpoolasset',
        'pf-detail-efpoolbalance-service': 'fipo/detailpages/efpoolbalance/pf-detail-efpoolbalance',
        'pf-detail-efpoolbalance': 'fipo/detailpages/efpoolbalance/pf-detail-efpoolbalance',
        'pf-detail-efpoolbalance-overview': 'fipo/detailpages/efpoolbalance/pf-detail-efpoolbalance',
        'pf-detail-efpoolbalanceaverage-service': 'fipo/detailpages/efpoolbalanceaverage/pf-detail-efpoolbalanceaverage',
        'pf-detail-efpoolbalanceaverage': 'fipo/detailpages/efpoolbalanceaverage/pf-detail-efpoolbalanceaverage',
        'pf-detail-efpoolbalanceaverage-overview': 'fipo/detailpages/efpoolbalanceaverage/pf-detail-efpoolbalanceaverage',
        'pf-detail-efpoolinterestallocation-service': 'fipo/detailpages/efpoolinterestallocation/pf-detail-efpoolinterestallocation',
        'pf-detail-efpoolinterestallocation': 'fipo/detailpages/efpoolinterestallocation/pf-detail-efpoolinterestallocation',
        'pf-detail-efpoolinterestallocation-detail': 'fipo/detailpages/efpoolinterestallocation/pf-detail-efpoolinterestallocation',
        'pf-detail-efpoolinterestallocation-overview': 'fipo/detailpages/efpoolinterestallocation/pf-detail-efpoolinterestallocation',
        'pf-detail-efpoolliquiditybalancing-service': 'fipo/detailpages/efpoolliquiditybalancing/pf-detail-efpoolliquiditybalancing',
        'pf-detail-efpoolliquiditybalancing': 'fipo/detailpages/efpoolliquiditybalancing/pf-detail-efpoolliquiditybalancing',
        'pf-detail-efpoolliquiditybalancing-overview': 'fipo/detailpages/efpoolliquiditybalancing/pf-detail-efpoolliquiditybalancing',
        'pf-detail-efpoolmasterdata-service': 'fipo/detailpages/efpoolmasterdata/pf-detail-efpoolmasterdata',
        'pf-detail-efpoolmasterdata': 'fipo/detailpages/efpoolmasterdata/pf-detail-efpoolmasterdata',
        'pf-detail-efpoolmasterdata-details': 'fipo/detailpages/efpoolmasterdata/pf-detail-efpoolmasterdata',
        'pf-detail-efpoolmasterdata-overview': 'fipo/detailpages/efpoolmasterdata/pf-detail-efpoolmasterdata',
        'pf-detail-efportfoliomovements-service': 'fipo/detailpages/efportfoliomovements/pf-detail-efportfoliomovements',
        'pf-detail-efportfoliomovements': 'fipo/detailpages/efportfoliomovements/pf-detail-efportfoliomovements',
        'pf-detail-efportfoliomovements-overview': 'fipo/detailpages/efportfoliomovements/pf-detail-efportfoliomovements',
        'pf-detail-efportfolioorderoverview-service': 'fipo/detailpages/efportfolioorderoverview/pf-detail-efportfolioorderoverview',
        'pf-detail-efportfolioorderoverview': 'fipo/detailpages/efportfolioorderoverview/pf-detail-efportfolioorderoverview',
        'pf-detail-efportfolioorderoverview-detail': 'fipo/detailpages/efportfolioorderoverview/pf-detail-efportfolioorderoverview',
        'pf-detail-efportfolioorderoverview-overview': 'fipo/detailpages/efportfolioorderoverview/pf-detail-efportfolioorderoverview',
        'pf-detail-efportfoliotransfer-service': 'fipo/detailpages/efportfoliotransfer/pf-detail-efportfoliotransfer',
        'pf-detail-efportfoliotransfer': 'fipo/detailpages/efportfoliotransfer/pf-detail-efportfoliotransfer',
        'pf-detail-efportfoliotransfer-transfer': 'fipo/detailpages/efportfoliotransfer/pf-detail-efportfoliotransfer',
        'pf-detail-efproductopening-service': 'fipo/detailpages/efproductopening/pf-detail-efproductopening',
        'pf-detail-efproductopening': 'fipo/detailpages/efproductopening/pf-detail-efproductopening',
        'pf-detail-efproductopening-overview': 'fipo/detailpages/efproductopening/pf-detail-efproductopening',
        'pf-detail-efretirementfundorder-service': 'fipo/detailpages/efretirementfundorder/pf-detail-efretirementfundorder',
        'pf-detail-efretirementfundorder': 'fipo/detailpages/efretirementfundorder/pf-detail-efretirementfundorder',
        'pf-detail-efretirementfundorder-singleorder': 'fipo/detailpages/efretirementfundorder/pf-detail-efretirementfundorder',
        'pf-detail-efretirementfundorder-standingorder': 'fipo/detailpages/efretirementfundorder/pf-detail-efretirementfundorder',
        'pf-detail-efretirementfundorder-withdrawal': 'fipo/detailpages/efretirementfundorder/pf-detail-efretirementfundorder',
        'pf-detail-efretirementsavingsaccount3adetail-service': 'fipo/detailpages/efretirementsavingsaccount3adetail/pf-detail-efretirementsavingsaccount3adetail',
        'pf-detail-efretirementsavingsaccount3adetail': 'fipo/detailpages/efretirementsavingsaccount3adetail/pf-detail-efretirementsavingsaccount3adetail',
        'pf-detail-efretirementsavingsaccount3adetail-overview': 'fipo/detailpages/efretirementsavingsaccount3adetail/pf-detail-efretirementsavingsaccount3adetail',
        'pf-detail-efscanandpay-service': 'fipo/detailpages/efscanandpay/pf-detail-efscanandpay',
        'pf-detail-efscanandpay': 'fipo/detailpages/efscanandpay/pf-detail-efscanandpay',
        'pf-detail-efscanandpay-selection': 'fipo/detailpages/efscanandpay/pf-detail-efscanandpay',
        'pf-detail-efscannowpaylater-service': 'fipo/detailpages/efscannowpaylater/pf-detail-efscannowpaylater',
        'pf-detail-efscannowpaylater': 'fipo/detailpages/efscannowpaylater/pf-detail-efscannowpaylater',
        'pf-detail-efscannowpaylater-pay': 'fipo/detailpages/efscannowpaylater/pf-detail-efscannowpaylater',
        'pf-detail-efscannowpaylater-polling': 'fipo/detailpages/efscannowpaylater/pf-detail-efscannowpaylater',
        'pf-detail-efscannowpaylater-scanner': 'fipo/detailpages/efscannowpaylater/pf-detail-efscannowpaylater',
        'pf-detail-efsimpleactivation-service': 'fipo/detailpages/efsimpleactivation/pf-detail-efsimpleactivation',
        'pf-detail-efsimpleactivation': 'fipo/detailpages/efsimpleactivation/pf-detail-efsimpleactivation',
        'pf-detail-efsimpleactivation-activation': 'fipo/detailpages/efsimpleactivation/pf-detail-efsimpleactivation',
        'pf-detail-efsimpleactivation-index': 'fipo/detailpages/efsimpleactivation/pf-detail-efsimpleactivation',
        'pf-detail-efsmartbar-service': 'fipo/detailpages/efsmartbar/pf-detail-efsmartbar',
        'pf-detail-efsmartbar': 'fipo/detailpages/efsmartbar/pf-detail-efsmartbar',
        'pf-detail-efsmartbar-search': 'fipo/detailpages/efsmartbar/pf-detail-efsmartbar',
        'pf-detail-eftransfer-service': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer-account': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer-creditcard': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer-etrading': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer-forextrading': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftransfer-retirementsavingsaccount': 'fipo/detailpages/eftransfer/pf-detail-eftransfer',
        'pf-detail-eftravelfunds-service': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-confirm': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-deliveryaddress': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-denomination': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-details': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-overview': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-product': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-eftravelfunds-summary': 'fipo/detailpages/eftravelfunds/pf-detail-eftravelfunds',
        'pf-detail-efuisettings-service': 'fipo/detailpages/efuisettings/pf-detail-efuisettings',
        'pf-detail-efuisettings': 'fipo/detailpages/efuisettings/pf-detail-efuisettings',
        'pf-detail-efuisettings-userinterface': 'fipo/detailpages/efuisettings/pf-detail-efuisettings',
        'pf-detail-efvestedbenefitsdetail-service': 'fipo/detailpages/efvestedbenefitsdetail/pf-detail-efvestedbenefitsdetail',
        'pf-detail-efvestedbenefitsdetail': 'fipo/detailpages/efvestedbenefitsdetail/pf-detail-efvestedbenefitsdetail',
        'pf-detail-efvestedbenefitsdetail-overview': 'fipo/detailpages/efvestedbenefitsdetail/pf-detail-efvestedbenefitsdetail',
        'pf-detail-efwithdrawalnotice-service': 'fipo/detailpages/efwithdrawalnotice/pf-detail-efwithdrawalnotice',
        'pf-detail-efwithdrawalnotice': 'fipo/detailpages/efwithdrawalnotice/pf-detail-efwithdrawalnotice',
        'pf-detail-efwithdrawalnotice-create': 'fipo/detailpages/efwithdrawalnotice/pf-detail-efwithdrawalnotice',
        'pf-detail-efwithdrawalnotice-search': 'fipo/detailpages/efwithdrawalnotice/pf-detail-efwithdrawalnotice',
        'pf-detail-efwithdrawals-service': 'fipo/detailpages/efwithdrawals/pf-detail-efwithdrawals',
        'pf-detail-efwithdrawals': 'fipo/detailpages/efwithdrawals/pf-detail-efwithdrawals',
        'pf-detail-efwithdrawals-overview': 'fipo/detailpages/efwithdrawals/pf-detail-efwithdrawals',
        'pf-detail-fipomessage': 'fipo/detailpages/fipomessage/pf-detail-fipomessage',
        'pf-detail-fiposervicehub-service': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub-notifications': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub-otherservices': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub-personaldata': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub-products': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fiposervicehub-security': 'fipo/detailpages/fiposervicehub/pf-detail-fiposervicehub',
        'pf-detail-fipositemap': 'fipo/detailpages/fipositemap/pf-detail-fipositemap',
        'pf-detail-fipositemap-sitemap': 'fipo/detailpages/fipositemap/pf-detail-fipositemap',
        'pf-detail-fipowidgetshop': 'fipo/detailpages/fipowidgetshop/pf-detail-fipowidgetshop',
        'pf-detail-fipowidgetshop-list': 'fipo/detailpages/fipowidgetshop/pf-detail-fipowidgetshop',
        'pf-detail-okautcardregistration-service': 'fipo/detailpages/okautcardregistration/pf-detail-okautcardregistration',
        'pf-detail-okautcardregistration': 'fipo/detailpages/okautcardregistration/pf-detail-okautcardregistration',
        'pf-detail-okautcardregistration-challenge': 'fipo/detailpages/okautcardregistration/pf-detail-okautcardregistration',
        'pf-detail-okautcardregistration-register': 'fipo/detailpages/okautcardregistration/pf-detail-okautcardregistration',
        'pf-detail-okautcardregistration-selection': 'fipo/detailpages/okautcardregistration/pf-detail-okautcardregistration',
        'pf-detail-okautchangepassword-service': 'fipo/detailpages/okautchangepassword/pf-detail-okautchangepassword',
        'pf-detail-okautchangepassword': 'fipo/detailpages/okautchangepassword/pf-detail-okautchangepassword',
        'pf-detail-okautchangepassword-change': 'fipo/detailpages/okautchangepassword/pf-detail-okautchangepassword',
        'pf-detail-okautchangesessiontimeout-service': 'fipo/detailpages/okautchangesessiontimeout/pf-detail-okautchangesessiontimeout',
        'pf-detail-okautchangesessiontimeout': 'fipo/detailpages/okautchangesessiontimeout/pf-detail-okautchangesessiontimeout',
        'pf-detail-okautchangesessiontimeout-selection': 'fipo/detailpages/okautchangesessiontimeout/pf-detail-okautchangesessiontimeout',
        'pf-detail-okautchangeusername-service': 'fipo/detailpages/okautchangeusername/pf-detail-okautchangeusername',
        'pf-detail-okautchangeusername': 'fipo/detailpages/okautchangeusername/pf-detail-okautchangeusername',
        'pf-detail-okautchangeusername-edit': 'fipo/detailpages/okautchangeusername/pf-detail-okautchangeusername',
        'pf-detail-okautmobileid-service': 'fipo/detailpages/okautmobileid/pf-detail-okautmobileid',
        'pf-detail-okautmobileid': 'fipo/detailpages/okautmobileid/pf-detail-okautmobileid',
        'pf-detail-okautmobileid-overview': 'fipo/detailpages/okautmobileid/pf-detail-okautmobileid',
        'pf-detail-okautmobileid-polling': 'fipo/detailpages/okautmobileid/pf-detail-okautmobileid',
        'pf-detail-okautmobileid-register': 'fipo/detailpages/okautmobileid/pf-detail-okautmobileid',
        'pf-detail-pasoffers-service': 'fipo/detailpages/pasoffers/pf-detail-pasoffers',
        'pf-detail-pasoffers': 'fipo/detailpages/pasoffers/pf-detail-pasoffers',
        'pf-detail-pasoffers-detail': 'fipo/detailpages/pasoffers/pf-detail-pasoffers',
        'pf-detail-pasoffers-overview': 'fipo/detailpages/pasoffers/pf-detail-pasoffers',
        'pf-detail-pasoffers-redeemablein': 'fipo/detailpages/pasoffers/pf-detail-pasoffers',
        'pf-detail-pasoptinpage-service': 'fipo/detailpages/pasoptinpage/pf-detail-pasoptinpage',
        'pf-detail-pasoptinpage': 'fipo/detailpages/pasoptinpage/pf-detail-pasoptinpage',
        'pf-detail-pasoptinpage-activation': 'fipo/detailpages/pasoptinpage/pf-detail-pasoptinpage',
        'pf-detail-pasoptinpage-infopage': 'fipo/detailpages/pasoptinpage/pf-detail-pasoptinpage',
        'pf-detail-pasoptinpage-initialpage': 'fipo/detailpages/pasoptinpage/pf-detail-pasoptinpage',
        'pf-detail-passettings-service': 'fipo/detailpages/passettings/pf-detail-passettings',
        'pf-detail-passettings': 'fipo/detailpages/passettings/pf-detail-passettings',
        'pf-detail-passettings-init': 'fipo/detailpages/passettings/pf-detail-passettings',
        'pf-detail-passettings-merchants': 'fipo/detailpages/passettings/pf-detail-passettings',
        'pf-detail-passettings-notifications': 'fipo/detailpages/passettings/pf-detail-passettings',
        'pf-detail-pfchapoprocess-service': 'fipo/detailpages/pfchapoprocess/pf-detail-pfchapoprocess',
        'pf-detail-pfchapoprocess': 'fipo/detailpages/pfchapoprocess/pf-detail-pfchapoprocess',
        'pf-detail-pfchapoprocess-noteligible': 'fipo/detailpages/pfchapoprocess/pf-detail-pfchapoprocess',
        'pf-detail-pfchapoprocess-orderconfirm': 'fipo/detailpages/pfchapoprocess/pf-detail-pfchapoprocess',
        'pf-detail-pfchapoprocess-orderprocess': 'fipo/detailpages/pfchapoprocess/pf-detail-pfchapoprocess',
        'pf-detail-pfchcontent-service': 'fipo/detailpages/pfchcontent/pf-detail-pfchcontent',
        'pf-detail-pfchcontent': 'fipo/detailpages/pfchcontent/pf-detail-pfchcontent',
        'pf-detail-pfchcontent-content': 'fipo/detailpages/pfchcontent/pf-detail-pfchcontent',
        'pf-detail-pfchextendmortgage-service': 'fipo/detailpages/pfchextendmortgage/pf-detail-pfchextendmortgage',
        'pf-detail-pfchextendmortgage': 'fipo/detailpages/pfchextendmortgage/pf-detail-pfchextendmortgage',
        'pf-detail-pfchextendmortgage-inquiry': 'fipo/detailpages/pfchextendmortgage/pf-detail-pfchextendmortgage',
        'pf-detail-pfchkusocampaign-service': 'fipo/detailpages/pfchkusocampaign/pf-detail-pfchkusocampaign',
        'pf-detail-pfchkusocampaign': 'fipo/detailpages/pfchkusocampaign/pf-detail-pfchkusocampaign',
        'pf-detail-pfchkusocampaign-campaign': 'fipo/detailpages/pfchkusocampaign/pf-detail-pfchkusocampaign',
        'pf-detail-pfchonlinemortgage-service': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-basicdata': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-contact': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-info': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-mortgagedata': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-objectdata': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-personaldata': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchonlinemortgage-transfer': 'fipo/detailpages/pfchonlinemortgage/pf-detail-pfchonlinemortgage',
        'pf-detail-pfchscreenkey': 'fipo/detailpages/pfchscreenkey/pf-detail-pfchscreenkey',
        'pf-detail-trdefaultportfolio-selection': 'fipo/detailpages/trdefaultportfolio/pf-detail-trdefaultportfolio',
        'pf-detail-trdefaultportfolio-service': 'fipo/detailpages/trdefaultportfolio/pf-detail-trdefaultportfolio',
        'pf-detail-trdefaultportfolio': 'fipo/detailpages/trdefaultportfolio/pf-detail-trdefaultportfolio',
        'pf-detail-trgaticket-order': 'fipo/detailpages/trgaticket/pf-detail-trgaticket',
        'pf-detail-trgaticket-service': 'fipo/detailpages/trgaticket/pf-detail-trgaticket',
        'pf-detail-trgaticket': 'fipo/detailpages/trgaticket/pf-detail-trgaticket',
        'pf-detail-trnotification-settings': 'fipo/detailpages/trnotification/pf-detail-trnotification',
        'pf-detail-trnotification-service': 'fipo/detailpages/trnotification/pf-detail-trnotification',
        'pf-detail-trnotification': 'fipo/detailpages/trnotification/pf-detail-trnotification',
        'pf-detail-trtaxstatement-order': 'fipo/detailpages/trtaxstatement/pf-detail-trtaxstatement',
        'pf-detail-trtaxstatement-service': 'fipo/detailpages/trtaxstatement/pf-detail-trtaxstatement',
        'pf-detail-trtaxstatement': 'fipo/detailpages/trtaxstatement/pf-detail-trtaxstatement'
    },
    packages: [
        {
            name: 'highcharts',
            main: 'highcharts'
        }
    ],
    shim: {
        moment: {
            exports: 'moment'
        },
        'dust.core': {
            exports: 'dust'
        },
        'dust-helpers': {
            deps: [
                'dust.core'
            ]
        },
        'dust-pfhelpers': {
            deps: [
                'dust.core',
                'dust-helpers'
            ]
        },
        'dust-templates': {
            deps: [
                'dust.core',
                'dust-helpers',
                'dust-pfhelpers'
            ]
        },
        'dust-templates-mobile': {
            deps: [
                'dust.core',
                'dust-helpers',
                'dust-pfhelpers'
            ]
        },
        jquery: {
            exports: 'jQuery'
        },
        'jquery-scrollto': {
            deps: [
                'jquery'
            ]
        },
        'jquery-tablesorter': {
            deps: [
                'jquery'
            ]
        },
        'jquery-flot': {
            deps: [
                'jquery'
            ]
        },
        'jquery-flot-time': {
            deps: [
                'jquery',
                'jquery-flot'
            ]
        },
        angular: {
            exports: 'angular'
        },
        'angular-aria': {
            deps: [
                'angular'
            ]
        },
        'angular-route': {
            deps: [
                'angular'
            ]
        },
        'angular-messages': {
            deps: [
                'angular'
            ]
        },
        'angular-dynamic-module': {
            deps: [
                'angular'
            ]
        },
        'angular-aria-extended': {
            deps: [
                'angular'
            ]
        },
        'angular-lodash': {
            deps: [
                'angular',
                'lodash'
            ]
        },
        'angular-ui-router': {
            deps: [
                'angular-route'
            ]
        },
        'angular-formly': {
            deps: [
                'api-check',
                'angular'
            ]
        },
        ne: {
            exports: '_ne'
        },
        bignumber: {
            exports: 'Bignumber'
        },
        'js-cookie': {
            exports: 'js-cookie'
        }
    }
});
require(['infrastructure'], function () {
    require(['app'], function () {
    })
});
define('main', function () {
});
!function () {
    'use strict';
    define('postfinance.shared.directives.templates.html', [
        'angular'
    ], function (angular) {
        angular.module('postfinance.shared.directives.templates.html', [
        ]).run(['$templateCache',
            function ($templateCache) {
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpage.html', '<div class=ng-cloak ng-controller=DetailPagePopupController><div class=widget-tab-container><div class="detail_page js-detail-page" id={{detailPageName}}-detail_page><div class=detail_content ng-class="{\'detail_content-wide\': isWide}"><div class="detail_page--buttons detail_page--buttons-upper" ng-if=isPopUp><a ng-if=showMainBackButton() class=detail_content--back_button href="" ng-click=onBack() ng-space=onBack() ng-enter=onBack() pf-translate="{{\'Back\'|pfExpandKey:this}}"></a> <a ng-class="{\'js-detail_dialog--close js-pf-popup-container-close\': _config.noRefreshNecessary}" class="detail_content--close_button js-autofocus" href="" tabindex=0 ng-click=onClose() role=button pf-translate="{{\'Close\'|pfExpandKey:this}}"></a></div><h1 class="page-title page-title-top" ng-if="(displayTabs && isPopUp) || showDetailPageTitle" tabindex=-1><span pf-translate={{pageTitleKey()}}></span></h1><h1 class="page-title page-title-top" ng-if="!(displayTabs || subTitle) && isPopUp" tabindex=-1><span ng-bind-html=pageTitle|pfTranslate|content></span> <span ng-bind-html=pageTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span></h1><h1 class="page-title page-title-top" ng-if="subTitle && isPopUp" tabindex=-1><span ng-bind-html=pageTitle|pfTranslate|content></span> <span ng-bind-html=pageTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span><div class=add-information><span ng-bind-html=subTitle|pfTranslate|content></span> <span ng-bind-html=subTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span></div></h1><div ng-if="helpLink && isPopUp" class=link-item><a ng-click=openHelpWindow(helpLink.url) ng-space=openHelpWindow(helpLink.url) ng-enter=openHelpWindow(helpLink.url) href="" class="link helpbrowser"><span ng-bind-html=helpText|pfTranslate|content></span></a></div><p id={{detailPageName}}-detailIntroScreen ng-if=detailIntroScreenKey screen-key={{detailIntroScreenKey|pfTranslate}} skip-parse=""></p><div class="content-pane-wrapper content-pane-pfjson" ng-if="getDetailPageType() === \'PFJSON\'"></div><div class=content-pane-wrapper ng-if="getDetailPageType() === \'JSON\'"><div ng-if=rightLink class="content-pane is-hidden-print js-pf-no-focus" ng-show=rightLink.condition()><ul class="list-rightlinks is-close_below"><li><a class=link id={{detailPageName}}-rightLink href="" ng-click=rightLink.click($event) pf-translate={{rightLink.text}}></a></li></ul></div><tabs-navigation ng-if="displayTabs && tabsLoaded" single-content=true show-tabs=tabsVisibility><tab-wrapper content-id={{tab.fullStateName}} ng-repeat="tab in tabs track by $index" is-active="($index === activeTab)" click-function="activateTab($index, tab.fullStateName)"><span ng-if=tab.tabTitleIcon class="icon {{tab.tabTitleIcon}}"></span> <span pf-translate={{tab.tabTitleKey}} class=js-widget_tabs--link--text></span></tab-wrapper><content-wrapper><div ng-include=includePath onload=initDetailPage()></div></content-wrapper></tabs-navigation><div ng-if=!displayTabs ng-include=includePath onload=initDetailPage()></div></div><div class="content-pane-wrapper content-pane-iframe" ng-if="getDetailPageType() === \'IFRAME\'"><style media=print>* {\n            transition: none !important\n          }\n\n          iframe {\n            min-width: 1024px;\n          }</style><iframe ng-src={{iframeSrcUrl}} width=100% scrolling=no iframe-auto-resize=""></iframe></div><div class="content-pane-wrapper content-pane wcms" ng-if="getDetailPageType() === \'WCMS\'"><div ng-bind-html=wcmsContent|content tabindex=0></div></div><a ng-if=backBtn class=is-visuallyhidden ng-click=onBack() ng-space=onBack() ng-enter=onBack() href="" pf-translate="{{\'Back\'|pfExpandKey:this}}"></a> <a ng-if=isPopUp class=is-visuallyhidden ng-click=onClose() href="" ng-class="{\'js-detail_dialog--close js-pf-popup-container-close\': _config.noRefreshNecessary}" pf-translate="{{\'Close\'|pfExpandKey:this}}" tabindex=0></a></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpageMobile.html', '<div class=ng-cloak ng-controller=DetailPagePopupController><div class=widget-tab-container><div class="detail_page js-detail-page" id=detail_page><div class=detail_content ng-class="{\'detail_content-wide\': isWide}"><div class="detail_page--buttons detail_page--buttons-upper" ng-if=isPopUp><a ng-if=showMainBackButton() class=detail_content--back_button href="" ng-click=onBack() ng-space=onBack() ng-enter=onBack() pf-translate="{{\'Back\'|pfExpandKey:this}}"></a> <a ng-class="{\'js-detail_dialog--close js-pf-popup-container-close\': _config.noRefreshNecessary}" class="detail_content--close_button js-autofocus" role=button ng-click=onClose() ng-space=onClose() ng-enter=onClose() pf-translate="{{\'Close\'|pfExpandKey:this}}" href="" tabindex=0></a></div><h1 class="page-title page-title-top" ng-if="displayTabs &amp;&amp; isPopUp  || showDetailPageTitle" pf-translate={{pageTitleKey()}} tabindex=-1></h1><h1 class="page-title page-title-top" ng-if="!displayTabs &amp;&amp; isPopUp" tabindex=-1><span ng-bind-html=pageTitle|pfTranslate|content></span> <span ng-bind-html=pageTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span><div ng-if=subTitle class=add-information><span ng-bind-html=subTitle|pfTranslate|content></span> <span ng-bind-html=subTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print add-information"></span></div></h1><p id={{detailPageName}}-detailIntroScreen ng-if=detailIntroScreenKey screen-key={{detailIntroScreenKey|pfTranslate}} skip-parse=""></p><div class="content-pane-wrapper content-pane-pfjson" ng-if="getDetailPageType() === \'PFJSON\'"></div><div ng-if="getDetailPageType() === \'JSON\'"><div ng-if=rightLink class="content-pane is-hidden-print js-pf-no-focus" ng-show=rightLink.condition()><ul class="list-rightlinks is-close_below"><li><a class=link href="" ng-click=rightLink.click($event) pf-translate={{rightLink.text}}></a></li></ul></div><tabs-navigation ng-if=displayTabs single-content=true><tab-wrapper content-id={{tab.fullStateName}} ng-repeat="tab in tabs track by $index" is-active="(activeTab === $index)" ng-click="activateTab($index, tab.fullStateName)"><span ng-if=tab.tabTitleIcon class="icon {{tab.tabTitleIcon}}"></span> <span pf-translate={{tab.tabTitleKey}} class=js-widget_tabs--link--text></span></tab-wrapper><content-wrapper><div ng-include=includePath onload=initDetailPage()></div></content-wrapper></tabs-navigation><div ng-if=!displayTabs ng-include=includePath onload=initDetailPage()></div></div><div class="content-pane-wrapper content-pane-iframe" ng-if="getDetailPageType() === \'IFRAME\'"><iframe ng-src={{iframeSrcUrl}} width=100% scrolling=no iframe-auto-resize=""></iframe></div><div class="content-pane-wrapper content-pane wcms" ng-if="getDetailPageType() === \'WCMS\'"><div ng-bind-html=wcmsContent|content tabindex=0></div></div><div ng-if=showTncLink() class="content-footer link-item"><a ng-click=openOverlay(tncLink.url) ng-space=openOverlay(tncLink.url) href="" class="link helpbrowser"><span pf-translate="{{\'Teilnahmebedingungen\'|pfExpandKey:this}}"></span></a></div><div class="detail_page--buttons detail_page--buttons-lower" ng-if=isPopUp><a ng-if=backBtn class=detail_content--back_button ng-click=onBack() href="" pf-translate="{{\'Back\'|pfExpandKey:this}}"></a> <a ng-class="{\'js-detail_dialog--close js-pf-popup-container-close\': _config.noRefreshNecessary}" class=detail_content--close_button ng-click=onClose() role=button pf-translate="{{\'Close\'|pfExpandKey:this}}" href=""></a></div></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailPageOverlay.html', '<div class="ng-cloak display-none" id=detail_page_overlay ng-controller=DetailPageOverlayController role=dialog><div class="detail_overlay detail_overlay-mobile_fullscreen is-hidden js-detail_overlay is-detail_page" id=normal data-has-module=yes style="display: block" ng-class="{\'is-large\': isLarge, \'is-extra_large\': isExtraLarge, \'is-full-height\': isFullHeight}"><div class=detail_overlay--bg></div><div class=detail_overlay--content ng-if="getDetailPageType() === \'JSON\' || getDetailPageType() === \'WCMS\'"><div class=detail_overlay--content--header ng-if=!hideCloseBtn><a class="detail_content--close_button js-detail_overlay_close" href="" ng-click=onClose() pf-translate="{{\'Close\'|pfExpandKey:this}}" role=button></a></div><div class=detail_overlay--content--body><div class=detail_content><h1 ng-if=pageTitle class="page-title page-title-top"><span ng-if=pageTitle ng-bind-html=pageTitle|pfTranslate|content></span> <span ng-if=pageTitlePrintOnly ng-bind-html=pageTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span><div ng-if="subTitle || subTitlePrintOnly" class=add-information><span ng-if=subTitle ng-bind-html=subTitle|pfTranslate|content></span> <span ng-if=subTitlePrintOnly ng-bind-html=subTitlePrintOnly|pfTranslate|content class="is-hidden is-visible-print"></span></div></h1><div ng-if=helpLink class=link-item><a ng-click=openHelpWindow(helpLink.url) ng-space=openHelpWindow(helpLink.url) ng-enter=openHelpWindow(helpLink.url) href="" class="link helpbrowser" role=button><span ng-bind-html=helpText|pfTranslate|content></span></a></div><p id={{detailPageName}}-detailIntroScreen ng-if=detailIntroScreenKey screen-key={{detailIntroScreenKey|pfTranslate}} skip-parse=""></p><div ng-if=rightLink class="is-hidden-print js-pf-no-focus" ng-show=rightLink.condition()><div class=is-hidden-print><ul class=list-rightlinks><li><a class=link id={{detailPageName}}-rightLink href="" ng-click=rightLink.click($event) pf-translate={{rightLink.text}}></a></li></ul></div></div><tabs-navigation ng-if="displayTabs && tabsTranslationsReady && tabsLoaded" single-content=true show-tabs=tabsVisibility><tab-wrapper content-id={{tab.fullStateName}} ng-repeat="tab in tabs track by $index" is-active="($index === activeTab)" click-function="activateTab($index, tab.fullStateName)"><span ng-if=tab.tabTitleIcon class="icon {{tab.tabTitleIcon}}"></span> <span pf-translate={{tab.tabTitleKey}} class=js-widget_tabs--link--text></span></tab-wrapper><content-wrapper><div ng-include=includePath onload=initDetailPage()></div></content-wrapper></tabs-navigation><div ng-include=includePath ng-if=!displayTabs onload=initDetailPage()></div><div class=content-pane-wrapper ng-if="getDetailPageType() === \'WCMS\'"><div class="content-pane wcms"><div ng-bind-html=wcmsContent|content tabindex=0></div></div></div></div></div><div ng-if="(isMobile && !hideCloseBtn) || showCloseButton" class=detail_overlay--content--footer><a class="detail_content--close_button js-detail_overlay_close" href="" ng-click=onClose() role=button pf-translate="{{\'Close\'|pfExpandKey:this}}"></a></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpageStateEmpty.html', '<div ng-if=!extraCloseBtn class=l-gap></div><div ng-if=extraCloseBtn class=l-gap-above><div class="buttons buttons-inline buttons-right l-gap l-gap-medium"><button class="btn btn-yellow" type=button ng-click=onClose() pf-translate="{{\'Close\'|pfExpandKey:this}}"></button></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpageStateError.html', '<messages text-key={{textKey}} error=error></messages><div ng-if=!extraCloseBtn class=l-gap></div><div ng-if=extraCloseBtn class=l-gap-above><div class="buttons buttons-inline buttons-right l-gap l-gap-medium"><button class="btn btn-yellow" type=button ng-click=onClose() pf-translate="{{\'Close\'|pfExpandKey:this}}"></button></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpageStateInitial.html', '<p></p>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/detailpageStateLoading.html', '<detail-loader service-config=_config.service loading-label="{{\'LoadingData\'|pfExpandKey:this}}"></detail-loader>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/ecEmptyWidget.html', '<div class=widget--innercontent><div class=widget_state_info><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><p class=widget_state_info--content--txt pf-translate="{{\'EmptyWidgetMessage\'|pfExpandKey:this}}"></p></div></div><button-bar-static show-call-to-action=showCallToAction call-to-action-label="{{callToActionLabel | pfExpandKey:this}}" call-to-action-type={{callToActionType}} widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action) detail-single-label="{{\'DetailedOverview\'|pfExpandKey:this}}" show-detail-link=showDetailLink></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/ecInfoWidget.html', '<div class=widget--innercontent><div class="widget_state_info pf-cockpit"><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_state_info--content--icon icon {{actionItemIcon}}"></span><p ng-if=infoTitle class="widget_state_info--content--txt pf-widget-info--title" pf-translate={{infoTitle|pfExpandKey:this}}></p><p ng-if=infoFirstLine class="widget_state_info--content--txt pf-widget-info--text" pf-translate={{infoFirstLine|pfExpandKey:this}}></p><p ng-if=infoSecondLine class="widget_state_info--content--txt pf-widget-info--text" pf-translate={{infoSecondLine|pfExpandKey:this}}></p></div></div><button-bar-static show-call-to-action=showCallToAction call-to-action-label="{{callToActionLabel | pfExpandKey:this}}" call-to-action-type={{callToActionType}} widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action) detail-single-label="{{\'DetailedOverview\'|pfExpandKey:this}}" show-detail-link=showDetailLink></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/ecInitialWidget.html', '<div class="widget--innercontent pf-cockpit"></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/emptyDetailpage.html', '<div class=content-pane-wrapper><div ui-view=""></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/emptyWidget.html', '<div class=widget--innercontent><div class=widget_state_info ng-class="{\'successfully_completed\' : !!hideActionItem}"><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span ng-if=!hideIconWhenEmpty class="widget_state_info--content--icon icon icon-successfully_completed"></span> <span ng-if=!hideActionItem class="widget_state_info--content--icon icon {{actionItemIcon}}"></span><p class=widget_state_info--content--txt pf-translate="{{\'EmptyWidgetMessage\'|pfExpandKey:this}}"></p></div></div><button-bar-static show-call-to-action=showCallToAction call-to-action-label="{{callToActionLabel | pfExpandKey:this}}" call-to-action-type={{callToActionType}} widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action) detail-single-label="{{\'DetailedOverview\'|pfExpandKey:this}}" show-detail-link=showDetailLink></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/errorWidget.html', '<div class=widget--innercontent><div class="warning widget_state_info" ng-if=showDetailLink><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_state_info--content--icon icon icon-pay_attention"></span><p class=widget_submission_feedback--text ng-if=message.translated ng-bind-html="message.message | unsafe"></p><p class=widget_submission_feedback--text ng-if="!message.translated && !message.fullKey" pf-translate={{message.message|pfExpandKey:this}} translate-values=message.data></p><p class=widget_submission_feedback--text ng-if="!message.translated && message.fullKey" pf-translate={{message.message}}></p></div></div><div ng-if=!showDetailLink class=widget_submission_feedback ng-attr="{\'role=alert\' : canGainFocus}" tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_submission_feedback--icon icon icon-error"></span><p class=widget_submission_feedback--text ng-if=message.translated ng-bind-html="message.message | unsafe"></p><p class=widget_submission_feedback--text ng-if="!message.translated && !message.fullKey" pf-translate={{message.message|pfExpandKey:this}} translate-values=message.data></p><p class=widget_submission_feedback--text ng-if="!message.translated && message.fullKey" pf-translate={{message.message}}></p><div class=widget_submission_feedback--action ng-if=!dontShowOkButton><a class="submission__feedback--action--link btn" role=button href="" ng-click=onConfirmation() ng-space=onConfirmation() pf-translate="{{\'Ok\'|pfExpandKey:this}}"></a></div></div><button-bar-static show-call-to-action=showCallToAction call-to-action-label="{{callToActionLabel | pfExpandKey:this}}" call-to-action-type={{callToActionType}} widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action) detail-single-label="{{\'DetailedOverview\'|pfExpandKey:this}}" show-detail-link=showDetailLink></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/infoWidget.html', '<div class=widget--innercontent><div class=widget_submission_feedback ng-attr="{\'role=alert\' : canGainFocus}" tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_submission_feedback--icon icon icon-successfully_completed"></span><p class=widget_submission_feedback--text ng-if=messages.infos[0].translated ng-bind-html="messages.infos[0].message | unsafe"></p><p class=widget_submission_feedback--text ng-if="messages.infos && !messages.infos[0].translated" pf-translate={{messages.infos[0].message|pfExpandKey:this}} translate-values=messages.infos[0].data></p><p class=widget_submission_feedback--text ng-if=messages.success[0].translated ng-bind-html="messages.success[0].message | unsafe"></p><p class=widget_submission_feedback--text ng-if="messages.success && !messages.success[0].translated" pf-translate={{messages.success[0].message|pfExpandKey:this}} translate-values=messages.success[0].data></p><div class=widget_submission_feedback--action><a class="submission__feedback--action--link btn" role=button href="" ng-click=onConfirmation() ng-space=onConfirmation() pf-translate="{{\'Ok\'|pfExpandKey:this}}"></a></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/noticeWidget.html', '<div class=widget--innercontent><div class=widget_submission_feedback ng-attr="{\'role=alert\' : canGainFocus}" tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_submission_feedback--icon icon icon-notification_info"></span><p class=widget_submission_feedback--text ng-if=messages.notices[0].translated ng-bind-html="messages.notices[0].message | unsafe"></p><p class=widget_submission_feedback--text ng-if=!messages.notices[0].translated pf-translate={{messages.notices[0].message|pfExpandKey:this:messages.notices[0].data}}></p><div class=widget_submission_feedback--action><a class="submission__feedback--action--link btn" role=button href="" ng-click=onConfirmation() ng-space=onConfirmation() pf-translate="{{\'Ok\'|pfExpandKey:this}}"></a></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/templates/pseudoWidget.html', '<li data-pid=${widgetPid} id=${widgetPid} class=widget_list--item ng-controller="PseudoWidgetController as tile" ng-class="::{\'js-widget_grid--item\' : !tile.isMobile(), \'js-widget_list--item\' : tile.isMobile()}" ng-init="tile.init(\'${widgetId}\', \'${fullInstanceType}\')" style="visibility: hidden"><article class="widget is-added is-removable js-widget" data-has-module=yes><div class=widget_header><h2 class=widget--title data-ng-bind=tile.title|pfTranslate:tile></h2><div class=l-right><button class="btn_icon btn_icon-remove js-widget--remove" type=button ng-click=tile.removeWidget()><span pf-translate="{{\'RemoveTile\'|pfExpandKey:tile}}"></span>:&nbsp; <span data-ng-bind=tile.title|pfTranslate:tile></span></button></div><div ng-if=tile.isMobile() class="btn_icon btn_icon-toggle js-widget--drag"></div></div><div class=widget--added><div class=widget--added--content><span class="icon icon-ok_40px"></span><p data-ng-bind="\'TileAdded\'|pfTranslate:tile"></p></div></div><accessible-sorter label="{{\'MoveToNewPosition\'|pfExpandKey:tile}}" widget-instance-id={{::tile.id}}></accessible-sorter></article></li>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecanalysisoverview/content.html', '<div class=widget--innercontent><div ng-if=chartInfo class=widget_e_cockpit_charts><div class=widget_e_cockpit_charts--description pf-translate="{{\'ChartInfo\'|pfExpandKey:this}}" translate-values={{chartInfo}}></div></div><ec-pie-chart ng-if=dynamic.chartData the-id={{::widgetInstanceId}}-chart data=dynamic.chartData is-mobile=isMobile></ec-pie-chart><button-bar-static show-detail-link=false call-to-action-type=GoToCockpit show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efaccounttransfer/content.html', '<div class=widget--innercontent><form name=vm.data.efaccounttransferForm class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-from name={{::widgetInstanceId}}-dropdown-from label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'FromAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedDebitAccount entries=vm.data.debitAccounts on-change=vm.actions.debitAccountChanged(entry) full-size=true></dropdown><dropdown the-id={{::widgetInstanceId}}-dropdown-to name={{::widgetInstanceId}}-dropdown-to label="{{\'To\'|pfExpandKey:this}}" describedby="{{\'ToAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedCreditAccount entries=vm.data.creditAccounts full-size=true></dropdown><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd currencies=vm.data.currencies amount-model=vm.data.amount currency-model=vm.data.currency max-length=19></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" detail-action-label="{{\'DetailedOverview\' | pfExpandKey:this}}" is-valid=vm.actions.isValid() on-call-to-action-click=vm.actions.submit() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=vm.actions.goToDetailPage()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efapproveebills/content.html', '<div class=widget--innercontent><account-info account-name={{standardAccount.name}} account-iban={{standardAccount.iban}} widget-instance-id={{::widgetInstanceId}}></account-info><div class=no-gap-above><table class=widget_state_table><colgroup><col style="width: 25px"><col style="width: 42%"><col style="width: auto"></colgroup><thead class="widget_state_table_header is-visuallyhidden"><tr><th></th><th><strong pf-translate="{{\'Type\'|pfExpandKey:this}}"></strong></th><th><strong pf-translate="{{\'Amount\'|pfExpandKey:this}}"></strong></th></tr></thead><tbody><tr class="widget_state_table_list--row widget_state_table_list--action_link has-pointer" ng-repeat="item in invoices track by item.id"><td><div class=checkbox><input type=checkbox value={{::item.id}} ng-model=item.checked ng-change=itemSelected() name={{::widgetInstanceId}}-checkboxgroup id={{::widgetInstanceId}}-{{::item.id}} class=checkbox--field aria-labelledby="{{::widgetInstanceId}}-nameLabel-{{::item.id}} {{::widgetInstanceId}}-amountLabel-{{::item.id}}"></div></td><td><label for={{::widgetInstanceId}}-{{::item.id}} class=truncate data-ng-bind=item.name id={{::widgetInstanceId}}-nameLabel-{{::item.id}}></label></td><td class=widget_state_table_list--row--value><label for={{::widgetInstanceId}}-{{::item.id}} class=widget_state_table_list--row--value id={{::widgetInstanceId}}-amountLabel-{{::item.id}} data-ng-bind="item.amount|amountWithCurrency:item.currency:\'plusAndMinus\'"></label></td></tr></tbody></table></div><div class=widget_state_table_additional_info ng-if="(additionalCHFInvoices || ((foreignInvoices || partialInvoices || forInformation) && invoices.length > 0))" pf-translate="{{\'AndMore\'|pfExpandKey:this}}"></div><button-bar-dynamic call-to-action-label="{{\'Action\'|pfExpandKey:this}}" is-valid=isValid() detail-action-label="{{\'DetailedOverview\'|pfExpandKey:this}}" on-call-to-action-click=callToAction() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=showDetailPage()></button-bar-dynamic></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efbalancesheet/content.html', '<div class=widget--innercontent><div class=widget_bar_charts><selectable-table ng-if=tableData table-data=tableData></selectable-table></div><button-bar-static ng-if=::!isMobile show-detail-link=showDetailLink call-to-action-type=GoToAssets show-call-to-action=isOnHomePage() call-to-action-label="{{\'Action\' | pfExpandKey:this}}" detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" show-detail-page=showDetailPage(action) widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efcreditcardload/content.html', '<div class=widget--innercontent><form name=vm.data.efcreditcardloadForm class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-from name={{::widgetInstanceId}}-dropdown-from label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'FromAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedDebitAccount entries=vm.data.debitAccounts full-size=true></dropdown><dropdown the-id={{::widgetInstanceId}}-dropdown-to name={{::widgetInstanceId}}-dropdown-to label="{{\'To\'|pfExpandKey:this}}" describedby="{{\'ToAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedCreditAccount entries=vm.data.creditAccounts full-size=true></dropdown><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-label-translate-values=vm.data.translateValues amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd currencies=vm.data.currencies amount-model=vm.data.amount currency-model=vm.data.currency min-value=1 max-value={{::vm.data.translateValues.transactionLimit}}></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" detail-action-label="{{\'DetailedOverview\' | pfExpandKey:this}}" is-valid=vm.actions.isValid() on-call-to-action-click=vm.actions.submit() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=vm.actions.goToDetailPage()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efdigitalgoods/content.html', '<div class=widget--innercontent><div ng-if=teasersReady><teaser-slider class=widget_slider-bici data-controls=false></teaser-slider></div><div class="widget_footer l-leftright"><div ng-if=showDetailButton class="widget_footer--action_small l-left"><a ng-click=handleClick($event) class="btn_icon btn_icon-zoom" href="" title="{{\'Buy\'|pfTranslate:this}}" pf-translate="{{\'Buy\'|pfExpandKey:this}}"></a></div><div ng-if=!showDetailButton class="widget_footer--action_big l-right"><a ng-click=handleClick($event) class=btn href="" title="{{\'Activate\'|pfTranslate:this}}" pf-translate="{{\'Activate\'|pfExpandKey:this}}"></a></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efdomesticpayment/content.html', '<div class=widget--innercontent><form name=data.efdomesticpaymentForm class=widget_form novalidate ng-keypress=kp()><dropdown the-id={{::widgetInstanceId}}-dropdown-account name={{::widgetInstanceId}}-dropdown-account label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'TransferAccount\'|pfExpandKey:this}}" ng-model=data.config.account.model entries=view.accounts on-change=accountSelectionChanged(index) full-size=true></dropdown><div class=widget_form--row><text-input-with-button widget-instance-id={{::widgetInstanceId}} input-label="{{\'Receiver\'|pfExpandKey:this}}" input-name=iban iban-model=data.iban hide-button=view.hideSearchIcon button-text="{{\'Search\'|pfExpandKey:this}}" button-click="showDetailPage(\'AccountSearch\')" is-foreign-currency=isForeignCurrency() max-length=42 enter-pressed=submitIfValid()></text-input-with-button></div><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd currencies=view.currencies amount-model=data.amount currency-model=data.currency max-length=19 enter-pressed=submitIfValid()></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Forward\'|pfExpandKey:this}}" is-valid=isValid() on-call-to-action-click=doSend()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericdocuments/content.html', '<div class=widget--innercontent><form class=widget_form novalidate><div ng-show=tableData.rows.length><selectable-table table-data=tableData item-selected=itemSelected row-clicked=itemClicked(index) widget-instance-id={{::widgetInstanceId}}></selectable-table><div class=widget_state_table_additional_info ng-show=additionalDocuments><div class=l-right pf-translate="{{\'AndMore\'|pfExpandKey:this}}"></div></div></div><button-bar-dynamic call-to-action-label="{{\'GetDocuments\'|pfExpandKey:this}}" is-valid=isValid() detail-action-label="{{\'DetailedOverview\'|pfExpandKey:this}}" on-call-to-action-click=callToAction() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=showDetailPage()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericicondropdown/content.html', '<div class=widget--innercontent><form class=widget_form novalidate><icon-bar icons=::vm.data.icons on-item=vm.actions.itemSelected(item)></icon-bar><dropdown ng-if="!isMobile && vm.data.actions.length > 1" the-id={{::widgetInstanceId}}-dropdown name={{::widgetInstanceId}}-dropdown default-label={{vm.data.defaultLabel|pfTranslate:this}} entries=::vm.data.actions ng-model=vm.data.selected full-size=true></dropdown><selection-list ng-if="isMobile || vm.data.actions.length === 1" items=::vm.data.actions on-item-selected=vm.actions.itemSelected(item)></selection-list><button-bar-dynamic ng-if=!isMobile call-to-action-label="{{\'Proceed\'|pfExpandKey:this}}" is-valid=vm.data.selected on-call-to-action-click=vm.actions.openSelectedItem()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericlistdynamic/content.html', '<div class=widget--innercontent><form class=widget_form novalidate><dynamic-list ng-if=dataModel.entries items=dataModel.entries max-list-items=viewModel.maxListItems on-item-selected=onItemSelected(itemIndex) on-item-selected-direct=onItemSelectedDirect(item) widget-instance-id={{::widgetInstanceId}} default-label="{{\'PleaseChoose\'|pfExpandKey:this}}" describedby="{{\'WidgetTitle\'|pfExpandKey:this}}" current-selection=viewModel.selectedIndex></dynamic-list><button-bar-dynamic is-valid=isValid() on-call-to-action-click=callToAction() call-to-action-label="{{\'Action\'|pfExpandKey:this}}" detail-urls=widgetInstance.service.detailUrls on-detail-action-click=showDetailPage() detail-action-label="{{\'DetailedOverview\'|pfExpandKey:this}}"></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericliststatic/content.html', '<div class=widget--innercontent><selection-list items=items on-item-selected=showDetailPageForObj(item)></selection-list></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericmarketing/content.html', '<div ng-if="noItems && !(items && items.length)" class=widget--innercontent><div class="widget_state_info successfully_completed"><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span ng-if=!hideIconWhenEmpty class="widget_state_info--content--icon icon icon-no_offer_40px"></span><p class=widget_state_info--content--txt style=color:#333333 pf-translate="{{\'NoOffers\'|pfExpandKey:this}}"></p></div></div></div><div ng-if="items && items.length > 0" class=widget--innercontent><div ng-if=teasersReady><teaser-slider class=widget_slider-large></teaser-slider></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericmarketingmobile/content.html', '<div class=widget--innercontent ng-class={{teaser.colorscheme}}><a class=widget_offer href="" ng-click=handleClick(teaser)><strong class=widget_offer--title ng-bind-html=teaser.title></strong><p class=widget_offer--desc ng-bind-html=teaser.text></p></a></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericoverview/content.html', '<div class=widget--innercontent><div class="successfully_completed widget_state_info" ng-if="tableData.rows.length === 0"><div class=widget_state_info--content tabindex=0 ng-class="{\'js-autofocus\' : canGainFocus}"><span class="widget_state_info--content--icon icon icon-successfully_completed"></span><p class=widget_state_info--content--txt pf-translate="{{\'NoFiles\'|pfExpandKey:this}}"></p></div></div><div ng-show=tableData.rows.length><selectable-table table-data=tableData row-clicked=iconClicked(index) widget-instance-id={{::widgetInstanceId}}></selectable-table></div><div class=widget_state_table_additional_info ng-show=additionalFiles><div class=l-right pf-translate="{{\'AndMore\'|pfExpandKey:this}}"></div></div><button-bar-static show-detail-link=true detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" show-detail-page=showDetailPage(action) widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericproduct/content.html', '<div class=widget--outercontent><account-overview account=dataModel.account account-type-as-title=false></account-overview></div><div class=widget--innercontent><div ng-if=::viewModel.additionalDataAvailable><strong class=widget_state_table_title pf-translate="{{\'AdditionalDataTitle\'|pfExpandKey:this}}"></strong><selection-list ng-if=::viewModel.additionalDataAvailable class=no-gap-above no-border-top=true items=dataModel.additionalData show-more-label=viewModel.hasMoreAdditionalData on-item-selected=additionalDataSelected(item)></selection-list><div class=widget_state_info ng-if=::!viewModel.additionalDataAvailable><div class=widget_state_info--content><p class=widget_state_info--content--txt pf-translate="{{\'AdditionalDataNoEntries\'|pfExpandKey:this}}"></p></div></div></div><button-bar-static show-detail-link=viewModel.showDetailLink detail-link-type={{detailLinkType}} detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" detail-multiple-label="{{\'MoreActions\' | pfExpandKey:this}}" call-to-action-label="{{productProperties.button | pfExpandKey:this}}" call-to-action-type={{productProperties.button}} show-call-to-action=viewModel.showCallToActionButton widget-instance-id={{::widgetInstanceId}} action-entries=dataModel.actionEntries action-url-replacement-obj=dataModel.urlReplacementObj></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericshortcut/content.html', '<div class=widget--innercontent><div class=widget_state_info><div class=widget_state_info--content><span class="widget_state_info--content--icon icon icon-picto {{icon}}"></span></div></div><button-bar-static call-to-action-label="{{\'Action\' | pfExpandKey:this}}" call-to-action-shows-detail-page=true widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efgenericupload/content.html', '<div class=widget--innercontent><form id={{::widgetInstanceId}}Form name={{::widgetInstanceId}}Form enctype=multipart/form-data class=widget_form novalidate accept-charset=ISO-8859-1 method=post><div class=widget_form--row><div class="ef_file_input js-ef_file_input"><label class=ef_file_input--label><span class="ef_file_input--label--icon icon icon-file"></span> <span class=ef_file_input--label--text pf-translate="{{\'DefaultValue\'|pfExpandKey:this}}"></span></label><label class=btn pf-translate="{{\'ChooseFile\'|pfExpandKey:this}}" for=ef-file-input-u{{::widgetInstanceId}}-1></label><file-upload the-id={{::widgetInstanceId}} the-name=p_extern_file_name file-changed=fileChanged></file-upload></div></div><div class=widget_form--row ng-if=hasPersonalFilename><div class="js-text_input_row_narrow text_input_row_narrow" ng-class="{\'text_input-has_value\': hasValidFilename()}"><label class=text_input_row_narrow--label for=text_input_narrow-u{{::widgetInstanceId}}-2 pf-translate="{{\'PersonalName\'|pfExpandKey:this}}"></label><div class=text_input><input class=text_input--field id=text_input_narrow-u{{::widgetInstanceId}}-2 name=p_user_file_ref maxlength=35 ng-model=dynamic.personalFilename></div></div></div><button-bar-dynamic detail-urls=widgetInstance.service.detailUrls call-to-action-label="{{\'Action\'|pfExpandKey:this}}" is-valid=isValid() on-call-to-action-click=callToAction() detail-action-label="{{\'DetailedOverview\'|pfExpandKey:this}}" on-detail-action-click=showDetailPage()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efheadernotification/content.html', '<div class="js-dropdown_menu dropdown_nav--menu" aria-hidden=true><span class=user_nav--username>{{userName}}</span><div class=link_list ng-class="{\'l-gap\': customerTest}"><div class=link_list_header><strong class=link_list_header--title pf-translate="{{\'News\'|pfExpandKey:this}}"></strong></div><ul ng-if="(notifications.length > 0)" class=link_list_menu role=menu><li ng-repeat="notification in notifications track by $index" class=link_list--menu_item><a class="link_list--menu_item--link js-link_list--menu_item--link" href="" role=menuitem tabindex=-1 ng-click="closeOverlay();showDetailPage(notification.actionKey, notification.params)"><span ng-bind-html="notification.text | unsafe"></span></a></li></ul><div ng-if="!widgetInstance.isBusy() && notifications.length === 0" class=link_list_content><span pf-translate="{{\'NoNews\'|pfExpandKey:this}}"></span></div></div><div ng-if=!customerTest class=link_list_footer><ul class=link_list_footer--menu role=menu><li class=link_list_footer--menu_item role=menuitem><a class=link_list_footer--menu_item--link href="" ng-if=::!customerTest ng-click="closeOverlay();showDetailPage(\'Mailbox\')" pf-translate="{{\'Mailbox\'|pfExpandKey:this}}"></a></li></ul></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efheadernotificationmobile/content.html', '<div class="js-mobile_nav-inner_container mobile_nav--inner_container"><button class="is-visuallyhidden js-mobile_news_nav_toggle-close" type=button tabindex=0 pf-translate="{{\'CloseNavigation\'|pfExpandKey:this}}"></button><div class=mobile_user_nav--header><strong class=mobile_user_nav--title><span class="icon icon-ssh-nachrichten-neg-40" ng-class="{\'has-notifications\' : messageCounter !== 0}"></span> <span>{{userName}}</span> <span ng-if="messageCounter; messageCounter !== 0;" class=is-visuallyhidden>{{messageCounter}} <span class=is-visuallyhidden pf-translate="{{\'NewMessages\'|pfExpandKey:this}}"></span> </span><span ng-if="messageCounter; messageCounter == 0;"><span class=is-visuallyhidden pf-translate="{{\'NoNewMessages\'|pfExpandKey:this}}"></span> </span></strong><button id=servicebarButton class="js-mobile_news_nav_toggle-close mobile_user_nav--toggle-close" type=button tabindex=0><span class=is-visuallyhidden pf-translate="{{\'CloseNavigation\'|pfExpandKey:this}}"></span> <span class=mobile_header--nav_toggle--icon><span class=nav_toggle--icon--top_line></span> <span class=nav_toggle--icon--mid_line></span> <span class=nav_toggle--icon--bottom_line></span></span></button></div><div class="link_list mobile_user_nav--link_list mobile_user_nav--link_list-news"><div class=link_list_header><strong class=link_list_header--title pf-translate="{{\'News\'|pfExpandKey:this}}"></strong></div><ul ng-if="notifications.length > 0 &amp;&amp; !customerTest" class=link_list_menu role=menu><li class=link_list--menu_item ng-repeat="notification in notifications track by $index"><a class="link_list--menu_item--link js-link_list--menu_item--link js-mobile_news_nav_toggle-close" href="" role=menuitem tabindex=-1 ng-click="closeOverlay();showDetailPage(notification.actionKey, notification.params)"><span ng-bind-html="notification.text | unsafe"></span></a></li></ul><div ng-if="!(notifications.length > 0) || customerTest" class=link_list_content><span pf-translate="{{\'NoNews\'|pfExpandKey:this}}"></span></div></div><div class=link_list_footer><ul class="link_list_footer--menu mobile_user_nav--link_list" role=menu><li class=link_list_footer--menu_item><a class="link_list_footer--menu_item--link js-mobile_news_nav_toggle-close" href="" role=menuitem ng-if=::!customerTest ng-click="closeOverlay();showDetailPage(\'Mailbox\')" pf-translate="{{\'Mailbox\'|pfExpandKey:this}}"></a></li></ul></div><button class="is-visuallyhidden js-mobile_news_nav_toggle-close" type=button tabindex=0 pf-translate="{{\'CloseNavigation\'|pfExpandKey:this}}"></button></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/eflastmovements/content.html', '<div class=widget--innercontent><account-info account-name={{standardAccount.name}} account-iban={{standardAccount.iban}} widget-instance-id={{::widgetInstanceId}}></account-info><selection-list show-more-label=dataModel.hasOthers items=dataModel.entries on-item-selected=showItem(item) no-border-top=true class=no-gap-above></selection-list><div ng-if="dataModel.entries.length === 0" class=widget_state_info><div class=widget_state_info--content><p class=widget_state_info--content--txt pf-translate="{{\'NoEntries\'|pfExpandKey:this}}"></p></div></div><button-bar-static show-detail-link=viewModel.showDetailLink detail-link-type={{accountActions.detailLinkType}} detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" show-detail-page=showDetailPage(action) show-call-to-action=viewModel.showCallToAction call-to-action-label="{{\'Action\' | pfExpandKey:this}}" call-to-action-type={{actionType}} call-to-action-shows-detail-page=false widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efmyaccountsmobile/content.html', '<div class=widget--innercontent><div ng-if="view.otherAccounts.length > 0"><tabs-navigation><tab-wrapper content-id={{::tab.fullStateName}} is-active="activeTab === $index" ng-repeat="tab in tabs track by $index" on-select="activateTab($index, tab.fullStateName, $event)"><span class="widget_tabs--link--text js-widget_tabs--link--text" pf-translate={{tab.tabTitleKey|pfExpandKey:this}}></span></tab-wrapper><content-wrapper content-id=efmyaccountsmobile_defaultaccount><account-overview account=view.defaultAccount account-type-as-title=true></account-overview><button-bar-static widget-instance-id={{::widgetInstanceId}} show-detail-link=view.defaultAccountActions.showDetailLink detail-link-type={{view.defaultAccountActions.detailLinkType}} detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" detail-multiple-label="{{\'MoreActions\' | pfExpandKey:this}}" call-to-action-label="{{view.defaultAccount.button | pfExpandKey:this}}" call-to-action-type={{view.defaultAccount.button}} show-call-to-action=showCallToActionButton action-entries=view.defaultAccountActions.actionEntries mapping-key=view.defaultAccount.mappingKey action-url-replacement-obj=view.defaultAccount></button-bar-static></content-wrapper><content-wrapper content-id=efmyaccountsmobile_moreaccounts><account-overview ng-repeat="account in view.otherAccounts track by $index" account=account account-nr=account.nr action-url-replacement-obj=account mapping-key=account.mappingKey more-actions="\'true\'" account-type-as-title=true></account-overview><button-bar-static call-to-action-type=GoToAssets show-call-to-action=view.showAllAccountsAction call-to-action-label="{{\'ShowAllAccounts\' | pfExpandKey:this}}"></button-bar-static></content-wrapper></tabs-navigation></div><div ng-if="view.otherAccounts.length === 0"><account-overview account=view.defaultAccount account-type-as-title=true switch-name-and-title=view.defaultAccount.alias></account-overview><button-bar-static widget-instance-id={{::widgetInstanceId}} show-detail-link=view.defaultAccountActions.showDetailLink detail-link-type={{view.defaultAccountActions.detailLinkType}} detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" detail-multiple-label="{{\'MoreActions\' | pfExpandKey:this}}" call-to-action-label="{{view.defaultAccount.button | pfExpandKey:this}}" call-to-action-type={{view.defaultAccount.button}} show-call-to-action=view.defaultAccount.button action-entries=view.defaultAccountActions.actionEntries mapping-key=view.defaultAccount.mappingKey action-url-replacement-obj=view.defaultAccount></button-bar-static></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/eforderoverview/content.html', '<div class=widget--innercontent><account-info account-name={{standardAccount.name}} account-iban={{standardAccount.iban}} widget-instance-id={{::widgetInstanceId}}></account-info><div ng-if=::!isMobile><selectable-table table-data=tableData widget-instance-id={{::widgetInstanceId}} class=no-gap-above></selectable-table><div class=widget_state_table_additional_info ng-if=totalOrdersGroup pf-translate="{{\'OrdersLimitedView\'|pfExpandKey:this}}"></div><div class=widget_state_table_additional_info pf-translate="{{\'OrdersIncludedUntil\'|pfExpandKey:this}}" translate-values=ordersIncludedUntil></div></div><div ng-if=::isMobile><tabs-navigation><tab-wrapper content-id=balance is-active=true ng-click=tabSelected(0)><span pf-translate="{{\'BalancePreview\'|pfExpandKey:this}}" class=js-widget_tabs--link--text></span></tab-wrapper><tab-wrapper content-id=orders ng-click=tabSelected(1)><span pf-translate="{{\'PendingOrders\'|pfExpandKey:this}}" class=js-widget_tabs--link--text></span></tab-wrapper><content-wrapper content-id=balance><selectable-table table-data=tableData widget-instance-id={{::widgetInstanceId}}></selectable-table></content-wrapper><content-wrapper content-id=orders><selection-list items=listItems on-item-selected=showItem(item) class=no-gap-above no-border-top=true></selection-list><div class=widget_state_info ng-if="listItems.length === 0"><div class=widget_state_info--content><p class=widget_state_info--content--txt pf-translate="{{\'NoPendingOrders\'|pfExpandKey:this}}" translate-values=ordersIncludedUntil></p></div></div></content-wrapper></tabs-navigation><div class=widget_state_table_additional_info ng-if="(selectedTabIndex == 0 || (selectedTabIndex == 1 && listItems.length > 0)) && totalOrdersGroup != null" pf-translate="{{\'OrdersLimitedView\'|pfExpandKey:this}}"></div><div ng-if="(selectedTabIndex == 0 || (selectedTabIndex == 1 && listItems.length > 0))" class=widget_state_table_additional_info pf-translate="{{\'OrdersIncludedUntil\'|pfExpandKey:this}}" translate-values=ordersIncludedUntil></div></div><button-bar-static show-detail-link=true detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" show-detail-page=showDetailPage(action) widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efpaymentscanner/content.html', '<div class=widget--innercontent><form class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-account name={{::widgetInstanceId}}-dropdown-account label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'Account\'|pfExpandKey:this}}" ng-model=vm.data.selectedAccount entries=vm.data.paymentAccounts full-size=true></dropdown><div class="widget_form--row as-compact"><div class="widget_input_row_extendable js-widget_input_row_extendable" ng-class="{\'is-open\': vm.data.automaticTransfer}"><div class=checkbox><input class="checkbox--field widget_input_row_extendable--trigger" id={{::widgetInstanceId}}-automatic-transfer type=checkbox ng-model=vm.data.automaticTransfer><label for={{::widgetInstanceId}}-automatic-transfer pf-translate="{{\'AutomaticTransfer\'|pfExpandKey:this}}"></label></div><div class=widget_input_row_extendable--more_content ng-class="{\'is-open\': vm.data.automaticTransfer}"><div class="ef_datepicker ef_datpicker-labelled js-ef_datepicker"><div class=text_input><input class=text_input--field id={{::widgetInstanceId}}-datepicker size=10 ng-model=vm.data.dueTo></div><label class=ef_datepicker--label for={{::widgetInstanceId}}-datepicker pf-translate="{{\'DueDate\'|pfExpandKey:this}}"></label></div></div></div></div><div class=widget_form--row><div class="js-text_input_row_narrow text_input_row_narrow" ng-class="{\'text_input-has_value\': isValid()}"><label class=text_input_row_narrow--label for={{::widgetInstanceId}}-scan-code pf-translate="{{\'ScanCode\'|pfExpandKey:this}}"></label><div class=text_input><input class=text_input--field id={{::widgetInstanceId}}-scan-code ng-model=vm.data.code maxlength=70 ng-enter=callToAction() autocomplete=off></div></div></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" is-valid=isValid() is-button-disabled=isCTAButtonDisabled on-call-to-action-click=callToAction()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efportfoliopremiumtransfer/content.html', '<div class=widget--innercontent><form name=vm.data.efportfoliopremiumtransferForm class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-from name={{::widgetInstanceId}}-dropdown-from label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'FromAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedDebitAccount entries=vm.data.debitAccounts on-change=vm.actions.debitAccountChanged(entry) full-size=true></dropdown><dropdown the-id={{::widgetInstanceId}}-dropdown-to name={{::widgetInstanceId}}-dropdown-to label="{{\'To\'|pfExpandKey:this}}" describedby="{{\'ToAccount\'|pfExpandKey:this}}" ng-model=vm.data.selectedCreditAccount entries=vm.data.creditAccounts full-size=true></dropdown><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd currencies=vm.data.currencies amount-model=vm.data.amount currency-model=vm.data.currency max-length=19></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" detail-action-label="{{\'DetailedOverview\' | pfExpandKey:this}}" is-valid=vm.actions.isValid() on-call-to-action-click=vm.actions.submit() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=vm.actions.goToDetailPage()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efretirementinpayment/content.html', '<div class=widget--innercontent><form name=main.data.efretirementinpaymentForm class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-from name={{::widgetInstanceId}}-dropdown-from label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'FromAccount\'|pfExpandKey:this}}" ng-model=main.data.config.fromAccount.model entries=main.data.fromAccounts on-change=main.actions.fromSelectionChanged(index) full-size=true></dropdown><dropdown the-id={{::widgetInstanceId}}-dropdown-to name={{::widgetInstanceId}}-dropdown-to label="{{\'To\'|pfExpandKey:this}}" describedby="{{\'ToAccount\'|pfExpandKey:this}}" ng-model=main.data.config.toAccount.model entries=main.data.toAccounts full-size=true></dropdown><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd currencies=main.data.currencies amount-model=main.data.amount currency-model=main.data.currency max-length=19></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" detail-action-label="{{\'DetailedOverview\' | pfExpandKey:this}}" is-valid=main.actions.isValid() on-call-to-action-click=main.actions.callToAction() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=main.actions.showDetailPageWithParams()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/efscanandpay/content.html', '<div class=widget--innercontent><form class=widget_form novalidate><div ng-if=hasEUserMapping class="has-gap-large widget_state_info"><div class=widget_state_info--content><span class="widget_state_info--content--icon icon icon-picto-small icon-scan" ng-class="{\'has-notification\': view.hasPaymentSlips}"></span><p ng-if="!isApp && !view.hasPaymentSlips" class=widget_state_info--content--txt pf-translate="{{\'NoCreditSlipsInfo\'|pfExpandKey:this}}"></p><p ng-if="isApp && !view.hasPaymentSlips" class=widget_state_info--content--txt pf-translate="{{\'NoCreditSlipsAppInfo\'|pfExpandKey:this}}"></p><p ng-if="!isApp && view.hasPaymentSlips" class=widget_state_info--content--txt pf-translate="{{\'CreditSlipsInfo\'|pfExpandKey:this}}"></p><p ng-if="isApp && view.hasPaymentSlips" class=widget_state_info--content--txt pf-translate="{{\'CreditSlipsAppInfo\'|pfExpandKey:this}}"></p></div></div><dropdown ng-if=!hasEUserMapping the-id={{::widgetInstanceId}}-dropdown-account name={{::widgetInstanceId}}-dropdown-account label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'Account\'|pfExpandKey:this}}" ng-model=data.account.model entries=view.entries full-size=true></dropdown><span class="widget_form--icon icon icon-scan" ng-if=!hasEUserMapping></span><div class="widget_footer l-leftright"><div class="widget_footer--action_small l-left" ng-if="isApp && hasEUserMapping"><a class="btn_icon btn_icon-scan" href="" title="\'Scan\'|pfExpandKey:this" ng-click=showScanner() ng-space=showScanner()></a></div><div class="widget_footer--action_big l-right"><a ng-if=hasEUserMapping class=btn href="" pf-translate="{{\'Next\'|pfExpandKey:this}}" ng-click=showOverview() ng-space=showOverview()></a> <a ng-if=!hasEUserMapping aria-haspopup=true href="" class=btn ng-click=showScanner() ng-space=showScanner() pf-translate="{{\'Action\'|pfExpandKey:this}}"></a></div></div></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/fipogenericpageinfo/content.html', '<p class=e_cockpit_footnote screen-key="\'scrMessage_LastUpdate\' | pfTranslate:this:rawData"></p>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/fipotoggleassetsview/content.html', '<div aria-hidden=true class=widget_toggle_view><div class=widget_toggle_view--toggle><fieldset class=pf-form_row><toggle-buttons ng-if=!loading the-id={{::widgetInstanceId}}-toggleAssetsView labelled-by={{::widgetInstanceId}}-toggleAssetsView-label ng-model=basicSettings.assetsList on-change=change() enum-key="{{\'toggleAssetsView\'|pfExpandKey:this}}"></toggle-buttons></fieldset></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/pasoffers/content.html', '<div ng-if="getWidgetState(rawData.customerOffers, optIn) == \'OFFERS\'" class=widget--innercontent><div class="widget_slider js-ef_slider widget_slider-bici widget_slider-play" data-autoplay="{{rawData.customerOffers.length > 1}}" data-delay=6000><div class=widget_slider--container><teaser-slider-controls ng-if="rawData.customerOffers.length > 1"></teaser-slider-controls><ul class=widget_slider--container--slide_list><li ng-repeat="(pageIndex, offer) in rawData.customerOffers track by pageIndex" class="widget_slider--container--slide_list--item is-active" ng-style="{\'opacity : 0\' : $index != 0}" ng-click="showOfferDetail($event, pageIndex, $index, offer.customerOfferOID)" aria-labelledby="{{::widgetInstanceId}}-pasoffer_{{$index}}-title {{::widgetInstanceId}}-pasoffer_{{$index}}-discount"><span id={{::widgetInstanceId}}-pasoffer_{{$index}}-title class=is-visuallyhidden>{{offer.offer.offerDetails.title}} </span><img class="widget_slider--container--slide_list--item--img js-widget_slider_img" alt="" ng-src={{getLogoUrl(offer.offer.offerDetails.logoId)}}><div id={{::widgetInstanceId}}-pasoffer_{{$index}}-discount class=widget_slider--container--slide_list--item--offer pf-translate="{{\'DiscountType_\'+offer.offer.discountType|pfTranslate:this:offer.offer}}"></div></li></ul></div></div><div class="widget_footer l-leftright"><div class="widget_footer--action_big l-right"><a aria-haspopup=true class=btn ng-click=goToOffersOverview($event) href="" pf-translate="{{\'GoToOffersOverview\'|pfExpandKey:this}}"></a></div></div></div><div ng-if="getWidgetState(rawData.customerOffers, optIn) == \'NO_OFFERS\'" class=widget--innercontent><div class=widget_state_info><div class=widget_state_info--content><span class="widget_state_info--content--icon icon {{actionItemIcon}}"></span><p class=widget_state_info--content--txt pf-translate="{{\'NoOffers\'|pfExpandKey:this}}"></p></div></div><button-bar-static show-detail-link=false call-to-action-type=GoToOffersOverview show-call-to-action=true call-to-action-label="{{\'GoToOffersOverview\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div><div ng-if="getWidgetState(rawData.customerOffers, optIn) == \'OPTIN\'" class=widget--innercontent><div class=widget_state_info><div class=widget_state_info--content><span class="widget_state_info--content--icon icon {{actionItemIcon}}"></span><p class=widget_state_info--content--txt pf-translate="{{\'OptIn\'|pfExpandKey:this}}"></p></div></div><button-bar-static show-detail-link=false call-to-action-type=GoToBenefitActivation show-call-to-action=true call-to-action-label="{{\'GoToBenefitActivation\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/traccounttransfer/content.html', '<div class=widget--innercontent><form name=data.traccounttransferForm class=widget_form novalidate><dropdown the-id={{::widgetInstanceId}}-dropdown-from name={{::widgetInstanceId}}-dropdown-from label="{{\'From\'|pfExpandKey:this}}" describedby="{{\'FromAccount\'|pfExpandKey:this}}" ng-model=viewModel.data.debitAccount entries=viewModel.fromAccounts on-change=fromSelectionChanged(entry) full-size=true></dropdown><dropdown the-id={{::widgetInstanceId}}-dropdown-to name={{::widgetInstanceId}}-dropdown-to label="{{\'To\'|pfExpandKey:this}}" describedby="{{\'ToAccount\'|pfExpandKey:this}}" ng-model=viewModel.data.creditAccount entries=viewModel.toAccounts on-change=toSelectionChanged(entry) full-size=true></dropdown><div class=widget_form--row><text-input-with-currency widget-instance-id={{::widgetInstanceId}} amount-label="{{\'Value\' | pfExpandKey:this}}" amount-input-name=p_betrag currency-label="{{\'Currency\' | pfExpandKey:this}}" currency-input-name=p_waehr_cd amount-model=viewModel.data.amount currency-model=viewModel.data.currency max-length=19></text-input-with-currency></div><button-bar-dynamic call-to-action-label="{{\'Submit\'|pfExpandKey:this}}" detail-action-label="{{\'DetailedOverview\' | pfExpandKey:this}}" is-valid=isValid() on-call-to-action-click=callToAction() detail-urls=widgetInstance.service.detailUrls on-detail-action-click=openDetailPageWithParams()></button-bar-dynamic></form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/trappbridge/content.html', '');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/trcontent/content.html', '');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecbudget/views/graphic.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}}></date-range><div class=widget_bar_charts><table class="widget_state_table widget_bar_charts--info_table"><colgroup ng-if=tableData.colgroup><col ng-repeat="col in tableData.colgroup track by $index" ng-style="::{\'width\': col}"></colgroup><thead class=widget_state_table_header ng-if=::tableData.headers ng-class=::tableData.headerClass><tr><th ng-repeat="header in tableData.headers track by $index" ng-class=::header.thClass scope=col colspan={{::header.colspan}}><span ng-if=::!header.text>&#160;</span> <span ng-if=::header.text pf-translate={{header.text|pfExpandKey:this}}></span></th></tr></thead><tbody ng-class=::tableData.bodyClass><tr class=widget_state_table_list--row ng-repeat="row in tableData.rows track by $index"><td><span data-ng-bind=row.columns[0].text></span></td><td class=pf-budget-chart-column><ec-budget-chart the-id="{{::widgetInstanceId + $index}}" data=row.columns[1].data></ec-budget-chart></td><td><span data-ng-bind=row.columns[2].text></span></td></tr></tbody></table></div><ec-additional-info first-line=dynamic.totalBudgetsMessage second-line=dynamic.detailBudgetsMessage></ec-additional-info><button-bar-static ng-if=::!isDemo show-detail-link=false call-to-action-type=GoToBudget show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecbudget/views/simple.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}}></date-range><ec-simple-list items=dynamic.items></ec-simple-list><button-bar-static ng-if=::!isDemo show-detail-link=false call-to-action-type=GoToBudget show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/eccashflow/views/graphic.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><ec-column-chart the-id={{::widgetInstanceId}} data=dynamic.chartData></ec-column-chart><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToCashFlow show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/eccashflow/views/list.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><div class=widget_bar_charts><selectable-table table-data=tableData widget-instance-id={{::widgetInstanceId}}></selectable-table></div><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToCashFlow show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecexpenditure/views/graphic.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><ec-pie-chart the-id={{::widgetInstanceId}}-chart data=dynamic.chartData is-mobile=isMobile></ec-pie-chart><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToExpenditure show-call-to-action=true call-to-action-label="{{\'ActionExpenditure\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecexpenditure/views/list.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><div class=widget_bar_charts><selectable-table table-data=dynamic.tableData></selectable-table></div><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToExpenditure show-call-to-action=true call-to-action-label="{{\'ActionExpenditure\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecexpenditure/views/simple.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><account-overview account=dynamic.account account-type-as-title=false amount-suffix=none></account-overview><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToExpenditure show-call-to-action=true call-to-action-label="{{\'ActionExpenditure\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecreceipts/views/graphic.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><ec-column-chart the-id={{::widgetInstanceId}} data=dynamic.chartData></ec-column-chart><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToReceipts show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecreceipts/views/list.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><div class=widget_bar_charts><selectable-table table-data=dynamic.tableData widget-instance-id={{::widgetInstanceId}}></selectable-table></div><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToReceipts show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecreceipts/views/simple.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.endMonth}} start-year={{dynamic.endYear}}></date-range><account-overview account=dynamic.account account-type-as-title=false></account-overview><ec-additional-info ng-if=dynamic.hasPreviousMonth first-line={{dynamic.previousMonthMessage}}></ec-additional-info><button-bar-static ng-if="::(!isMobile && !isDemo)" show-detail-link=false call-to-action-type=GoToReceipts show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecsavingstargets/views/savingstargets.html', '<div class="widget--innercontent pf-cockpit"><date-range additional-info={{dynamic.additionalInfo}}></date-range><div class=widget_bar_charts><table class="widget_state_table widget_bar_charts--info_table"><colgroup ng-if=tableData.colgroup><col ng-repeat="col in tableData.colgroup track by $index" ng-style="{\'width\': col}"></colgroup><thead class=widget_state_table_header ng-if=::tableData.headers ng-class=tableData.headerClass><tr><th ng-repeat="header in tableData.headers track by $index" ng-class=header.thClass scope=col colspan={{header.colspan}}><strong ng-if=!header.text>&#160;</strong> <strong ng-if=header.text pf-translate={{header.text|pfExpandKey:this}}></strong></th></tr></thead><tbody ng-class=::tableData.bodyClass><tr class=widget_state_table_list--row ng-repeat="row in tableData.rows track by $index"><td ng-class=::row.columns[0].tdClass><span data-ng-bind=row.columns[0].text></span></td><td ng-class=::row.columns[1].tdClass><span data-ng-bind=row.columns[1].text></span></td><td ng-class=::row.columns[2].tdClass><span data-ng-bind=row.columns[2].text></span></td><td ng-class=::row.columns[3].tdClass><span data-ng-bind=row.columns[3].text></span></td></tr></tbody></table></div><ec-additional-info first-line=dynamic.totalTargetsMessage second-line=dynamic.detailTargetsMessage></ec-additional-info><button-bar-static ng-if=::(!isDemo) show-detail-link=false call-to-action-type=GoToSavingsTargets show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ecsavingstargets/views/simple.html', '<div class="widget--innercontent pf-cockpit"><date-range additional-info={{dynamic.additionalInfo}}></date-range><ec-simple-list items=dynamic.items></ec-simple-list><button-bar-static ng-if=::(!isDemo) show-detail-link=false call-to-action-type=GoToSavingsTargets show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/ectransactions/views/simple.html', '<div class="widget--innercontent pf-cockpit"><date-range start-month={{dynamic.startMonth}} start-year={{dynamic.startYear}} end-month={{dynamic.endMonth}} end-year={{dynamic.endYear}}></date-range><ec-simple-list items=dynamic.items></ec-simple-list><button-bar-static ng-if=::!isDemo show-detail-link=false call-to-action-type=GoToTransactions show-call-to-action=true call-to-action-label="{{\'Action\' | pfExpandKey:this}}" widget-instance-id={{::widgetInstanceId}} show-detail-page=showDetailPage(action)></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/pfchonlinemortgage/views/checkStatus.html', '<div class=widget--innercontent><div class="has-gap-large widget_state_info"><div class=widget_state_info--content><span class="widget_state_info--content--icon icon icon-picto-small icon-home"></span><p class=widget_state_info--content--txt pf-translate="{{\'CheckStatusInfo\' | pfExpandKey:this}}"></p></div></div><button-bar-static call-to-action-type=CheckStatus call-to-action-label="{{\'CheckStatus\' | pfExpandKey:this}}" show-call-to-action=true widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/widgets/pfchonlinemortgage/views/quickCheck.html', '<div class=widget--innercontent><div class="has-gap-large widget_state_info"><div class=widget_state_info--content><span class="widget_state_info--content--icon icon icon-picto-small icon-home"></span><p class=widget_state_info--content--txt pf-translate="{{\'QuickCheckInfo\' | pfExpandKey:this}}"></p></div></div><button-bar-static call-to-action-type=QuickCheck call-to-action-label="{{\'QuickCheck\' | pfExpandKey:this}}" show-call-to-action=true widget-instance-id={{::widgetInstanceId}}></button-bar-static></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/accountLabel/accountLabel.html', '<span ng-class="{\'t-strong\': !vm.noBold}" data-ng-bind="vm.noAlias && vm.account.name || vm.account.alias || vm.account.name" ng-attr-id={{vm.theId}}-name></span> <span ng-if="!vm.showBalance && vm.account.type !== 14 && vm.account.type !== 47" ng-class="{\'t-strong\': !vm.noBold}" ng-bind=vm.account.currency|currency ng-attr-id={{vm.theId}}-currency></span><span ng-if=!vm.twoLine>&nbsp;/&nbsp;</span><br ng-if=vm.twoLine><span class=t-nowrap data-ng-bind="vm.account.formatted.iban || vm.account.formatted.number" ng-attr-id={{vm.theId}}-iban></span> <span ng-if=vm.showBalance class=t-nowrap>({{vm.account.currency}} {{vm.account.formatted.availableAmount}})</span>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/actionMenu/actionMenu.html', '<div><button ng-if=actionMenu.button class=btn tabindex=0 ng-class="{\'has-indentright\': !actionMenu.actions.length && actionMenu.indentButton}" ng-click="actionMenu.callback(actionMenu.button, $event)" ng-bind=actionMenu.button.labelText title={{actionMenu.button.titleText}}></button><div ng-if=actionMenu.actions.length ng-class="{\'ef_more_actions js-ef_more_actions\' : !actionMenu.isMobile,\r\n      \'ef_more_actions--large is-text-visible\': actionMenu.isLarge}"><a ng-if=!actionMenu.isMobile class="btn_icon js-ef_more_actions--trigger" ng-class="{\'btn_icon-more_info\': !actionMenu.isLarge, \'icon-arrow_select\': !!actionMenu.isLarge}" aria-haspopup=true aria-expanded=false aria-controls={{::actionMenu.id}}-popup href="" pf-translate="{{\'MoreActions\'|pfExpandKey:actionMenu}}"></a><div ng-if=!actionMenu.isMobile id={{::actionMenu.id}}-popup class="ef_more_actions--menu js-ef_more_actions--menu" aria-hidden=true><ul class=ef_more_actions--menu--list role=menu><li ng-repeat="action in actionMenu.actions track by $index" class=ef_more_actions--menu--list--item><a class="ef_more_actions--menu--list--item--link js-ef_more_actions--menu--list--item--link" href="" role=menuitem tabindex=-1 ng-click="actionMenu.callback(action, $event)" ng-bind=action.labelText title={{action.titleText}} data-ta-id={{action.key}}></a></li></ul></div><button ng-if=actionMenu.isMobile class="pf-table_list--menutrigger js-table_list--menutrigger" aria-haspopup=true aria-controls={{::actionMenu.id}}-list pf-translate="{{\'MoreActions\'|pfExpandKey:actionMenu}}" role=button></button><ul ng-if=actionMenu.isMobile class="pf-table_list_menu js-table_list--menu" id={{::actionMenu.id}}-list><li ng-repeat="action in actionMenu.actions track by $index" class=pf-table_list_menu--item><a class="link_with_icon {{action.icon}}" href="" tabindex=0 ng-click="actionMenu.callback(action, $event)" ng-bind=action.labelText title={{action.titleText}} data-ta-id={{action.key}}></a></li></ul></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/balanceHistoryChart/balanceHistoryChart.html', '<div><span class=is-hidden-print data-ng-bind=introductionText aria-hidden=true></span><div id=chartContainer style="min-width:250px;min-height:250px;width:100%;margin:10px auto 0 auto" aria-hidden=true></div><div id=tableContainer aria-label={{ariaLabelTable}}></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/balancePieChart/balancePieChart.html', '<div><div id=chartContainer aria-hidden=true></div><div id=tableContainer aria-label={{ariaLabelTable}}></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/calendar/calendar.html', '<div class="pf-calendar_list l-gap l-gap-above" ng-if=vm.data.calendarModel><div class=pf-calendar_list--grid><div class=pf-calendar_list--grid--item ng-repeat="(monthId, month) in vm.data.calendarModel"><div class=pf-calendar id={{theId}}-{{monthId}}><span class="pf-calendar--title t-strong" pf-translate="{{\'monthfull.\' + (month.month + 1)}}"></span><table class=pf-calendar--table role=grid><thead class=pf-calendar--table--thead><tr><th role=columnheader scope=col><abbr id=input_appointment-col-0 title="{{\'dayfull.1\'|pfTranslate:this}}" pf-translate=day.1></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-1 title="{{\'dayfull.2\'|pfTranslate:this}}" pf-translate=day.2></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-2 title="{{\'dayfull.3\'|pfTranslate:this}}" pf-translate=day.3></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-3 title="{{\'dayfull.4\'|pfTranslate:this}}" pf-translate=day.4></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-4 title="{{\'dayfull.5\'|pfTranslate:this}}" pf-translate=day.5></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-5 title="{{\'dayfull.6\'|pfTranslate:this}}" pf-translate=day.6></abbr></th><th role=columnheader scope=col><abbr id=input_appointment-col-6 title="{{\'dayfull.7\'|pfTranslate:this}}" pf-translate=day.7></abbr></th></tr></thead><tbody><tr role=row ng-repeat="(weekId, week) in month.weeks"><td ng-repeat="day in week track by $index" class=pf-calendar--daycell role=gridcell><abbr ng-if="day.date && !day.isAvailable" class=pf-calendar--daylabel ng-class="{\'is-today\': day.isToday}" title={{day.date}} ng-bind=day.dayOfMonth></abbr> <input ng-if=day.isAvailable class=pf-calendar--dayinput aria-label="{{\'Available\'|pfTranslate:this}}" id={{theId}}-{{day.date}} name=calendar-date type=radio ng-value=day.date ng-model=model.data ng-change=vm.helpers.dateChanged()><label ng-if=day.isAvailable aria-described-by=input_appointment-col-{{$index}} aria-label={{day.date|isoDateToLocalized}} class="pf-calendar--daylabel is-available" for={{theId}}-{{day.date}} ng-bind=day.dayOfMonth></label></td></tr></tbody></table></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecAdditionalInfo/ecAdditionalInfo.html', '<div class=pf-cockpit><div class=pf-additional-info><span class="widget_state_box--additional_info pf-additional-info--bold" data-ng-bind=ecAdditionalInfo.firstLine></span><br ng-if=::ecAdditionalInfo.secondLine><span ng-if=::ecAdditionalInfo.secondLine class=widget_state_box--additional_info data-ng-bind=ecAdditionalInfo.secondLine></span></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecBudgetChart/ecBudgetChart.html', '<div class=pf-cockpit><div id=chartContainer class=pf-cockpit--budget-chart></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecColumnChart/ecColumnChart.html', '<div class=pf-cockpit><div id=chartContainer class=pf-cockpit--column-chart></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecPieChart/ecPieChart.html', '<div class=pf-cockpit ng-class="::{\'pf-cockpit-mobile\': isMobile}"><div id=chartContainer class=pf-cockpit--pie-chart></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecSimpleList/ecSimpleList.html', '<div class=pf-cockpit><table class=pf-simple-table ng-if="ecSimpleList.items && ecSimpleList.items.length"><thead><tr><th scope=col><span class=is-visuallyhidden pf-translate="{{\'Number\'|pfExpandKey:this}}"></span></th><th scope=col><span class=is-visuallyhidden pf-translate="{{\'Type\'|pfExpandKey:this}}"></span></th></tr></thead><tbody><tr class=pf-simple-table--row ng-repeat="item in ecSimpleList.items track by $index"><td class=pf-simple-table--number data-ng-bind=item.number></td><td class=pf-simple-table--description pf-translate={{item.text}}></td></tr></tbody></table></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/cockpit/ecSubSelect/ecSubSelect.html', '<div class="pf-cockpit pf-sub-select"><single-select selected-value=selectedItems[0] describedby={{::describedBy}} dropdown-entries=firstItems method-selected-entry="firstSelected({entry: entry})" the-id={{::widgetInstanceId}}-dropdown--1 cancel={{::cancelLabel}} default-label={{::defaultLabel}} value-rendering-disabled=true></single-select><single-select selected-value=selectedItems[1] describedby={{::describedBy}} dropdown-entries=secondItems method-selected-entry="secondSelected({entry: entry})" the-id={{::widgetInstanceId}}-dropdown--2 cancel={{::cancelLabel}} default-label={{::defaultLabel}} value-rendering-disabled=true></single-select><single-select selected-value=selectedItems[2] describedby={{::describedBy}} dropdown-entries=thirdItems method-selected-entry="thirdSelected({entry: entry})" the-id={{::widgetInstanceId}}-dropdown--3 cancel={{::cancelLabel}} default-label={{::defaultLabel}} value-rendering-disabled=true></single-select></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/countdown/countdown.html', '<div class="countdown js-countdown" data-disable=#Button2 data-seconds={{::duration}} role=timer><div class=countdown--bars><div class="countdown--bar countdown--bar-remaining js-countdown-bar-remaining"></div></div><div aria-atomic=true aria-labelledby=labelanonym-label-5 aria-relevant=all class=countdown--display><span class=js-countdown-value></span> <span class=countdown--label pf-translate={{textKey}}.Seconds></span></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/csvExportButton/csv-export-button.html', '<form ng-if=vm.url action={{vm.url}} method=post class=btn_group><input type=hidden name=data ng-value=vm.csvData.model> <input type=hidden name=filename ng-value=vm.csvData.filename> <button type=submit class=btn ng-click=vm.exportToCsv($event) ng-disabled=vm.buttonDisabled pf-translate="{{\'Export\'|pfExpandKey:this}}"></button></form>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/currencyRateChart/currencyRateChart.html', '<div><div id=chartContainer style="min-width:250px;min-height:250px;width:100%;margin: 10px auto 0 auto" aria-hidden=true></div><div id=tableContainer aria-label={{ariaLabelTable}}></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/detailLoader/detailLoader.html', '<div class=js-pf-no-focus ng-class="{\'content-pane\': detailLoader.hasContentPane()}" ng-show=detailLoader.showDetailLoader()><div class=is-loading><div class=pf-loader ng-class="{\'no-label\': !detailLoader.loadingLabel, \'no-bg\': detailLoader.transparentBackground}"><div class=pf-loader--label pf-translate={{detailLoader.loadingLabel}}></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/amountWithCurrency/amountWithCurrency.html', '<div class="js-text_input_row_narrow text_input_row_narrow text_input_row_narrow_with_select text_input_row_narrow_with_select-static pf-form_input" ng-class="{\'text_input_row_narrow-error\': hasInputError(), \'text_input-has_value\': hasValue()}" data-disablevaluerendering=true><div class=text_input><input class=text_input--field id={{::theId}} name={{amountInputName}} ng-model=amountModel.value ng-required=required currency-input="{{canBeNegative?\'canBeNegative\':\'\'}}" maxlength={{maxLength}} ng-enter=enterPressed() ng-model-options="{ debounce: { default:100} }" amount-range="" min-value={{minValue}} max-value={{maxValue}} placeholder={{placeholder}}></div><div class="text_input_row_narrow--select js-text_input_row_narrow_select" ng-class="::{\'is-disabled\': currencyDisabled}"><div aria-hidden=true class=text_input_row_narrow--select--selected_val ng-if="currencies.length > 1 || currencyModel.value"><span ng-class="{\'text_input_row_narrow--select--selected_val--text\': currencies && currencies.length > 0}" ng-bind=currencyModel.value|currency></span></div><label class="text_input_row_narrow--select--label is-visuallyhidden" for={{::theId}}-currency pf-translate="{{\'Currency\'|pfTranslate}}"></label><select class=text_input_row_narrow--select--field id={{::theId}}-currency name={{currencyInputName}} tabindex=-1 ng-model=currencyModel.value ng-options="currency.value as currency.fullLabel for currency in currencies" ng-if="currencies && currencies.length > 0"></select></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/contact/emailWithValidation/emailWithValidation.html', '<div><div ng-if=vm.isReadMode()><fieldset class=pf-form_row><legend class="pf-form_label pf-form_legend">{{vm.inputLabel | pfTranslate}}</legend><div class=pf-form_inputgroup><div ng-if=vm.email class=pf-form_row><div class="pf-form_input pf-form_text"><div class="t-strong t-nowrap" data-ng-bind=vm.email id={{vm.instanceId}}-email></div></div></div><div class=pf-form_row><div class="pf-form_input pf-form_text"><button class="link link_action link_action-edit" ng-click=vm.goToEditMode() aria-describedby={{vm.instanceId}}-email type=button pf-translate={{vm.email?vm.editLabel:vm.addLabel}}></button></div></div></div></fieldset></div><ng-form name=vm.{{vm.formId}} ng-if=vm.isEditMode() novalidate is-equal-validation="" equality-input={{vm.instanceId}}-input equality-validation={{vm.instanceId}}-validation><fieldset class=pf-form_row><legend class="pf-form_label pf-form_legend" pf-translate={{vm.inputLabel}}></legend><div class=pf-form_inputgroup><div class=pf-form_row><div class="pf-form_input pf-form_input-email" ng-class="{\'is-error\': vm[vm.formId][vm.inputName].$invalid && vm[vm.formId][vm.inputName].$dirty}"><input type=email email-validation-attr="" id={{vm.instanceId}}-input name={{vm.instanceId}}-input ng-model=vm.email size=128 maxlength=128 ng-change=vm.changeNumber() ng-required=vm.isRequired aria-describedby={{vm.instanceId}}-input-tooltip></div><div><input-errors the-id={{vm.instanceId}}-input-errors><input-error when=vm[vm.formId][vm.inputName].$error.email text="{{\'ErrorInvalidEmail\'|pfTranslate:this}}"></input-error></input-errors></div></div><div ng-if="!(vm.isRequired || vm.noDelete)" class=pf-form_row><div class="pf-form_input pf-form_text"><button class="link link_action link_action-delete" type=button ng-click=vm.delete() pf-translate={{vm.deleteLabel}}></button></div></div></div></fieldset><fieldset ng-if=vm.showValidation() class=pf-form_row><legend class="pf-form_label pf-form_legend" pf-translate={{vm.validationLabel}}></legend><div class=pf-form_inputgroup><div class=pf-form_row><div class="pf-form_input pf-form_input-email" ng-class="{\'is-error\': !vm[vm.formId][vm.validationName].$valid && vm[vm.formId][vm.validationName].$dirty, \'has-success\': vm[vm.formId][vm.validationName].$valid}"><input type=email email-validation-attr="" id={{vm.instanceId}}-validation name={{vm.instanceId}}-validation ng-model=vm.emailValidation size=128 maxlength=128 required aria-describedby={{vm.instanceId}}-validation-hint></div><div id={{vm.instanceId}}-validation-hint><span ng-if=vm.isValid() class=is-visuallyhidden>{{\'ValidationSuccess\' | pfTranslate}}</span></div><input-errors the-id={{vm.instanceId}}-validation-errors><input-error when="!vm[vm.formId][vm.validationName].$valid && vm[vm.formId][vm.validationName].$dirty" text="{{\'ErrorRepeatNotSame\'|pfTranslate:this}}"></input-error></input-errors></div></div></fieldset></ng-form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/contact/phoneWithChallenge/phoneWithChallenge.html', '<div><div class=pf-form_horizontal ng-if=vm.isReadMode()><fieldset class=pf-form_row><legend class=pf-form_label pf-translate={{vm.inputLabel}}></legend><div class=pf-form_inputgroup><div ng-if=vm.number class=pf-form_row><div class="pf-form_input pf-form_text"><div class="t-strong t-nowrap" data-ng-bind="vm.format(vm.prefix, vm.number)" id={{vm.instanceId}}-number></div></div></div><div class=pf-form_row><div class="pf-form_input pf-form_text"><button class="link link_action link_action-edit" ng-click=vm.goToEditMode() aria-describedby={{vm.instanceId}}-number type=button pf-translate={{vm.number?vm.editLabel:vm.addLabel}}></button></div></div></div></fieldset></div><ng-form class=pf-form_horizontal name=vm.{{vm.formId}} ng-if=vm.isEditMode() novalidate><fieldset class=pf-form_row><legend ng-if=!!vm.inputLabel class="pf-form_label pf-form_legend" pf-translate={{vm.inputLabel}}></legend><div class=pf-form_inputgroup><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" for={{vm.instanceId}}-inputPrefix pf-translate="{{\'LabelPhoneNumberPrefix\'|pfExpandKey:this}}"></label><div class="pf-form_input pf-form_input-select"><select id={{vm.instanceId}}-inputPrefix name={{vm.instanceId}}-inputPrefix ng-options="prefix.value as prefix.name for prefix in vm.availablePrefixes" ng-model=vm.prefix></select></div></div><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" for={{vm.instanceId}}-inputNumber pf-translate="{{\'LabelPhoneNumber\'|pfExpandKey:this}}"></label><div class="pf-form_input pf-form_input-number" ng-class="{\'is-error\': vm.inputHasError()}"><input class=js-autofocus type=number id={{vm.instanceId}}-inputNumber name={{vm.instanceId}}-inputNumber minlength={{vm.numberLength}} maxlength={{vm.numberLength}} ng-model=vm.number challenge-validation="" ng-required=!!vm.required phone-with-prefix-validation="" phone-prefix=vm.prefix></div><input-errors the-id={{vm.instanceId}}-inputNumber-errors><input-error when="vm[vm.formId][vm.inputName].$error.phoneNumber || vm[vm.formId][vm.inputName].$error.number" text="{{\'ErrorInvalidPhoneNumber\'|pfTranslate:this}}"></input-error></input-errors></div><div ng-if=!vm.required class=pf-form_row><button class="link link_action link_with_icon icon-delete_16px" ng-click=vm.delete() type=button pf-translate={{vm.deleteLabel}}></button></div></div></fieldset></ng-form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/contact/phoneWithValidation/phoneWithValidation.html', '<div><div ng-if=vm.isReadMode()><fieldset class=pf-form_row><legend class=pf-form_label pf-translate={{vm.inputLabel}}></legend><div class=pf-form_inputgroup><div ng-if=vm.number class=pf-form_row><div class="pf-form_input pf-form_text"><div class="t-strong t-nowrap" data-ng-bind="vm.format(vm.prefix, vm.number)" id={{vm.instanceId}}-number></div></div></div><div class=pf-form_row><div class="pf-form-input pf-form_text"><button class="link link_action link_action-edit" ng-click=vm.goToEditMode() aria-describedby={{vm.instanceId}}-number pf-translate={{vm.number?vm.editLabel:vm.addLabel}}></button></div></div></div></fieldset></div><ng-form name=vm.{{vm.formId}} ng-if=vm.isEditMode() novalidate is-equal-validation="" equality-input={{vm.instanceId}}-inputNumber equality-validation={{vm.instanceId}}-validationNumber><fieldset class=pf-form_row><legend class="pf-form_label pf-form_legend" pf-translate={{vm.inputLabel}}></legend><div class=pf-form_inputgroup><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" for={{vm.instanceId}}-inputPrefix pf-translate="{{\'LabelPhoneNumberPrefix\'|pfExpandKey:this}}"></label><div class="pf-form_input pf-form_input-select"><select id={{vm.instanceId}}-inputPrefix name={{vm.instanceId}}-inputPrefix ng-options="prefix.value as prefix.name for prefix in vm.availablePrefixes" ng-model=vm.prefix></select></div></div><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" for={{vm.inputName}} pf-translate="{{\'LabelPhoneNumber\'|pfExpandKey:this}}"></label><div class="pf-form_input pf-form_input-text" ng-class="{\'is-error\': !vm[vm.formId][vm.inputName].$valid}"><input type=number id={{vm.inputName}} name={{vm.inputName}} ng-required=vm.isRequired minlength={{vm.numberLength}} maxlength={{vm.numberLength}} ng-model=vm.number ng-change=vm.changeNumber() phone-with-prefix-validation="" phone-prefix=vm.prefix></div><input-errors the-id={{vm.inputName}}-errors><input-error when="vm[vm.formId][vm.inputName].$error.phoneNumber\r\n                  || vm[vm.formId][vm.inputName].$error.number" text="{{\'ErrorInvalidPhoneNumber\'|pfTranslate:this}}"></input-error></input-errors></div><div ng-if=!vm.isRequired class=pf-form_row><div class=pf-form_text><div class="pf-form_input pf-form_text"><button class="link link_action link_action-delete" ng-click=vm.delete() pf-translate={{vm.deleteLabel}}></button></div></div></div></div></fieldset><fieldset class=pf-form_row ng-if=vm.showValidation()><legend class="pf-form_label pf-form_legend" pf-translate={{vm.validationLabel}}></legend><div class=pf-form_inputgroup><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" for={{vm.instanceId}}-validationPrefix pf-translate={{vm.validationLabel}}></label><div class="pf-form_input pf-form_input-select"><select id={{vm.instanceId}}-validationPrefix name={{vm.instanceId}}-validationPrefix ng-options="prefix.value as prefix.name for prefix in vm.availablePrefixes" ng-model=vm.prefix></select></div></div><div class=pf-form_row><label class="pf-form_label is-visuallyhidden" data-ng-bind=vm.inputNumberLabel></label><div class="pf-form_input pf-form_input-number" ng-class="{\'is-error\': vm[vm.formId][vm.validationName].$invalid && vm[vm.formId][vm.validationName].$dirty, \'has-success\': vm[vm.formId][vm.validationName].$valid}"><input type=number id={{vm.validationName}} name={{vm.validationName}} minlength={{vm.numberLength}} maxlength={{vm.numberLength}} ng-model=vm.validationNumber required aria-describedby={{vm.instanceId}}-validation-hint ng-change=vm.returnNumber()><div id={{vm.instanceId}}-validation-hint><span ng-if=vm.isValid() class=is-visuallyhidden pf-translate="{{\'ValidationSuccess\' | pfExpandKey:this}}"></span></div><input-errors id={{vm.validationName}}-errors><input-error when="vm[vm.formId][vm.validationName].$invalid && vm[vm.formId][vm.validationName].$dirty" text="{{\'ErrorRepeatNotSame\'|pfTranslate:this}}"></input-error></input-errors></div></div></div></fieldset></ng-form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/contactData/contactData.html', '<fieldset class=pf-form_row ng-class="{\'as-compact\': contactData.isLastElement}"><legend class="pf-form_label pf-form_legend" pf-translate={{contactData.fieldName}}></legend><div ng-if=!contactData.model class=pf-form_inputgroup><div class=pf-form_row><div class="pf-form_input pf-form_text"><button class="link link_action link_action-edit" ng-click="contactData.onAdd({$event: $event})" pf-translate={{contactData.addLabel}}></button></div></div></div><div class=pf-form_inputgroup><div class=pf-form_row><div class="pf-form_input pf-form_text"><span class="t-strong t-nowrap" data-ng-bind=contactData.model id={{contactData.instanceId}}-contact></span></div></div><div class=pf-form_row><div class="pf-form_input pf-form_text"><ul class=list-anchors><li><button id={{contactData.instanceId}}-edit class="link link_action link_action-edit" ng-click="contactData.onEdit({$event: $event})" aria-describedby={{contactData.instanceId}}-contact pf-translate={{contactData.editLabel}}></button></li><li><button id={{contactData.instanceId}}-delete class="link link_action link_action-delete" ng-click="contactData.onDelete({$event: $event})" aria-describedby={{contactData.instanceId}}-contact pf-translate={{contactData.deleteLabel}}></button></li></ul></div></div></div></fieldset>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/dropdown/dropdown.html', '<div ng-class="{\'pf-form_input pf-form_input-efselect\': !fullSize}"><div ng-if=entries.length class="ef_select js-ef_select" ng-class="{\r\n        \'ef_select-label\' : label,\r\n        \'ef_select-single\' : entries.length == 1,\r\n        \'is-disabled\' : disabledExpression\r\n        }" data-value={{selected.value}} data-ef_select=\'{"valueRenderingInactive": true}\'><input id={{::theId}} class=js-ef_select--value type=hidden ng-attr="{\'name={{::name}}\' : name}" ng-required=required ng-model=selected.value ng-value=selected.value ng-disabled=disabledExpression><div class="ef_select--trigger js-ef_select--trigger" ng-attr="{\r\n        \'aria-describedby={{::theId}}-description\': entries.length > 1,\r\n        \'aria-haspopup=true\': entries.length > 1,\r\n        \'role=button\': entries.length > 1,\r\n        \'tabindex=0\': entries.length > 1 && !disabledExpression,\r\n        \'tabindex=-1\': disabledExpression\r\n' + '        }"><div ng-if=::label class=ef_select--label pf-translate={{label}}></div><div class=ef_select--selected_val ng-cloak=""><div ng-if=!selected.description class=ef_select--single_line title={{selected.name}} data-ng-bind=selected.name></div><div ng-if="selected.description && !selected.info" class=ef_select--multi_label title={{selected.name}}><span class="ef_select--multi_label--name t-strong" data-ng-bind=selected.name></span> <span class=ef_select--multi_label--id data-ng-bind=selected.description></span></div><div ng-if=selected.info class=ef_select--multi_label title={{selected.name}}><div class=ef_select--multilabel--leftright><div aria-hidden=false class=l-right><span class=ef_select--multi_label--additional_info data-ng-bind=selected.info></span></div><div class=l-left><span class="ef_select--multi_label--name t-strong" data-ng-bind=selected.name></span></div></div><span class=ef_select--multi_label--id data-ng-bind=selected.description></span></div></div></div><div ng-if="entries.length > 1" aria-hidden=true class="ef_select--menu js-ef_select--menu"><div class=ef_select--menu--header><span id={{::theId}}-description pf-translate={{describedby}} class=t-strong></span> <button class="ef_select--menu--close_btn js-ef_select--menu--close_btn" pf-translate=global.Cancel></button></div><ul class=ef_select--menu--list role=listbox><li ng-repeat="entry in entries track by $index" class="ef_select--menu--list--item js-ef_select--menu--list--item" ng-enter="selectionChanged(entry, $index)" ng-click="selectionChanged(entry, $index)" ng-space="selectionChanged(entry, $index)" aria-selected=false role=option tabindex=0 data-value={{entry.value}}><div ng-if=!entry.description class=ef_select--single_line title={{entry.name}} data-ng-bind=entry.name></div><div ng-if="(entry.description && !entry.info)" class=ef_select--multi_label title={{entry.name}}><span class="ef_select--multi_label--name t-strong" data-ng-bind=entry.name></span> <span class=ef_select--multi_label--id data-ng-bind=entry.description></span></div><div ng-if=entry.info class=ef_select--multi_label title={{entry.name}}><div class=ef_select--multilabel--leftright><div aria-hidden=false class=l-right><span class=ef_select--multi_label--additional_info data-ng-bind=entry.info></span></div><div class=l-left><span class="ef_select--multi_label--name t-strong" data-ng-bind=entry.name></span></div></div><span class=ef_select--multi_label--id data-ng-bind=entry.description></span></div></li></ul></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/editableInput/editableInput.html', '<div class=pf-form_row ng-class="{\'as-compact\': editableInput.isLastElement}"><label for={{editableInput.theId}} class=pf-form_label pf-translate={{editableInput.fieldName}}></label><div class="pf-form_input pf-form_input-text" class=pf-form_label ng-if="editableInput.data.mode !== \'readonly\'"><input ng-model=editableInput.model class="text large" id={{editableInput.theId}} maxlength=254 size=48 name={{editableInput.inputFieldName}} ng-required=editableInput.isRequired> <button ng-if="!(editableInput.isRequired || editableInput.noDelete)" class="link link_action link_action-delete" ng-click="editableInput.actions.onDeleteClicked({$event: $event})" aria-describedby={{editableInput.theId}}-contact pf-translate={{editableInput.deleteLabel}}></button></div><div class="pf-form_input pf-form_text" ng-if=editableInput.helpers.showAddButton()><button ng-if=!editableInput.noAdd class="link link_action link_action-edit" ng-click="editableInput.actions.onAddClicked({$event: $event})" pf-translate={{editableInput.addLabel}}></button></div><div class="pf-form_input pf-form_text" ng-if=editableInput.helpers.showEditButton()><span class=t-nowrap data-ng-bind=editableInput.model id={{editableInput.theId}}-contact></span>&nbsp; <button ng-if=!editableInput.noEdit id={{editableInput.theId}}-edit class="link link_action link_action-edit" ng-click="editableInput.actions.onEditClicked({$event: $event})" aria-describedby={{editableInput.theId}}-contact pf-translate={{editableInput.editLabel}}></button> <button ng-if="!(editableInput.isRequired || editableInput.noDelete)" id={{editableInput.theId}}-delete class="link link_action link_action-delete" ng-click="editableInput.actions.onDeleteClicked({$event: $event})" aria-describedby={{editableInput.theId}}-contact pf-translate={{editableInput.deleteLabel}}></button></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/file/file.html', '<div class=pf-form_row><label class=pf-form_label ng-hide=vm.hideLabel for={{vm.theId}}>{{vm.prefix + \'ChooseFile\'|pfTranslate:this:vm.translateValues}} <span ng-if=vm.showTooltip class="has-tooltip js-tooltip"><span aria-hidden=true class="tooltip-icon js-tooltip--icon" tabindex=0 pf-translate="{{vm.prefix + \'HelpText\'|pfExpandKey:this}}" translate-values=vm.translateValues></span></span><div class="tooltip js-tooltip--content" ng-if=vm.showTooltip><div class=tooltip--inner pf-translate="{{vm.prefix + \'TooltipChooseFile\'|pfExpandKey:this}}" translate-values=vm.translateValues></div></div></label><div class="pf-form_input pf-form_input-file" ng-class="{\'l-gap-above\': isMobile && !vm.hideLabel}"><ng-form name=fileForm><input id={{vm.theId}} type=file name=fileInput accept={{vm.show}} required></ng-form></div><input-errors the-id={{vm.theId}}-errors><input-error when=fileForm.$error.fileSize text="{{vm.prefix + \'ErrorFileTooLarge\'|pfTranslate:this:vm.translateValues}}"></input-error><input-error when=fileForm.$error.fileType text="{{vm.prefix + \'ErrorWrongFileType\'|pfTranslate:this:vm.translateValues}}"></input-error></input-errors></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/inputWithAutocomplete/inputWithAutocomplete.html', '<div class="pf-form_input pf-form_input-text" id={{vm.instanceId}}-parent><input class=text_input_autocomplete ng-model=vm.inputModel id={{vm.instanceId}}-input name={{vm.instanceId}}-input ng-keyup=vm.update($event) required autocorrect=off autocapitalize=off spellcheck=false autocomplete=off aria-autocomplete=list aria-owns={{vm.instanceId}}-list placeholder={{vm.placeholderKey|pfTranslate}} ng-blur=vm.blur($event) ng-disabled=vm.disabled> <button class=text_input_autocomplete--reset_btn ng-show=vm.showResetButton() type=button style=display:block ng-click=vm.reset() tabindex=-1 ng-disabled=vm.disabled><span class=is-visuallyhidden pf-translate="{{\'Reset\'}}"></span></button><div class="autocomplete-suggestionlist autocomplete-suggestionlist-medium" role=listbox ng-if=vm.showList() ng-hide=vm.disabled id={{vm.instanceId}}-list aria-live=polite><div ng-repeat="entry in vm.filteredList" class=autocomplete-suggestionlist--item role=option tabindex=0 ng-click="vm.selectEntry(entry, true)" ng-blur=vm.blur($event)><div class=l-leftright><div class=l-left><span class=zipCode>{{entry.textLeft}}</span></div><div class=l-right><span class=city>{{entry.textRight}}</span></div></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/submit/submit.html', '<button class=btn ng-class="{\'btn-yellow\':vm.isPrimary, \'is-disabled\':vm.isDisabled||vm.data.buttonDisabled}" ng-attr="{\'aria-disabled=true\':vm.isDisabled||vm.data.buttonDisabled}" ng-disabled=vm.isDisabled||vm.data.buttonDisabled ng-click=vm.actions.submit($event) ng-enter=vm.actions.submit($event) ng-space=vm.actions.submit($event)><span pf-translate={{vm.label}}></span></button>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/textInputOption/textInputOption.html', '<div><div ng-if=vm.isReadMode() class="pf-form_input pf-form_text"><span ng-if=!vm.value><button class="link link_action link_action-add" ng-click=vm.goToEditMode() pf-translate={{vm.addLabel}} id={{vm.instanceId}} aria-label={{vm.addAriaLabel|pfTranslate}}></button> </span><span ng-if=vm.value><span class=t-nowrap ng-class="{\'t-strong\':!vm.noBold}" data-ng-bind=vm.value></span>&nbsp; <button class="link link_action link_action-edit" ng-click=vm.goToEditMode() pf-translate={{vm.editLabel}} aria-label={{vm.editAriaLabel|pfTranslate}}></button></span></div><ng-form name=vm.{{vm.formId}} ng-if=vm.isEditMode()><div class=text_input ng-class="{\'is-error\': vm.inputHasError()}"><input id={{vm.instanceId}}-input name={{vm.instanceId}}-input ng-model=vm.value size={{vm.size||vm.maxLength||38}} maxlength={{vm.maxLength}} aria-label={{vm.addLabel}}></div><div class="pf-form_input pf-form_text inlineblock"><button class="link link_action link_action-delete" ng-click=vm.delete() pf-translate={{vm.deleteLabel}} aria-label={{vm.deleteAriaLabel|pfTranslate}}></button></div></ng-form></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/toggleButtons/toggleButtons.html', '<ul class="pf-form_input pf-form_input-option pf-form_input-toggles"><li class="pf-form_option pf-form_option-toggles" ng-class="{\'is-checked\' : vm.ngModel === button.value}" ng-repeat="button in vm.buttons track by $index"><input type=radio name={{::vm.theId}}-toggle_buttons id={{::vm.theId}}-ele-{{$index}} class=radio--field ng-model=vm.ngModel ng-value=button.value ng-change=vm.onChange() aria-describedby={{vm.labelledBy}}><label for={{::vm.theId}}-ele-{{$index}} pf-translate={{button.name}}></label></li></ul>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/form/toggleGrid/toggleGrid.html', '<fieldset class=pf-form_row><legend class=pf-form_label ng-class="{\'pf-form_label-large\': vm.labelLarge}" for={{::vm.theId}} pf-translate={{::vm.labelKey}} ng-class="{\'is-visuallyhidden\' : vm.labelHidden}"></legend><ul class="pf-form_input pf-form_input-option pf-form_input-togglegrid"><li class="pf-form_option pf-form_option-togglegrid" ng-repeat="option in vm.options track by $index"><input id={{::vm.theId}}-{{$index}} name={{::vm.theId}} type=radio ng-model=vm.ngModel ng-value=option.value><label for={{::vm.theId}}-{{$index}} pf-translate={{option.name}}></label></li></ul></fieldset>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/interestTerms/interestTerms.html', '<div class="pf-table_list_container js-table_list" ng-class="{\'l-gap-above\': !data.averageBalance}"><table class="js-table_list--table pf-table_list table_list-small"><thead><tr><th scope=col pf-translate="{{\'InterestTerms\'|pfExpandKey:this}}"></th><th scope=col class=right pf-translate="{{\'InterestRate\'|pfExpandKey:this}}"></th></tr></thead><tbody><tr class="has-top_right js-table_list--row" ng-repeat="line in data.terms track by $index"><th class=is-title scope=row data-ng-bind=::line.term></th><td class="right is-top_right" data-ng-bind=::line.rate></td></tr></tbody></table></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/stepNavigation/stepNavigation.html', '<div class=step_navigation><ol class=step_navigation--list><li ng-repeat="phase in vm.phases track by $index" ng-init="phaseNumber = $index + 1" ng-class="{\'is-active\':phase.active, \'step_navigation--list--step-past\':phase.done,\n        \'has-substeps\':phase.steps}" class=step_navigation--list--step><span ng-if="!phase.done || phase.preventClick" class=step_navigation--list--step--text><step-navigation-caption number={{phaseNumber}} text={{phase.key}} is-active={{phase.active}} has-substeps={{phase.steps}}></step-navigation-caption></span><a ng-if="phase.done && !phase.preventClick" class=step_navigation--list--step--link href="" ng-click=vm.handleClick(phaseNumber)><step-navigation-caption number={{phaseNumber}} text={{phase.key}} is-active={{phase.active}} has-substeps={{!!phase.steps}}></step-navigation-caption></a><ol ng-if=phase.steps class="step_navigation--list step_navigation--list-substeps"><li ng-repeat="step in phase.steps track by $index" ng-init="stepNumber = $index + 1" ng-class="{\'is-active\':step.active, \'step_navigation--list--step-past\':step.done}" class=step_navigation--list--step><span ng-if="!step.done || step.preventClick" class=step_navigation--list--step--text><step-navigation-caption number={{phaseNumber}}.{{stepNumber}} text={{step.key}} is-active={{step.active}} is-hidden=true></step-navigation-caption></span><a ng-if="phase.done && !step.preventClick" class=step_navigation--list--step--link href="" ng-click="vm.handleClick(phaseNumber, stepNumber)"><step-navigation-caption number={{phaseNumber}}.{{stepNumber}} text={{step.key}} is-active={{step.active}} is-hidden=true></step-navigation-caption></a></li></ol></li></ol></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/stepNavigation/stepNavigationCaption.html', '<span class=step_navigation--list--step--caption><span class=step--caption--number ng-class="{\'is-visuallyhidden\':caption.isHidden}" ng-bind=caption.number></span> <span class=step--caption--title ng-class="{\'is-visuallyhidden\':caption.isHidden}">- {{caption.text|pfTranslate}}</span> <span ng-if="caption.isActive === \'true\'" class=is-visuallyhidden pf-translate="{{\'StepNavigationActiveStep\'}}"></span> <span ng-if=caption.hasSubsteps class=is-visuallyhidden pf-translate="{{\'StepNavigationHasSubsteps\'}}"></span></span>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/table/multiTable/multiTable.html', '<div><ul class=keyvalue_block><li ng-repeat="column in multiTable.columns track by $index" class=keyvalue_block--item><strong class=keyvalue_block--key ng-class=::column.labelClass><span aria-describedby={{::multiTable.theId}}-tooltip data-ng-bind=column.label></span><tooltips the-id={{::multiTable.theId}}-tooltip><tooltip type=info when=column.tooltip text={{column.tooltip}}></tooltip></tooltips></strong><div ng-if=column.value class=keyvalue_block--value ng-class=column.spanClass data-ng-bind=column.value></div><div ng-if=column.amount class=keyvalue_block--value ng-class=column.spanClass><span class=keyvalue_block--currency ng-bind=column.amount.currency|currency></span> <span class=keyvalue_block--currencyspace></span> <span ng-bind=column.amount.value|amount:column.amount.indicator:null:false:column.amount.decimals></span></div></li></ul></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/table/sortableTableHeader/sortableTableHeader.html', '<th ng-class="{headerSortUp: sortableTableHeader.sortProperty.order == sortableTableHeader.sortName && !sortableTableHeader.sortProperty.reverseOrder,\n    headerSortDown: sortableTableHeader.sortProperty.order == sortableTableHeader.sortName && sortableTableHeader.sortProperty.reverseOrder}"><span class=header--title pf-translate={{sortableTableHeader.headerLabel}}></span> <span ng-if="sortableTableHeader.sortProperty.order != sortableTableHeader.sortName" class=is-visuallyhidden pf-translate=global.NoSort></span> <span ng-if="sortableTableHeader.sortProperty.order == sortableTableHeader.sortName && !sortableTableHeader.sortProperty.reverseOrder" class=is-visuallyhidden pf-translate=global.AscendingSort></span> <span ng-if="sortableTableHeader.sortProperty.order == sortableTableHeader.sortName && sortableTableHeader.sortProperty.reverseOrder" class=is-visuallyhidden pf-translate=global.DescendingSort></span></th>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/table/tableFilter/tableFilter.html', '<div class="l-gap l-gap-small is-hidden-print"><div class="js-text_input_row_narrow text_input_filter text_input_row_narrow"><label class=text_input_row_narrow--label for={{tableId}}--filter pf-translate={{textfieldLabel}}></label><div class=text_input><div class=pf-form_row><div class="pf-form_input pf-form_input-search"><input type=search class=text_input_filter--field id={{tableId}}--filter ng-model=filterArg ng-focus=onFocus($event) ng-blur=onBlur($event) accesskey=4 ng-change=onChange()></div><div aria-live=assertive class=text_input_filter--count><span ng-if=filterArg>{{resultsLength}} <span class=is-visuallyhidden>{{\'Entries\'|pfTranslate:this}}</span></span></div><button class="text_input_filter--reset_btn is-active" type=button ng-click=reset() ng-if=filterArg><span class=is-visuallyhidden pf-translate="{{\'Reset\'|pfTranslate:this}}"></span></button></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/tabsNavigation/contentWrapper.html', '<section aria-hidden={{!contentWrapper.isActive}} aria-labelledby="{{(contentWrapper.parent.singleContent) ? contentWrapper.parent.getActiveTabId() : contentWrapper.tabId}}" id={{::contentWrapper.panelId}} ng-class="{\n      \'is-active\' : contentWrapper.isActive,\n      \'content-pane\' : (contentWrapper.parent.isErrorState() && !contentWrapper.parent.isOverlay()) && !contentWrapper.parent.isMobile\n      }" class="js-tabs--pane widget_tabs--pane" role=tabpanel ng-transclude></section>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/tabsNavigation/tabsNavigation.html', '<div class="widget_tabs widget_tabs-content" ng-class="{\'js-tabs\':tabsNavigation.tabsLoaded, \'is-initialized\':tabsNavigation.tabsLoaded}" data-tabs={&quot;animateHeight&quot;:true}><div class="dropdown_nav js-tabs--dropdown dropdown_nav-white widget_tabs--dropdown" data-activetext="{{\'Selected\' | pfTranslate }}"><a aria-haspopup=true class="dropdown_nav--trigger js-dropdown_nav--trigger" ng-click=tabsNavigation.toggleDropdown() href="" role=menuitem><div class=widget_tabs--link><span class=icon ng-class=tabsNavigation.activeIconClass></span> <span class="widget_tabs--link--text js-widget_tabs--link--text" ng-bind=tabsNavigation.activeText></span> <span class=is-visuallyhidden pf-translate="{{\'Selected\'}}"></span></div></a><ul ng-show="tabsNavigation.showTabs === undefined ? true : tabsNavigation.showTabs" class="widget_tabs--menu js-dropdown_menu dropdown_nav--menu widget_tabs--nav js-widget_tabs--nav" role=tablist ng-transclude=nav ng-style=tabsNavigation.dropdownStyle></ul></div><div ng-if="tabsNavigation.isErrorState() && tabsNavigation.isOverlay()" class=l-gap></div><ng-transclude ng-transclude-slot=content></ng-transclude></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/tabsNavigation/tabWrapper.html', '<li><a class="js-tabs--link js-tab_selector widget_tabs--nav--item" role=tab tabindex=0 ng-class="{\'is-active\' : tabWrapper.isTabActive}" aria-controls={{::tabWrapper.panelId}} aria-selected={{tabWrapper.isTabActive}} id={{::tabWrapper.tabId}} ng-click=tabWrapper.parent.activateTab(tabWrapper.tabId) ng-space=tabWrapper.parent.activateTab(tabWrapper.tabId) ng-enter=tabWrapper.parent.activateTab(tabWrapper.tabId)><div class=widget_tabs--link ng-transclude></div></a></li>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/accountInfo/accountInfo.html', '<div class=widget_account_info><div class=widget_account_info--account_number id={{::accountInfo.widgetInstanceId}}-accountIban data-ng-bind=::accountInfo.accountIban|iban></div><div class=widget_account_info--name id={{::accountInfo.widgetInstanceId}}-accountName data-ng-bind=::accountInfo.accountName></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/accountOverview/accountOverview.html', '<div aria-label="{{\'Labeltext\'|pfTranslate:this:account}}" class=widget_state_box><div ng-if="account.info.header || account.info.headerTitle" class=widget_state_box--header><span ng-if=account.info.header class=widget_state_box--additional_info><span data-ng-bind=account.info.header></span> </span><span ng-if=account.info.headerTitle class="widget_state_box--additional_info t-strong"><span data-ng-bind=account.info.headerTitle></span></span></div><div class="widget_state_box--content l-leftright-table"><strong ng-if=account.hasValidAmount class="widget_state_box--title l-left" ng-class="{\'negative_val\' : account.isNegative}"><span class=widget_state_box__title--currency data-ng-bind=account.info.content.left.currency></span><span class=widget_state_box__title--currencyspace>&nbsp;</span><span class=widget_state_box__title--value data-ng-bind=account.info.content.left.value></span></strong> <strong ng-if=!account.hasValidAmount class="widget_state_box--title l-left" pf-translate="{{\'AmountHidden\'|pfExpandKey:this}}"></strong> <span ng-if=account.hasValidAmount class="widget_state_box--additional_info l-right"><more-actions ng-if=::showMoreActions() show-detail-link=account.moreActions.showDetailLink detail-link-type={{::account.moreActions.detailLinkType}} detail-single-label="{{\'DetailedOverview\' | pfExpandKey:this}}" detail-multiple-label="{{\'MoreActions\' | pfExpandKey:this}}" action-url-replacement-obj=actionUrlReplacementObj show-call-to-action=account.properties.button instance-id={{::account.nr}} action-entries=account.moreActions.actionEntries mapping-key=mappingKey small-button="\'true\'"></more-actions>{{account.info.content.right}} <span class=credit_cards ng-if=account.info.content.icons><span ng-repeat="icon in account.info.content.icons track by $index" class=icon ng-class=icon.iconClass>{{icon.name}}</span></span></span></div><div class="widget_state_box--footer l-leftright"><div ng-repeat="row in account.info.footers track by $index"><span class="widget_state_box--additional_info l-right" data-ng-bind=row.right></span> <span class="widget_state_box--additional_info truncate" data-ng-bind=row.left></span></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/amountInput/amountInput.html', '<div class="pf-pop_input js-pop_input" ng-class="{\'is-active\': isActive, \'has-error\': control.$invalid}"><button aria-hidden=true class=pf-pop_input--button tabindex=-1 type=button ng-click=focus() data-ng-bind=outputValue></button><label class=pf-pop_input--label for={{::theId}} pf-translate="{{\'PleaseEnterAmount\'|pfExpandKey:this}}"></label><input class="pf-pop_input--holder pf-pop_input--input" aria-multiline=false id={{::theId}} name={{::theName}} size=12 maxlength=19 ng-model=config.model ng-focus=focus() ng-click=focus() ng-blur=inputBlurred() currency-input="" is-number-input={{isNumberInput}} ng-attr="{\'aria-describedby={{::describedBy}}\' : describedBy}" amount-range="" min-value={{minValue}} max-value={{maxValue}}></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/buttonbarDynamic/buttonBarDynamic.html', '<div class="widget_footer l-leftright"><div class="widget_footer--action_big l-right"><button class="btn btn-yellow" type=submit ng-click=onCallToActionClick() ng-space=onCallToActionClick() ng-enter=onCallToActionClick() ng-disabled="isButtonDisabled || !isValid()" pf-translate={{callToActionLabel}}></button></div><div ng-if=detailUrls class="widget_footer--action_small l-left"><a aria-haspopup=true class="btn_icon btn_icon-zoom" href="" ng-click=onDetailActionClick() ng-space=onDetailActionClick() ng-enter=onDetailActionClick() title="{{detailActionLabel | pfTranslate}}" pf-aria-text={{detailActionLabel}}></a></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/buttonbarStatic/buttonBarStatic.html', '<div class="widget_footer l-leftright"><div ng-if=viewConfig.doShowCallToAction class="widget_footer--action_big l-right"><a aria-haspopup=true class=btn href="" ng-click=emitOpenDetail($event) pf-aria-text={{callToActionLabel}}></a></div><more-actions show-detail-link=showDetailLink detail-link-type={{detailLinkType}} detail-single-label={{detailSingleLabel}} detail-multiple-label={{detailMultipleLabel}} action-url-replacement-obj=actionUrlReplacementObj show-call-to-action=productProperties.button instance-id={{::widgetInstanceId}} mapping-key=mappingKey action-entries=actionEntries in-static-bar="\'true\'"></more-actions></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/common/accessibleSorter/accessibleSorter.html', '<div class="js-hiddencommand widget--accessible_sorter"><label for={{::accessibleSorter.widgetInstanceId}}-sorter pf-translate={{accessibleSorter.label}}></label><select class="js-accessible_sorter js-hiddencommand--input" id={{::accessibleSorter.widgetInstanceId}}-sorter><option>1</option></select></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/common/header/widgetHeader.html', '<div class=widget_header><h2 ng-if=!labelCustomTitle class=widget--title><span pf-translate="{{\'WidgetTitle\'|pfExpandKey:this}}"></span><span class=is-visuallyhidden data-ng-bind=labelAccount></span></h2><h2 ng-if=labelCustomTitle class=widget--title data-ng-bind=labelCustomTitle></h2><p ng-if=widgetSubTitle class=widget--subtitle data-ng-bind=widgetSubTitle></p><div class=l-right><button ng-if="hasWidgetSettings == true" aria-haspopup=true class="btn_icon btn_icon-settings js-widget--opensettings" type=button ng-click=showWidgetSettings() pf-aria-text="{{\'Settings\'|pfExpandKey:this}}"></button> <button ng-if="(widgetInstance.isHelpPagePresent == true)" aria-haspopup=true class="btn_icon btn_icon-help js-widget--openhelp" type=button ng-click=widgetInstance.showHelp() pf-aria-text="{{\'Help\'|pfExpandKey:this}}"></button> <button ng-if=widgetInstance.isRemovable() class="btn_icon btn_icon-remove js-widget--remove" type=button ng-click=widgetInstance.removeWidget()><span pf-translate="{{\'RemoveTile\'|pfExpandKey:this}}"></span>:&nbsp; <span pf-translate="{{\'WidgetTitle\'|pfExpandKey:this}}"></span></button></div><div ng-if="::(widgetInstance.isCollapsible() && !isShortcut)" class="btn_icon btn_icon-toggle js-widget--toggleopen" role=button ng-class="::{\'js-widget--drag\' : widgetInstance.isReorderable()}"><span class=widget--toggleopen--open pf-translate="{{\'LabelOpen\'|pfExpandKey:this}}"></span> <span class=widget--toggleopen--close pf-translate="{{\'LabelClose\'|pfExpandKey:this}}"></span></div><a ng-if=::isShortcut class="btn_icon btn_icon-toggle" href="" ng-click=callHeaderFn($event) ng-class="::{\'js-widget--drag\' : widgetInstance.isReorderable()}" pf-translate="{{\'WidgetTitle\'|pfExpandKey:this}}"></a></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/common/help/widgetHelp.html', '<div aria-labelledby={{::help.widgetInstanceId}}-help-title class="is-left js-widget--help widget_help"><button class="widget_help--close_button js-widget--closehelp" type=button pf-translate={{help.labelClose}}></button><h3 class=widget_help--header id={{::help.widgetInstanceId}}-help-title><strong class=t-strong pf-translate={{help.labelTitle}}></strong><div pf-translate={{help.description}}></div></h3><div class=widget_help--body><div class=widget_help--content id={{::help.widgetInstanceId}}-help-wcms-wrapper><detail-loader ng-if=!help.widgetHelp.html loading-label="{{\'LoadingData\'|pfExpandKey:this}}" hide-content-pane=isOverlay transparent-background=true></detail-loader><div class=wcms ng-bind-html=help.widgetHelp.html|content></div></div><div class=widget_help--footer ng-if=!help.isMobile><a class=btn pf-translate={{help.labelAdditionalHelp}} ng-click=help.openHelpUrl() href></a></div></div><div class=js-hiddencommand><button class="btn js-widget--closehelp js-hiddencommand--input" type=button pf-translate={{help.labelClose}}></button></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/common/settings/widgetSettings.html', '<div aria-labelledby={{::widgetInstanceId}}-title class="js-widget--settings widget_settings"><button class="widget_settings--close_button js-widget--closesettings" type=button pf-translate={{labelClose}}></button><h3 class=widget_settings--header id={{::widgetInstanceId}}-title tabindex=-1><strong class=t-strong pf-translate={{labelTitle}}></strong><div pf-translate={{widgetTitle}}></div></h3><div class=widget_settings--body><div class=widget_settings--content><div class=detail_content><form name=settingsForm novalidate><div class=content-pane-wrapper><div class=content-pane><div ng-transclude=""></div></div></div><div class=buttons><button class="btn btn-yellow" ng-disabled=settingsForm.$invalid ng-click=saveSettings() pf-translate={{labelSave}}></button></div></form></div></div></div><button class="detail_content--close_button js-widget--closesettings" type=button pf-translate={{labelClose}}></button></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/common/widgetLoader/widgetLoader.html', '<div class=widget--loading><div class=widget--loading--label>{{widgetLoader.labelLoading}}</div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/contentPaneCollapsible/contentPaneCollapsible.html', '<div class=pane-collapsed ng-class="{\'is-transparent\': lightBackground, \'is-open\': isOpen, \'content-pane\': !hideContentPane}"><button aria-controls={{id}} class=pane-collapsed--trigger type=button ng-click=toggleOpen() ng-space=toggleOpen() ng-enter=toggleOpen() tabindex=0>{{text|pfTranslate}} <span ng-hide=isOpen class="is-visuallyhidden pane-collapsed--trigger--open" pf-translate="{{\'LabelOpen\'|pfExpandKey:this}}"></span> <span ng-hide=!isOpen class="is-visuallyhidden pane-collapsed--trigger--close" pf-translate="{{\'LabelClose\'|pfExpandKey:this}}"></span></button><div aria-expanded={{isOpen}} id={{id}} class="pane-collapsed--content js-pane-collapsed--content" tabindex={{isOpen?0:-1}} ng-transclude=""></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/datepicker/datepicker.html', '<span ng-class="{\'pf-pop_input js-pop_input\' : isInline, \'is-active\': isActive, \'is-error\': control.$invalid}"><div ng-if=!isInline class="ef_datepicker js-ef_datepicker pf-form_input pf-form_input-text pf-form_input-date" ng-class="{\'is-error\': control.$invalid && control.$dirty}" data-config={{datePickerConfig}}><input class=text_input--field id={{::theId}} name={{::theName}} disable-and-ignore=getDisabledExpression() size=10 date-validation="" ng-model=config.model ng-blur=formatOutput() ng-required=required ng-change=inputChanged() min-date={{minDate}} max-date={{maxDate}} ng-attr="{\'aria-describedby={{describedBy}}\':describedBy}"></div><button ng-if=isInline aria-hidden=true ng-disabled=disabledExpression class="pf-pop_input--button js-pop_input--button" tabindex=-1 type=button ng-click=focus() data-ng-bind=config.model></button><label ng-if=isInline class=pf-pop_input--label for={{::theId}} id={{::theId}}_label pf-translate="{{\'PleaseEnterDate\'|pfExpandKey:this}}"></label><div ng-if=isInline class="pf-pop_input--datepicker js-ef_datepicker" data-config={{datePickerConfig}}><input class="pf-pop_input--input pf-pop_input--holder js-pop_input--input" id={{::theId}} name={{::theName}} disable-and-ignore=getDisabledExpression() size=10 maxlength=10 date-validation="" ng-focus=focus() ng-click=focus() ng-blur=inputBlurred() ng-model=config.model ng-required=required ng-change=inputChanged() min-date={{rangeLow}} max-date={{rangeHigh}} ng-attr="{\'aria-described-by={{describedBy}}\':describedBy}"></div></span>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/dateRange/dateRange.html', '<div class="widget_e_cockpit_charts pf-date-range"><div class=widget_e_cockpit_charts--description><span pf-translate={{startMonth}}></span> <span ng-if=hasStartYear data-ng-bind=::startYear></span><span ng-if=isRange> <span>&nbsp;-&nbsp;</span> <span pf-translate={{endMonth}}></span> <span data-ng-bind=::endYear></span> </span><span ng-if=::additionalInfo><span ng-if="hasStartYear || isRange">: </span><span data-ng-bind=::additionalInfo></span></span></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/dynamicList/dynamicList.html', '<div><selection-list ng-if="dynamicList.items.length <= dynamicList.maxListItems" items=dynamicList.items on-item-selected="dynamicList.onItemSelectedDirect({item: item})"></selection-list><dropdown ng-if="dynamicList.items.length > dynamicList.maxListItems" the-id={{::dynamicList.widgetInstanceId}}-dropdown name={{::dynamicList.widgetInstanceId}}-dropdown default-label="{{::dynamicList.defaultLabel | pfTranslate}}" ng-model=dynamicList.currentSelection entries=dynamicList.items on-change="dynamicList.onItemSelected({itemIndex: index})"></dropdown></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/fileUpload/fileUpload.html', '<input id=ef-file-input-u{{theId}}-1 type=file>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/iconBar/iconBar.html', '<div><ul class=widget_detail_links ng-if=iconBar.icons.length><li class=widget_detail_links__item ng-repeat="icon in ::iconBar.icons"><a class=widget_detail_links__item__link ng-click="iconBar.onItem({item: icon})" ng-space="iconBar.onItem({item: icon})" role=button href=""><span ng-class="::(\'widget_detail_links__item__link__icon icon icon-\' + icon.cssClass)"></span> <span class=widget_detail_links__item__link__title pf-translate={{icon.text}}></span></a></li></ul></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/messages/messages.html', '<div ng-class="{\'content-pane\':wrapper}"><div class=pf-notification-list><div ng-if=messageList ng-repeat="message in messageList" class="pf-notification pf-notification-hasicon" ng-class=message.className><scroll-into-view ng-if="$first && autofocus"></scroll-into-view><div class=pf-notification--inner><div class=pf-notification--icon><div class="icon icon-notification_{{message.iconName}}"></div></div><div class=pf-notification--message tabindex=0 role=status ng-class="{\'js-autofocus\' : autofocus}"><p ng-if=::message.content.title><strong ng-if="::(!message.content.translated && !message.content.fullKey)" ng-bind-html="k + message.content.title | pfTranslate:null:messages | content"></strong> <strong ng-if="::(!message.content.translated && message.content.fullKey)" ng-bind-html="message.content.title | pfTranslate:null:messages | content"></strong> <strong ng-if=::message.content.translated ng-bind-html=message.content.title|unsafe></strong></p><p ng-include="\'messageContent-\' + message.contentId"></p></div></div></div><div ng-if=error class="pf-notification pf-notification-hasicon pf-notification-error"><div class=pf-notification--inner><div class=pf-notification--icon><div class="icon icon-notification_error"></div></div><div class=pf-notification--message tabindex=0 role=status ng-class="{\'js-autofocus\' : autofocus}"><p ng-if=::error.message.title><strong ng-if="::(!error.message.translated && !error.message.fullKey)" ng-bind-html="k + error.message.title | pfTranslate:null:error | content"></strong> <strong ng-if="::(!error.message.translated && error.message.fullKey)" ng-bind-html="error.message.title | pfTranslate:null:error | content"></strong> <strong ng-if=::error.message.translated ng-bind-html=error.message.title|unsafe></strong></p><p ng-include="\'errorContent\'"></p></div></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/moreActions/moreActions.html', '<div><div ng-if=::!isMobile class=ef_more_actions ng-class="{\'js-ef_more_actions\': isInitialized}"><div ng-if="(showDetailLink || actionEntries)" ng-class="::{\'l-left widget_footer--action_small\' : inStaticBar === \'true\'}"><a aria-haspopup=true aria-expanded=false role=button class="btn_icon btn_icon-more_info js-ef_more_actions--trigger" href="" title="{{detailMultipleLabel | pfTranslate}}" pf-aria-text={{detailMultipleLabel}} ng-if=actionEntries ng-class="::{\'btn_small\' : smallButton === \'true\'}"></a> <a class="btn_icon btn_icon-zoom" href="" title="{{detailSingleLabel | pfTranslate}}" pf-aria-text={{detailSingleLabel}} ng-if=::showDetailLink ng-click="emitOpenDetail(detailLinkType, additionalData)"></a><div ng-if=actionEntries aria-hidden=true aria-labelledby={{::instanceId}}-more_actions-title class="ef_more_actions--menu js-ef_more_actions--menu is-bottom-left"><h3 class=is-visuallyhidden id={{::instanceId}}-more_actions-title></h3><ul class=ef_more_actions--menu--list><li class=ef_more_actions--menu--list--item ng-repeat="action in actionEntries track by $index"><a class="ef_more_actions--menu--list--item--link js-ef_more_actions--menu--list--item--link" tabindex=-1 pf-translate={{action.text}} title={{::action.translatedTitle}} aria-label={{::action.translatedAriaLabel}} href="" ng-click=emitOpenDetail(action.key)></a></li></ul></div></div></div><div ng-if=::isMobile><a ng-if="::(showDetailLink && !actionEntries)" href="" class=pf-table_list--rowlink role=button tabindex=0 title="{{detailSingleLabel | pfTranslate}}" pf-aria-text={{detailSingleLabel}}></a> <button ng-if=::actionEntries aria-hidden=true role=button class="pf-table_list--menutrigger js-table_list--menutrigger" type=button title="{{detailMultipleLabel | pfTranslate}}" pf-aria-text={{detailMultipleLabel}}></button><ul ng-if=::actionEntries class="pf-table_list_menu js-table_list--menu"><li ng-repeat="action in actionEntries track by $index" class=pf-table_list_menu--item><a class="link_with_icon {{action.icon}}" tabindex=-1 pf-translate={{action.text}} title={{::action.translatedTitle}} aria-label={{::action.translatedAriaLabel}} href="" ng-click=emitOpenDetail(action.key)></a></li></ul></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/orderoverviewSettings/orderoverviewSettings.html', '<fieldset class=pf-form_row><legend class=pf-form_label pf-translate={{vm.labelPeriod}}></legend><ul class="pf-form_input pf-form_input-option pf-form_input-radio"><li ng-if="vm.settingData != undefined" class="pf-form_option pf-form_option-radio"><input type=radio name={{::vm.widgetInstanceId}}-1 id={{::vm.widgetInstanceId}}-2 aria-labelledby="{{::vm.widgetInstanceId}}-3 {{::vm.widgetInstanceId}}-2 {{::vm.widgetInstanceId}}-5" ng-model=settingData.period value={{vm.settingValues.INPUT_DAYS}}><label for={{::vm.widgetInstanceId}}-2 class=as-inline id={{::vm.widgetInstanceId}}-3 pf-translate={{vm.labelNext}}></label><div class="pf-form_input pf-form_input-text has-border as-inline"><input type=number name={{::vm.widgetInstanceId}}-user_days ng-model=vm.settingData.days size=3 ng-required=true char-limit=2 min={{::vm.settingsDaysMin}} max={{::vm.settingsDaysMax}} disable-and-ignore="vm.settingData.period !== vm.settingValues.INPUT_DAYS" aria-labelledby="{{::vm.widgetInstanceId}}-3 {{::vm.widgetInstanceId}}-4 {{::vm.widgetInstanceId}}-5" id={{::vm.widgetInstanceId}}-4 style="width: 3em"></div><label for={{::vm.widgetInstanceId}}-4 class=as-inline id={{::vm.widgetInstanceId}}-5 pf-translate={{vm.labelDays}}></label></li><li class="pf-form_option pf-form_option-radio"><input type=radio name={{::vm.widgetInstanceId}}-1 ng-model=settingData.period value={{vm.settingValues.END_OF_MONTH}}><label for={{::vm.widgetInstanceId}}-6 pf-translate={{vm.labelEndOfMonth}}></label></li><li class="pf-form_option pf-form_option-radio"><input type=radio name={{::vm.widgetInstanceId}}-1 id={{::vm.widgetInstanceId}}-7 ng-model=vm.settingData.period value={{vm.settingValues.DAY_OF_MONTH}} aria-labelledby="{{::vm.widgetInstanceId}}-8 {{::vm.widgetInstanceId}}-9 {{::vm.widgetInstanceId}}-10"><label for={{::vm.widgetInstanceId}}-7 class=as-inline id={{::vm.widgetInstanceId}}-8 pf-translate={{vm.labelUpTo}}></label><div class="pf-form_input pf-form_input-select as-inline"><select name={{::vm.widgetInstanceId}}-user_dayOfMonth id={{::vm.widgetInstanceId}}-9 class="small inline" ng-model=vm.settingData.dayOfMonth disable-and-ignore="vm.settingData.period !== vm.settingValues.DAY_OF_MONTH" aria-labelledby="{{::vm.widgetInstanceId}}-8 {{::vm.widgetInstanceId}}-9 {{::vm.widgetInstanceId}}-10" ng-options="day for day in vm.dropdownDays"></select></div><label for={{::vm.widgetInstanceId}}-9 class=as-inline id={{::vm.widgetInstanceId}}-10 pf-translate={{vm.labelMonth}}></label></li></ul></fieldset>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/percentInput/percentInput.html', '<div class="pf-pop_input js-pop_input" ng-class="{\'is-active\': isActive, \'has-error\': control.$invalid}"><button aria-hidden=true class=pf-pop_input--button tabindex=-1 type=button ng-click=focus() data-ng-bind=outputValue></button><label class=pf-pop_input--label for={{::theId}} pf-translate="{{\'PleaseEnterPercent\'|pfExpandKey:this}}"></label><input class="pf-pop_input--holder pf-pop_input--input" aria-multiline=false id={{::theId}} name={{::theName}} size=12 maxlength=19 pattern=\\d{1,3}(\\.\\d*){0,1} ng-model-options="{ allowInvalid: true }" ng-model=config.model ng-focus=focus() ng-click=focus() ng-blur=inputBlurred() ng-attr="{\'aria-describedby={{::describedBy}}\' : describedBy}"></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/selectableTable/selectableTable.html', '<table class=widget_state_table ng-class=::tableData.tableClass summary="{{tableData.summary|pfTranslate:this || undefined}}"><colgroup ng-if=::tableData.colgroup><col ng-repeat="col in tableData.colgroup track by $index" ng-style="::({\'width\': col})"></colgroup><thead class=widget_state_table_header ng-if=::tableData.headers ng-class=::(tableData.headerClass)><tr><th ng-repeat="header in tableData.headers track by $index" ng-class=::(header.columnClass) scope=col><span ng-if=::(!header.text) class=t-strong>&#160;</span> <span ng-if=::(header.text) class=t-strong pf-translate={{header.text|pfExpandKey:this}}></span></th></tr></thead><tbody ng-class=::(tableData.bodyClass)><tr class="widget_state_table_list--row {{row.trClass}}" ng-repeat="row in tableData.rows track by $index" ng-class="{\'has-pointer widget_state_table_list--action_link\' : row.hasActionLink}" ng-disabled=row.trDisabled on-finish-render-filters=""><td ng-repeat="column in row.columns track by $index" ng-class=column.tdClass><span ng-if=!column.type>&#160;</span><div ng-switch=column.type><div ng-switch-when=checkbox class=checkbox><input name={{::widgetInstanceId}}-checkboxgroup id={{::widgetInstanceId}}-{{row.id}} class=checkbox--field value={{row.id}} type=checkbox ng-model=model[row.id] ng-change=itemSelected()><label class=is-visuallyhidden for={{::widgetInstanceId}}-{{row.id}} data-ng-bind=column.text></label></div><div ng-switch-when=radiobutton class=radio><input name={{::widgetInstanceId}}-radiogroup id={{::widgetInstanceId}}-{{row.id}} class=radio--field value={{row.id}} type=radio ng-model=model[row.id] ng-change=itemSelected()><label class=is-visuallyhidden for={{::widgetInstanceId}}-{{row.id}} data-ng-bind=column.text></label></div><a ng-switch-when=clickableIcon role=button href="" title="{{column.translated ? column.text : (column.text|pfTranslate:this)}}" ng-enter="rowClicked({index: this.tableData.rows.indexOf(this.row)})" ng-space="rowClicked({index: this.tableData.rows.indexOf(this.row)})"><span ng-class="(\'icon \' + column.icon)" pf-translate={{column.text|pfExpandKey:this}}></span> </a><span ng-switch-when=icon ng-class="(\'icon \' + column.icon)" title="{{column.translated ? column.text : (column.text|pfTranslate:this)}}"></span><label ng-switch-when=label for={{::widgetInstanceId}}-{{row.id}} title={{column.title}} data-ng-bind=column.text class=truncate></label><span ng-switch-when=text ng-class=column.spanClass ng-attr-title={{column.title}} data-ng-bind=column.text></span> <span ng-switch-when=arrow class="icon icon-go_to_16px"></span> <span ng-switch-when=amount ng-class=column.spanClass ng-attr-title={{column.title}} data-ng-bind="column.amount|amountWithCurrency:column.currency:\'plusAndMinus\'"></span> <span ng-switch-when=amountNoSuffix ng-class=column.spanClass ng-attr-title={{column.title}} data-ng-bind="column.amount|amountWithCurrency:column.currency:\'none\'"></span></div></td></tr></tbody><tfoot ng-if=::tableData.footers class=widget_state_table_footer><tr><td ng-repeat="footer in tableData.footers track by $index" ng-class=::(footer.tdClass)><span ng-if=::(!footer.text)>&#160;</span> <span ng-if=::(footer.text) ng-class=footer.spanClass data-ng-bind=footer.text></span></td></tr></tfoot></table>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/selectionList/selectionList.html', '<ul class=widget_link_list ng-class="{\'no-border-top\': selectionList.noBorderTop}"><li class=widget_link_list--item ng-repeat="item in selectionList.items track by $index" ng-class="{\'widget_link_list--item-multiple_line\': item.description,\r\n               \'widget_link_list--item-key_val\': selectionList.isKeyValue(item) || item.name1,\r\n               \'is-flex\': item.name1}"><a class=widget_link_list--item--link href="" ng-click="selectionList.onItemSelected({item: item})" ng-if="(item.info || item.description) && !item.disableLink"><div class=l-leftright><span class=l-right ng-if=item.info data-ng-bind=item.info></span> <span class=truncate ng-if=item.name ng-class="{\'t-strong\': item.description}" data-ng-bind=item.name></span> <span class=l-left ng-if=item.name1><span class=truncate data-ng-bind=item.name1></span> <span class=truncate ng-if=item.name2 data-ng-bind=item.name2></span></span></div><div class=l-leftright ng-if=item.description><span class=l-left data-ng-bind=item.description></span></div></a><span class="widget_link_list--item--link no-before" ng-if="(item.info || item.description) && item.disableLink"><div class=l-leftright><span class=l-right ng-if=item.info data-ng-bind=item.info></span> <span class=truncate ng-if=item.name ng-class="{\'t-strong\': item.description}" data-ng-bind=item.name></span> <span class=l-left ng-if=item.name1><span class=truncate data-ng-bind=item.name1></span> <span class=truncate ng-if=item.name2 data-ng-bind=item.name2></span></span></div><div class=l-leftright ng-if=item.description><span class=l-left data-ng-bind=item.description></span></div></span><a class=widget_link_list--item--link href="" ng-click="selectionList.onItemSelected({item: item})" ng-space="selectionList.onItemSelected({item: item})" ng-if="!(item.info || item.description) && !item.disableLink" data-ng-bind=item.name></a> <span class="widget_link_list--item--link no-before" ng-space="selectionList.onItemSelected({item: item})" ng-if="!(item.info || item.description) && item.disableLink" data-ng-bind=item.name></span></li></ul><div ng-if=selectionList.showMoreLabel class=widget_state_table_additional_info pf-translate="{{\'AndMore\' | pfExpandKey:this}}"></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/singleSelect/singleSelect.html', '<div><div ng-if=dropdownEntries.length class="ef_select ef_select-defaultlabel js-ef_select" data-value={{selectedValue.text}} data-ef_select=\'{"valueRenderingInactive": {{valueRenderingInactive}}}\'><input class=js-ef_select--value type=hidden value={{selectedValue.key}}><div class="ef_select--trigger js-ef_select--trigger" aria-describedby={{::theId}} aria-haspopup=true role=button tabindex=0><div class=ef_select--label pf-translate={{selectedValue.text}}></div><div class="ef_select--selected_val js-ef_select--selected_val"><div class=ef_select--single_line title="{{selectedValue.text | pfTranslate}}" pf-translate="{{ selectedValue.text }}"></div></div></div><div aria-hidden=true class="ef_select--menu js-ef_select--menu"><div class=ef_select--menu--header><strong id={{::theId}} pf-translate={{describedby}}></strong> <button class="ef_select--menu--close_btn js-ef_select--menu--close_btn" pf-translate={{cancel}}></button></div><ul class=ef_select--menu--list role=listbox><li ng-repeat="entry in dropdownEntries track by $index" ng-click="methodSelectedEntry({entry: entry})" aria-selected=false role=option tabindex=-1 data-value={{::entry.key}} class="ef_select--menu--list--item js-ef_select--menu--list--item"><div class=ef_select--single_line title={{::entry.text|pfTranslate}} pf-translate={{entry.text}}></div></li></ul><div class=ef_select--menu--footer></div></div></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/teaserSlider/teaserSlider.html', '<div class="widget_slider js-ef_slider" data-autoplay="{{items.length > 1}}" data-delay=6000><div class=widget_slider--container><teaser-slider-controls ng-if="items.length > 1 && sliderControls"></teaser-slider-controls><ul class=widget_slider--container--slide_list><li ng-repeat="(pageIndex, item) in items track by pageIndex" class=widget_slider--container--slide_list--item ng-class="[{\'no-image\': (item.type === \'message\')}, {\'is-link\' : (item.type != \'pasoffer\' && item.type != \'dgoffer\')}, item.bgColor]"><p ng-if=::(item.isAdvertisement)><span class="pf-tag pf-tag-cornered t-notransform pf-tag-lightgray" pf-translate="{{\'Advertisement\'|pfExpandKey:this}}"></span></p><img ng-if="::(item.type === \'teaser\' || item.type == \'dgoffer\')" alt="" class="widget_slider--container--slide_list--item--img js-widget_slider_img" ng-src={{item.image}}><div ng-if="::(item.type === \'teaser\')" class="widget_slider--container--slide_list--item--content widget_slider--container--slide_list--item--content-bottom_right"><strong class=widget_slider--container--slide_list--item--content--title><span ng-bind-html=item.title></span></strong><p class=widget_slider--container--slide_list--item--content--body><span ng-bind-html=item.text></span> <a class=slide_link data-mobilehref={{item.link}} tabindex=0 ng-mousedown=handleClick(item) pf-translate="{{\'Next\'|pfExpandKey:this}}" ng-space=simulateClick($event) ng-enter=simulateClick($event)></a></p></div><div ng-if="::(item.type === \'message\')" class="widget_slider--container--slide_list--item--content widget_slider--container--slide_list--item--content-bottom_right"><strong class=widget_slider--container--slide_list--item--content--title pf-translate="{{\'NoteForYou\'|pfExpandKey:this}}"></strong><p class=widget_slider--container--slide_list--item--content--body><a class=slide_link target={{item.target}} data-mobilehref={{item.url}} tabindex=0 ng-mousedown=handleClick(item) ng-space=simulateClick($event) ng-enter=simulateClick($event)><span ng-bind-html=item.text></span></a></p></div><ul ng-if="::(item.type === \'pasoffer\')" class=widget_slider--sublist><li ng-repeat="(offerIndex, offer) in item.offers track by offerIndex" class=widget_slider--sublist--item><a class=widget_slider--sublist--item--link href="" ng-click="showPasOffer($event, pageIndex, offerIndex, offer.customerOfferOid)"><div class=l-leftright-table><div class="l-left widget_slider--sublist--item--link--img_wrapper"><img alt="" class=js-widget_slider_img ng-src={{logoBaseUrl}}{{offer.logoId}}></div><div class=l-left><div class=widget_slider--sublist--item--link--title data-ng-bind=offer.title></div><div class=widget_slider--sublist--item--link--offer pf-translate="{{\'DiscountType_\'+offer.discountType|pfTranslate:this:offer}}"></div></div></div></a></li></ul><div ng-if="::(item.type === \'pasoffer\')" class="widget_slider--container--slide_list--item--footer l-leftright"><div class=l-right><a aria-haspopup=true class=btn ng-click="showPasOffer($event, pageIndex, offerIndex)" pf-translate="{{\'ShowOverview\'|pfExpandKey:this}}"></a></div></div></li></ul></div></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/teaserSliderControls/teaserSliderControls.html', '<div class=widget_slider_controls><div class=slider_loader><div class=slider_loader--bg><div class="spiner_holder animate_part_1"><div class="spiner_holder-b animate_part_1--b"><div class=loader_spiner></div></div></div><div class="spiner_holder animate_part_2"><div class="spiner_holder-b animate_part_2--b"><div class=loader_spiner></div></div></div><div class="spiner_holder animate_part_3"><div class="spiner_holder-b animate_part_3--b"><div class=loader_spiner></div></div></div><div class="spiner_holder animate_part_4"><div class="spiner_holder-b animate_part_4--b"><div class=loader_spiner></div></div></div></div></div><button class="widget_slider_controls--play icon is-hidden" type=button pf-translate="{{\'Play\'|pfExpandKey:this}}"></button> <button class="widget_slider_controls--pause icon is-hidden" type=button pf-translate="{{\'Pause\'|pfExpandKey:this}}"></button></div>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/textInputWithButton/textInputWithButton.html', '<ng-form><div class="js-text_input_row_narrow text_input_row_narrow text_input_row_narrow_with_btn" ng-class="{\'text_input_row_narrow-error\' : hasInputError(), \'text_input-has_value\': hasValue()}"><label class=text_input_row_narrow--label for={{::widgetInstanceId}}-account pf-translate={{inputLabel}}></label><div class=text_input><input class=text_input--field id={{::widgetInstanceId}}-account name={{inputName}} maxlength={{maxLength}} ng-model=ibanModel ng-required=true account-input=isForeignCurrency ng-enter=enterPressed() iban></div><div class=text_input_row_narrow--btn ng-if=!hideButton><button class="btn_icon btn_icon-zoom_small" ng-click=buttonClick() pf-translate={{buttonText}}></button></div></div></ng-form>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/textInputWithCurrency/textInputWithCurrency.html', '<ng-form novalidate><div class="js-text_input_row_narrow text_input_row_narrow text_input_row_narrow_with_select" ng-class="{\'text_input_row_narrow-error\': hasInputError(), \'text_input-has_value\': hasValue()}" data-disablevaluerendering=true><label class=text_input_row_narrow--label for={{::widgetInstanceId}}-amount pf-translate={{amountLabel}} translate-values=amountLabelTranslateValues></label><div class=text_input><input class=text_input--field id={{::widgetInstanceId}}-amount name={{amountInputName}} ng-model=amountModel.value ng-required=true currency-input="" maxlength={{maxLength}} ng-enter=enterPressed() ng-model-options="{ debounce: { default:100} }" amount-range="" min-value={{::minValue}} max-value={{::maxValue}}></div><div class="text_input_row_narrow--select js-text_input_row_narrow_select"><div aria-hidden=true class=text_input_row_narrow--select--selected_val><span ng-class="{\'text_input_row_narrow--select--selected_val--text\': currencies && currencies.length > 0}" ng-bind=currencyModel.value|currency></span></div><label class="text_input_row_narrow--select--label is-visuallyhidden" for={{::widgetInstanceId}}-currency pf-translate={{currencyLabel}}></label><select class=text_input_row_narrow--select--field id={{::widgetInstanceId}}-currency name={{currencyInputName}} tabindex=-1 ng-model=currencyModel.value ng-options="currency.value as currency.fullLabel for currency in currencies" ng-if="currencies && currencies.length > 0"></select></div></div></ng-form>');
                $templateCache.put('/cc/fp/20191126112112/static/fipo/lib/shared/directives/widget/toggle/toggle.html', '<div ng-disabled=isDisabled class="pf-form_input pf-form_input-togglecheckbox"><input type=checkbox value=1 id={{::theId}} ng-model=model ng-change=inputChanged() ng-attr="{\'name={{::name}}\' : name, \'aria-describedby={{::describedBy}}\' : describedBy}" ng-required=isRequired ng-disabled=isDisabled> <span class=pf-form_input-togglecheckbox--toggle></span></div>')
            }
        ])
    })
}();
