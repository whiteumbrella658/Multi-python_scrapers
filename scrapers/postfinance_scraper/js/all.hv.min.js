/* Copyright 2012 - 2019 by PostFinance Ltd - All rights reserved */
define('uxui/app/Config', [
], function () {
    function a(a) {
        for (var b in a) c[b] = a[b]
    }
    var b = {
            language: 'de',
            body: document.getElementById('body'),
            event: {
                widget: {
                    sortchange: 'pf:widget:sortchange'
                },
                detail: {
                    open: 'pf:detail:open',
                    close: 'pf:detail:close',
                    loadstart: 'pf:detail:loadstart',
                    loadend: 'pf:detail:loadend'
                },
                overlay: {
                    open: 'pf:overlay:open',
                    close: 'pf:overlay:close'
                }
            }
        },
        c = {
        };
    a(b);
    a(window.app_config);
    return {
        get: function (a) {
            var b = c;
            try {
                for (var d = 0; d < arguments.length; d++) b = b[arguments[d]]
            } catch (a) {
                return
            }
            return b
        },
        set: function (a, b) {
            c[a] = b
        }
    }
});
define('uxui/lib/util/contextTrigger', [
    'jquery'
], function () {
    function a(b, c) {
        if (!b.contextTriggerProcessed) c.push(b);
        else for (var d = b.firstChild; d; ) {
            if (1 === d.nodeType) a(d, c);
            d = d.nextSibling
        }
    }
    function b() {
        var b,
            c = document.body.querySelectorAll('*'),
            e = c.length,
            f = false;
        for (b = 0; b < e; b++) if (!c[b].contextTriggerProcessed) {
            f = true;
            break
        }
        if (f) {
            var g = [
            ];
            a(document.body, g);
            for (b = 0; b < g.length; b++) d.validate(g[b])
        }
    }
    function c(a) {
        var b,
            c = a.length;
        for (b = 0; b < c; b++) a[b].contextTriggerProcessed = true
    }
    var d;
    d = {
        events: {
        }
    };
    d.add = function (a, b) {
        if (!d.events[a]) d.events[a] = [
        ];
        d.events[a].push(b)
    };
    d.remove = function (a, b) {
        if (!d.events[a]) return false;
        if (!b) d.events[a] = null;
        else for (var c in d.events[a]) if (d.events[a][c] === b) d.events[a][c] = null
    };
    d.run = function (a) {
    };
    d.validate = function (a) {
        a = a || 'body';
        var b = $(a);
        if (!b.length) return false;
        new Date;
        for (var e in d.events) {
            var f = b.find(e);
            if (b.is(e)) f = f.add(a);
            if (f.length) for (var g in d.events[e]) if (d.events[e][g]) f.each(d.events[e][g])
        }
        c(b.add(b.find('*')))
    };
    if (window.MutationObserver) $(function () {
        function a() {
            clearTimeout(g);
            g = setTimeout(c, 50)
        }
        function c() {
            clearTimeout(g);
            b()
        }
        var d = window.document.body,
            e = new MutationObserver(function (b) {
                b.forEach(function (b) {
                    if (b.addedNodes.length) a()
                })
            }),
            f = {
                subtree: true,
                childList: true
            };
        e.observe(d, f);
        var g
    });
    else setInterval(b, 1000);
    return d
});
define('uxui/app/modules/ModuleManager', [
    'uxui/lib/util/contextTrigger'
], function (a) {
    function b(a, b) {
        if (!g) {
            c();
            g = true;
            setTimeout(function () {
                g = false
            }, 0)
        }
        var h;
        d();
        h = (new a).init(b);
        var i;
        if (h) {
            i = $(b);
            i.data('moduleInstance', h);
            h.___el = b;
            f.push(h);
            $(b).attr('data-has-module', 'yes')
        }
        e(h ? h.ns : 'unknown module')
    }
    function c() {
        for (var a, b, c = f.length, d = c - 1; d >= 0; d--) {
            b = f[d];
            a = b.___el;
            if (!jQuery.contains(document.documentElement, a)) {
                try {
                    b.___el = null;
                    b.destroy()
                } catch (a) {
                }
                f.splice(d, 1)
            }
        }
    }
    function d() {
        h = new Date
    }
    function e(a) {
        i += new Date - h
    }
    var f = [
        ],
        g = (new Date, false);
    setInterval(c, 2500);
    var h,
        i = 0;
    setTimeout(function () {
    }, 5000);
    return {
        connect: function (a, c) {
            b(a, c)
        },
        add: function (c, d) {
            if ('string' == typeof Module) a.add('.js-stage', function () {
                var a = this;
                require([c], function (c) {
                    b(c, a)
                })
            });
            else a.add('.js-stage', function () {
                var a = this;
                b(c, a)
            })
        },
        checkGarbage: c
    }
});
define('uxui/app/util/DOMUtil', [
    'jquery'
], function (a) {
    function b(b, c) {
        if (!b) b = a(':focus');
        var d = a(b),
            f = d.parents('form').first();
        if (!f.length) f = a('body');
        var g = f.find('input:visible, select:visible, textarea:visible, button:visible');
        g.filter(function (b) {
            if (a(this).attr('tabindex') >= 0) return true
        });
        var h = g.index(b);
        if (!(h < 0)) {
            h += c;
            if (h >= 0 && h < g.length) {
                d.blur();
                g.eq(h).focus();
                if (!e) setTimeout(function () {
                    g.eq(h).focus()
                }, 10)
            } else d.blur()
        }
    }
    function c(a) {
        if (a) {
            var b;
            if (f && a.setSelectionRange) {
                b = a.value.length;
                a.setSelectionRange(0, b)
            } else {
                a.focus();
                setTimeout(function () {
                    a.focus()
                }, 10)
            }
        }
    }
    function d(b) {
        var c = a(b.currentTarget);
        c.removeAttr('tabindex');
        c.off('blur', d)
    }
    var e = 'ontouchstart' in window,
        f = /iP(ad|hone|od)/.test(navigator.userAgent),
        g = {
            focusNextInput: function (a) {
                b(a, 1)
            },
            focusPrevInput: function (a) {
                b(a, - 1)
            },
            focus: function (b) {
                var e = a(b),
                    f = e.attr('tabindex');
                if (!f) {
                    e.attr('tabindex', '-1');
                    e.on('blur', d)
                }
                c(e[0])
            },
            jsondata: function (b, c) {
                var d = a(b).data(c);
                if ('string' == typeof d) {
                    d = d.replace(/\'(.+?)':\s*\'(.+?)\'/g, '"$1":"$2"');
                    d = JSON.parse(d)
                }
                return d
            }
        };
    return g
});
define('uxui/app/modules/nav/skipNav', [
    'jquery',
    'uxui/app/util/DOMUtil'
], function (a, b) {
    var c,
        d = '.skip-navigation';
    c = function () {
        this.activeModule = null
    };
    c.prototype.init = function (c) {
        this.element = c;
        this.$element = a(c);
        this.on('click', 'a[href^=\'#\']', function () {
            if ('#/' !== a(this).attr('href').substring(0, 2)) b.focus('#' + a(this).attr('href').slice(1))
        });
        return this
    };
    c.prototype.registerModule = function (a) {
        if (this.activeModule) this.activeModule.destroy();
        this.activeModule = new a;
        this.activeModule.init(this.element)
    };
    c.prototype.destroy = function () {
        if (this.$element) {
            this.$element.off(d);
            this.$element = null
        }
    };
    c.prototype.on = function (a, b, c) {
        this.$element.on(a + d, b, c)
    };
    return c
});
define('uxui/app/modules/BaseModule', [
    'jquery'
], function (a) {
    var b,
        c = '.module-module',
        d = 0;
    b = function () {
        this.$el = null;
        this.ns = c + d++
    };
    b.prototype.init = function (b) {
        this.$el = a(b);
        return this
    };
    b.prototype.destroy = b.prototype._destroy = function () {
        this.off();
        if (this.$el) this.$el = null
    };
    b.prototype.on = function () {
        for (var b, c, d, e, f = [
        ], g = 0; g < arguments.length; g++) f[g] = arguments[g];
        switch (arguments.length) {
            case 2:
                e = this.$el;
                b = f.shift();
                d = f.shift();
                break;
            case 3:
                b = f.shift();
                if ('string' == typeof b) {
                    e = this.$el;
                    c = f.shift();
                    d = f.shift()
                } else {
                    e = a(b);
                    b = f.shift();
                    d = f.shift()
                }
                break;
            case 4:
                e = a(f.shift());
                b = f.shift();
                c = f.shift();
                d = f.shift()
        }
        if (c) e.on(b + this.ns, c, d);
        else e.on(b + this.ns, d)
    };
    b.prototype.off = function () {
        if (this.$el) this.$el.off(this.ns);
        a(document).off(this.ns);
        a(window).off(this.ns);
        if (this.nstemp) {
            if (this.$el) this.$el.off(this.nstemp);
            a(document).off(this.nstemp);
            a(window).off(this.nstemp)
        }
    };
    b.prototype.bind = function (a) {
        var b = this;
        return function () {
            return a.apply(b, arguments)
        }
    };
    return b
}); define('uxui/app/modules/nav/SiteHeaderWithSubmenu', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c = '.ef_trading_nav',
        d = 0,
        e = function () {
            this.$el = null;
            this.ns = c + d++
        };
    e.prototype = new b;
    e.prototype.init = function (b) {
        this.$el = a(b);
        this.$mainNavLinks = this.$el.find('.js-header_main_nav--item--link');
        this.$submenus = this.$el.find('.js-header_main_nav_sublevel--menu');
        this.mainNavLinkActiveClass = 'is-active';
        this.bindUIActions();
        this.handleSubmenu(this.$el.find('.' + this.mainNavLinkActiveClass));
        return this
    };
    e.prototype.bindUIActions = function () {
        this.$mainNavLinks.on('click' + this.ns, this.bind(this.clickHandler));
        this.$mainNavLinks.on('keydown' + this.ns, this.bind(this.keyboardHandler))
    };
    e.prototype.clickHandler = function (b) {
        b.preventDefault();
        this.$mainNavLinks.removeClass(this.mainNavLinkActiveClass);
        a(b.currentTarget).addClass(this.mainNavLinkActiveClass);
        this.handleSubmenu(a(b.currentTarget))
    };
    e.prototype.handleSubmenu = function (a) {
        var b = a.siblings('.js-header_main_nav_sublevel');
        if (b.length > 0) {
            this.$submenus.attr('aria-hidden', 'true');
            b.children('.js-header_main_nav_sublevel--menu').attr('aria-hidden', 'false');
            this.$el.addClass('is-open')
        } else this.$el.removeClass('is-open')
    };
    return e
}); define('uxui/app/modules/nav/LanguageSelect', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.LanguageSelect',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.on('change', this.bind(this.onChange));
        return this
    };
    c.prototype.onChange = function () {
        var a = this.$el.val();
        if ('undefined' !== typeof a && null !== a && '' !== a) this.redirect(a)
    };
    c.prototype.redirect = function (a) {
        window.location = a
    };
    return c
}); define('uxui/app/modules/content/EfSlider', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.ef_slider',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        var c = this;
        this.$el = a(b);
        this.initVariables();
        this.bindUIActions();
        this.$getSlides();
        this.slideToIndex(0);
        this.checkImagesLoaded();
        a(window).on('resize' + this.ns, function () {
            c.sizeAdjusted = false;
            c.resizeHandler()
        });
        a(window).on('pf:widget:validate' + this.ns, function () {
            a(window).off('resize' + c.ns);
            c.sizeAdjusted = false;
            c.resizeHandler()
        });
        this.$el.parents('.js-widget').on('pf:widget:open', function (a) {
            c.resizeHandler()
        });
        return this
    };
    c.prototype.checkImagesLoaded = function () {
        function b() {
            c.counter--;
            if (0 == c.counter) c.checkAutoplay()
        }
        var c = this;
        if (this.$slideImages.length) this.$slideImages.each(function () {
            var d = a(this);
            if (!d.attr('src') || d[0].complete) b();
            else {
                d.attr('src', d.attr('src'));
                d.on('load' + c.ns, b)
            }
        });
        else this.checkAutoplay()
    };
    c.prototype.checkAutoplay = function () {
        if (true === this.$el.data('autoplay')) {
            this.initAnimationVariables();
            this.bindAnimationUIActions();
            this.startAutoplay()
        } else this.resizeHandler()
    };
    c.prototype.initVariables = function () {
        this.$sliderContainer = this.$el.find('.widget_slider--container');
        this.currentIndex = - 1;
        this.activeClass = 'widget_slider-play';
        this.activeSlideClass = 'is-active';
        this.timeout = null;
        this.currentProgress = 0;
        this.animationSteps = 10;
        this.$slideImages = this.$el.find('.js-widget_slider_img');
        this.numberOfImages = this.$slideImages.length;
        this.counter = this.numberOfImages
    };
    c.prototype.$getSlides = function () {
        if (this.$el) return this.$el.find('.widget_slider--container--slide_list--item');
        else return []
    };
    c.prototype.resizeHandler = function () {
        this.adjustContainerSize()
    };
    c.prototype.adjustContainerSize = function () {
        if (!this.sizeAdjusted) {
            var a = this.$slideImages,
                b = a.first(),
                c = b.height();
            if (c) {
                var d = b.closest('.widget_slider--container--slide_list--item--img_wrapper');
                if (!d.length) d = this.$sliderContainer;
                var e = '100%',
                    f = '0px';
                this.$sliderContainer.css({
                    height: e
                });
                if (c <= d.height()) e = c + 'px';
                else f = - 1 * (c - d.height()) / 2 + 'px';
                a.css({
                    'margin-top': f
                });
                this.sizeAdjusted = true
            }
        }
    };
    c.prototype.startAnimation = function () {
        var a = this.$getSlides(),
            b = a.index(a.filter('.' + this.activeSlideClass)),
            c = (b + 1) % a.length;
        this.slideToIndex(c)
    };
    c.prototype.rotateLoader = function () {
        var a = this.$getSlides();
        this.currentProgress += 1;
        this.adjustContainerSize();
        if (this.currentProgress == this.animationSteps + 1) {
            this.$el.find('.animate_part_1--b, .animate_part_2--b, .animate_part_3--b,.animate_part_4--b').css('transform', 'rotate(-90deg)');
            this.currentProgress = 0;
            this.startAnimation()
        }
        if (a.length > 1) {
            this.$el.find('.widget_slider_controls--play').removeClass('is-hidden');
            this.$el.find('.widget_slider_controls--pause').removeClass('is-hidden');
            this.renderProgress(this.currentProgress * (100 / this.animationSteps))
        }
        this.stopAnimationTimeout();
        this.startAnimationTimeout()
    };
    c.prototype.initAnimationVariables = function (a) {
        this.autoplay = this.$el.data('autoplay') ? Boolean(this.$el.data('autoplay'))  : false;
        this.$playBtn = this.$el.find('.widget_slider_controls--play');
        this.$pauseBtn = this.$el.find('.widget_slider_controls--pause');
        this.delay = this.$el.data('delay') ? parseInt(this.$el.data('delay'))  : 6000;
        this.autoplay = this.$el.data('autoplay') ? Boolean(this.$el.data('autoplay'))  : false;
        this.$animationParts = this.$el.find('.spinder_holder')
    };
    c.prototype.bindUIActions = function () {
    };
    c.prototype.bindAnimationUIActions = function () {
        this.$playBtn.on('click' + this.ns, this.bind(this.handlePlay));
        this.$pauseBtn.on('click' + this.ns, this.bind(this.handlePause))
    };
    c.prototype.handlePlay = function (a) {
        a.preventDefault();
        this.startAutoplay(true)
    };
    c.prototype.handlePause = function (a) {
        a.preventDefault();
        this.stopAutoplay()
    };
    c.prototype.clickHandler = function (b) {
        b.preventDefault();
        b.stopPropagation();
        if (a(b.target).closest('.widget_slider--container--slide_list--item').find('.slide_link').length > 0) {
            var c = a(b.target).closest('.widget_slider--container--slide_list--item').find('.slide_link');
            if ('_blank' == c.attr('target')) {
                var d = window.open(c.attr('href'), '_blank');
                if (d) d.focus()
            } else window.location = c.attr('href')
        }
    };
    c.prototype.startAutoplay = function (a) {
        this.$el.data('autoplay', true);
        this.$el.addClass(this.activeClass);
        if (a) this.$pauseBtn.focus();
        this.startAnimationTimeout()
    };
    c.prototype.renderProgress = function (a) {
        a = Math.floor(a);
        var b;
        if (a < 25) {
            b = - 90 + a / 100 * 360;
            this.$el.find('.animate_part_1--b').css('transform', 'rotate(' + b + 'deg)')
        } else if (a >= 25 && a < 50) {
            b = - 90 + (a - 25) / 100 * 360;
            this.$el.find('.animate_part_1--b').css('transform', 'rotate(0deg)');
            this.$el.find('.animate_part_2--b').css('transform', 'rotate(' + b + 'deg)')
        } else if (a >= 50 && a < 75) {
            b = - 90 + (a - 50) / 100 * 360;
            this.$el.find('.animate_part_2--b, .animate_part_1--b').css('transform', 'rotate(0deg)');
            this.$el.find('.animate_part_3--b').css('transform', 'rotate(' + b + 'deg)')
        } else if (a >= 75 && a <= 100) {
            b = - 90 + (a - 75) / 100 * 360;
            this.$el.find('.animate_part_1--b, .animate_part_2--b, .animate_part_3--b').css('transform', 'rotate(0deg)');
            this.$el.find('.animate_part_4--b').css('transform', 'rotate(' + b + 'deg)')
        }
    };
    c.prototype.stopAutoplay = function () {
        this.$el.data('autoplay', false);
        this.$el.removeClass(this.activeClass);
        this.$playBtn.focus();
        this.stopAnimationTimeout()
    };
    c.prototype.startAnimationTimeout = function () {
        var a = this;
        if (!this.timeout && this.autoplay) {
            this.timeout = setTimeout(function () {
                a.rotateLoader()
            }, this.delay / this.animationSteps);
            return true
        }
        return false
    };
    c.prototype.stopAnimationTimeout = function () {
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null;
            return true
        }
        return false
    };
    c.prototype.slideToIndex = function (a) {
        var b = this,
            c = this.$getSlides();
        if (a !== this.currentIndex || !c.hasClass(this.activeSlideClass)) {
            this.currentIndex = a;
            if (!(c.length <= 1)) {
                var d = c.eq(a),
                    e = c.not(d);
                d.addClass(this.activeSlideClass).animate({
                    opacity: '1'
                }, 'slow', function () {
                    e.removeClass(b.activeSlideClass).removeAttr('style').css({
                        opacity: '0'
                    })
                });
                e.animate({
                    opacity: '0'
                }, 'slow')
            }
        }
    };
    return c
}); define('uxui/app/modules/content/EfSlider2', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c = {
            selector: '.js-ef_slider2',
            isPlayingClassName: 'is-playing',
            slides: {
                selector: '.js-ef_slider2--slidecontainer',
                slide: {
                    selector: '.js-ef_slider2--slide',
                    activeClassName: 'is-active',
                    inactiveClassName: 'is-visuallyhidden',
                    img: {
                        selector: '.js-ef_slider2--slide--img'
                    }
                }
            },
            playBtn: {
                selector: '.js-ef_slider2--play'
            },
            progressbar: {
                selector: '.js-ef_slider2--slide--progressbar'
            }
        },
        d = '.ef_slider2_',
        e = 0,
        f = function () {
            this.$el = null;
            this.ns = d + e++
        };
    f.prototype = new b;
    var g = f.prototype,
        h = g.init;
    g.destroy;
    g.init = function (b) {
        h.call(this, b);
        this.config = a.extend(true, {
        }, c);
        var d = this;
        this.initVariables();
        setTimeout(function () {
            d.checkImagesLoaded(d.$el.find(d.config.slides.slide.img.selector), d.bind(d.checkAutoplay))
        }, 100);
        return this
    };
    g.checkAutoplay = function () {
        this.initAnimationVariables();
        this.bindAnimationUIActions();
        this.showNextSlide();
        if (true === this.$el.data('autoplay')) this.startAutoplay()
    };
    g.initVariables = function () {
        this.$sliderContainer = this.$el.find(this.config.slides.selector);
        this.currentIndex = - 1;
        this.timeout = null;
        this.currentProgress = 0;
        this.animationSteps = 10
    };
    g.checkImagesLoaded = function (b, c) {
        function d() {
            f--;
            if (f < 1) c()
        }
        var e = this,
            f = b.length;
        if (f > 0) b.each(function () {
            var b = a(this);
            if (b.is('img')) if (!b.attr('src') || b[0].complete) d();
            else {
                b.attr('src', b.attr('src'));
                b.on('load' + e.ns, d)
            } else {
                var c = b.css('background-image'),
                    f = c.match(/\((.*?)\)/) [1].replace(/('|")/g, ''),
                    g = new Image;
                if (!f || '' === f) d();
                else {
                    g.onload = function () {
                        d()
                    };
                    g.src = f
                }
            }
        });
        else c()
    };
    g.$getSlides = function () {
        if (this.$sliderContainer) return this.$sliderContainer.find(this.config.slides.slide.selector);
        else return []
    };
    g.rotateLoader = function () {
        this.showNextSlide();
        this.loaderProgressbarAnimation(this.delay, 0);
        this._stopAnimationTimeout();
        this._startAnimationTimeout()
    };
    g.initAnimationVariables = function (a) {
        this.$playBtn = this.$el.find(this.config.playBtn.selector).removeClass('is-hidden');
        this.delay = this.$el.data('delay') ? parseInt(this.$el.data('delay'))  : 6000;
        this.autoplay = this.$el.data('autoplay') ? Boolean(this.$el.data('autoplay'))  : false
    };
    g.bindAnimationUIActions = function () {
        this.$playBtn.on('click' + this.ns, this.bind(this.handlePlay))
    };
    g.handlePlay = function (a) {
        a.preventDefault();
        a.stopPropagation();
        if (this.isPlaying) this.stopAutoplay();
        else {
            this.showNextSlide();
            this.startAutoplay(true)
        }
    };
    g.startAutoplay = function (a) {
        this.$el.data('autoplay', true);
        this.$el.addClass(this.config.isPlayingClassName);
        this.loaderProgressbarAnimation(this.delay, 0);
        if (a) this.$playBtn.focus();
        this._startAnimationTimeout()
    };
    g.stopAutoplay = function () {
        this.$el.data('autoplay', false);
        this.$el.removeClass(this.config.isPlayingClassName);
        this.$playBtn.focus();
        this.stopLoaderProgressbarAnimation();
        this._stopAnimationTimeout()
    };
    g._startAnimationTimeout = function () {
        var a = this;
        if (!this.timeout && this.autoplay) {
            this.timeout = setTimeout(function () {
                a.rotateLoader()
            }, this.delay);
            this.isPlaying = true;
            return true
        }
        return false
    };
    g._stopAnimationTimeout = function () {
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null;
            this.isPlaying = false;
            return true
        }
        return false
    };
    g.showNextSlide = function () {
        var a = this.$getSlides(),
            b = a.index(a.filter('.' + this.config.slides.slide.activeClassName)),
            c = (b + 1) % a.length;
        this.slideToIndex(c)
    };
    g.slideToIndex = function (a) {
        var b = this,
            c = this.$getSlides();
        if (a !== this.currentIndex || !c.hasClass(this.config.slides.slide.activeClassName)) if (!(c.length <= 1)) {
            var d = c.eq(a),
                e = c.not(d);
            d.addClass(this.config.slides.slide.activeClassName).removeClass(this.config.slides.slide.inactiveClassName);
            e.removeClass(b.config.slides.slide.activeClassName).addClass(this.config.slides.slide.inactiveClassName);
            this.currentIndex = a;
            this.$currentSlide = d
        }
    };
    g.loaderProgressbarAnimation = function (a, b) {
        var c = 100 * b / a,
            d = this.$currentSlide.find(this.config.progressbar.selector);
        d.css('width', c + '%');
        d.animate({
            width: '100%'
        }, a - b)
    };
    g.stopLoaderProgressbarAnimation = function () {
        var a = this.$currentSlide.find(this.config.progressbar.selector);
        a.stop().css('width', '100%')
    };
    return f
}); define('uxui/lib/browser/KeyCode', [
], function () {
    var a = {
        BACKSPACE: 8,
        TAB: 9,
        ENTER: 13,
        SHIFT: 16,
        CTRL: 17,
        ALT: 18,
        PAUSE_BREAK: 19,
        CAPS_LOCK: 20,
        ESC: 27,
        ESCAPE: 27,
        SPACE: 32,
        SPACE_BAR: 32,
        PAGE_UP: 33,
        PAGE_DOWN: 34,
        END: 35,
        HOME: 36,
        LEFT_ARROW: 37,
        UP_ARROW: 38,
        RIGHT_ARROW: 39,
        DOWN_ARROW: 40,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        INSERT: 45,
        DELETE: 46,
        LEFT_WINDOW: 91,
        RIGHT_WINDOW: 92,
        SELECT_KEY: 93,
        NUMPAD_0: 96,
        NUMPAD_1: 97,
        NUMPAD_2: 98,
        NUMPAD_3: 99,
        NUMPAD_4: 100,
        NUMPAD_5: 101,
        NUMPAD_6: 102,
        NUMPAD_7: 103,
        NUMPAD_8: 104,
        NUMPAD_9: 105,
        MULTIPLY: 106,
        ADD: 107,
        SUBTRACT: 109,
        DECIMAL_POINT: 110,
        DIVIDE: 111,
        F1: 112,
        F2: 113,
        F3: 114,
        F4: 115,
        F5: 116,
        F6: 117,
        F7: 118,
        F8: 119,
        F9: 120,
        F10: 121,
        F11: 122,
        F12: 123,
        NUM_LOCK: 144,
        SCROLL_LOCK: 145
    };
    a.toString = function (b) {
        for (var c in a) if (a[c] == b) return c
    };
    a.isPure = function (a) {
        return !(a.ctrlKey || a.metaKey || a.altKey)
    };
    return a
}); define('uxui/lib/animation/Easing', [
    'jquery'
], function (a) {
    function b(a, b) {
        var c = a / 100,
            d = 0.005 / Math.pow(10, a),
            e = Math.floor(Math.log(d) / - c),
            f = b * Math.PI / e;
        return function (a, b, d, g, h) {
            var i = b / h;
            if (i >= 1) return 1;
            if (i <= 0) return 0;
            var j = i * e,
                k = Math.pow(Math.E, - c * j),
                l = Math.cos(f * j);
            return 1 - k * l
        }
    }
    a.extend(a.easing, {
        easeInOutExpo: function (a, b, c, d, e) {
            if (0 == b) return c;
            if (b == e) return c + d;
            if ((b /= e / 2) < 1) return d / 2 * Math.pow(2, 10 * (b - 1)) + c;
            else return d / 2 * ( - Math.pow(2, - 10 * --b) + 2) + c
        },
        easeInOutQuart: function (a, b, c, d, e) {
            if ((b /= e / 2) < 1) return d / 2 * b * b * b * b + c;
            else return - d / 2 * ((b -= 2) * b * b * b - 2) + c
        },
        bounceOut: b(1, 2)
    })
}); define('uxui/lib/animation/HeightAnimation', [
    'jquery',
    'uxui/lib/animation/Easing'
], function (a) {
    function b(a, b) {
        if (a) this.init(a);
        this.options = b || {
        }
    }
    b.prototype.init = function (b) {
        this.$el = a(b);
        this.$el.stop().css({
            overflow: '',
            height: ''
        });
        this.heightBefore = this.$el.outerHeight()
    };
    b.prototype.complete = function (b) {
        var c = this.$el,
            d = this.heightBefore,
            e = this.$el.outerHeight(),
            f = a.extend({
                duration: 250,
                easing: 'bounceOut'
            }, this.options, {
                complete: function () {
                    c.css({
                        overflow: '',
                        height: ''
                    });
                    if (b) b()
                }
            });
        if (d != e) {
            this.$el.css({
                overflow: 'hidden',
                height: d
            });
            this.$el.stop().animate({
                height: e
            }, f)
        }
    };
    return b
}); define('uxui/lib/animation/HeightAnimationAutoscroll', [
    'jquery',
    'uxui/lib/animation/HeightAnimation'
], function (a, b) {
    function c(a, b) {
        if (a) this.init(a);
        this.options = b || {
        }
    }
    c.prototype = new b;
    c.prototype.superComplete = c.prototype.complete;
    c.prototype.complete = function (b) {
        var c = a(document).scrollTop(),
            d = this.$el.offset().top,
            e = d - c,
            f = a(window).height(),
            g = this.$el.outerHeight();
        if (e + g > f) {
            c += e + g - f + 10;
            if (c > d) c = d;
            a('html, body').stop().animate({
                scrollTop: c
            }, 250)
        }
        return this.superComplete(b)
    };
    return c
}); define('uxui/lib/util/EventDispatcher', [
], function () {
    function a(a, b) {
        this.target = a;
        this.method = b
    }
    function b(a) {
        var b = a.indexOf('.');
        if (b >= 0) return {
            name: a.substr(0, b),
            ns: a.substr(b + 1)
        };
        else return {
            name: a,
            ns: f
        }
    }
    function c(a, b, c) {
        for (var d = a.length - 1; d >= 0; d--) if (a[d].isEqual(b, c)) return d;
        return - 1
    }
    function d(a, b, d) {
        var e;
        if (a) if (d) {
            e = c(a, b, d);
            if (e >= 0) a.splice(e, 1)
        } else for (e = a.length - 1; e >= 0; e--) if (!b || a[e].target == b) a.splice(e, 1)
    }
    function e() {
    }
    var f = 'd_e_f_a_u_l_t';
    a.prototype.call = function (a, b) {
        if ('string' == typeof this.method) return this.target[this.method].apply(this.target || b, a);
        else return this.method.apply(this.target || b, a)
    };
    a.prototype.isEqual = function (a, b) {
        return this.target == a && this.method == b
    };
    e.prototype.addEventListener = function (d, e, f) {
        var g,
            h,
            i,
            j = b(d);
        if ('undefined' == typeof this.eventListeners) this.eventListeners = {
        };
        if ('undefined' == typeof this.eventListeners[j.name]) this.eventListeners[j.name] = {
        };
        if ('undefined' == typeof this.eventListeners[j.name][j.ns]) this.eventListeners[j.name][j.ns] = [
        ];
        i = this.eventListeners[j.name][j.ns];
        h = c(i, f, e);
        if (h < 0) {
            g = new a(f, e);
            i.push(g)
        }
        return g
    };
    e.prototype.removeEventListener = function (a, c, e) {
        var g,
            h;
        if ('undefined' == typeof this.eventListeners) this.eventListeners = {
        };
        if (a) {
            var i = b(a),
                j = i.name,
                k = i.ns;
            if (j || !k) {
                h = this.eventListeners[j];
                if (!c && !e) if (k !== f) h[k] = [
                ];
                else this.eventListeners[j] = {
                    };
                else if (k !== f) d(h[k], e, c);
                else for (g in h) d(h[g], e, c)
            } else for (g in this.eventListeners) d(this.eventListeners[g][k], e, c)
        } else for (g in this.eventListeners) this.removeEventListener(g, c, e)
    };
    e.prototype.removeAllEventListeners = function (a) {
        if ('string' == typeof a) this.removeEventListener(a);
        else this.removeEventListenersOf(a)
    };
    e.prototype.removeEventListenersOf = function (a) {
        this.removeEventListener(null, null, a)
    };
    e.prototype.trigger = function (a) {
        var b,
            c = [
            ];
        for (b = 1; b < arguments.length; b++) c.push(arguments[b]);
        var d,
            e,
            f = true;
        if ('undefined' == typeof this.eventListeners) this.eventListeners = {
        };
        for (var g in this.eventListeners[a]) {
            d = this.eventListeners[a][g];
            for (b = d.length - 1; b >= 0; b--) {
                e = d[b].call(c, this);
                f &= false !== e
            }
        }
        return f
    };
    return e
}); define('uxui/app/util/Capabilities', [
], function () {
    function a(a, b) {
        if (!b) return a;
        for (var c = a.split(' '), d = c.length - 1; d >= 0; d--) c[d] = c[d] + b;
        return c.join(' ')
    }
    function b(a, b) {
        return (' ' + a.className + ' ').indexOf(' ' + b + ' ') > - 1
    }
    var c = !!window.navigator.msPointerEnabled,
        d = ('ontouchstart' in window || c, {
            touch: Modernizr.touchevents,
            pointer: c
        });
    d.touchdevice = d.touch || d.pointer;
    d['TOUCHSTART'] = c ? 'MSPointerDown' : 'touchstart';
    d['TOUCHMOVE'] = c ? 'MSPointerMove' : 'touchmove';
    d['TOUCHEND'] = c ? 'MSPointerUp' : 'touchend';
    d['DRAGSTART'] = Modernizr.touch ? d['TOUCHSTART'] : 'mousedown';
    d['DRAGMOVE'] = Modernizr.touch ? d['TOUCHMOVE'] : 'mousemove';
    d['DRAGEND'] = Modernizr.touch ? d['TOUCHEND'] : 'mouseup';
    d['MOBILE'] = b(document.querySelector('html'), 'is-mobile');
    var e = {
        mousedown: [
            'mousemove',
            'mouseup'
        ],
        touchstart: [
            'touchmove',
            'touchend'
        ],
        pointerdown: [
            'pointermove',
            'pointerup'
        ],
        MSPointerDown: [
            'MSPointerMove',
            'MSPointerUp'
        ]
    };
    d.dragstart = function (b) {
        return a('touchstart mousedown MSPointerDown', b)
    };
    d.dragmove = function (b, c) {
        if (c) return a(e[c.type][0], b);
        else return a('touchmove mousemove pointermove MSPointerMove', b)
    };
    d.dragend = function (b, c) {
        if (c) return a(e[c.type][1], b);
        else return a('touchend mouseup pointerup MSPointerUp', b)
    };
    d.getEventPosition = function (a, b) {
        if (!b) b = 'page';
        if (a.originalEvent.touches) return {
            x: a.originalEvent.touches[0][b + 'X'],
            y: a.originalEvent.touches[0][b + 'Y']
        };
        else if (void 0 !== a.originalEvent.pageX) return {
            x: a.originalEvent[b + 'X'],
            y: a.originalEvent[b + 'Y']
        };
        else return {
                x: a[b + 'X'],
                y: a[b + 'Y']
            }
    };
    d.isTouchEvent = function (a) {
        if (a) return 'touchstart' == a.type || 'touch' == a.pointerType;
        else return false
    };
    return d
}); define('uxui/app/util/TextSearch', [
], function () {
    function a() {
    }
    var b = {
        returnIndex: false
    };
    a.search = function (a, c, d) {
        function e(a) {
            function b(e, f, g) {
                var h,
                    i = 0,
                    j = c.charAt(e),
                    k = d.indexOf(j.toLowerCase(), f);
                if (k < 0) return {
                    score: - 1
                };
                var l = (a.charAt(k), a.charAt(k - 1));
                i += 1;
                if (0 === k || /\s/.test(l)) {
                    i += 5;
                    g = 5
                } else if (f === k) {
                    i += 1;
                    if (g) i += 3
                } else g = 0;
                i -= k / 10000;
                if (e < c.length - 1) {
                    h = b(e + 1, k + 1, g);
                    if (h.score < 0) return h
                } else h = {
                    score: 0,
                    match: [
                    ]
                };
                h.match.unshift(k);
                h.score += i;
                var m = b(e, k + 1);
                return m.score > h.score ? m : h
            }
            var d = a.toLowerCase();
            return b(0, 0)
        }
        d = $.extend({
        }, b, d);
        var f,
            g,
            h,
            i,
            j = [
            ];
        for (i = 0; i < a.length; i++) {
            h = e(a[i], c);
            if (h.score > 0) j.push({
                text: a[i],
                index: i,
                score: h.score
            })
        }
        f = j.sort(function (a, b) {
            if (a.score < b.score) return 1;
            if (a.score > b.score) return - 1;
            else return 0
        });
        g = [
        ];
        for (i = 0; i < f.length; i++) g[i] = d.returnIndex ? f[i].index : f[i].text;
        return g
    };
    return a
}); define('uxui/app/util/AccessibleMenu', [
    'jquery',
    'uxui/lib/util/EventDispatcher',
    'uxui/lib/browser/KeyCode',
    'uxui/app/util/Capabilities',
    'uxui/app/util/TextSearch'
], function (a, b, c, d, e) {
    function f() {
        this.ns = k + l++;
        this.nstemp = this.ns + '_temp'
    }
    function g(b, c) {
        if (!b) return false;
        else return b.is(c) || a(c).parents().is(b)
    }
    function h(b) {
        var c = a(b).get(0);
        if (c) c.focus()
    }
    var i = {
            trigger: '.js-trigger',
            menu: '.js-menu',
            menuLinks: 'a, button',
            activeClass: '',
            keysearch: true
        },
        j = {
            OPEN: 'menu:open',
            CLOSE: 'menu:close',
            SHOW: 'menu:show',
            HIDE: 'menu:hide',
            ITEMFOCUS: 'menuitem:focus',
            ITEMSELECT: 'menuitem:select'
        },
        k = '.AccessibleMenu',
        l = 0;
    f.prototype = new b;
    for (var m in j) f[m] = j[m];
    f.prototype.init = function (b, d) {
        var e = this;
        this.$el = a(b);
        this.options = a.extend({
        }, i, d);
        this.$trigger = this.$el.find(this.options.trigger);
        this.$trigger.on('click' + this.ns, function (a) {
            a.preventDefault();
            e.open(false)
        });
        var f = this.$trigger,
            g = this.nstemp;
        f.on('focus' + this.ns, function (b) {
            a(document).on('keydown' + g, function (a) {
                if (a.keyCode == c.SPACE_BAR || a.keyCode == c.ENTER) {
                    a.preventDefault();
                    e.open()
                }
            });
            f.on('blur' + g, function (b) {
                a(document).off(g);
                f.off(g)
            })
        })
    };
    f.prototype.destroy = function () {
        this.removeActions();
        this.$trigger.off(this.ns);
        this.removeAllEventListeners();
        this.$el = null;
        this.$trigger = null;
        this.$menu = null;
        this.$menuLinks = null
    };
    f.prototype.open = function (a) {
        if (!this.isOpen) {
            if (this.trigger(j.OPEN)) {
                a = 'undefined' !== typeof a ? a : true;
                this.$trigger.attr('aria-expanded', true);
                this.$menu = this.$el.find(this.options.menu);
                this.$menuLinks = this.$menu.find(this.options.menuLinks);
                this.removeActions();
                this.initActions();
                this.$menu.attr('aria-hidden', 'false');
                this.$menuLinks.attr('tabindex', 0);
                var b,
                    c;
                if (this.options.activeClass) b = this.$menuLinks.filter('.' + this.options.activeClass);
                if (!b || 0 === b.length) b = this.$menuLinks.first();
                else c = true;
                if (this.trigger(j.SHOW)) this.$menu.show();
                if (a || c) this.focusLink(b);
                this.isOpen = true
            }
        } else this.close()
    };
    f.prototype.close = function (a) {
        if (this.isOpen) if (this.trigger(j.CLOSE)) {
            this.$trigger.attr('aria-expanded', false);
            this.$menu.attr('aria-hidden', 'true');
            this.$menuLinks.attr('tabindex', - 1);
            this.removeActions();
            if (this.options.activeClass) this.$menuLinks.removeClass(this.options.activeClass);
            if (this.trigger(j.HIDE)) this.$menu.hide();
            this.$menu = null;
            this.$menuLinks = null;
            this.isOpen = false
        }
    };
    f.prototype.initActions = function () {
        var b = this;
        a(document).on('focusin' + this.nstemp, function (a) {
            return b.handleFocusin(a)
        });
        a(document).on('keydown' + this.nstemp, function (a) {
            return b.handleKeydown(a)
        });
        a(document).on(d.DRAGSTART + this.nstemp + ' mousedown' + this.nstemp, function (a) {
            if (!g(b.$menu, a.target) && !g(b.$trigger, a.target)) b.close()
        });
        if (this.options.keysearch) a(document).on('keypress' + this.nstemp, function (a) {
            return b.handleKeypress(a)
        });
        if (this.options.activeClass) {
            if (!d.touchdevice) {
                this.$menu.on('mouseenter' + this.nstemp, this.options.menuLinks, function (a) {
                    return b.handleMouseEnter(a)
                });
                this.$menu.on('mouseleave' + this.nstemp, this.options.menuLinks, function (a) {
                    return b.handleMouseLeave(a)
                })
            } else this.$menu.on('mousedown' + this.nstemp, this.options.menuLinks, function (a) {
                return b.handleMouseEnter(a)
            });
            this.$menu.on('click' + this.nstemp, this.options.menuLinks, function (a) {
                return b.triggerSelect(a)
            })
        } else this.$menuLinks.on('click' + this.nstemp, function (a) {
            b.close()
        })
    };
    f.prototype.removeActions = function () {
        a(document).off(this.nstemp);
        this.$trigger.off(this.nstemp);
        this.$menu.off(this.nstemp);
        this.$menuLinks.off(this.nstemp)
    };
    f.prototype.triggerSelect = function (a) {
        var b = this.$activeLink ? this.$activeLink.get(0)  : null;
        if (b) return this.trigger(j.ITEMSELECT, b, a);
        this.close();
        return true
    };
    f.prototype.handleKeydown = function (a) {
        function b(b) {
            var c = e.length,
                f = e.index(a.target),
                g = (f + c + b) % c;
            d.focusLink(e.get(g))
        }
        var d = this,
            e = this.$menuLinks;
        switch (a.keyCode) {
            case c.UP_ARROW:
                a.preventDefault();
                b( - 1);
                break;
            case c.DOWN_ARROW:
                a.preventDefault();
                b(1);
                break;
            case c.ESCAPE:
            case c.TAB:
                if (this.isOpen && a.keyCode == c.ESCAPE) a.stopPropagation();
                this.close();
                h(this.$trigger);
                break;
            case c.ENTER:
            case c.SPACE_BAR:
                if (!this.triggerSelect(a)) a.preventDefault()
        }
    };
    f.prototype.handleFocusin = function (b) {
        var c = b.target,
            d = a.contains(this.$menu[0], c) || this.$menu.is(c) || a.contains(this.$trigger[0], c) || this.$trigger.is(c);
        if (!d) this.close()
    };
    f.prototype.handleKeypress = function (b) {
        var c = this,
            d = String.fromCharCode(b.which);
        if (d.match(/[0-z]/gi)) {
            var f = new Date;
            if (!this.keysearchtime || f - this.keysearchtime > 1500) this.keysearch = '';
            this.keysearchtime = f;
            d = d.toLowerCase();
            this.keysearch += d;
            clearTimeout(this.keysearchtimeout);
            this.keysearchtimeout = setTimeout(function () {
                var b = [
                ];
                c.$menuLinks.each(function () {
                    b.push(a(this).text())
                });
                var d = e.search(b, c.keysearch, {
                    returnIndex: true
                });
                if (d.length) c.focusIndex(d[0])
            }, 100)
        } else this.keysearch = ''
    };
    f.prototype.handleMouseEnter = function (a) {
        this.focusLink(a.currentTarget)
    };
    f.prototype.handleMouseLeave = function (a) {
        this.focusLink(null)
    };
    f.prototype.focusIndex = function (a) {
        return this.focusLink(this.$menuLinks.get(a))
    };
    f.prototype.focusLink = function (b) {
        var c = a(b),
            d = c.get(0);
        if (d) d.focus();
        if (this.options.activeClass) {
            this.$menuLinks.removeClass(this.options.activeClass);
            c.addClass(this.options.activeClass)
        }
        this.$activeLink = c;
        this.trigger(j.ITEMFOCUS, d)
    };
    return f
}); define('uxui/app/modules/nav/DropdownNav', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/AccessibleMenu'
], function (a, b, c) {
    var d,
        e = '.DropdownNav',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++;
        this.activeClassName = 'is-active'
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.menu = new c;
        this.menu.init(b, {
            trigger: '.js-dropdown_nav--trigger',
            menu: '.js-dropdown_menu',
            menuLinks: 'a, button',
            activeClass: 'is-active'
        });
        this.menu.addEventListener(c.OPEN, this.bind(this.handleMenuOpen));
        this.menu.addEventListener(c.CLOSE, this.bind(this.handleMenuClose));
        this.menu.addEventListener(c.SHOW, this.bind(this.handleMenuShow));
        this.menu.addEventListener(c.HIDE, this.bind(this.handleMenuHide));
        return this
    };
    d.prototype.handleMenuOpen = function () {
    };
    d.prototype.handleMenuClose = function () {
    };
    d.prototype.handleMenuShow = function () {
        this.$selectedItem = this.$el.find('.is-active').removeClass('is-active');
        if (this.$selectedItem.length) this.$selectedItem.focus();
        this.$el.addClass(this.activeClassName);
        return false
    };
    d.prototype.handleMenuHide = function () {
        this.$el.removeClass(this.activeClassName);
        this.$selectedItem.addClass('is-active');
        return false
    };
    var g = d.prototype.destroy;
    d.prototype.destroy = function () {
        this.menu.destroy();
        this.menu = null;
        g.call(this)
    };
    return d
}); define('uxui/app/modules/content/tabs', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode',
    'uxui/lib/animation/HeightAnimationAutoscroll',
    'uxui/app/util/DOMUtil',
    'uxui/app/modules/nav/DropdownNav',
    'uxui/app/util/AccessibleMenu'
], function (a, b, c, d, e, f, g) {
    var h,
        i = '.tabs',
        j = 0;
    h = function () {
        this.$el = null;
        this.ns = i + j++
    };
    var k = {
        animateHeight: false
    };
    h.prototype = new b;
    h.prototype.init = function (b) {
        this.$el = a(b);
        this.options = a.extend({
        }, k, e.jsondata(this.$el, 'tabs'));
        this.currentIndex = - 1;
        this.initVariables();
        if (this.$el.hasClass('js-tabs-handle-change')) {
            this.initTabsDropdown();
            this.bindUIActions()
        }
        this.on(window, 'resize', this.onResize.bind(this));
        this.onResize();
        setTimeout(function () {
            this.$el.addClass('is-initialized')
        }.bind(this), 60);
        return this
    };
    h.prototype.initVariables = function () {
        this.$tabPanes = this.$el.find('.js-tabs--pane');
        this.$nav = this.$el.find('.js-widget_tabs--nav');
        this.$tabs = this.$nav.find('.js-tabs--link');
        this.currentIndex = this.linkIndex(this.$tabs.filter('.js-tabs--link.is-active'))
    };
    h.prototype.initTabsDropdown = function () {
        this.$dropdownEle = this.$el.find('.js-tabs--dropdown');
        var a = this.$dropdownEle.find('.js-dropdown_nav--trigger');
        if (a.is(':empty')) {
            a.html(this.$tabs.filter('.is-active').html());
            a.find('.js-widget_tabs--link--text').after('<span class="is-visuallyhidden">' + this.$dropdownEle.attr('data-activeText') + '</span>')
        }
        this.$dropdown = new f;
        this.$dropdown.init(this.$dropdownEle.get(0));
        this.$dropdown_links = this.$dropdownEle.find('.js-tabs--link');
        this.$dropdown.menu.addEventListener(g.ITEMSELECT, this.bind(this.dropdownItemSelected));
        this.$dropdown_trigger_text = this.$dropdown.menu.$trigger.find('.js-widget_tabs--link--text');
        this.$dropdown_trigger_icon = this.$dropdown.menu.$trigger.find('.icon')
    };
    h.prototype.bindUIActions = function () {
        var a = this;
        this.$tabs.on('click' + this.ns, this.bind(this.clickHandler));
        this.$tabs.on('keydown' + this.ns, this.bind(this.keyboardHandler));
        this.on(window, 'resize', function () {
            a.onResize()
        })
    };
    h.prototype.dropdownItemSelected = function (a, b) {
        b.preventDefault();
        var c = this.$dropdown_links.index(a);
        this.selectPane(c, false)
    };
    h.prototype.onResize = function () {
        var a = this;
        if (this.timeout) clearTimeout(this.timeout);
        this.timeout = setTimeout(function () {
            a.update()
        }, 50)
    };
    h.prototype.update = function () {
        var a = false;
        if (this.$el) {
            this.$el.removeClass('is-compact');
            var b = this.$el.find('.js-tabs--link:visible').last();
            if (!b.length) {
                this.$nav.css({
                    display: 'block',
                    position: 'absolute',
                    opacity: '0'
                });
                b = this.$el.find('.js-tabs--link').last()
            }
            var c = b.get(0).getBoundingClientRect().right,
                d = this.$el.get(0).getBoundingClientRect().right;
            if (c > d) a = true;
            this.$nav.css({
                display: '',
                position: '',
                opacity: ''
            });
            this.$el[a ? 'addClass' : 'removeClass']('is-compact')
        }
    };
    h.prototype.clickHandler = function (a) {
        a.preventDefault();
        var b = this.linkIndex(a.currentTarget);
        this.selectPane(b)
    };
    h.prototype.selectPane = function (b, c) {
        if (b !== this.currentIndex) {
            c = 'undefined' !== typeof c ? c : true;
            var e;
            if (this.options.animateHeight) e = new d(this.$el, {
                easing: 'easeInOutExpo'
            });
            this.currentIndex = b;
            var f = this.$tabs.eq(b),
                g = this.$dropdown_links.eq(b),
                h = f.attr('aria-controls'),
                i = a('#' + h);
            this.$tabs.removeClass('is-active').attr('aria-selected', 'false');
            f.addClass('is-active').attr('aria-selected', 'true');
            this.$dropdown_trigger_text.html(g.find('.js-widget_tabs--link--text').html());
            this.$dropdown_trigger_icon.removeAttr('class').addClass(g.find('.icon').attr('class'));
            this.$dropdown.menu.close();
            this.$dropdown_links.removeClass('is-active').attr('aria-selected', 'false');
            g.addClass('is-active').attr('aria-selected', 'true');
            if (c) f.focus();
            this.$tabPanes.removeClass('is-active').attr('aria-hidden', 'true');
            i.addClass('is-active').attr('aria-hidden', 'false');
            i.trigger('pf:tabs:change');
            if (e) e.complete()
        } else this.$dropdown.menu.close()
    };
    h.prototype.keyboardHandler = function (a) {
        var b = null;
        if (a.keyCode == c.ENTER || a.keyCode == c.SPACE) {
            a.preventDefault();
            b = this.linkIndex(a.currentTarget)
        } else if (a.keyCode == c.LEFT_ARROW) {
            a.preventDefault();
            b = this.currentIndex - 1;
            if (b < 0) b = this.$tabs.length - 1
        } else if (a.keyCode == c.RIGHT_ARROW) {
            a.preventDefault();
            b = this.currentIndex + 1;
            if (b > this.$tabs.length - 1) b = 0
        }
        if (null !== b) this.selectPane(b)
    };
    h.prototype.linkIndex = function (a) {
        return this.$tabs.index(a)
    };
    return h
}); define('uxui/app/modules/content/ArticleVideo', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    function c() {
        this.$el = null;
        this.ns = d + e++
    }
    var d = '.ArticleVideo',
        e = 0,
        f = {
        };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.$link = this.$el.find('.js-article_video--link');
        if (this.$link.attr('href').indexOf('youtu') !== - 1) this.$el.addClass('is-hidden');
        this.options = a.extend({
        }, f, this.$el.data('article-video-options'));
        if (this.id) {
            this.bindListeners();
            return this
        }
    };
    c.prototype.bindListeners = function () {
        this.on('click', '.js-article_video--link', this.bind(this.onLinkClick))
    };
    c.prototype.onLinkClick = function (a) {
        this.loadVideo()
    };
    c.prototype.loadVideo = function () {
    };
    return c
}); define('uxui/lib/util/DeferredState', [
    'uxui/lib/util/EventDispatcher'
], function (a) {
    function b(a, b) {
        a[b] = function (a, c) {
            var d = this.addEventListener(b, a, c);
            if (d && b == this.state) d.call([this.state], this);
            return this
        }
    }
    function c(a) {
        this.___states = [
        ];
        if (a) for (var c = a.length - 1; c >= 0; c--) {
            this.___states.push(a[c]);
            b(this, a[c])
        }
    }
    c.prototype = new a;
    c.prototype.set = function (a) {
        if (a != this.state) {
            this.state = a;
            this.trigger(this.state)
        }
        return this
    };
    c.prototype.unlisten = function (a, b) {
        if (!('string' == typeof a || 'function' == typeof a) && !b) {
            b = a;
            this.removeEventListenersOf(b)
        } else this.removeEventListener(null, a, b)
    };
    return c
}); define('uxui/lib/util/DeferredBoolean', [
    'uxui/lib/util/DeferredState'
], function (a) {
    function b(a) {
        if ('undefined' !== typeof a) this.set(a)
    }
    b.prototype = new a(['yes',
        'no']);
    b.prototype._set = b.prototype.set;
    b.prototype.set = function (a) {
        return this._set(a ? 'yes' : 'no')
    };
    b.prototype.get = function (a) {
        return 'yes' == this.state
    };
    b.prototype.then = b.prototype.yes;
    b.prototype.otherwise = b.prototype.no;
    return b
}); define('uxui/lib/browser/MediaDispatcher', [
    'jquery',
    'uxui/lib/util/DeferredBoolean'
], function (a, b) {
    function c(a) {
        g.push(a);
        a.validate()
    }
    function d() {
        for (var a = g.length - 1; a >= 0; a--) g[a].validate()
    }
    function e(a, c) {
        this.name = a;
        this.index = c;
        this.isOrBelow = new b;
        this.isOrAbove = new b;
        this.isExactly = new b
    }
    var f = a(window),
        g = [
        ],
        h = new b(false);
    new b(true);
    f.resize(d);
    d();
    var i = function (a) {
        this.element = document.body;
        this.pseudo = 'after';
        this.mediaIndex = - 1;
        this.triggerPoints = [
        ];
        if (a) this.setTriggerPoints(a);
        c(this)
    };
    i.prototype.setTriggerPoints = function (a) {
        this.triggerPoints = [
        ];
        this.triggerPoints.push(new e('default', 0));
        for (var b = 0; b < a.length; b++) this.triggerPoints.push(new e(a[b], this.triggerPoints.length))
    };
    i.prototype.is = function (a, b) {
        return this._is(a, 0, 'isExactly', b)
    };
    i.prototype.isOrAbove = function (a, b) {
        return this._is(a, 0, 'isOrAbove', b)
    };
    i.prototype.isOrBelow = function (a, b) {
        return this._is(a, 0, 'isOrBelow', b)
    };
    i.prototype.isAbove = function (a, b) {
        return this._is(a, - 1, 'isOrAbove', b)
    };
    i.prototype.isBelow = function (a, b) {
        return this._is(a, 1, 'isOrBelow', b)
    };
    i.prototype._is = function (a, b, c, d) {
        var e = this._getTrigger(a);
        if (!e) throw new Error('Media Trigger point \'' + a + '\' doesn\'t exist.');
        if (b) e = this.triggerPoints[e.index + b];
        var f = e ? e[c] : h;
        if (d) f.then(d);
        return f
    };
    i.prototype._getTrigger = function (a) {
        for (var b = this.triggerPoints.length - 1; b >= 0; b--) if (this.triggerPoints[b].name == a) return this.triggerPoints[b];
        return null
    };
    i.prototype._setMediaIndex = function (a) {
        var b,
            c,
            d = this.mediaIndex;
        if (a !== d) {
            this.mediaIndex = a;
            for (b = this.triggerPoints.length - 1; b >= 0; b--) {
                c = this.triggerPoints[b];
                c.isOrBelow.set(b <= this.mediaIndex);
                c.isExactly.set(b == this.mediaIndex);
                c.isOrAbove.set(b >= this.mediaIndex)
            }
        }
    };
    i.prototype._setMedia = function (a) {
        for (var b = this.triggerPoints.length - 1; b > 0; b--) if (this.triggerPoints[b].name == a) {
            this._setMediaIndex(b);
            return
        }
        this._setMediaIndex(0)
    };
    i.prototype.validate = function (a) {
        var b;
        if (window.getComputedStyle) {
            b = window.getComputedStyle(this.element, ':' + this.pseudo).getPropertyValue('content');
            b = b.replace(/['"]/g, '')
        }
        if (!b) b = this.getFallback();
        this._setMedia(b)
    };
    i.prototype.unlisten = function (a, b) {
        for (var c = this.triggerPoints.length - 1; c >= 0; c--) {
            var d = this.triggerPoints[c];
            d.isExactly.unlisten(a, b);
            d.isOrAbove.unlisten(a, b);
            d.isOrBelow.unlisten(a, b)
        }
    };
    i.prototype.getFallback = function () {
        if (!this.$fallback) {
            this.$fallback = a('<div class="media-dispatcher-fallback"></div>');
            this.$fallback.css({
                position: 'absolute',
                left: - 1000
            });
            this.$fallback.appendTo('body')
        }
        var b = parseInt(this.$fallback.css('margin-bottom'), 10),
            c = this.triggerPoints[b];
        return c ? c.name : 'unknown'
    };
    return i
}); define('uxui/app/plugins/mediaDispatcher', [
    'uxui/lib/browser/MediaDispatcher'
], function (a) {
    return new a(['tablet',
        'tablet-portrait',
        'mobile',
        'mobile-portrait'])
}); define('uxui/lib/browser/ScrollParent', [
    'jquery'
], function (a) {
    function b(a) {
        for (var b = a; b = b.offsetParent; ) {
            var c = window.getComputedStyle(b);
            if ('fixed' === c.position || b.scrollHeight > b.clientHeight && 'visible' !== c.overflow && 'visible' !== c.overflowX && 'visible' !== c.overflowY) return b
        }
        return document.scrollingElement || document.documentElement
    }
    function c(b) {
        if (b) this.init(a(b).get(0))
    }
    c.extraOffset = 0;
    c.prototype.init = function (c) {
        this.scrollParentEl = b(c);
        this.$scrollParent = a(this.scrollParentEl);
        this.isDocument = this.$scrollParent.is(document) || this.$scrollParent.is('html') || this.$scrollParent.is('body')
    };
    c.prototype.getElement = function () {
        return this.scrollParentEl
    };
    c.prototype.scrollTop = function () {
        return this.$scrollParent.scrollTop()
    };
    c.prototype.getOffset = function (a) {
        for (var b = 0, d = a; d && d !== this.scrollParentEl; ) {
            b += d.offsetTop;
            d = d.offsetParent
        }
        return b - c.extraOffset
    };
    c.prototype.getHeight = function () {
        return this.isDocument ? a(window).height()  : this.scrollParentEl.clientHeight
    };
    c.prototype.scrollTo = function (b, c) {
        var d = a(this.isDocument ? 'html, body' : this.scrollParentEl);
        if (c) d.stop().delay(c.delay || 0).animate({
            scrollTop: b
        }, a.extend({
            duration: 250,
            easing: 'easeInOutQuart'
        }, c));
        else d.scrollTop(b)
    };
    return c
}); define('uxui/lib/animation/scrollToView', [
    'jquery',
    'uxui/lib/browser/ScrollParent'
], function (a, b) {
    function c(c, d) {
        var e = a.extend({
                forceTopAlign: false,
                align: 'top',
                marginTop: 0,
                marginBottom: 0,
                animation: {
                    duration: 250
                },
                delay: 0
            }, d),
            f = a(c);
        c = f.get(0);
        var g = new b(c),
            h = g.scrollTop(),
            i = g.getHeight(),
            j = 1000000000,
            k = 0;
        f.each(function () {
            var b = g.getOffset(c),
                d = b + a(this).outerHeight();
            if (b < j) j = b;
            if (d > k) k = d
        });
        var l = - 1,
            m = - 1,
            n = - 1;
        if (j < h) l = j - e.marginTop;
        if (k > h + i) m = k - i - e.marginBottom;
        if (e.forceTopAlign) n = j;
        else if ('bottom' === e.align) if (m >= 0) n = m;
        else n = l;
        else if ('top' === e.align) if (l >= 0) n = j;
        else n = Math.min(j - e.marginTop, m);
        if (n < 0) return false;
        var o = a.extend({
            delay: e.delay
        }, e.animation);
        g.scrollTo(n, o)
    }
    return c
}); define('uxui/lib/browser/KeepFocus', [
    'jquery'
], function (a) {
    var b = function () {
        b.instanceCounter = (b.instanceCounter || 0) + 1;
        this.ns = '.keepfocus_' + b.instanceCounter
    };
    b.prototype.keep = function (b) {
        var c = a(b);
        this.$disable = c.parents().add(c).siblings().not('head,flying-focus,script,[aria-hidden="true"]');
        this.$disable.attr('aria-hidden', 'true');
        a(document).on('focusin' + this.ns, function (b) {
            var d = c.is(b.target) || a(b.target).parents().is(c);
            if (!d) {
                b.preventDefault();
                c.find('a,button,[tabindex],select,input,textarea').first().focus()
            }
        })
    };
    b.prototype.release = function () {
        if (this.$disable) {
            this.$disable.removeAttr('aria-hidden');
            this.$disable = null
        }
        a(document).off(this.ns)
    };
    return b
}); define('uxui/lib/browser/Accessibility', [
    'jquery',
    'uxui/lib/browser/KeepFocus'
], function (a, b) {
    function c(a) {
        var b,
            c;
        for (c = 0; c < a.childNodes.length; c++) {
            b = a.childNodes[c];
            if (3 === b.nodeType && g.test(b.nodeValue)) return true
        }
        return false
    }
    var d = (/iP(ad|hone|od)/.test(navigator.userAgent), 0),
        e = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]',
        f = {
            FOCUSABLE: e,
            focus: function (b) {
                function c(a) {
                    e.removeAttr('tabindex');
                    e.off('blur', c)
                }
                var d,
                    e = a(b);
                b = e.get(0);
                b.focus();
                if (document.activeElement !== b) {
                    d = e.attr('tabindex');
                    e.attr('tabindex', '-1');
                    b.focus();
                    e.on('blur', c);
                    if (document.activeElement !== b) setTimeout(function () {
                        c()
                    }, 0)
                }
            },
            focusFirst: function (b, d) {
                for (var e, g, h = document.activeElement, i = a(b), j = i.find(d || '*').filter(':visible'), k = i.get(0), l = 0; l < j.length; l++) if (d || c(j[l])) {
                    e = j[l];
                    break
                }
                if (!e) e = g = k;
                for (; e !== k; ) {
                    e.focus();
                    if (document.activeElement === e || document.activeElement !== h) return true;
                    if (!g && 'block' === a(e).css('display')) g = e;
                    e = e.parentNode
                }
                f.focus(g || k)
            },
            keepFocus: function (a, c) {
                var d = new b;
                d.keep(a, c);
                return function () {
                    d.release()
                }
            },
            describeBy: function (b, c) {
                var e = a(b);
                if ('string' !== typeof c) {
                    var f = a(c).first();
                    if (0 === f.length || 0 === e.length) return;
                    var g = f.attr('id') || 'accessible-id-' + ++d;
                    f.attr('id', g);
                    c = g
                }
                var h = e.attr('aria-describedby');
                h = h ? h.split(' ')  : [
                ];
                if (a.inArray(c, h) === - 1) {
                    h.push(c);
                    e.attr('aria-describedby', h.join(' '))
                }
            },
            speak: function (b) {
                if (b) {
                    if (!this.$speakField) {
                        this.$speakField = a('<span class="is-visuallyhidden" role="status" aria-live="assertive" aria-atomic="true"></span>');
                        a('body').append(this.$speakField)
                    }
                    this.$speakField.text(b)
                }
            }
        },
        g = /\S/;
    return f
}); define('uxui/app/modules/various/Collapsible', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/plugins/mediaDispatcher',
    'uxui/lib/animation/HeightAnimation',
    'uxui/lib/animation/scrollToView',
    'uxui/lib/browser/Accessibility'
], function (a, b, c, d, e) {
    function f() {
        this.ns = i + j++
    }
    var g = {
            deviceMin: false,
            deviceMax: false
        },
        h = 'input[type="checkbox"], input[type="radio"]',
        i = '.Collapsible',
        j = 0;
    f.prototype = new b;
    f.prototype.init = function (b) {
        var d = this;
        this.$el = a(b);
        this.id = b.id;
        this.options = a.extend(g, this.$el.data('collapsible-options'));
        this.getContainerElement();
        if (this.options.deviceMin && this.options.deviceMax) c.isOrBelow(d.options.deviceMax).then(function () {
            c.isOrAbove(d.options.deviceMin).then(function () {
                d.enable()
            }).otherwise(function () {
                d.disable()
            })
        }).otherwise(function () {
            d.disable()
        });
        else this.enable();
        return this
    };
    f.prototype.enable = function () {
        if (!this.$el.hasClass('is-disabled')) {
            this.bindListeners();
            this.getToggleElement().attr('aria-expanded', 'false');
            this.validate()
        }
    };
    f.prototype.disable = function () {
        this.enabled = false;
        this.$el.removeClass('is-opened');
        this.getToggleElement().removeClass('is-opened').removeAttr('aria-expanded');
        this.getContainerElement().removeClass('is-opened');
        this.$el.off(this.ns)
    };
    f.prototype.validate = function () {
        if (this.getToggleElement().is(h) && this.getToggleElement().prop('checked')) this.getToggleElement().trigger('click')
    };
    f.prototype.bindListeners = function () {
        this.on('click', '.js-collapsible--toggle', this.onToggleClick.bind(this));
        this.on('close', this.close)
    };
    f.prototype.onToggleClick = function (a) {
        if (!this.getToggleElement().is(h)) a.preventDefault();
        if (this.getToggleElement().hasClass('is-opened') && !this.getToggleElement().is('input[type="radio"]')) this.close();
        else this.open()
    };
    f.prototype.close = function (a) {
        var b = new d(this.$el, {
            duration: 250,
            easing: 'easeInOutQuart'
        });
        this._close();
        b.complete(a)
    };
    f.prototype._close = function (a) {
        this.$el.removeClass('is-opened');
        this.getToggleElement().removeClass('is-opened').attr('aria-expanded', 'false');
        this.getContainerElement().removeClass('is-opened')
    };
    f.prototype.open = function (b, c, f) {
        var g,
            h = this,
            i = this.getGroup().filter('.is-opened'),
            j = new d(this.$el, {
                duration: f ? 10 : 250,
                easing: 'easeInOutQuart'
            });
        if (i) {
            g = new d(i, {
                duration: f ? 10 : 250,
                delay: 150,
                easing: 'easeInOutQuart'
            });
            var k = i.data('moduleInstance');
            if (k) k._close()
        }
        this.$el.addClass('is-opened');
        this.getToggleElement().addClass('is-opened').attr('aria-expanded', 'true');
        this.getContainerElement().addClass('is-opened');
        if (!c) e(h.$el, {
            delay: 100
        });
        if (g) g.complete();
        j.complete(function () {
            b && b()
        });
        a(window).trigger('resize')
    };
    f.prototype.getGroup = function () {
        var b = this.$el.data('collapsible-group');
        if (b) return a('[data-collapsible-group="' + b + '"]');
        else return a([])
    };
    f.prototype.getToggleElement = function () {
        return this.$toggle || (this.$toggle = this.$el.find('.js-collapsible--toggle, .js-collapsible--toggle-dummy'))
    };
    f.prototype.getContainerElement = function () {
        return this.$container || (this.$container = 'undefined' !== typeof this.options.containerId ? a('#' + this.options.containerId)  : this.$el.find('.js-collapsible--container'))
    };
    return f
}); define('uxui/app/modules/widget/Widget', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode',
    'uxui/app/util/Capabilities',
    'uxui/app/util/DOMUtil',
    'uxui/lib/animation/Easing'
], function (a, b, c, d, e) {
    var f,
        g = '.ef_widget',
        h = 0;
    f = function () {
        this.$el = null;
        this.ns = g + h++;
        this.tempns = this.ns + '-temp'
    };
    f.prototype = new b;
    f.prototype.init = function (b) {
        var c = this;
        this.$el = a(b);
        this.on('click', '.js-widget--openhelp', function (a) {
            a.preventDefault();
            c.openHelp(a)
        });
        this.on('click', '.js-widget--opensettings', function (a) {
            a.preventDefault();
            c.openSettings(a)
        });
        this.on('click', '.js-widget--toggleopen', this.bind(function (b) {
            if (!a('html').hasClass('is-dragging') && !this.$el.hasClass('is-removable')) {
                b.preventDefault();
                var c = this.$el.outerHeight();
                this.$el.toggleClass('is-open').css({
                    overflow: '',
                    height: ''
                });
                var d = this.$el.outerHeight(),
                    e = a(document).scrollTop(),
                    f = this.$el.offset().top,
                    g = f - e,
                    h = a(window).height();
                if (g + d > h) a('html, body').stop().animate({
                    scrollTop: Math.min(f, e + (g + d) - h + 10)
                }, 250);
                var i = this.$el.hasClass('is-open');
                if (i) this.$el.trigger('pf:widget:open');
                if (c != d) {
                    this.$el.addClass('is-open');
                    this.$el.css({
                        overflow: 'hidden',
                        height: c
                    });
                    this.$el.stop().animate({
                        height: d
                    }, {
                        duration: 250,
                        easing: 'easeInOutExpo',
                        complete: this.bind(function () {
                            this.$el.css({
                                overflow: '',
                                height: ''
                            });
                            this.$el[i ? 'addClass' : 'removeClass']('is-open');
                            this.$el.attr('aria-expanded', i);
                            if (!i) this.$el.trigger('pf:widget:close')
                        })
                    })
                }
            }
        }));
        return this
    };
    f.prototype.openHelp = function (a) {
        this.openOverlay('.js-widget--help', 'is-help-visible', '.js-widget--closehelp', a.target)
    };
    f.prototype.openSettings = function (a) {
        this.openOverlay('.js-widget--settings', 'is-settings-visible', '.js-widget--closesettings', a.target)
    };
    f.prototype.openOverlay = function (b, f, g, h) {
        function j() {
            var b = o.$el.offset(),
                c = o.$el.outerWidth(),
                d = a(window).width(),
                e = 'right';
            if (b.left / (d - c) >= 0.6) e = 'left';
            p.removeClass('is-left').removeClass('is-right');
            p.addClass('is-' + e);
            return p
        }
        function k(b) {
            if (o.isOverlayOpen) {
                o.isOverlayOpen = false;
                o.$el.removeClass(f);
                s.release();
                e.focus(h);
                q.off(o.tempns);
                a(document).off(o.tempns);
                a(window).off(o.tempns)
            }
        }
        function l(a) {
            if (!n(p, a.target)) k()
        }
        function m(b) {
            if (!n(p, b.target)) r.get(0).focus();
            else r = a(b.target)
        }
        function n(b, c) {
            return b.is(c) || a(c).parents().is(b)
        }
        var o = this,
            p = this.$el.find(b),
            q = p.find(g),
            r = q,
            s = new i;
        if (!this.isOverlayOpen) {
            this.isOverlayOpen = true;
            this.$el.addClass(f);
            p = j();
            s.keep(p);
            e.focus(r);
            q.on('click' + this.tempns, k);
            a(document).on(d.DRAGSTART + this.tempns, l);
            a(document).on('focusin' + this.tempns, m);
            a(document).on('keyup' + this.tempns, function (a) {
                if (a.keyCode == c.ESCAPE) {
                    a.preventDefault();
                    k(a)
                }
            });
            a(window).on('resize' + this.tempns, function () {
                j()
            })
        }
    };
    var i = function () {
    };
    i.prototype.keep = function (b) {
        var c = a(b);
        this.$disable = c.parents().add(c).siblings().not('[aria-hidden="true"]');
        this.$disable.attr('aria-hidden', 'true')
    };
    i.prototype.release = function () {
        this.$disable.removeAttr('aria-hidden');
        this.$disable = null
    };
    return f
}); define('uxui/app/modules/content/EfMoreActions', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/AccessibleMenu'
], function (a, b, c) {
    var d,
        e = '.ef_more_actions',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++;
        this.nstemp = this.ns + '_temp'
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.menu = new c;
        this.menu.init(b, {
            trigger: '.js-ef_more_actions--trigger',
            menu: '.js-ef_more_actions--menu',
            menuLinks: '.js-ef_more_actions--menu--list--item--link'
        });
        this.menu.addEventListener(c.OPEN, this.bind(this.handleMenuOpen));
        this.menu.addEventListener(c.CLOSE, this.bind(this.handleMenuClose));
        this.menu.addEventListener(c.SHOW, this.bind(this.handleMenuShow));
        this.menu.addEventListener(c.HIDE, this.bind(this.handleMenuHide));
        return this
    };
    d.prototype.handleMenuOpen = function () {
    };
    d.prototype.handleMenuClose = function () {
    };
    d.prototype.handleMenuShow = function () {
        this.$menu = this.menu.$menu;
        this.$trigger = this.menu.$trigger;
        this.$menu.addClass('is-more_actions-visible');
        this.positionMoreActionsMenu();
        return false
    };
    d.prototype.handleMenuHide = function () {
        this.$menu.removeClass('is-more_actions-visible');
        return false
    };
    var g = d.prototype.destroy;
    d.prototype.destroy = function () {
        this.menu.destroy();
        this.menu = null;
        this.$menu = null;
        this.$trigger = null;
        g.call(this)
    };
    d.prototype.positionMoreActionsMenu = function () {
        var b = this.$menu.find('.ef_more_actions--menu--list');
        this.$menu.removeClass('is-top-right is-top-left is-bottom-right is-bottom-left');
        this.$menu.css({
            top: '',
            bottom: '',
            left: '',
            right: ''
        });
        b.css({
            marginTop: ''
        });
        var c = 'bottom',
            d = 'right',
            e = this.$trigger.offset(),
            f = this.$trigger.position(),
            g = this.$trigger.outerWidth(),
            h = this.$trigger.outerHeight(),
            i = this.$menu.outerHeight(),
            j = (this.$menu.outerWidth(), a(window).height()),
            k = a(window).width(),
            l = a(window).scrollTop(),
            m = this.$trigger.closest('.detail_overlay--content');
        if (m.length) {
            var n = m.height();
            if (e.left + g / 2 > k / 2) d = 'left';
            if (e.top - l + h + i > n - 10) c = 'top'
        } else {
            if (e.left + g / 2 > k / 2) d = 'left';
            if (e.top - l + h + i > j - 10) c = 'top'
        }
        this.$menu.addClass('is-' + c + '-' + d);
        if ('top' == c) {
            this.$menu.css({
                top: f.top + h / 2
            });
            if ('right' == d) this.$menu.css({
                left: f.left + g
            });
            else this.$menu.css({
                left: f.left
            });
            var o = this.$menu.offset();
            if (m.length) var p = o.top + i - (l + n - 5);
            else var p = o.top + i - (l + j - 5);
            p = Math.min(p, e.top + h / 2 - l - 5, i - 20);
            b.css({
                marginTop: Math.min( - 20, - p)
            })
        } else {
            this.$menu.css({
                top: f.top + h
            });
            this.$menu.css({
                left: f.left + g / 2
            })
        }
    };
    return d
}); define('uxui/lib/animation/AnimationFrame', [
], function () {
    for (var a = 0, b = [
        'ms',
        'moz',
        'webkit',
        'o'
    ], c = 0; c < b.length && !window.requestAnimationFrame; ++c) {
        window.requestAnimationFrame = window[b[c] + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[b[c] + 'CancelAnimationFrame'] || window[b[c] + 'CancelRequestAnimationFrame']
    }
    if (!window.requestAnimationFrame) window.requestAnimationFrame = function (b) {
        var c = (new Date).getTime(),
            d = Math.max(0, 16 - (c - a)),
            e = window.setTimeout(function () {
                b(c + d)
            }, d);
        a = c + d;
        return e
    };
    if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function (a) {
        clearTimeout(a)
    };
    return {
        request: function () {
            return requestAnimationFrame.apply(null, arguments)
        },
        cancel: function () {
            return cancelAnimationFrame.apply(null, arguments)
        }
    }
}); define('uxui/app/modules/layout/WidgetGrid', [
    'jquery',
    'uxui/app/Config',
    'uxui/app/util/Capabilities',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode',
    'uxui/lib/animation/AnimationFrame'
], function (a, b, c, d, e, f) {
    function g(b, c, d) {
        var e = a(b),
            b = e[0];
        if (e.children().length == d) e.val(c);
        else {
            e.children().remove();
            for (var f = 1; f <= d; f++) {
                b[f - 1] = new Option(f, f);
                if (f == c) b[f - 1].selected = true
            }
        }
    }
    function h(a) {
        a.preventDefault()
    }
    function i(a, b) {
        if (!b) b = 'page';
        if (a.originalEvent) a = a.originalEvent;
        if (a.touches) return {
            x: a.touches[0][b + 'X'],
            y: a.touches[0][b + 'Y']
        };
        else return {
            x: a[b + 'X'],
            y: a[b + 'Y']
        }
    }
    var j,
        k = '.widget_grid',
        l = 0,
        m = '.js-widget_grid--item',
        n = '.widget',
        o = 300;
    j = function () {
        this.$el = null;
        this.ns = k + l++;
        this.defaultLayoutAbsolute = !('ontouchstart' in window)
    };
    j.prototype = new d;
    j.prototype.init = function (b) {
        var d = this;
        this.$el = a(b);
        var e = this.$el.find(m);
        this.$dummy = e.filter('.is-dummy');
        if (!this.$dummy.length) {
            this.$dummy = e.eq(0).clone();
            this.$dummy.find(n).html('');
            this.$dummy.addClass('is-dummy');
            this.$el.prepend(this.$dummy)
        }
        this.$dummy.css('visibility', 'hidden').css('position', 'absolute');
        a(window).on('resize' + this.ns, function () {
            d.invalidateLayout()
        });
        this.invalidateLayout();
        this.on('focus' + this.ns, '.js-accessible_sorter', this.bind(function (b) {
            var c = a(b.currentTarget),
                d = c.parents(m),
                e = this.getChildren(),
                f = e.index(d) + 1;
            g(c, f, e.length)
        }));
        this.renderAllSortSelect();
        this.on('change' + this.ns, '.js-accessible_sorter', function (b) {
            var c = a(this),
                e = c.val(),
                f = c.parents(m).eq(0);
            d.moveItem(f, e).done(function () {
                c.blur();
                c.focus()
            });
            c.focus();
            d.renderAllSortSelect()
        });
        this.on(c.dragstart(this.ns), '.widget--title', function (a) {
            a.type.toLowerCase();
            if (!d.dragging) {
                d.dragging = true;
                if (c.isTouchEvent(a)) d.startTouch(a);
                else d.startDrag(a)
            }
        });
        a(document).on('click' + this.ns, '.js-widget--togglemove', function (a) {
            a.preventDefault();
            var b = d.isMovingMode();
            if (b) d.endMovingMode();
            else d.startMovingMode()
        });
        var h = 0,
            i = function () {
                for (var a = false, b = d.$el[0].children, c = 0; c < b.length; c++) if (!b[c].widgetGridProcessed) {
                    b[c].widgetGridProcessed = true;
                    a = true
                }
                if (a) d.invalidateLayout();
                d.childCheck = f.request(i);
                h++;
                if (h % 1000 === 0);
            };
        this.childCheck = f.request(i);
        this.on('click' + this.ns, '.js-widget--move', this.bind(this.handleMoveButton));
        a(document).on('keydown' + this.ns, this.bind(this.keyboardHandler));
        return this
    };
    j.prototype.destroy = function () {
        this._destroy();
        f.cancel(this.childCheck)
    };
    j.prototype.renderAllSortSelect = function () {
        var a = this.getChildren().length;
        this.$el.find('.js-accessible_sorter').each(function (b) {
            g(this, b + 1, a)
        })
    };
    j.prototype.startMovingMode = function () {
        this.movingMode = true;
        a('html').addClass('is-widget_moving');
        a('.widget_movecontrols').fadeIn();
        this.renderAllSortSelect()
    };
    j.prototype.endMovingMode = function () {
        this.movingMode = false;
        a('html').removeClass('is-widget_moving');
        a('.widget_movecontrols').fadeOut()
    };
    j.prototype.isMovingMode = function () {
        return !!this.movingMode
    };
    j.prototype.keyboardHandler = function (a) {
        if (!(a.ctrlKey || a.metaKey || a.altKey)) switch (a.keyCode) {
            case e.ESCAPE:
                var b = this.isMovingMode();
                if (b) {
                    a.preventDefault();
                    this.endMovingMode()
                }
        }
    };
    j.prototype.moveItem = function (b, c) {
        var d = this,
            e = isNaN(b) ? a(b)  : this.getChildren() [b],
            f = (d.$el, a.Deferred());
        this.absoluteLayout = true;
        this.validateLayout();
        this.setItemPosition(e, c - 1);
        e.addClass('is-dragging');
        setTimeout(function () {
            d.validateLayout({
                transition: 'all 200ms ease-in-out',
                onBeforeLayout: function () {
                    e.css({
                        transition: 'all 300ms ease-in-out'
                    })
                }
            })
        }, 10);
        setTimeout(function () {
            d.absoluteLayout = false;
            d.validateLayout();
            e.removeClass('is-dragging');
            f.resolve()
        }, 350);
        return f.promise()
    };
    j.prototype.handleMoveButton = function (b) {
        var c = a(b.currentTarget),
            d = c.parents(m),
            e = c.attr('name'),
            f = d.data('grid'),
            g = f.index + 1;
        switch (e) {
            case 'left':
                g--;
                break;
            case 'right':
                g++;
                break;
            case 'up':
                g -= this.numItemsPerRow;
                break;
            case 'down':
                g += this.numItemsPerRow
        }
        if (!(g < 0 || g > this.getChildren().length - 1)) this.moveItem(d, g)
    };
    var p;
    j.prototype.triggerSortChange = function (a, b) {
        var c = this;
        clearTimeout(p);
        p = setTimeout(function () {
            c.$el.trigger('pf:widget:sortchange')
        }, 5)
    };
    j.prototype.setItemPosition = function (b, c) {
        var d,
            e = this.$el;
        if ('number' == typeof b) d = this.getChildren().eq(b);
        else d = a(b);
        d.detach();
        var f = this.getChildren().eq(c);
        if (f.length) f.before(d);
        else e.append(d);
        this.triggerSortChange()
    };
    j.prototype.invalidateLayout = function () {
        this.validateLayout()
    };
    j.prototype.validateLayout = function (a) {
        a = a || {
        };
        var b = this.getChildren();
        b.css({
            transition: 'none'
        });
        this.$el.css('margin-right', '');
        var c = this.$dummy.outerWidth(),
            d = this.$dummy.outerHeight(),
            e = this.$el.width(),
            f = this.numItemsPerRow = Math.floor(e / c) || 1;
        this.gridWidth = e / f;
        this.gridHeight = d;
        this.gridRowLength = f;
        this.gridRows = [
        ];
        var g,
            h,
            i,
            j,
            k;
        if (a.transition) b.css({
            transition: a.transition
        });
        if (a.onBeforeLayout) a.onBeforeLayout();
        for (var l, m, n = 0; n < b.length; n++) {
            k = b.eq(n);
            if (n % f === 0) {
                j = [
                ];
                this.gridRows.push(j);
                g = e;
                h = f;
                i = Math.floor(n / f) * d
            }
            c = Math.round(g / h);
            k.css({
                width: 100 / f + '%'
            });
            if (this.absoluteLayout || a.absolute) k.css({
                top: i,
                left: e - g,
                float: 'none',
                height: d,
                position: 'absolute'
            });
            else k.css({
                top: '',
                left: '',
                height: '',
                float: '',
                position: ''
            });
            k.data('grid', {
                x: m = n % f,
                y: l = Math.floor(n / f),
                index: n
            });
            j.push(k);
            var o = k.find('.js-widget--move');
            o.filter('[name="left"]').prop('disabled', 0 == m);
            o.filter('[name="right"]').prop('disabled', m == f - 1 || n == b.length - 1);
            o.filter('[name="up"]').prop('disabled', 0 == l);
            o.filter('[name="down"]').prop('disabled', !b[n + f]);
            g -= c;
            h--
        }
        if (this.absoluteLayout || a.absolute) this.$el.css({
            position: 'relative',
            height: Math.ceil(b.length / f) * d
        });
        else this.$el.css({
            position: '',
            height: ''
        });
        this.$el.trigger('pf:widget:validate')
    };
    j.prototype.getChildren = function () {
        var a = this.$el.find(m + ':visible').not('.is-dummy');
        return a
    };
    window.addEventListener('touchmove', function () {
    });
    j.prototype.startTouch = function (b) {
        function d(a) {
            var b = i(a, 'client');
            if (Math.abs(b.y - j.y) > 5 || Math.abs(b.x - j.x) > 25) e(a)
        }
        function e(b) {
            f.dragging = false;
            a(document).off(g);
            a(window).off(g);
            clearTimeout(k)
        }
        var f = this,
            g = this.ns + '-dragging',
            j = i(b, 'client');
        a(document).on(c.dragend(g, b), e);
        a(document).on(c.dragmove(g, b), d);
        a(window).on('contextmenu' + g, h);
        var k = setTimeout(function () {
            a(document).off(g);
            f.startDrag(b)
        }, o)
    };
    j.prototype.startDrag = function (b) {
        function d(a) {
            a.preventDefault();
            n = a;
            var b,
                c,
                d = o.$el.hasClass('is-customizable'),
                e = i(a),
                f = i(a, 'client'),
                g = e.x - t.x,
                h = e.y - t.y;
            j(q, g, h, false);
            k(r);
            var m = {
                x: Math.ceil((u.x + g) / o.gridWidth),
                y: Math.round((u.y + h) / o.gridHeight)
            };
            if (1 == o.gridRowLength) m = {
                x: 0,
                y: Math.ceil((u.y + h) / o.gridHeight)
            };
            s = m.y * o.gridRowLength + m.x;
            if (m.x >= 0 && m.x <= o.gridRowLength && m.y >= 0 && m.y <= o.gridRows.length && (!d || s > 0 && s < r.length + 1)) {
                c = o.gridRows[m.y];
                if (s > w.index) s--;
                if (c && s != w.index) if (1 == o.gridRowLength) {
                    for (b = 0; b < m.y; b++) {
                        c = o.gridRows[b][0];
                        if (b < o.gridRows.length && !c.is(q)) j(c, 0, - o.gridHeight / 2)
                    }
                    for (b = m.y; b < o.gridRows.length; b++) {
                        c = o.gridRows[b][0];
                        if (!c.is(q)) j(c, 0, o.gridHeight / 2)
                    }
                } else {
                    for (b = 0; b < m.x; b++) if (b < c.length && !c[b].is(q) && !(m.y == w.y && b < w.x && m.x > w.x)) j(c[b], - o.gridWidth / 2, 0);
                    for (b = m.x; b < c.length; b++) if (!c[b].is(q) && !(m.y == w.y && b > w.x && m.x < w.x)) j(c[b], o.gridWidth / 2, 0)
                }
            } else s = - 1;
            var p = 100;
            if (f.y < p) l(f.y - p);
            else if (f.y > v.height - p) l(f.y - v.height + p);
            else l(0)
        }
        function e(b) {
            if (n) f(q, n, true);
            l(0);
            o.dragging = false;
            document.removeEventListener(x, d, {
                passive: false
            });
            a(window).off(p);
            a(document).off(p);
            a('html').css({
                'user-select': '',
                'pointer-events': ''
            });
            a('#body').css({
                overflow: ''
            });
            if (s >= 0) o.setItemPosition(q, s);
            o.renderAllSortSelect();
            o.validateLayout({
                transition: 'all 200ms ease-out',
                onBeforeLayout: function () {
                    q.css({
                        transition: 'all 300ms ease-out'
                    })
                }
            });
            h(q.add(r));
            setTimeout(function () {
                q.removeClass('is-dragging');
                o.absoluteLayout = false;
                o.validateLayout()
            }, 300)
        }
        function f(a, b, c) {
            var d = i(b),
                e = (i(b, 'client'), d.x - t.x),
                f = d.y - t.y;
            j(a, e, f, c)
        }
        function g(a) {
            if (Modernizr.csstransforms3d) a.css({
                transform: 'translateZ(0px)'
            })
        }
        function h(a) {
            a.css({
                transform: '',
                marginLeft: '',
                marginTop: ''
            })
        }
        function j(a, b, c, d) {
            if (a) if (!d && Modernizr.csstransforms3d) a.css({
                transform: 'translate3d(' + b + 'px,' + c + 'px, 0px)',
                marginLeft: '',
                marginTop: ''
            });
            else if (!d && Modernizr.csstransforms) a.css({
                transform: 'translate(' + b + 'px,' + c + 'px)',
                marginLeft: '',
                marginTop: ''
            });
            else a.css({
                    transform: '',
                    marginLeft: b,
                    marginTop: c
                })
        }
        function k(a) {
            a.css({
                transform: 'translateZ(0px)',
                marginLeft: '',
                marginTop: ''
            })
        }
        function l(b) {
            if (b) {
                var c = a(document),
                    d = a('html, body');
                z = b / 4;
                if (!y) y = setInterval(function () {
                    var a = c.scrollTop();
                    d.scrollTop(a + z)
                }, 30)
            } else {
                clearInterval(y);
                y = false
            }
        }
        var n,
            o = this,
            p = this.ns + '-dragging';
        b.preventDefault();
        this.absoluteLayout = true;
        this.validateLayout();
        var q = a(b.currentTarget).parents(m),
            r = this.getChildren().not(q);
        g(q.add(r));
        q.css({
            transition: 'none'
        });
        setTimeout(function () {
            r.css({
                transition: 'all 200ms ease-out'
            })
        }, 1);
        q.addClass('is-dragging');
        a('html').css({
            'user-select': 'none',
            'pointer-events': 'none'
        });
        a('#body').css({
            overflow: 'hidden'
        });
        var s,
            t = i(b),
            u = q.position(),
            v = {
                width: a(window).width(),
                height: a(window).height()
            },
            w = q.data('grid');
        u.x = u.left;
        u.y = u.top;
        a(document).on(c.dragend(p, b), e);
        var x = c.dragmove(false, b);
        document.addEventListener(x, d, {
            passive: false
        });
        var y,
            z
    };
    return j
});
define('uxui/app/modules/layout/sticky', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/plugins/mediaDispatcher',
    'uxui/app/util/DOMUtil'
], function (a, b, c, d) {
    var e,
        f = '.Sticky',
        g = 0;
    e = function () {
        this.$el = null;
        this.ns = f + g++
    };
    e.prototype = new b;
    e.prototype.init = function (b) {
        this.$el = a(b);
        this.$inner = this.$el.children().eq(0);
        this.isSticky = false;
        this.options = d.jsondata(this.$el, 'sticky') || {
        };
        this.marginTop = this.options.marginTop || 0;
        this.marginBottom = this.options.marginBottom || 0;
        this.scrollFirst = this.options.showBottom;
        this.$boundingParent = this.$el.parents(this.options.bottomLimit || 'body').eq(0);
        if (this.options.deviceLimit) c.isAbove(this.options.deviceLimit).then(this.bind(this.activate)).otherwise(this.bind(this.deactivate));
        else this.activate();
        return false
    };
    e.prototype.validate = function () {
        if (this.active) {
            this.measure();
            var b = a(document).scrollTop(),
                c = this.topLimit;
            if (this.scrollFirst && this.height > this.windowHeight - 2 * this.marginTop) c += this.height - this.windowHeight + this.marginTop;
            else c -= this.marginTop;
            var d = this.bottomLimit,
                e = b > c;
            if (e && !this.isSticky) this.$inner.css({
                position: 'fixed',
                zIndex: 1000
            });
            else if (!e && this.isSticky) this.reset();
            this.isSticky = e;
            if (this.isSticky) {
                var f = this.topLimit - c,
                    g = d - (f + this.height + b);
                if (g < 0) f += g;
                this.$inner.css({
                    top: f
                })
            }
        }
    };
    e.prototype.reset = function () {
        this.$inner.css({
            position: '',
            left: '',
            top: '',
            width: '',
            zIndex: ''
        });
        this.$el.css({
            height: ''
        })
    };
    e.prototype.invalidate = function () {
        this.validate()
    };
    e.prototype.activate = function () {
        this.active = true;
        this.on(window, 'scroll', this.bind(this.handleScroll));
        this.on(window, 'resize', this.bind(this.handleResize));
        this.securityInterval = setInterval(this.bind(this.invalidate), 1000);
        this.handleResize();
        this.invalidate()
    };
    e.prototype.deactivate = function () {
        this.active = false;
        clearInterval(this.securityInterval);
        a(window).off(this.ns);
        this.reset();
        this.isSticky = false
    };
    e.prototype.handleScroll = function () {
        this.invalidate()
    };
    e.prototype.handleResize = function () {
        this.invalidate()
    };
    e.prototype.measure = function () {
        this.$inner = this.$el.children().eq(0);
        var b = this.$el.offset(),
            c = this.$el.width();
        this.$inner.width(c);
        this.$el.height(this.$inner.height());
        this.windowHeight = a(window).height();
        this.height = this.$inner.height();
        this.topLimit = b.top - this.marginTop;
        this.leftLimit = b.left;
        this.bottomLimit = this.$boundingParent ? this.$boundingParent.offset().top + this.$boundingParent.outerHeight()  : document.body.scrollHeight;
        this.bottomLimit -= this.marginBottom;
        this.bottomDistance = document.body.scrollHeight - this.bottomLimit
    };
    return e
});
define('uxui/app/modules/nav/StickyFooter', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.sticky_footer',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        var c = this;
        this.$el = a(b);
        this.$inner = this.$el.find('.js-sticky_footer--inner');
        this.on(window, 'resize', function (a) {
            c.adjustFooter()
        });
        this.adjustFooter();
        return this
    };
    c.prototype.adjustFooter = function (a) {
        this.newHeight = this.$inner.outerHeight();
        this.$el.css('height', this.newHeight)
    };
    return c
});
define('uxui/app/modules/nav/SiteNavigation', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.SiteNavigation',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++;
        this.avoidCache = true
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        var c = this;
        this.$el = a(b);
        this.numBreakpoints = 5;
        this.currentState = this.numBreakpoints - 1;
        this.stateNamePrefix = 'is-narrow';
        this.stateBreakpoints = [
        ];
        this.$mainNav = this.$el.find('.header_main_nav');
        this.$userNav = this.$el.find('.user_nav');
        this.distanceOffset = 20;
        this.on(window, 'resize orientationchange', function (a) {
            c.resizeHandler()
        });
        this.resizeHandler();
        return this
    };
    c.prototype.checkState = function () {
        for (var a = 0; a < this.numBreakpoints; a++) if (this.setStateBreakPoint(a) < this.elWidth) return this.setState(a);
        this.setState(this.numBreakpoints - 1)
    };
    c.prototype.setStateBreakPoint = function (a) {
        if (this.avoidCache || !this.stateBreakpoints[a]) {
            this.setState(a);
            this.stateBreakpoints[a] = this.$mainNav.width() + this.$userNav.width() + this.distanceOffset
        }
        return this.stateBreakpoints[a]
    };
    c.prototype.setState = function (a) {
        if (a != this.currentState) {
            this.$el.removeClass(this.stateNamePrefix + this.currentState);
            this.currentState = a;
            this.$el.addClass(this.stateNamePrefix + this.currentState)
        }
    };
    c.prototype.resizeHandler = function () {
        this.elWidth = this.$el.width();
        this.checkState()
    };
    return c
});
define('uxui/lib/util/MicroTemplate', [
], function () {
    function a(a) {
        var b = a.replace(/[\r\t\n]/g, ' ').split('[%').join('\t').replace(/((^|%])[^\t]*)'/g, '$1\r').replace(/\t=(.*?)%]/g, '\',$1,\'').split('\t').join('\');').split('%]').join('p.push(\'').split('\r').join('\\\'');
        return new Function('obj', 'var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push(\'' + b + '\');}return p.join(\'\');')
    }
    var b = {
        convert: a
    };
    return b
});
define('uxui/lib/util/Templates', [
    'uxui/lib/util/MicroTemplate',
    'uxui/app/Config'
], function (a, b) {
    var c = function () {
            this.templates = b.get('templates') || {
            }
        },
        d = c.prototype;
    d.createInstance = function () {
        return new c
    };
    d.add = function (a, b) {
        this.templates[a] = b
    };
    d.get = function (b) {
        var c = this.templates[b];
        if (!c) c = $('script#' + b).html();
        if ('string' == typeof c) c = this.templates[b] = a.convert(c);
        return c
    };
    d.render = function (a, b) {
        var c = this.get(a);
        if (c) return c(b)
    };
    return new c
});
define('uxui/app/modules/forms/Autocomplete', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/util/Templates',
    'uxui/lib/browser/Accessibility',
    'uxui/lib/browser/KeyCode'
], function (a, b, c, d, e) {
    function f() {
        this.$el = null;
        this.ns = g + h++
    }
    var f,
        g = '.Autocomplete',
        h = 0,
        i = {
            selector: '.js-autocomplete',
            url: 'https://www.postfinance.ch/pfch-web/calculator/logicalc/tax/zipsearch/Index.do?search=&zipSearch.searchValue=%query%',
            min_length_searchstring: 3,
            style_ns: 'autocomplete',
            loadingClassname: 'is-loading',
            accessibility: {
                resultHint: {
                    template: '$(txt)',
                    no: 'No results found.',
                    singular: 'There is one result. $(description)',
                    plural: 'There are $(count) results. $(description)',
                    moreThanMax: 'There are more than $(maxEntries) results. Please improve your search term. $(description)',
                    description: 'Use tabulation (or down) key to access and browse suggestions after input. Confirm your choice with enter key, or esc key to close suggestions box.'
                }
            },
            input: {
                selector: '.js-autocomplete--input',
                hiddenClassname: 'js-autocomplete--input-hidden'
            },
            clearBtn: {
                selector: '.js-autocomplete-clear_button',
                template: '<button class="js-autocomplete-clear_button $(style_ns)-clear_button" aria-label="$(label)" title="$(label)" type="button">$(text)</button>',
                label: 'clear this field',
                text: '&times;'
            },
            suggestionList: {
                selector: '.js-autocomplete-suggestionlist',
                template: '<div class="js-autocomplete-suggestionlist $(style_ns)-suggestionlist" role="listbox"></div>',
                maxEntries: 50,
                item: {
                    selector: '.js-autocomplete-suggestionlist-item',
                    template: '<div class="js-autocomplete-suggestionlist-item $(style_ns)-suggestionlist--item" role="option" data-autocomplete-value="$(value)" tabindex="-1">$(label)</div>',
                    preselectClassName: 'is-preselected',
                    value: 'taxLocalityID'
                },
                label: {
                    dropdown_template: '<div class="l-leftright"><div class="l-left"><span class="zipCode">$(zipCode)</span> <span class="ciy">$(city)</span></div><div class="l-right"><span class="ciy">$(canton)</span></div></div>',
                    input_template: '$(zipCode) $(city)'
                }
            },
            result: {
                wrapper: 'municipality'
            }
        };
    f.prototype = new b;
    var j = f.prototype,
        k = j.init,
        l = j.destroy;
    j.init = function (b) {
        k.call(this, b);
        this.config = a.extend(true, {
        }, i, this.$el.data('autocomplete'));
        this.$input = this.$el.find(this.config.input.selector);
        this.$hiddenInput = this.$el.find('.' + this.config.input.hiddenClassname);
        this.initClearBtn();
        this.$input.attr({
            autocorrect: 'off',
            autocapitalize: 'off',
            spellcheck: 'off',
            autocomplete: 'off',
            'aria-autocomplete': 'list'
        });
        this.bindListeners();
        return this
    };
    j.destroy = function () {
        this.unbindListeners();
        this.$clearBtn.remove();
        this.$suggestionList.remove();
        l.call(this)
    };
    j.bindListeners = function () {
        var a = this;
        this.$input.on('keyup', this.bind(this.handleKeyup));
        this.$input.on('keydown', function (b) {
            a.handleKeydown(b, false)
        });
        this.$el.on('click', this.config.clearBtn.selector, this.bind(this.onClearBtn));
        this.$el.on('mouseenter', this.config.suggestionList.item.selector, this.bind(this.handleOptionMouseenter));
        this.$el.on('click', this.config.suggestionList.item.selector, this.bind(this.onOptionSelect));
        this.$el.on('keydown', this.config.suggestionList.item.selector, this.bind(this.handleOptionKeydown))
    };
    j.unbindListeners = function () {
    };
    j.initClearBtn = function () {
        this.$clearBtn = this.$el.find(this.config.clearBtn.selector);
        this.checkVisibilityClearBtn(this.$input.val())
    };
    j.initSuggestionList = function () {
        var b = this.config.suggestionList,
            c = this.string_template(b.template, b),
            d = this.getUniqueId();
        this.$suggestionList = a(c).attr('id', d);
        this.updateSuggestionList(false);
        this.$input.parent().append(this.$suggestionList);
        this.$input.attr('aria-owns', this.$suggestionList.attr('id'))
    };
    j.updateSuggestionList = function (a) {
        if (a && a.length > 0) {
            this.emptySuggestionList();
            this.$suggestionList.append(a);
            this.$suggestionList.show()
        } else {
            this.emptySuggestionList();
            this.setResultHint('');
            this.$suggestionList.hide()
        }
    };
    j.setSuggestionListOptions = function (b) {
        if ('undefined' === typeof this.$suggestionList) this.initSuggestionList();
        var c = this,
            d = [
            ];
        a.each(b, function (b, e) {
            var f = c.config.suggestionList,
                g = c.string_template(f.label.dropdown_template, e),
                h = c.string_template(f.item.template, a.extend(true, {
                    label: g
                }, f.item)),
                i = a(h);
            i.data('autocomplete-option', e);
            if (0 === b) c.markCurrentSelection(i);
            d.push(i)
        });
        this.updateSuggestionList(d)
    };
    j.selectPreselection = function () {
        var a = this.config.suggestionList.item,
            b = this.getSuggestionListItems().filter('.' + a.preselectClassName);
        this.selectOptionNode(b);
        this.updateSuggestionList(false)
    };
    j.markCurrentSelection = function (a) {
        var b = this.config.suggestionList.item;
        this.getSuggestionListItems().removeClass(b.preselectClassName);
        a.addClass(b.preselectClassName)
    };
    j.onOptionSelect = function (b) {
        var c = a(b.currentTarget);
        this.selectOptionNode(c);
        this.updateSuggestionList(false);
        d.focus(this.$input)
    };
    j.selectOptionNode = function (b) {
        if ('undefined' === typeof b || 0 === b.length) return false;
        var c = this.config.suggestionList.label,
            d = a.extend(true, c, b.data('autocomplete-option')),
            e = this.string_template(c.input_template, d),
            f = {
                value: d[this.config.suggestionList.item.value],
                text: e
            };
        this.setValue(f)
    };
    j.getSuggestionListItems = function () {
        if ('undefined' === typeof this.$suggestionList || 0 === this.$suggestionList.length) return null;
        else return this.$suggestionList.find(this.config.suggestionList.item.selector)
    };
    j.emptySuggestionList = function () {
        if (this.$suggestionList && this.$suggestionList.length > 0) this.$suggestionList.empty()
    };
    j.onClearBtn = function () {
        this.setValue('');
        this.checkVisibilityClearBtn('');
        this.handleKeyup({
        });
        d.focus(this.$input)
    };
    j.handleKeyup = function (a) {
        var b = this.$input.val();
        this.setValue({
            value: ''
        });
        if (a.keyCode !== e.ESC && a.keyCode !== e.UP && a.keyCode !== e.DOWN && a.keyCode !== e.TAB && a.keyCode !== e.ENTER) this.handleTheHaystack(b);
        this.checkVisibilityClearBtn(b)
    };
    j.handleKeydown = function (a, b) {
        var c = false;
        switch (a.keyCode) {
            case e.DOWN:
                this.focusRelativeOption(1);
                c = true;
                break;
            case e.TAB:
                if (b) this.focusRelativeOption(a.shiftKey ? - 1 : 1);
                else this.focusRelativeOption(1);
                c = 'undefined' !== typeof this.$suggestionList && this.getSuggestionListItems().length > 0;
                break;
            case e.ESC:
                this.updateSuggestionList(false);
                this.$input.focus();
                c = true;
                break;
            case e.ENTER:
                this.selectPreselection();
                this.updateSuggestionList(false);
                this.$input.focus();
                c = true
        }
        if (b) switch (a.keyCode) {
            case e.UP:
                this.focusRelativeOption( - 1);
                c = true
        }
        if (c) a.preventDefault();
        return !c
    };
    j.focusRelativeOption = function (b) {
        if (this.$suggestionList) {
            var c = this.getSuggestionListItems(),
                e = c.index(a(document.activeElement)),
                f = e + b,
                g = c.eq(f);
            if (f < 0 || f > c.length) if (f != - 2) g = null;
            else f = - 1;
            if (g && g.length > 0) {
                this.markCurrentSelection(g);
                d.focus(g)
            } else d.focus(this.$input)
        }
    };
    j.handleOptionMouseenter = function (b) {
        var c = a(b.currentTarget);
        this.markCurrentSelection(c);
        d.focus(c)
    };
    j.handleOptionKeydown = function (a) {
        if (a.keyCode === e.ENTER || a.keyCode === e.SPACE) this.onOptionSelect(a);
        if (!this.handleKeydown(a, true)) a.preventDefault()
    };
    j.setValue = function (a) {
        if ('string' === typeof a) {
            this.$hiddenInput.val(a);
            this.$input.val(a)
        } else {
            if (a.value) this.$hiddenInput.val(a.value);
            if (a.text) this.$input.val(a.text)
        }
    };
    j.checkVisibilityClearBtn = function (a) {
        if (0 === a.length) this.$clearBtn.hide();
        else this.$clearBtn.show()
    };
    j.setLoading = function (a) {
        this.$el[(a ? 'add' : 'remove') + 'Class'](this.config.loadingClassname)
    };
    j.handleTheHaystack = function (a) {
        var b = this;
        if (this.searchTimeout) clearTimeout(this.searchTimeout);
        this.searchTimeout = setTimeout(function () {
            if ('' != a && a.length >= b.config.min_length_searchstring) b.loadResults(a, function (a) {
                b.displayResults(a)
            });
            else {
                var c = {
                };
                if (b.config.result.wrapper) c[b.config.result.wrapper] = [
                ];
                b.displayResults(c)
            }
        }, 50)
    };
    j.loadResults = function (b, c) {
        this.setLoading(true);
        var d = this,
            e = this.config.url.split('%query%').join(encodeURIComponent(b)),
            f = function (a) {
                c(a);
                d.setLoading(false)
            },
            g = function (a) {
                d.setLoading(false)
            };
        if (this.xhr && 4 != this.xhr.readyState) this.xhr.abort();
        this.xhr = a.getJSON(e, f);
        this.xhr.fail(g)
    };
    j.displayResults = function (b) {
        if (this.config.result.wrapper) b = b[this.config.result.wrapper];
        var c = this,
            d = (this.config.accessibility.resultHint, b.length),
            e = this.getResultHint(d);
        this.setResultHint(e);
        if (b && d > 0 && d > this.config.suggestionList.maxEntries) b = b.slice(0, this.config.suggestionList.maxEntries);
        this.setSuggestionListOptions(b);
        if (d > 0) a(document).on('click' + this.ns, function (b) {
            if (0 === a(b.target).closest(c.config.selector).length) c.selectPreselection()
        });
        else a(document).off('click' + this.ns)
    };
    j.getResultHint = function (b) {
        var c = this.config.accessibility.resultHint,
            d = '';
        if (0 === b) d = c.no;
        else {
            var e = 1 === b ? c.singular : b > this.config.suggestionList.maxEntries ? c.moreThanMax : c.plural,
                f = this.string_template(e, a.extend(true, c, {
                    maxEntries: this.config.suggestionList.maxEntries,
                    count: b
                }));
            d = this.string_template(c.template, a.extend(true, c, {
                txt: f
            }))
        }
        return d
    };
    j.setResultHint = function (a) {
        d.speak(a)
    };
    j.string_template = function (b, c) {
        c = a.extend(true, {
            style_ns: this.config.style_ns
        }, c);
        return b.replace(/\$\(([^\)]+)?\)/g, function (a, b) {
            return c[b] || ''
        })
    };
    j.getUniqueId = function () {
        for (var b = null; !b; ) {
            var c = '__temp-ID__' + Math.floor(1000000 * Math.random());
            if (0 === a('#' + b).length) b = c
        }
        return b
    };
    return f
});
define('uxui/app/modules/forms/TextInputRowNarrow', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode'
], function (a, b, c) {
    var d,
        e = '.textinput-with-label',
        f = 0,
        g = function () {
        };
    d = function () {
        this.$el = null;
        this.ns = e + f++;
        this.nstemp = this.ns + '_temp'
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.$inputField = a(b).find('input');
        this.activeClassName = 'text_input-has_value has-value';
        this.staticSelect = a(b).hasClass('text_input_row_narrow_with_select-static');
        this.$inputField.on('focus' + this.ns, this.bind(this.handleFocus));
        this.$inputField.on('change' + this.ns, this.bind(this.handleChange));
        if (this.$inputField.is(document.activeElement)) this.handleFocus();
        if (true === this.$el.data('disablevaluerendering')) this.selectFieldChangeHandler = g;
        this.hasValue = false;
        this.selectFieldEnabled = false;
        this.checkValue();
        return this
    };
    d.prototype.checkValue = function (a) {
        var b = this.$inputField[0],
            c = !!(this.$inputField.val() || 'rgb(250, 255, 189)' === window.getComputedStyle(this.$inputField[0]).backgroundColor || 'rgb(232, 240, 254)' === window.getComputedStyle(this.$inputField[0]).backgroundColor);
        if (!c) c = !!(b.validity && !b.validity.valid && !b.validity.valueMissing);
        if (c && !this.hasValue) {
            this.$el.addClass(this.activeClassName);
            this.enableSelectField()
        } else if (!c && this.hasValue) {
            this.$el.removeClass(this.activeClassName);
            this.disableSelectField()
        } else if (this.$el.hasClass('text_input_row_narrow-error has-error')) this.enableSelectField();
        if (this.staticSelect) this.enableSelectField();
        this.hasValue = !!c
    };
    d.prototype.enableSelectField = function () {
        this.$selectField = this.$el.find('.text_input_row_narrow--select--field');
        if (this.$selectField[0] && !this.selectFieldEnabled) {
            this.$selectField.on('keyup' + this.nstemp, this.bind(this.selectFieldKeyupHandler));
            this.$selectField.on('change' + this.nstemp, this.bind(this.selectFieldChangeHandler));
            this.$selectField.attr('tabindex', '0');
            this.selectFieldEnabled = true
        }
    };
    d.prototype.selectFieldKeyupHandler = function (a) {
        if (a.keyCode == c.UP_ARROW || a.keyCode == c.DOWN_ARROW) this.selectFieldChangeHandler(a)
    };
    d.prototype.selectFieldChangeHandler = function () {
        if (!this.$selectFieldSelectedVal) this.$selectFieldSelectedVal = this.$el.find('.text_input_row_narrow--select--selected_val--text');
        this.$selectFieldSelectedVal.html(this.$selectField.val())
    };
    d.prototype.disableSelectField = function () {
        if (this.$selectField[0]) if (true != this.staticSelect) {
            this.$selectField.off('keyup' + this.nstemp);
            this.$selectField.off('change' + this.nstemp);
            this.$selectField.attr('tabindex', '-1');
            this.selectFieldEnabled = false
        }
    };
    d.prototype.handleFocus = function (a) {
        this.$el.addClass('has-focus');
        this.$inputField.on('blur' + this.nstemp, this.bind(this.handleBlur));
        this.$inputField.on('change' + this.nstemp, this.bind(this.handleChange));
        this.$inputField.on('keydown' + this.nstemp, this.bind(this.handleKeyDown));
        this.$inputField.on('keyup' + this.nstemp, this.bind(this.handleKeyUp))
    };
    d.prototype.handleBlur = function (a) {
        this.$el.removeClass('has-focus');
        this.$inputField.off(this.nstemp);
        this.hasValue = false
    };
    d.prototype.handleChange = function (a) {
        this.checkValue()
    };
    d.prototype.handleKeyDown = function (a) {
        setTimeout(this.bind(this.checkValue), 0)
    };
    d.prototype.handleKeyUp = function (a) {
        this.checkValue()
    };
    return d
});
define('uxui/app/modules/forms/InputNumberKeyboard', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/DOMUtil'
], function (a, b, c) {
    function d(a) {
        if (void 0 == a) a = '';
        var b = a.toString();
        b = b.replace(/,/g, '.');
        b = b.replace(/[^\d\.]/g, '');
        b = Number(b);
        if (b > 999999999999999) b = '';
        return b || ''
    }
    function e(a) {
        if ('' != a) {
            a = a.toString();
            a = a.replace(/'/g, '');
            a = a.replace(/,/g, '.');
            a = a.replace(/[^\d\.]/g, '')
        }
        if ('' === a) return '';
        var b = Number(a);
        if (isNaN(b)) return '';
        var c = Math.round(100 * b) != 100 * b ? 3 : 2;
        b = b.toFixed(c);
        var d = ('-' == b.charAt(0) ? b.length - 1 : b.length, b.toString().split('.'));
        d[0] = d[0].replace(/\B(?=(\d{3})+(?!\d))/g, '\'');
        return d.join('.')
    }
    var f,
        g = '.InputNumberKeyboard',
        h = 0,
        i = navigator.userAgent.toLowerCase(),
        j = (i.indexOf('android') > - 1, navigator.userAgent.match(/(iPad|iPhone|iPod)/g));
    'ontouchstart' in window;
    f = function () {
        this.$el = null;
        this.ns = g + h++;
        this.nstemp = this.ns + '_temp'
    };
    f.prototype = new b;
    f.prototype.init = function (b) {
        this.$el = a(b);
        this.initElement(b);
        return this
    };
    f.prototype.initElement = function (b) {
        function f() {
            try {
                k.get(0).setSelectionRange(0, 100000)
            } catch (a) {
                k.get(0).select()
            }
        }
        var g = a(b),
            h = g.children('input'),
            i = a(h[0]);
        if (1 === h.length) {
            var k = i.clone();
            k.attr({
                id: k.attr('id') + '--hidden'
            })
        } else var k = a(h[1]);
        k.attr(!j ? {
                type: 'tel',
                name: ''
            }
            : {
                type: 'number',
                step: '0.001',
                name: ''
            });
        k.css({
            position: 'absolute',
            left: 0,
            bottom: 0,
            right: 0,
            zIndex: 1,
            opacity: 0
        });
        var l;
        k.val(d(i.val()));
        g.append(k);
        i.attr('tabindex', '-1').attr('aria-hidden', 'true');
        i.on('focus', function (a) {
            a.preventDefault();
            c.focus(k.get(0));
            f()
        });
        k.on('focus', function (a) {
            i.css('visibility', 'hidden');
            l = i.val();
            var b = d(l);
            i.val(e(b) || '0');
            i.trigger('change');
            k.val(b);
            k.css('opacity', '1');
            f()
        });
        k.on('blur', function (a) {
            var b = k.get(0),
                c = b.validity ? b.validity.valid : true,
                d = c ? e(k.val())  : l;
            k.css('opacity', '0');
            i.css('visibility', '');
            i.val(d);
            i.trigger('change');
            i.trigger('blur')
        });
        if (j) {
            k.on('keydown', function (a) {
                var b = a.which ? a.which : a.keyCode;
                if (188 == b) {
                    k.val(k.val() + '.');
                    return false
                }
                if (222 == b) {
                    k.val(k.val() + '');
                    return false
                }
            });
            k.on('paste', function (a) {
                var b = a.clipboardData || window.clipboardData || a.originalEvent.clipboardData,
                    c = b.getData('text/plain');
                k.val(d(c) || '0');
                a.preventDefault();
                return false
            })
        }
        k.on('keyup', function (a) {
            i.val(e(k.val()) || '0');
            i.trigger('change')
        });
        k.on('change', function (a) {
            i.val(e(k.val()) || '0');
            k.val(d(k.val()) || '0');
            i.trigger('change')
        })
    };
    return f
});
define('uxui/app/modules/forms/EfSelect', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/AccessibleMenu',
    'uxui/app/util/DOMUtil',
    'uxui/app/util/TextSearch'
], function (a, b, c, d, e) {
    var f,
        g = '.EfSelect',
        h = 0,
        i = {
            valueRenderingInactive: false
        },
        j = function () {
        };
    f = function () {
        this.$el = null;
        this.ns = g + h++;
        this.nstemp = this.ns + '_temp';
        this.keysearch = '';
        this.keysearchtimeout = null;
        this.menuActiveClassName = 'ef_select-open';
        this.listItemActiveClassName = 'ef_select--menu--list--item-active'
    };
    f.prototype = new b;
    f.prototype.init = function (b) {
        this.$el = a(b);
        this.options = a.extend({
        }, i, d.jsondata(this.$el, 'ef_select'));
        this.$input = this.$el.find('.js-ef_select--value');
        if (this.options.valueRenderingInactive) this.renderValue = j;
        else this.$input.on('change' + this.ns, this.bind(this.renderValue));
        if (this.$input.val() != this.$el.data('value')) {
            this.initVariables();
            this.renderValue()
        }
        this.menu = new c;
        this.menu.init(b, {
            trigger: '.js-ef_select--trigger',
            menu: '.js-ef_select--menu',
            menuLinks: '.js-ef_select--menu--list--item',
            activeClass: this.listItemActiveClassName,
            keysearch: true
        });
        this.menu.addEventListener(c.OPEN, this.bind(this.handleMenuOpen));
        this.menu.addEventListener(c.SHOW, this.bind(this.handleMenuShow));
        this.menu.addEventListener(c.HIDE, this.bind(this.handleMenuHide));
        this.menu.addEventListener(c.ITEMSELECT, this.bind(this.handleMenuSelect));
        this.ts = 0;
        this.on('touchstart', '.js-ef_select--menu', this.bind(function (a) {
            var b = this.$selectMenu[0];
            if (b) this.ts = a.originalEvent.touches[0].clientY
        }));
        this.on('touchmove', '.js-ef_select--menu', this.bind(function (a) {
            var b = a.originalEvent.changedTouches[0].clientY,
                c = this.$selectMenu[0];
            if (c) {
                var d = c.scrollHeight - this.$selectMenu.scrollTop() <= this.$selectMenu.height();
                if (this.ts < b) d = this.$selectMenu.scrollTop() <= 0;
                if (d) a.preventDefault()
            }
        }));
        return this
    };
    var k = f.prototype.destroy;
    f.prototype.destroy = function () {
        this.menu.close();
        this.menu.destroy();
        this.menu = null;
        k.call(this);
        this.$trigger = null;
        this.$menuLinks = null;
        this.$selectMenu = null;
        this.$selectedVal = null
    };
    f.prototype.handleMenuOpen = function () {
        this.initVariables();
        this.$menuLinks.removeClass(this.listItemActiveClassName);
        this.$selected = this.$menuLinks.filter('[data-value="' + this.getValue() + '"]');
        this.$selected.addClass(this.listItemActiveClassName)
    };
    f.prototype.handleMenuShow = function () {
        var b = this;
        a(window).on('scroll' + this.nstemp, function () {
            b.positionMenu()
        });
        a(window).on('resize' + this.nstemp, function () {
            b.positionMenu()
        });
        a(document).on('click' + this.nstemp, '.js-ef_select--menu--close_btn', this.bind(this.closeButtonHandler));
        this.$el.addClass(this.menuActiveClassName);
        this.positionMenu(true);
        return false
    };
    f.prototype.handleMenuHide = function () {
        this.$el.removeClass(this.menuActiveClassName);
        a(document).off(this.nstemp);
        a(window).off(this.nstemp);
        a('html').removeClass('no-scroll');
        a('body').removeClass('no-scroll');
        this.$trigger.get(0).focus();
        return false
    };
    f.prototype.handleMenuSelect = function (a) {
        this.selectMenuItem(a);
        return false
    };
    f.prototype.initVariables = function () {
        this.$trigger = this.$el.find('.js-ef_select--trigger');
        this.$menuLinks = this.$el.find('.js-ef_select--menu--list--item');
        this.$selectMenu = this.$el.find('.js-ef_select--menu');
        this.$selectedVal = this.$el.find('.js-ef_select--selected_val')
    };
    f.prototype.keypressHandler = function (b) {
        var c = this,
            d = String.fromCharCode(b.which);
        if (d.match(/[0-z]/gi)) {
            var f = new Date;
            if (this.keysearchtime && f - this.keysearchtime > 1500) this.keysearch = '';
            this.keysearchtime = f;
            d = d.toLowerCase();
            this.keysearch += d;
            clearTimeout(this.keysearchtimeout);
            this.keysearchtimeout = setTimeout(function () {
                var b = [
                ];
                c.$menuLinks.each(function () {
                    b.push(a(this).text())
                });
                var d = e.search(b, c.keysearch, {
                    returnIndex: true
                });
                if (d.length) c.menu.focusIndex(d[0])
            }, 100)
        } else this.keysearch = ''
    };
    f.prototype.closeButtonHandler = function (a) {
        a.preventDefault();
        this.menu.close()
    };
    f.prototype.selectMenuItem = function (b) {
        var c = a(b);
        c.attr('aria-selected', 'false');
        c = a(b).attr('aria-selected', 'true');
        var d = this.getValue();
        this.setValue(c.data('value'));
        this.menu.close();
        if (this.getValue() != d) {
            var e = this.$trigger;
            e.addClass('has-changed');
            setTimeout(function () {
                e.removeClass('has-changed');
                e.css({
                    transition: 'all 50ms ease-out'
                })
            }, 150);
            setTimeout(function () {
                e.css({
                    transition: ''
                })
            }, 200)
        }
    };
    f.prototype.renderValue = function () {
        this.$el.addClass('has-value');
        var a = this.$menuLinks.filter('[data-value="' + this.getValue() + '"]');
        if (a.length) this.$selectedVal.html(a.html())
    };
    f.prototype.setValue = function (a) {
        this.$input.val(a).trigger('change')
    };
    f.prototype.getValue = function (a) {
        return this.$input.val()
    };
    f.prototype.positionMenu = function (a) {
        this.$selectMenu.css({
            left: this.$trigger.offset().left,
            width: this.$trigger.outerWidth()
        });
        this.setMenuTop(a)
    };
    f.prototype.setMenuTop = function (b) {
        if (true) {
            this.$el.removeClass('has-scroll');
            this.$selectMenu.css({
                height: ''
            });
            this.menuHeight = this.$selectMenu.height()
        }
        var c = a(document).scrollTop(),
            d = {
                top: 10,
                bottom: a(window).height() - 10
            },
            e = d.bottom - d.top,
            f = 0;
        if (this.$selected && this.$selected.length) {
            f = this.$selected.position().top;
            this.$selected = null
        }
        var g = this.$trigger.offset().top - f - c,
            h = 0,
            i = false;
        if (g + this.menuHeight > d.bottom) g = d.bottom - this.menuHeight;
        if (g < d.top) {
            h = d.top - g;
            g = d.top
        }
        if (this.menuHeight > d.bottom - d.top) i = true;
        else if ('static' == this.$selectMenu.css('position')) i = true;
        this.$selectMenu.css({
            top: g,
            height: i ? e : ''
        });
        if (i) {
            a('html').addClass('no-scroll');
            a('body').addClass('no-scroll');
            this.$el.addClass('has-scroll')
        } else {
            a('html').removeClass('no-scroll');
            a('body').removeClass('no-scroll');
            this.$el.removeClass('has-scroll')
        }
        if (b);
    };
    return f
});
define('uxui/app/modules/forms/SelectInput', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.SelectInput',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.on('change', 'select', this.bind(this.handleChange));
        this.$el.find('.js-select_input--value').text(this.$el.find('select').val());
        return this
    };
    c.prototype.handleChange = function (a) {
        this.$el.find('.js-select_input--value').text(a.target.value)
    };
    return c
});
define('uxui/app/modules/forms/SelectInputKonto', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.SelectInputKonto',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.on('change', 'select', this.bind(this.handleChange));
        this.handleChange();
        this.$el.addClass('is-active');
        return this
    };
    c.prototype.handleChange = function (a) {
        var b = this.$el.find('option:selected').text();
        b = b.replace('«', '<strong>').replace('»', '</strong>');
        this.$el.find('.js-select_input--value').html(b)
    };
    return c
});
define('uxui/vendor/datepicker/datepicker', [
    'jquery'
], function (a) {
    var b = function b() {
        function c(a) {
            if (!_) {
                _ = true;
                var b = document.getElementsByTagName('script'),
                    a = a || j(String(b[b.length - 1].innerHTML).replace(/[\n\r\s\t]+/g, ' ').replace(/^\s+/, '').replace(/\s+$/, ''));
                if ('object' === typeof a && !('err' in a)) i(a);
                if (H && 'object' != typeof fdLocale) {
                    var c,
                        d,
                        e = document.getElementsByTagName('head') [0] || document.documentElement,
                        f = K ? K : b[b.length - 1].src.substr(0, b[b.length - 1].src.lastIndexOf('/')) + '/lang/';
                    for (d = 0; d < x.length; d++) {
                        c = document.createElement('script');
                        c.type = 'text/javascript';
                        c.src = f + x[d] + '.js';
                        c.charSet = 'utf-8';
                        if ($ && $ < 8) {
                            var g = document.getElementsByTagName('base');
                            if (g.length && g[0].childNodes.length) g[0].appendChild(c);
                            else e.appendChild(c);
                            g = null
                        } else e.appendChild(c)
                    }
                    c = null
                } else L = true
            }
        }
        function d(a) {
            return a.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, '\\$1')
        }
        function e(a) {
            for (; a.firstChild; ) a.removeChild(a.firstChild)
        }
        function f(a, b) {
            if (!new RegExp('(^|[' + Z + '])' + b + '([' + Z + ']|$)').test(a.className)) a.className += (a.className ? ' ' : '') + b
        }
        function g(a, b) {
            a.className = !b ? '' : a.className.replace(new RegExp('(^|[' + Z + '])' + b + '([' + Z + ']|$)'), ' ').replace(new RegExp('/^[' + Z + '][' + Z + ']*/'), '').replace(new RegExp('/[' + Z + '][' + Z + ']*$/'), '')
        }
        function h() {
            var a = document.getElementsByTagName('html') [0].getAttribute('lang') || document.getElementsByTagName('html') [0].getAttribute('xml:lang');
            a = !a ? 'en' : a.toLowerCase();
            return a.search(/^([a-z]{2,3})-([a-z]{2})$/) != - 1 ? [
                a.match(/^([a-z]{2,3})-([a-z]{2})$/) [1],
                a
            ] : [
                a
            ]
        }
        function i(a) {
            if ('object' === typeof a) {
                var b,
                    c = {
                        debug: function (a) {
                            u = !!a;
                            return true
                        },
                        lang: function (a) {
                            if ('string' === typeof a && a.search(/^[a-z]{2,3}(-([a-z]{2}))?$/i) != - 1) {
                                x = [
                                    a.toLowerCase()
                                ];
                                L = true;
                                H = true
                            }
                            return true
                        },
                        nodrag: function (a) {
                            J = !!a;
                            return true
                        },
                        buttontabindex: function (a) {
                            F = !!a;
                            return true
                        },
                        derivelocale: function (a) {
                            H = !!a;
                            return true
                        },
                        mousewheel: function (a) {
                            G = !!a;
                            return true
                        },
                        cellformat: function (a) {
                            if ('string' === typeof a) k(a);
                            return true
                        },
                        titleformat: function (a) {
                            if ('string' === typeof a) O = a;
                            return true
                        },
                        statusformat: function (a) {
                            if ('string' === typeof a) P = a;
                            return true
                        },
                        describedby: function (a) {
                            if ('string' === typeof a) w = a;
                            return true
                        },
                        finalopacity: function (a) {
                            if ('number' === typeof a && + a > 20 && + a <= 100) C = parseInt(a, 10);
                            return true
                        },
                        bespoketitles: function (a) {
                            if ('object' === typeof a) {
                                B = {
                                };
                                for (var b in a) if (a.hasOwnProperty(b) && String(b).match(Y) != - 1) B[b] = String(a[b])
                            }
                            return true
                        },
                        dateparsefallback: function (a) {
                            M = !!a;
                            return true
                        },
                        languagefilelocation: function (a) {
                            K = a;
                            return true
                        },
                        _default: function () {
                            if (u) throw 'Unknown key located within JSON data: ' + b;
                            return true
                        }
                    };
                for (b in a) if (a.hasOwnProperty(b)) (c.hasOwnProperty(String(b).toLowerCase()) && c[String(b).toLowerCase()] || c._default) (a[b]);
                else ;
            }
        }
        function j(a) {
            if (!('string' === typeof a) || '' == a) return {
            };
            try {
                if ('object' === typeof JSON && JSON.parse) return window.JSON.parse(a);
                else if (/debug|lang|nodrag|buttontabindex|derivelocale|mousewheel|cellformat|titleformat|statusformat|describedby|finalopacity|bespoketitles|dateparsefallback/.test(a.toLowerCase())) {
                    var b = Function(['var document,top,self,window,parent,Number,Date,Object,Function,',
                        'Array,String,Math,RegExp,Image,ActiveXObject;',
                        'return (',
                        a.replace(/<\!--.+-->/gim, '').replace(/\bfunction\b/g, 'function-'),
                        ');'].join(''));
                    return b()
                }
            } catch (a) {
            }
            if (u) throw 'Could not parse the JSON object';
            return {
                err: 1
            }
        }
        function k(a) {
            if (!v) {
                if (a.match(/%([d|j])/) != - 1) {
                    Q = aa(a, /%([d|j])/);
                    N = a
                }
            } else {
                Q = [
                    '%j'
                ];
                N = '%j %F %Y'
            }
        }
        function l(a, b) {
            b = Math.min(4, b || 2);
            return '0000'.substr(0, b - Math.min(String(a).length, b)) + a
        }
        function m(a, b, c) {
            if (a.addEventListener) a.addEventListener(b, c, true);
            else if (a.attachEvent) a.attachEvent('on' + b, c)
        }
        function n(a, b, c) {
            try {
                if (a.removeEventListener) a.removeEventListener(b, c, true);
                else if (a.detachEvent) a.detachEvent('on' + b, c)
            } catch (a) {
            }
        }
        function o(a) {
            a = a || document.parentWindow.event;
            if (a.stopPropagation) a.preventDefault();
            if ($) {
                a.cancelBubble = true;
                a.returnValue = false
            }
            return false
        }
        function p(a, b) {
            if (a && a.tagName) a.setAttribute('role', b)
        }
        function q(a, b, c) {
            if (a && a.tagName) a.setAttribute('aria-' + b, c)
        }
        function r(a, b) {
            a.setAttribute($ ? 'tabIndex' : 'tabindex', b);
            a.tabIndex = b
        }
        function s(a) {
            return a instanceof Date && !isNaN(a) ? a.getFullYear() + l(a.getMonth() + 1) + '' + l(a.getDate())  : a
        }
        function t(b) {
            this.dateSet = null;
            this.timerSet = false;
            this.visible = false;
            this.fadeTimer = null;
            this.timer = null;
            this.yearInc = 0;
            this.monthInc = 0;
            this.dayInc = 0;
            this.mx = 0;
            this.my = 0;
            this.x = 0;
            this.y = 0;
            this.created = false;
            this.disabled = false;
            this.opacity = 0;
            this.opacityTo = 100;
            this.finalOpacity = 100;
            this.inUpdate = false;
            this.kbEventsAdded = false;
            this.fullCreate = false;
            this.selectedTD = null;
            this.cursorTD = null;
            this.cursorDate = b.cursorDate ? b.cursorDate : '',
                this.date = b.cursorDate ? new Date( + b.cursorDate.substr(0, 4), + b.cursorDate.substr(4, 2) - 1, + b.cursorDate.substr(6, 2), 5, 0, 0)  : new Date;
            this.defaults = {
            };
            this.dynDisabledDates = {
            };
            this.dateList = [
            ];
            this.bespokeClass = b.bespokeClass;
            this.firstDayOfWeek = I.firstDayOfWeek;
            this.interval = new Date;
            this.clickActivated = false;
            this.showCursor = false;
            this.noFocus = true;
            this.kbEvent = false;
            this.delayedUpdate = false;
            this.bespokeTitles = {
            };
            this.bespokeTabIndex = b.bespokeTabIndex;
            this.extraTopOffset = 60;
            for (var c in b) if (b.hasOwnProperty(c) && String(c).search(/^(callbacks|formElements|enabledDates|disabledDates)$/) == - 1) this[c] = b[c];
            else ;
            if ($) this.iePopUp = null;
            for (var h, i = 0; h = [
                'callbacks',
                'formElements'
            ][i]; i++) {
                this[h] = {
                };
                if (h in b) for (c in b[h]) if (b[h].hasOwnProperty(c)) this[h][c] = b[h][c]
            }
            this.date.setHours(5);
            this.changeHandler = function () {
                if (!j.disabled) {
                    j.setDateFromInput();
                    j.callback('dateset', j.createCbArgObj())
                }
            };
            this.createCbArgObj = function () {
                return this.dateSet ? {
                        id: this.id,
                        date: this.dateSet,
                        dd: l(this.date.getDate()),
                        mm: l(this.date.getMonth() + 1),
                        yyyy: this.date.getFullYear()
                    }
                    : {
                        id: this.id,
                        date: null,
                        dd: null,
                        mm: null,
                        yyyy: null
                    }
            };
            this.getScrollOffsets = function () {
                if ('number' == typeof window.pageYOffset) return [window.pageXOffset,
                    window.pageYOffset];
                else if (document.body && (document.body.scrollLeft || document.body.scrollTop)) return [document.body.scrollLeft,
                    document.body.scrollTop];
                else if (document.documentElement && (document.documentElement.scrollLeft || document.documentElement.scrollTop)) return [document.documentElement.scrollLeft,
                    document.documentElement.scrollTop];
                return [0,
                    0]
            };
            this.getDateExceptions = function (a, b) {
                b = l(b);
                var c,
                    d,
                    e,
                    f,
                    g,
                    h,
                    i,
                    k,
                    m,
                    n,
                    o,
                    p = {
                    },
                    q = j.firstDateShown,
                    r = j.lastDateShown,
                    s = j.dateList.length;
                if (!r || !q) {
                    q = j.firstDateShown = a + l(b) + '01';
                    r = j.lastDateShown = a + l(b) + l(la(b, a))
                }
                g = Number(q.substr(0, 6));
                h = Number(r.substr(0, 6));
                d = String(g);
                for (; + d <= h; ) {
                    e = d.substr(0, 4);
                    f = d.substr(4, 2);
                    for (c = 0; c < s; c++) {
                        k = String(j.dateList[c].rLow).replace(/^(\*\*\*\*)/, e).replace(/^(\d\d\d\d)(\*\*)/, '$1' + f);
                        m = String(j.dateList[c].rHigh).replace(/^(\*\*\*\*)/, e).replace(/^(\d\d\d\d)(\*\*)/, '$1' + f);
                        if (1 != m) {
                            if (k <= m && d >= k.substr(0, 6) && d <= m.substr(0, 6)) {
                                n = Math.max(k, Math.max(String(d) + '01', this.firstDateShown));
                                o = Math.min(m, Math.min(String(d) + '31', this.lastDateShown));
                                for (i = n; i <= o; i++) p[i] = j.dateList[c].type
                            }
                        } else if ( + k >= + j.firstDateShown && + k <= + j.lastDateShown) p[k] = j.dateList[c].type
                    }
                    d = new Date(e, + f, 2);
                    d = d.getFullYear() + '' + l(d.getMonth() + 1)
                }
                return p
            };
            this.reposition = function () {
                if (j.created && !j.staticPos) {
                    j.div.style.visibility = 'hidden';
                    j.div.style.left = j.div.style.top = '0px';
                    j.div.style.display = 'block';
                    var a = j.div.offsetHeight,
                        b = j.div.offsetWidth,
                        c = document.getElementById('fd-but-' + j.id),
                        d = j.truePosition(c),
                        e = document.compatMode && 'BackCompat' != document.compatMode ? document.documentElement : document.body,
                        f = j.getScrollOffsets(),
                        g = f[1],
                        h = f[0],
                        i = parseInt(d[1] - 2) - parseInt(g),
                        k = parseInt(e.clientHeight + g) - parseInt(d[1] + c.offsetHeight + 2);
                    j.div.style.visibility = 'visible';
                    j.div.style.left = Number(parseInt(e.clientWidth + h) < parseInt(b + d[0]) ? Math.abs(parseInt(e.clientWidth + h - b))  : d[0]) + 'px';
                    j.div.style.top = k > i ? Math.abs(parseInt(d[1] + c.offsetHeight + 2)) + 'px' : Math.abs(parseInt(d[1] - (a + 2))) + 'px';
                    if (parseInt(j.div.style.top) <= parseInt(g + this.extraTopOffset)) j.div.style.top = parseInt(g) + this.extraTopOffset + 'px';
                    if (6 === $) {
                        j.iePopUp.style.top = j.div.style.top;
                        j.iePopUp.style.left = j.div.style.left;
                        j.iePopUp.style.width = b + 'px';
                        j.iePopUp.style.height = a - 2 + 'px'
                    }
                }
            };
            this.removeCursorHighlight = function () {
                var a = document.getElementById(j.id + '-date-picker-hover');
                if (a) g(a, 'date-picker-hover')
            };
            this.addCursorHighlight = function () {
                var a = document.getElementById(j.id + '-date-picker-hover');
                if (a) f(a, 'date-picker-hover')
            };
            this.removeOldFocus = function () {
                var a = document.getElementById(j.id + '-date-picker-hover');
                if (a) try {
                    r(a, - 1);
                    g(a, 'date-picker-hover');
                    a.id = '';
                    a.onblur = null;
                    a.onfocus = null
                } catch (a) {
                }
            };
            this.setNewFocus = function () {
                var a = document.getElementById(j.id + '-date-picker-hover');
                if (a) try {
                    r(a, 0);
                    if (this.showCursor) f(a, 'date-picker-hover');
                    a.onblur = j.onblur;
                    a.onfocus = j.onfocus;
                    if (!v) j.addAccessibleDate();
                    setTimeout(function () {
                        try {
                            a.focus()
                        } catch (a) {
                        }
                    }, 0)
                } catch (a) {
                }
            };
            this.addAccessibleDate = function () {
                var a = document.getElementById(j.id + '-date-picker-hover');
                if (a && !a.getElementsByTagName('span').length) {
                    var b,
                        c = a.className.match(/cd-([\d]{4})([\d]{2})([\d]{2})/),
                        d = a.className.search(U) != - 1,
                        f = document.createElement('span');
                    f.className = 'fd-screen-reader';
                    e(a);
                    if (d) {
                        b = f.cloneNode(false);
                        b.appendChild(document.createTextNode(ia(13)));
                        a.appendChild(b)
                    }
                    for (var g, h = 0; g = Q[h]; h++) if ('%j' == g || '%d' == g) a.appendChild(document.createTextNode(oa(new Date(c[1], + c[2] - 1, c[3], 5, 0, 0), g, true)));
                    else {
                        b = f.cloneNode(false);
                        b.appendChild(document.createTextNode(oa(new Date(c[1], + c[2] - 1, c[3], 5, 0, 0), g, true)));
                        a.appendChild(b)
                    }
                }
            };
            this.setCursorDate = function (a) {
                if (String(a).search(/^([0-9]{8})$/) != - 1) {
                    this.date = new Date( + a.substr(0, 4), + a.substr(4, 2) - 1, + a.substr(6, 2), 5, 0, 0);
                    this.cursorDate = a;
                    if (this.staticPos) this.updateTable()
                }
            };
            this.updateTable = function (a) {
                if (j && !j.inUpdate && j.created) {
                    j.inUpdate = true;
                    j.removeOldFocus();
                    j.div.dir = I.rtl ? 'rtl' : 'ltr';
                    if (j.timerSet && !j.delayedUpdate) if (j.monthInc) {
                        var b = j.date.getDate(),
                            c = new Date(j.date);
                        c.setDate(2);
                        c.setMonth(c.getMonth() + 1 * j.monthInc);
                        c.setDate(Math.min(b, la(c.getMonth(), c.getFullYear())));
                        j.date = new Date(c)
                    } else {
                        j.date.setDate(Math.min(j.date.getDate() + j.dayInc, la(j.date.getMonth() + j.monthInc, j.date.getFullYear() + j.yearInc)));
                        j.date.setMonth(j.date.getMonth() + j.monthInc);
                        j.date.setFullYear(j.date.getFullYear() + j.yearInc)
                    }
                    j.outOfRange();
                    if (!j.noToday);
                    j.showHideButtons(j.date);
                    var d = j.date.getDate(),
                        f = j.date.getMonth(),
                        g = j.date.getFullYear(),
                        h = String(g) + l(f + 1) + l(d),
                        i = new Date(g, f, 1, 5, 0, 0);
                    i.setHours(5);
                    var k,
                        m,
                        n,
                        o,
                        p,
                        r,
                        s,
                        t,
                        u,
                        v,
                        w,
                        x,
                        z,
                        A = (i.getDay() + 6) % 7,
                        B = (A - j.firstDayOfWeek + 7) % 7 - 1,
                        C = la(f, g),
                        D = new Date,
                        D = D.getFullYear() + l(D.getMonth() + 1) + l(D.getDate()),
                        E = String(i.getFullYear()) + l(i.getMonth() + 1),
                        s = [
                            4,
                            4,
                            4,
                            4,
                            4,
                            4
                        ],
                        F = new Date(g, f - 1, 1, 5, 0, 0),
                        G = new Date(g, f + 1, 1, 5, 0, 0),
                        H = la(F.getMonth(), F.getFullYear()),
                        J = String(G.getFullYear()) + l(G.getMonth() + 1),
                        K = String(F.getFullYear()) + l(F.getMonth() + 1),
                        L = (G.getDay() + 6) % 7,
                        M = (F.getDay() + 6) % 7,
                        N = document.createElement('span');
                    N.className = 'fd-screen-reader';
                    j.firstDateShown = !j.constrainSelection && j.fillGrid && 0 - B < 1 ? String(K) + (H + (0 - B))  : E + '01';
                    j.lastDateShown = !j.constrainSelection && j.fillGrid ? J + l(41 - B - C)  : E + String(C);
                    j.currentYYYYMM = E;
                    u = j.callback('redraw', {
                        id: j.id,
                        dd: l(d),
                        mm: l(f + 1),
                        yyyy: g,
                        firstDateDisplayed: j.firstDateShown,
                        lastDateDisplayed: j.lastDateShown
                    }) || {
                    };
                    m = j.getDateExceptions(g, f + 1);
                    j.checkSelectedDate();
                    w = null != j.dateSet ? j.dateSet.getFullYear() + l(j.dateSet.getMonth() + 1) + l(j.dateSet.getDate())  : false;
                    if (null != this.selectedTD) {
                        q(this.selectedTD, 'selected', false);
                        this.selectedTD = null
                    }
                    for (var P = 0; P < 42; P++) {
                        o = Math.floor(P / 7);
                        p = j.tds[P];
                        v = N.cloneNode(false);
                        e(p);
                        if (P > B && P <= B + C || j.fillGrid) {
                            t = E;
                            z = A;
                            k = P - B;
                            n = [
                            ];
                            x = true;
                            if (k < 1) {
                                k = H + k;
                                t = K;
                                z = M;
                                x = !j.constrainSelection;
                                n.push('month-out')
                            } else if (k > C) {
                                k -= C;
                                t = J;
                                z = L;
                                x = !j.constrainSelection;
                                n.push('month-out')
                            }
                            z = (z + k + 6) % 7;
                            n.push('day-' + z + ' cell-' + P);
                            r = t + String(k < 10 ? '0' : '') + k;
                            if (j.rangeLow && + r < + j.rangeLow || j.rangeHigh && + r > + j.rangeHigh) {
                                p.className = 'out-of-range';
                                p.title = '';
                                p.appendChild(document.createTextNode(k));
                                if (j.showWeeks) s[o] = Math.min(s[o], 2)
                            } else {
                                if (x) {
                                    p.title = O ? oa(new Date( + String(t).substr(0, 4), + String(t).substr(4, 2) - 1, + k, 5, 0, 0), O, true)  : '';
                                    n.push('cd-' + r + ' yyyymmdd-' + r + ' yyyymm-' + t + ' mmdd-' + t.substr(4, 2) + l(k))
                                } else {
                                    p.title = O ? ia(13) + ' ' + oa(new Date( + String(t).substr(0, 4), + String(t).substr(4, 2) - 1, + k, 5, 0, 0), O, true)  : '';
                                    n.push('yyyymmdd-' + r + ' yyyymm-' + t + ' mmdd-' + t.substr(4, 2) + l(k) + ' not-selectable')
                                }
                                if (r == D) n.push('date-picker-today');
                                if (w == r) {
                                    n.push('date-picker-selected-date');
                                    q(p, 'selected', 'true');
                                    this.selectedTD = p
                                }
                                if (r in m && 1 == m[r] || j.disabledDays[z] && !(r in m && 0 == m[r])) {
                                    n.push('day-disabled');
                                    if (O && x) p.title = ia(13) + ' ' + p.title
                                }
                                if (r in u) n.push(u[r]);
                                if (j.highlightDays[z]) n.push('date-picker-highlight');
                                if (h == r) p.id = j.id + '-date-picker-hover';
                                p.appendChild(document.createTextNode(k));
                                p.className = n.join(' ');
                                if (j.showWeeks) s[o] = Math.min('month-out' == n[0] ? 3 : 1, s[o])
                            }
                        } else {
                            p.className = 'date-picker-unused';
                            p.appendChild(document.createTextNode(y));
                            p.title = ''
                        }
                        if (j.showWeeks && P - 7 * o == 6) {
                            e(j.wkThs[o]);
                            j.wkThs[o].appendChild(document.createTextNode(4 == s[o] && !j.fillGrid ? y : na(g, f, P - B - 6)));
                            j.wkThs[o].className = 'date-picker-week-header' + ['',
                                '',
                                ' out-of-range',
                                ' month-out',
                                ''][s[o]]
                        }
                    }
                    var Q = j.titleBar.getElementsByTagName('span');
                    e(Q[0]);
                    e(Q[1]);
                    Q[0].appendChild(document.createTextNode(ka(f, false) + y));
                    Q[1].appendChild(document.createTextNode(g));
                    if (j.timerSet) {
                        j.timerInc = 50 + Math.round((j.timerInc - 50) / 1.8);
                        j.timer = window.setTimeout(j.updateTable, j.timerInc)
                    }
                    j.inUpdate = j.delayedUpdate = false;
                    j.setNewFocus()
                }
            };
            this.destroy = function () {
                if (document.getElementById('fd-but-' + this.id)) document.getElementById('fd-but-' + this.id).parentNode.removeChild(document.getElementById('fd-but-' + this.id));
                if (this.created) {
                    n(this.table, 'mousedown', j.onmousedown);
                    n(this.table, 'mouseover', j.onmouseover);
                    n(this.table, 'mouseout', j.onmouseout);
                    n(document, 'mousedown', j.onmousedown);
                    n(document, 'mouseup', j.clearTimer);
                    if (window.addEventListener && !window.devicePixelRatio) try {
                        window.removeEventListener('DOMMouseScroll', this.onmousewheel, false)
                    } catch (a) {
                    } else {
                        n(document, 'mousewheel', this.onmousewheel);
                        n(window, 'mousewheel', this.onmousewheel)
                    }
                    j.removeOnFocusEvents();
                    clearTimeout(j.fadeTimer);
                    clearTimeout(j.timer);
                    if (6 === $ && !j.staticPos) try {
                        j.iePopUp.parentNode.removeChild(j.iePopUp);
                        j.iePopUp = null
                    } catch (a) {
                    }
                    if (this.div && this.div.parentNode) this.div.parentNode.removeChild(this.div);
                    j = null
                }
            };
            this.resizeInlineDiv = function () {
                j.div.style.width = j.table.offsetWidth + 'px';
                j.div.style.height = j.table.offsetHeight + 'px'
            };
            this.reset = function () {
                var a,
                    b;
                for (a in j.formElements) {
                    b = document.getElementById(a);
                    if (b) if ('select' == b.tagName.toLowerCase()) b.selectedIndex = j.formElements[a.defaultVal];
                    else b.value = j.formElements[a.defaultVal]
                }
                j.changeHandler()
            };
            this.create = function () {
                function a(a) {
                    var b = document.createElement('div');
                    if (a.thClassName) b.className = a.thClassName;
                    return b
                }
                function b(a) {
                    var b = document.createElement('th');
                    if (a.thClassName) b.className = a.thClassName;
                    if (a.colspan) b.setAttribute($ ? 'colSpan' : 'colspan', a.colspan);
                    b.unselectable = 'on';
                    return b
                }
                function c(a, c) {
                    for (var d, e = document.getElementById('fd-controls-' + j.id), f = 0; d = c[f]; f++) {
                        var g,
                            h;
                        g = b(d);
                        a.appendChild(g);
                        h = document.createElement('button');
                        h.className = d.className;
                        h.id = j.id + d.id;
                        h.setAttribute('aria-label', d.title || d.text);
                        h.appendChild(document.createTextNode(d.text || j.nbsp));
                        e.appendChild(h)
                    }
                }
                if (!document.getElementById('fd-' + this.id)) {
                    var d,
                        e,
                        f,
                        g,
                        h,
                        i;
                    this.noFocus = true;
                    this.div = document.createElement('div');
                    this.div.id = 'fd-' + this.id;
                    this.div.className = 'date-picker' + this.bespokeClass;
                    this.div.style.visibility = 'hidden';
                    this.div.style.display = 'none';
                    if (this.describedBy && document.getElementById(this.describedBy)) q(this.div, 'describedby', this.describedBy);
                    if (this.labelledBy) q(this.div, 'labelledby', this.labelledBy.id);
                    this.controls = document.createElement('div');
                    this.controls.id = 'fd-controls-' + this.id;
                    this.controls.className = 'date-picker-controls';
                    this.idiv = document.createElement('div');
                    this.table = document.createElement('table');
                    this.table.className = 'date-picker-table';
                    this.table.onmouseover = this.onmouseover;
                    this.table.onmouseout = this.onmouseout;
                    this.table.onclick = this.onclick;
                    if (Modernizr.touchevents) this.table.ontouchstart = this.onclick;
                    if (this.finalOpacity < 100) this.idiv.style.opacity = Math.min(Math.max(parseInt(this.finalOpacity, 10) / 100, 0.2), 1);
                    if (this.staticPos) this.table.onmousedown = this.onmousedown;
                    this.div.appendChild(this.controls);
                    this.div.appendChild(this.idiv);
                    this.idiv.appendChild(this.table);
                    var k = !this.dragDisabled ? ' drag-enabled' : '';
                    if (!this.staticPos) {
                        this.div.style.visibility = 'hidden';
                        this.div.className += k;
                        document.getElementsByTagName('body') [0].appendChild(this.div);
                        if (6 === $) {
                            this.iePopUp = document.createElement('iframe');
                            this.iePopUp.src = 'javascript:\'<html></html>\';';
                            this.iePopUp.setAttribute('className', 'iehack');
                            this.iePopUp.setAttribute('tabIndex', - 1);
                            p(this.iePopUp, 'presentation');
                            q(this.iePopUp, 'hidden', 'true');
                            this.iePopUp.scrolling = 'no';
                            this.iePopUp.frameBorder = '0';
                            this.iePopUp.name = this.iePopUp.id = this.id + '-iePopUpHack';
                            document.body.appendChild(this.iePopUp)
                        }
                        q(this.div, 'hidden', 'true')
                    } else {
                        var l = document.getElementById(this.positioned ? this.positioned : this.id);
                        if (!l) {
                            this.div = null;
                            if (u) throw this.positioned ? 'Could not locate a datePickers associated parent element with an id:' + this.positioned : 'Could not locate a datePickers associated input with an id:' + this.id;
                            return
                        }
                        this.div.className += ' static-datepicker';
                        if (this.positioned) l.appendChild(this.div);
                        else l.parentNode.insertBefore(this.div, l.nextSibling);
                        if (this.hideInput) for (var m in this.formElements) {
                            l = document.getElementById(m);
                            if (l) l.className += ' fd-hidden-input'
                        }
                        setTimeout(this.resizeInlineDiv, 300)
                    }
                    p(this.div, 'application');
                    p(this.table, 'grid');
                    if (this.statusFormat) {
                        i = document.createElement('tfoot');
                        this.table.appendChild(i);
                        d = document.createElement('tr');
                        d.className = 'date-picker-tfoot';
                        i.appendChild(d);
                        this.statusBar = b({
                            thClassName: 'date-picker-statusbar' + k,
                            colspan: this.showWeeks ? 8 : 7
                        });
                        d.appendChild(this.statusBar);
                        this.updateStatus()
                    }
                    g = document.createElement('thead');
                    g.className = 'date-picker-thead';
                    this.table.appendChild(g);
                    d = document.createElement('tr');
                    p(d, 'presentation');
                    g.appendChild(d);
                    this.titleBar = a({
                        thClassName: 'date-picker-title' + k,
                        colspan: this.showWeeks ? 8 : 7
                    });
                    this.div.insertBefore(this.titleBar, this.div.firstChild);
                    d = null;
                    var n = document.createElement('span');
                    n.appendChild(document.createTextNode(y));
                    n.className = 'month-display' + k;
                    this.titleBar.appendChild(n);
                    n = document.createElement('span');
                    n.appendChild(document.createTextNode(y));
                    n.className = 'year-display' + k;
                    this.titleBar.appendChild(n);
                    n = null;
                    d = document.createElement('tr');
                    p(d, 'presentation');
                    g.appendChild(d);
                    c(d, [
                        {
                            className: 'prev-but prev-year needsclick',
                            id: '-prev-year-but',
                            text: '«',
                            title: ia(2)
                        },
                        {
                            className: 'prev-but prev-month needsclick',
                            id: '-prev-month-but',
                            text: '‹',
                            title: ia(0)
                        },
                        {
                            colspan: this.showWeeks ? 4 : 3,
                            className: 'today-but needsclick',
                            id: '-today-but',
                            text: ia(4)
                        },
                        {
                            className: 'next-but next-month needsclick',
                            id: '-next-month-but',
                            text: '›',
                            title: ia(1)
                        },
                        {
                            className: 'next-but next-year needsclick',
                            id: '-next-year-but',
                            text: '»',
                            title: ia(3)
                        }
                    ]);
                    h = document.createElement('tbody');
                    this.table.appendChild(h);
                    for (var o, r = this.showWeeks ? 8 : 7, s = this.showWeeks ? 0 : - 1, t = 0; t < 7; t++) {
                        e = document.createElement('tr');
                        if (0 != t) {
                            p(e, 'row');
                            h.appendChild(e)
                        } else g.appendChild(e);
                        for (var v = 0; v < r; v++) {
                            if (0 === t || this.showWeeks && 0 === v) f = document.createElement('th');
                            else {
                                f = document.createElement('td');
                                q(f, 'describedby', this.id + '-col-' + v + (this.showWeeks ? ' ' + this.id + '-row-' + t : ''));
                                q(f, 'selected', 'false')
                            }
                            if ($) f.unselectable = 'on';
                            e.appendChild(f);
                            if (this.showWeeks && v > 0 && t > 0 || !this.showWeeks && t > 0) p(f, 'gridcell');
                            else if (0 === t && v > s) {
                                f.className = 'date-picker-day-header';
                                f.scope = 'col';
                                p(f, 'columnheader');
                                f.id = this.id + '-col-' + v
                            } else {
                                f.className = 'date-picker-week-header';
                                f.scope = 'row';
                                p(f, 'rowheader');
                                f.id = this.id + '-row-' + t
                            }
                        }
                    }
                    f = e = null;
                    this.ths = this.table.getElementsByTagName('thead') [0].getElementsByTagName('tr') [2].getElementsByTagName('th');
                    for (var w = 0; w < r; w++) if (0 != w || !this.showWeeks) {
                        if (w > (this.showWeeks ? 0 : - 1)) {
                            o = document.createElement('span');
                            o.className = 'fd-day-header';
                            if ($) o.unselectable = 'on';
                            this.ths[w].appendChild(o)
                        }
                    } else {
                        this.ths[w].appendChild(document.createTextNode(ia(6)));
                        this.ths[w].title = ia(8)
                    }
                    o = null;
                    this.trs = this.table.getElementsByTagName('tbody') [0].getElementsByTagName('tr');
                    this.tds = this.table.getElementsByTagName('tbody') [0].getElementsByTagName('td');
                    this.butPrevYear = document.getElementById(this.id + '-prev-year-but');
                    this.butPrevMonth = document.getElementById(this.id + '-prev-month-but');
                    this.butToday = document.getElementById(this.id + '-today-but');
                    this.butNextYear = document.getElementById(this.id + '-next-year-but');
                    this.butNextMonth = document.getElementById(this.id + '-next-month-but');
                    if (this.noToday) this.butToday.style.display = 'none';
                    if (this.showWeeks) {
                        this.wkThs = this.table.getElementsByTagName('tbody') [0].getElementsByTagName('th');
                        this.div.className += ' weeks-displayed'
                    }
                    h = g = d = c = b = null;
                    this.updateTableHeaders();
                    this.created = true;
                    this.updateTable();
                    if (this.staticPos) {
                        this.visible = true;
                        this.opacity = 100;
                        this.div.style.visibility = 'visible';
                        this.div.style.display = 'block';
                        this.noFocus = true;
                        this.fade()
                    } else {
                        this.reposition();
                        this.div.style.visibility = 'visible';
                        this.fade();
                        this.noFocus = true
                    }
                    this.callback('domcreate', {
                        id: this.id
                    })
                }
            };
            this.transEnd = function () {
                j.div.style.display = 'none';
                j.div.style.visibility = 'hidden';
                q(j.div, 'hidden', 'true')
            };
            this.fade = function () {
                window.clearTimeout(j.fadeTimer);
                j.fadeTimer = null;
                j.setOpacity(j.opacityTo);
                if (0 == j.opacityTo) {
                    j.div.style.display = 'none';
                    j.div.style.zIndex = - 2;
                    q(j.div, 'hidden', 'true');
                    j.visible = false
                } else {
                    j.div.style.display = 'block';
                    j.div.style.zIndex = 100;
                    q(j.div, 'hidden', 'false');
                    j.visible = true
                }
            };
            this.trackDrag = function (a) {
                a = a || window.event;
                var b = (a.pageX ? a.pageX : a.clientX ? a.clientX : a.x) - j.mx,
                    c = (a.pageY ? a.pageY : a.clientY ? a.clientY : a.Y) - j.my;
                j.div.style.left = Math.round(j.x + b) > 0 ? Math.round(j.x + b) + 'px' : '0px';
                j.div.style.top = Math.round(j.y + c) > 0 ? Math.round(j.y + c) + 'px' : '0px';
                if (6 === $ && !j.staticPos) {
                    j.iePopUp.style.top = j.div.style.top;
                    j.iePopUp.style.left = j.div.style.left
                }
            };
            this.stopDrag = function (a) {
                var b = document.getElementsByTagName('body') [0];
                g(b, 'fd-drag-active');
                n(document, 'mousemove', j.trackDrag, false);
                n(document, 'mouseup', j.stopDrag, false);
                j.div.style.zIndex = 100
            };
            this.onmousedown = function (a) {
                a = a || document.parentWindow.event;
                var b = null != a.target ? a.target : a.srcElement,
                    c = b,
                    e = true,
                    g = new RegExp('^fd-(but-)?' + d(j.id) + '$');
                j.mouseDownElem = null;
                for (; b; ) {
                    if (b.id && b.id.length && b.id.search(g) != - 1) {
                        e = false;
                        break
                    }
                    try {
                        b = b.parentNode
                    } catch (a) {
                        break
                    }
                }
                if (e) {
                    da();
                    return true
                }
                if ((j.div.className + c.className).search('fd-disabled') != - 1) return true;
                if (c.id.search(new RegExp('^' + d(j.id) + '(-prev-year-but|-prev-month-but|-next-month-but|-next-year-but)$')) != - 1) {
                    j.tableHeadersHandler(c);
                    return o(a)
                } else if (c.id === j.id + '-today-but') {
                    j.goToToday();
                    return o(a)
                } else if (b.className.search('drag-enabled') != - 1) {
                    j.mx = a.pageX ? a.pageX : a.clientX ? a.clientX : a.x;
                    j.my = a.pageY ? a.pageY : a.clientY ? a.clientY : a.Y;
                    j.x = parseInt(j.div.style.left, 10);
                    j.y = parseInt(j.div.style.top, 10);
                    m(document, 'mousemove', j.trackDrag, false);
                    m(document, 'mouseup', j.stopDrag, false);
                    f(document.getElementsByTagName('body') [0], 'fd-drag-active');
                    j.div.style.zIndex = 10000;
                    return o(a)
                }
                return true
            };
            this.onclick = function (a) {
                if (!D && j.opacity != j.opacityTo || j.disabled) return o(a);
                a = a || document.parentWindow.event;
                for (var b = null != a.target ? a.target : a.srcElement; b.parentNode; ) {
                    if (b.tagName && 'td' == b.tagName.toLowerCase()) {
                        if (b.className.search(/cd-([0-9]{8})/) == - 1 || b.className.search(U) != - 1) return o(a);
                        var c = b.className.match(/cd-([0-9]{8})/) [1];
                        j.date = new Date(c.substr(0, 4), c.substr(4, 2) - 1, c.substr(6, 2), 5, 0, 0);
                        j.dateSet = new Date(j.date);
                        j.noFocus = true;
                        j.callback('dateset', {
                            id: j.id,
                            date: j.dateSet,
                            dd: j.dateSet.getDate(),
                            mm: j.dateSet.getMonth() + 1,
                            yyyy: j.dateSet.getFullYear()
                        });
                        j.returnFormattedDate();
                        j.hide();
                        j.stopTimer();
                        break
                    } else if (b.id && b.id == j.id + '-today-but') {
                        j.goToToday();
                        j.stopTimer();
                        break
                    } else if (b.className.search(/date-picker-day-header/) != - 1);
                    try {
                        b = b.parentNode
                    } catch (a) {
                        break
                    }
                }
                return o(a)
            };
            this.tableHeadersHandler = function (a) {
                j.mouseDownElem = a;
                m(document, 'mouseup', j.clearTimer);
                m(a, 'mouseout', j.clearTimer);
                var b = {
                        '-prev-year-but': [
                            0,
                            - 1,
                            0
                        ],
                        '-prev-month-but': [
                            0,
                            0,
                            - 1
                        ],
                        '-next-year-but': [
                            0,
                            1,
                            0
                        ],
                        '-next-month-but': [
                            0,
                            0,
                            1
                        ]
                    },
                    c = a.id.replace(j.id, ''),
                    d = Number(j.date.getFullYear() + l(j.date.getMonth() + 1));
                j.timerInc = 800;
                j.timerSet = true;
                j.dayInc = b[c][0];
                j.yearInc = b[c][1];
                j.monthInc = b[c][2];
                j.accellerator = 1;
                if (!(j.currentYYYYMM == d)) if (j.currentYYYYMM < d && (j.yearInc == - 1 || j.monthInc == - 1) || j.currentYYYYMM > d && (1 == j.yearInc || 1 == j.monthInc)) {
                    j.delayedUpdate = false;
                    j.timerInc = 1200
                } else j.delayedUpdate = true;
                j.updateTable()
            };
            this.goToToday = function () {
                j.date = new Date;
                j.updateTable();
                j.setNewFocus()
            };
            this.show = function (b) {
                if (!this.staticPos) {
                    var c,
                        d;
                    for (d in this.formElements) {
                        c = document.getElementById(this.id);
                        if (!c || c && c.disabled) return
                    }
                    this.noFocus = true;
                    if (!this.created || !document.getElementById('fd-' + this.id)) {
                        this.created = false;
                        this.fullCreate = false;
                        this.create();
                        this.fullCreate = true
                    } else {
                        this.setDateFromInput();
                        this.reposition()
                    }
                    this.noFocus = !!!b;
                    if (this.noFocus) {
                        this.clickActivated = true;
                        this.showCursor = false;
                        m(document, 'mousedown', this.onmousedown);
                        if (G) if (window.addEventListener && !window.devicePixelRatio) window.addEventListener('DOMMouseScroll', this.onmousewheel, false);
                        else {
                            m(document, 'mousewheel', this.onmousewheel);
                            m(window, 'mousewheel', this.onmousewheel)
                        }
                    } else {
                        this.clickActivated = false;
                        this.showCursor = true
                    }
                    var e = a('#' + this.id),
                        g = e.parent();
                    if (void 0 != g.attr('data-config')) {
                        var h = JSON.parse(g.attr('data-config'));
                        if (void 0 != h.rangeLow) this.setRangeLow(h.rangeLow);
                        if (void 0 != h.rangeHigh) this.setRangeHigh(h.rangeHigh)
                    }
                    this.opacityTo = 100;
                    this.div.style.display = 'block';
                    if (6 === $) {
                        this.iePopUp.style.width = this.div.offsetWidth + 'px';
                        this.iePopUp.style.height = this.div.offsetHeight + 'px';
                        this.iePopUp.style.display = 'block'
                    }
                    this.setNewFocus();
                    this.fade();
                    var i = document.getElementById('fd-but-' + this.id);
                    if (i) f(i, 'date-picker-button-active')
                }
            };
            this.hide = function () {
                if (this.visible && this.created && document.getElementById('fd-' + this.id)) {
                    this.kbEvent = false;
                    g(j.div, 'date-picker-focus');
                    this.stopTimer();
                    this.removeOnFocusEvents();
                    this.clickActivated = false;
                    this.noFocus = true;
                    this.showCursor = false;
                    this.setNewFocus();
                    if (!this.staticPos) {
                        if (this.statusBar) this.updateStatus(ia(9));
                        var a = document.getElementById('fd-but-' + this.id);
                        if (a) g(a, 'date-picker-button-active');
                        n(document, 'mousedown', this.onmousedown);
                        if (G) if (window.addEventListener && !window.devicePixelRatio) try {
                            window.removeEventListener('DOMMouseScroll', this.onmousewheel, false)
                        } catch (a) {
                        } else {
                            n(document, 'mousewheel', this.onmousewheel);
                            n(window, 'mousewheel', this.onmousewheel)
                        }
                        if (6 === $) this.iePopUp.style.display = 'none';
                        this.opacityTo = 0;
                        this.fade()
                    }
                }
            };
            this.onblur = function (a) {
                j.removeCursorHighlight()
            };
            this.onfocus = function (a) {
                j.noFocus = false;
                f(j.div, 'date-picker-focus');
                if (j.statusBar) j.updateStatus(oa(j.date, j.statusFormat, true));
                j.showCursor = true;
                j.addCursorHighlight();
                j.addOnFocusEvents()
            };
            this.onmousewheel = function (a) {
                a = a || document.parentWindow.event;
                var b = 0;
                if (a.wheelDelta) {
                    b = a.wheelDelta / 120;
                    if (v && window.opera.version() < 9.2) b = - b
                } else if (a.detail) b = - a.detail / 3;
                var c = j.date.getDate(),
                    d = new Date(j.date),
                    e = b > 0 ? 1 : - 1;
                d.setDate(2);
                d.setMonth(d.getMonth() + 1 * e);
                d.setDate(Math.min(c, la(d.getMonth(), d.getFullYear())));
                if (j.outOfRange(d)) return o(a);
                j.date = new Date(d);
                j.updateTable();
                if (j.statusBar) j.updateStatus(oa(j.date, j.statusFormat, true));
                return o(a)
            };
            this.onkeydown = function (b) {
                j.stopTimer();
                if (!j.visible) return false;
                b = b || document.parentWindow.event;
                var c = null != b.target ? b.target : b.srcElement,
                    d = c,
                    e = b.keyCode ? b.keyCode : b.charCode,
                    f = document.getElementById(j.id + '-date-picker-hover');
                if (13 == e) {
                    if (document.activeElement === f) {
                        var g = document.getElementById(j.id + '-date-picker-hover');
                        if (!g || g.className.search(/cd-([0-9]{8})/) == - 1 || g.className.search(/out-of-range|day-disabled/) != - 1) return o(b);
                        j.dateSet = new Date(j.date);
                        j.callback('dateset', j.createCbArgObj());
                        j.returnFormattedDate();
                        j.hide();
                        return o(b)
                    } else if (d.id.search(new RegExp('^' + j.id + '(-prev-year-but|-prev-month-but|-next-month-but|-next-year-but)$')) != - 1) {
                        j.tableHeadersHandler(d);
                        j.clearTimer();
                        return o(b)
                    } else if (d.id === j.id + '-today-but') {
                        j.goToToday();
                        j.clearTimer();
                        return o(b)
                    }
                } else if (27 == e) {
                    if (!j.staticPos) {
                        j.hide();
                        var h = document.getElementById('fd-but-' + j.id);
                        if (h) setTimeout(function () {
                            try {
                                h.focus()
                            } catch (a) {
                            }
                        }, 0);
                        return o(b)
                    }
                    return true
                } else if (32 == e || 0 == e) {
                    j.date = new Date;
                    j.updateTable();
                    return o(b)
                } else if (9 == e) if (b.shiftKey) {
                    if (document.activeElement === j.butPrevYear) {
                        f.focus();
                        return o(b)
                    } else if (document.activeElement === j.butPrevMonth) if (!a(j.butPrevYear).hasClass('fd-disabled')) {
                        j.butPrevYear.focus();
                        return o(b)
                    } else {
                        f.focus();
                        return o(b)
                    } else if (document.activeElement === j.butToday) if (!a(j.butPrevMonth).hasClass('fd-disabled')) {
                        j.butPrevMonth.focus();
                        return o(b)
                    } else {
                        f.focus();
                        return o(b)
                    }
                } else if (document.activeElement === j.butNextYear) {
                    f.focus();
                    return o(b)
                } else if (document.activeElement === j.butPrevYear) if (!a(j.butPrevMonth).hasClass('fd-disabled')) {
                    j.butPrevMonth.focus();
                    return o(b)
                } else {
                    f.focus();
                    return o(b)
                } else if (document.activeElement === j.butPrevMonth) {
                    j.butToday.focus();
                    return o(b)
                } else if (document.activeElement === j.butToday) if (!a(j.butNextMonth).hasClass('fd-disabled')) {
                    j.butNextMonth.focus();
                    return o(b)
                } else {
                    f.focus();
                    return o(b)
                } else if (document.activeElement === j.butNextMonth) if (!a(j.butNextYear).hasClass('fd-disabled')) {
                    j.butNextYear.focus();
                    return o(b)
                } else {
                    f.focus();
                    return o(b)
                } else if (document.activeElement === f) if (!a(j.butPrevYear).hasClass('fd-disabled')) {
                    j.butPrevYear.focus();
                    return o(b)
                } else if (!a(j.butPrevMonth).hasClass('fd-disabled')) {
                    j.butPrevMonth.focus();
                    return o(b)
                } else if (!a(j.butToday).hasClass('fd-disabled')) {
                    j.butToday.focus();
                    return o(b)
                } else if (!a(j.butNextYear).hasClass('fd-disabled')) {
                    j.butNextYear.focus();
                    return o(b)
                } else if (!a(j.butNextMonth).hasClass('fd-disabled')) {
                    j.butNextMonth.focus();
                    return o(b)
                } else {
                    f.focus();
                    return o(b)
                }
                if ($) {
                    if ((new Date).getTime() - j.interval.getTime() < 50) return o(b);
                    j.interval = new Date
                }
                if (e > 49 && e < 56 || e > 97 && e < 104) {
                    if (e > 96) e -= 48;
                    e -= 49;
                    j.firstDayOfWeek = (j.firstDayOfWeek + e) % 7;
                    j.updateTableHeaders();
                    return o(b)
                }
                if (e < 33 || e > 40) return true;
                var i = new Date(j.date);
                j.date.getFullYear() + l(j.date.getMonth() + 1);
                if (36 == e) i.setDate(1);
                else if (35 == e) i.setDate(la(i.getMonth(), i.getFullYear()));
                else if (33 == e || 34 == e) {
                    var k = 34 == e ? 1 : - 1;
                    if (b.ctrlKey) i.setFullYear(i.getFullYear() + 1 * k);
                    else {
                        var m = j.date.getDate();
                        i.setDate(2);
                        i.setMonth(i.getMonth() + 1 * k);
                        i.setDate(Math.min(m, la(i.getMonth(), i.getFullYear())))
                    }
                } else if (37 == e) i = new Date(j.date.getFullYear(), j.date.getMonth(), j.date.getDate() - 1, 5, 0, 0);
                else if (39 == e || 34 == e) i = new Date(j.date.getFullYear(), j.date.getMonth(), j.date.getDate() + 1, 5, 0, 0);
                else if (38 == e) i = new Date(j.date.getFullYear(), j.date.getMonth(), j.date.getDate() - 7, 5, 0, 0);
                else if (40 == e) i = new Date(j.date.getFullYear(), j.date.getMonth(), j.date.getDate() + 7, 5, 0, 0);
                if (j.outOfRange(i)) return o(b);
                j.date = i;
                if (j.statusBar) j.updateStatus(j.getBespokeTitle(j.date.getFullYear(), j.date.getMonth() + 1, j.date.getDate()) || oa(j.date, j.statusFormat, true));
                var n = String(j.date.getFullYear()) + l(j.date.getMonth() + 1) + l(j.date.getDate());
                if (b.ctrlKey || 33 == e || 34 == e || n < j.firstDateShown || n > j.lastDateShown) {
                    j.updateTable();
                    if ($) j.interval = new Date
                } else {
                    if (!j.noToday);
                    j.removeOldFocus();
                    j.showHideButtons(j.date);
                    for (var g, p = 0; g = j.tds[p]; p++) if (g.className.search('cd-' + n) != - 1) {
                        g.id = j.id + '-date-picker-hover';
                        j.setNewFocus();
                        break
                    } else ;
                }
                return o(b)
            };
            this.onmouseout = function (a) {
                a = a || document.parentWindow.event;
                for (var b = a.toElement || a.relatedTarget; b && b != this; ) try {
                    b = b.parentNode
                } catch (a) {
                    b = this
                }
                if (b == this) return false;
                if (j.clickActivated || j.staticPos && !j.kbEventsAdded) {
                    j.showCursor = false;
                    j.removeCursorHighlight()
                }
                if (j.currentTR) {
                    j.currentTR.className = '';
                    j.currentTR = null
                }
                if (j.statusBar) j.updateStatus(j.dateSet ? j.getBespokeTitle(j.dateSet.getFullYear(), j.dateSet.getMonth() + 1, j.dateSet.getDate()) || oa(j.dateSet, j.statusFormat, true)  : ia(9))
            };
            this.onmouseover = function (a) {
                a = a || document.parentWindow.event;
                for (var b = null != a.target ? a.target : a.srcElement; 1 != b.nodeType; ) b = b.parentNode;
                if (b && b.tagName) {
                    j.noFocus = true;
                    var c = ia(9);
                    if (j.clickActivated || j.staticPos && !j.kbEventsAdded) j.showCursor = false;
                    switch (b.tagName.toLowerCase()) {
                        case 'td':
                            if (b.className.search(/date-picker-unused|out-of-range/) != - 1) c = ia(9);
                            if (b.className.search(/cd-([0-9]{8})/) != - 1) {
                                j.showCursor = true;
                                j.stopTimer();
                                var d = b.className.match(/cd-([0-9]{8})/) [1];
                                j.removeOldFocus();
                                b.id = j.id + '-date-picker-hover';
                                j.setNewFocus();
                                j.date = new Date( + d.substr(0, 4), + d.substr(4, 2) - 1, + d.substr(6, 2), 5, 0, 0);
                                if (!j.noToday);
                                c = j.getBespokeTitle( + d.substr(0, 4), + d.substr(4, 2), + d.substr(6, 2)) || oa(j.date, j.statusFormat, true)
                            }
                            break;
                        case 'th':
                            if (!j.statusBar) break;
                            if (b.className.search(/drag-enabled/) != - 1) c = ia(10);
                            else if (b.className.search(/date-picker-week-header/) != - 1) {
                                var e = b.firstChild ? b.firstChild.nodeValue : '';
                                c = e.search(/^(\d+)$/) != - 1 ? ia(7, [
                                    e,
                                    e < 3 && 11 == j.date.getMonth() ? ma(j.date.getFullYear()) + 1 : ma(j.date.getFullYear())
                                ])  : ia(9)
                            }
                            break;
                        case 'span':
                            if (!j.statusBar) break;
                            if (b.className.search(/day-([0-6])/) != - 1) {
                                var f = b.className.match(/day-([0-6])/) [1];
                                c = ia(11, [
                                    ja(f, false)
                                ])
                            } else if (b.className.search(/(drag-enabled|today-but|prev-(year|month)|next-(year|month))/) != - 1 && b.className.search(/disabled/) == - 1) c = ia({
                                'drag-enabled': 10,
                                'prev-year': 2,
                                'prev-month': 0,
                                'next-year': 3,
                                'next-month': 1,
                                'today-but': 12
                            }
                                [
                                b.className.match(/(drag-enabled|today-but|prev-(year|month)|next-(year|month))/) [0]
                                ]);
                            break;
                        default:
                            c = ''
                    }
                    for (; b.parentNode; ) {
                        b = b.parentNode;
                        if (1 == b.nodeType && 'tr' == b.tagName.toLowerCase()) {
                            if (j.currentTR) {
                                if (b == j.currentTR) break;
                                j.currentTR.className = ''
                            }
                            b.className = 'dp-row-highlight';
                            j.currentTR = b;
                            break
                        }
                    }
                    if (j.statusBar && c) j.updateStatus(c);
                    if (!j.showCursor) j.removeCursorHighlight()
                }
            };
            this.clearTimer = function () {
                j.stopTimer();
                j.timerInc = 800;
                j.yearInc = 0;
                j.monthInc = 0;
                j.dayInc = 0;
                n(document, 'mouseup', j.clearTimer);
                if (null != j.mouseDownElem) n(j.mouseDownElem, 'mouseout', j.clearTimer);
                j.mouseDownElem = null
            };
            var j = this;
            this.setDateFromInput();
            if (this.staticPos) this.create();
            else this.createButton();
            !function () {
                var a,
                    b,
                    c = 0;
                for (a in j.formElements) {
                    b = document.getElementById(a);
                    if (b && b.tagName && b.tagName.search(/select|input/i) != - 1) {
                        m(b, 'change', j.changeHandler);
                        if (0 == c && b.form) m(b.form, 'reset', j.reset);
                        c++
                    }
                    if (!b || true == b.disabled) {
                        var d = document.getElementById('fd-but-' + a);
                        d.disabled = true;
                        q(d, 'disabled', true)
                    }
                }
            }();
            this.fullCreate = true
        }
        var u = false,
            v = '[object Opera]' === Object.prototype.toString.call(window.opera),
            w = '',
            x = h(),
            y = String.fromCharCode(160),
            z = {
            },
            A = {
            },
            B = {
            },
            C = 100,
            D = null,
            E = '',
            F = true,
            G = true,
            H = true,
            I = false,
            J = false,
            K = false,
            L = false,
            M = true,
            N = '%d %F %Y',
            O = '%F %d, %Y',
            P = '',
            Q = v ? [
                '%j'
            ] : [
                '%j',
                ' %F %Y'
            ],
            R = /%([d|j])/,
            S = /%([M|F|m|n])/,
            T = /%[y|Y]/,
            U = /date-picker-unused|out-of-range|day-disabled|not-selectable/,
            V = /%([d|j|M|F|m|n|Y|y])/,
            W = /%([d|D|l|j|N|w|S|W|M|F|m|n|t|Y|y])/,
            X = /^((\d\d\d\d)(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01]))$/,
            Y = /^(((\d\d\d\d)|(\*\*\*\*))((0[1-9]|1[012])|(\*\*))(0[1-9]|[12][0-9]|3[01]))$/,
            Z = '\t\n\v\f\r   ᠎             　  ',
            $ = function () {
                for (var a, b = 3, c = document.createElement('div'), d = c.getElementsByTagName('i'); c.innerHTML = '<!--[if gt IE ' + ++b + ']><i></i><![endif]-->', d[0]; );
                return b > 4 ? b : a
            }(),
            _ = false,
            aa = function (a, b, c) {
                if ('[object RegExp]' !== Object.prototype.toString.call(b)) return aa._nativeSplit.call(a, b, c);
                var d,
                    e,
                    f,
                    g,
                    h = [
                    ],
                    i = 0,
                    j = '',
                    b = RegExp(b.source, 'g');
                a += '';
                if (!aa._compliantExecNpcg) d = RegExp('^' + b.source + '$(?!\\s)', j);
                if (void 0 === c || + c < 0) c = 1 / 0;
                else {
                    c = Math.floor( + c);
                    if (!c) return []
                }
                for (; e = b.exec(a); ) {
                    f = e.index + e[0].length;
                    if (f > i) {
                        h.push(a.slice(i, e.index));
                        if (!aa._compliantExecNpcg && e.length > 1) e[0].replace(d, function () {
                            for (var a = 1; a < arguments.length - 2; a++) if (void 0 === arguments[a]) e[a] = void 0
                        });
                        if (e.length > 1 && e.index < a.length) Array.prototype.push.apply(h, e.slice(1));
                        g = e[0].length;
                        i = f;
                        if (h.length >= c) break
                    }
                    if (b.lastIndex === e.index) b.lastIndex++
                }
                if (i === a.length) {
                    if (g || !b.test('')) h.push('')
                } else h.push(a.slice(i));
                return h.length > c ? h.slice(0, c)  : h
            };
        aa._compliantExecNpcg = void 0 === /()??/.exec('') [1];
        aa._nativeSplit = String.prototype.split;
        t.prototype.addButtonEvents = function (a) {
            function b(a) {
                a = a || window.event;
                var b = this.id.replace('fd-but-', ''),
                    c = va(b),
                    d = false,
                    e = z[b].kbEvent;
                if (!e) {
                    if ('keydown' == a.type) {
                        var h = null != a.keyCode ? a.keyCode : a.charCode;
                        if (13 != h) return true;
                        z[b].kbEvent = true;
                        if (c) {
                            g(this, 'date-picker-button-active');
                            da();
                            return o(a)
                        }
                        d = true
                    } else z[b].kbEvent = false;
                    if (!c) {
                        f(this, 'date-picker-button-active');
                        da(b);
                        fa(b, d)
                    } else {
                        g(this, 'date-picker-button-active');
                        da()
                    }
                    return o(a)
                } else z[b].kbEvent = false
            }
            a.onclick = b;
            a.onkeydown = b
        };
        t.prototype.createButton = function () {
            if (!this.staticPos && !document.getElementById('fd-but-' + this.id)) {
                var a = document.getElementById(this.id),
                    b = document.createElement('span'),
                    c = document.createElement('button');
                c.setAttribute('data-target', '#' + this.id);
                c.className = 'date-picker-control';
                c.title = ia(5);
                c.id = 'fd-but-' + this.id;
                c.type = 'button';
                b.appendChild(document.createTextNode(y));
                c.appendChild(b);
                b = document.createElement('span');
                b.className = 'fd-screen-reader';
                b.appendChild(document.createTextNode(c.title));
                c.appendChild(b);
                q(c, 'haspopup', true);
                if (this.positioned && document.getElementById(this.positioned)) document.getElementById(this.positioned).appendChild(c);
                else a.parentNode.insertBefore(c, a.nextSibling);
                this.addButtonEvents(c);
                c = null;
                this.callback('dombuttoncreate', {
                    id: this.id
                })
            }
        };
        t.prototype.setBespokeTitles = function (a) {
            this.bespokeTitles = {
            };
            this.addBespokeTitles(a)
        };
        t.prototype.addBespokeTitles = function (a) {
            for (var b in a) if (a.hasOwnProperty(b)) this.bespokeTitles[b] = a[b]
        };
        t.prototype.getBespokeTitle = function (a, b, c) {
            var d,
                e,
                f = a + String(l(b)) + l(c);
            for (d in this.bespokeTitles) if (this.bespokeTitles.hasOwnProperty(d)) {
                e = String(d).replace(/^(\*\*\*\*)/, a).replace(/^(\d\d\d\d)(\*\*)/, '$1' + l(b));
                if (e == f) return this.bespokeTitles[d]
            }
            for (d in B) if (B.hasOwnProperty(d)) {
                e = String(d).replace(/^(\*\*\*\*)/, a).replace(/^(\d\d\d\d)(\*\*)/, '$1' + l(b));
                if (e == f) return B[d]
            }
            return false
        };
        t.prototype.returnSelectedDate = function () {
            return this.dateSet
        };
        t.prototype.setRangeLow = function (a) {
            if (String(a).search(X) == - 1) {
                if (u) throw 'Invalid value passed to setRangeLow method: ' + a;
                return false
            }
            this.rangeLow = a;
            if (!this.inUpdate) this.setDateFromInput()
        };
        t.prototype.setRangeHigh = function (a) {
            if (String(a).search(X) == - 1) {
                if (u) throw 'Invalid value passed to setRangeHigh method: ' + a;
                return false
            }
            this.rangeHigh = a;
            if (!this.inUpdate) this.setDateFromInput()
        };
        t.prototype.setDisabledDays = function (a) {
            if (!a.length || a.join('').search(/^([0|1]{7})$/) == - 1) {
                if (u) throw 'Invalid values located when attempting to call setDisabledDays';
                return false
            }
            this.disabledDays = a;
            if (!this.inUpdate) this.setDateFromInput()
        };
        t.prototype.setDisabledDates = function (a) {
            this.filterDateList(a, true)
        };
        t.prototype.setEnabledDates = function (a) {
            this.filterDateList(a, false)
        };
        t.prototype.addDisabledDates = function (a) {
            this.addDatesToList(a, true)
        };
        t.prototype.addEnabledDates = function (a) {
            this.addDatesToList(a, false)
        };
        t.prototype.filterDateList = function (a, b) {
            for (var c = [
            ], d = 0; d < this.dateList.length; d++) if (this.dateList[d].type != b) c.push(this.dateList[d]);
            this.dateList = c.concat();
            this.addDatesToList(a, b)
        };
        t.prototype.addDatesToList = function (a, b) {
            var c;
            for (c in a) if (String(c).search(Y) != - 1 && (1 == a[c] || String(a[c]).search(Y) != - 1)) {
                if (1 != a[c] && Number(String(c).replace(/^\*\*\*\*/, 2010).replace(/^(\d\d\d\d)(\*\*)/, '$122')) > Number(String(a[c]).replace(/^\*\*\*\*/, 2010).replace(/^(\d\d\d\d)(\*\*)/, '$122'))) continue;
                this.dateList.push({
                    type: !!b,
                    rLow: c,
                    rHigh: a[c]
                })
            }
            if (!this.inUpdate) this.setDateFromInput()
        };
        t.prototype.setSelectedDate = function (a) {
            if (String(a).search(Y) == - 1) return false;
            var b = a.match(X),
                c = new Date( + b[2], + b[3] - 1, + b[4], 5, 0, 0);
            if (!c || isNaN(c) || !this.canDateBeSelected(c)) return false;
            this.dateSet = new Date(c);
            if (!this.inUpdate) this.updateTable();
            this.callback('dateset', this.createCbArgObj());
            this.returnFormattedDate()
        };
        t.prototype.checkSelectedDate = function () {
            if (this.dateSet && !this.canDateBeSelected(this.dateSet)) this.dateSet = null;
            if (!this.inUpdate) this.updateTable()
        };
        t.prototype.addOnFocusEvents = function () {
            if (!this.kbEventsAdded && !this.noFocus) {
                m(document, 'keydown', this.onkeydown);
                m(document, 'mousedown', this.onmousedown);
                if ($) {
                    n(document, 'keypress', this.onkeydown);
                    m(document, 'keydown', this.onkeydown)
                }
                if (window.devicePixelRatio) {
                    n(document, 'keypress', this.onkeydown);
                    m(document, 'keydown', this.onkeydown)
                }
                this.noFocus = false;
                this.kbEventsAdded = true
            }
        };
        t.prototype.removeOnFocusEvents = function () {
            if (this.kbEventsAdded) {
                n(document, 'keypress', this.onkeydown);
                n(document, 'keydown', this.onkeydown);
                n(document, 'mousedown', this.onmousedown);
                this.kbEventsAdded = false
            }
        };
        t.prototype.stopTimer = function () {
            this.timerSet = false;
            window.clearTimeout(this.timer)
        };
        t.prototype.setOpacity = function (a) {
            this.div.style.opacity = a / 100;
            this.div.style.filter = 'alpha(opacity=' + a + ')';
            this.opacity = a
        };
        t.prototype.truePosition = function (a) {
            var b = this.cumulativeOffset(a);
            if (v) return b;
            var c = document.compatMode && 'BackCompat' != document.compatMode ? document.documentElement : document.body,
                d = document.all ? c.scrollLeft : window.pageXOffset,
                e = document.all ? c.scrollTop : window.pageYOffset,
                f = this.realOffset(a);
            return [b[0] - f[0] + d,
                b[1] - f[1] + e]
        };
        t.prototype.realOffset = function (a) {
            var b = 0,
                c = 0;
            do {
                b += a.scrollTop || 0;
                c += a.scrollLeft || 0;
                a = a.parentNode
            } while (a);
            return [c,
                b]
        };
        t.prototype.cumulativeOffset = function (a) {
            var b = 0,
                c = 0;
            do {
                b += a.offsetTop || 0;
                c += a.offsetLeft || 0;
                a = a.offsetParent
            } while (a);
            return [c,
                b]
        };
        t.prototype.outOfRange = function (a) {
            if (!this.rangeLow && !this.rangeHigh) return false;
            var b = false;
            if (!a) {
                b = true;
                a = this.date
            }
            var c = l(a.getDate()),
                d = l(a.getMonth() + 1),
                e = a.getFullYear(),
                f = String(e) + String(d) + String(c);
            if (this.rangeLow && + f < + this.rangeLow) {
                if (!b) return true;
                this.date = new Date(this.rangeLow.substr(0, 4), this.rangeLow.substr(4, 2) - 1, this.rangeLow.substr(6, 2), 5, 0, 0);
                return false
            }
            if (this.rangeHigh && + f > + this.rangeHigh) {
                if (!b) return true;
                this.date = new Date(this.rangeHigh.substr(0, 4), this.rangeHigh.substr(4, 2) - 1, this.rangeHigh.substr(6, 2), 5, 0, 0)
            }
            return false
        };
        t.prototype.canDateBeSelected = function (a) {
            if (!a || isNaN(a)) return false;
            var b = l(a.getDate()),
                c = l(a.getMonth() + 1),
                d = a.getFullYear(),
                e = d + '' + c + b,
                f = this.getDateExceptions(d, c),
                g = 0 == a.getDay() ? 7 : a.getDay();
            if (this.rangeLow && + e < + this.rangeLow || this.rangeHigh && + e > + this.rangeHigh || e in f && 1 == f[e] || this.disabledDays[g - 1] && (!(e in f) || e in f && 1 == f[e])) return false;
            else return true
        };
        t.prototype.updateStatus = function (a) {
            e(this.statusBar);
            if (a && this.statusFormat.search(/%S/) != - 1 && a.search(/([0-9]{1,2})(st|nd|rd|th)/) != - 1) {
                a = aa(a.replace(/([0-9]{1,2})(st|nd|rd|th)/, '$1<sup>$2</sup>'), /<sup>|<\/sup>/);
                for (var b, c = document.createDocumentFragment(), d = 0; b = a[d]; d++) if (/^(st|nd|rd|th)$/.test(b)) {
                    var f = document.createElement('sup');
                    f.appendChild(document.createTextNode(b));
                    c.appendChild(f)
                } else c.appendChild(document.createTextNode(b));
                this.statusBar.appendChild(c)
            } else this.statusBar.appendChild(document.createTextNode(a ? a : ia(9)))
        };
        t.prototype.setDateFromInput = function () {
            var a,
                b,
                c,
                d,
                e,
                h,
                i,
                j,
                k,
                l,
                m,
                n = (this.dateSet, false),
                o = this.staticPos ? false : document.getElementById('fd-but-' + this.id),
                p = I.imported ? [
                ].concat(ba.fullMonths).concat(ba.monthAbbrs)  : [
                ],
                q = I.imported ? [
                ].concat(I.fullMonths).concat(I.monthAbbrs)  : [
                ],
                r = /(3[01]|[12][0-9]|0?[1-9])(st|nd|rd|th)/i,
                s = 0,
                t = false;
            this.dateSet = null;
            for (c in this.formElements) {
                d = document.getElementById(c);
                if (!d) return false;
                s++;
                j = String(d.value);
                if (j) {
                    e = this.formElements[c];
                    a = [
                        e
                    ];
                    t = false;
                    k = e.search(R) != - 1;
                    l = e.search(S) != - 1;
                    m = e.search(T) != - 1;
                    if (!(k && l && m)) if (m && !(l || k)) a = a.concat(['%Y',
                        '%y']);
                    else if (l && !(m || k)) a = a.concat(['%M',
                        '%F',
                        '%m',
                        '%n']);
                    else if (k && !(m || l)) a = a.concat(['%d%',
                        '%j']);
                    for (b = 0; b < a.length; b++) {
                        t = pa(j, a[b]);
                        if (t) {
                            if (!h && k && t.d) h = t.d;
                            if (false === n && l && t.m) n = t.m;
                            if (!i && m && t.y) i = t.y
                        }
                        if ((k && h || !k) && (l && false === !n || !l) && (m && i || !m)) break
                    }
                } else ;
            }
            if (M && (!h || false === n || !i) && k && l && m && 1 == s && j) {
                if (I.imported) for (b = 0; b < q.length; b++) j = j.replace(new RegExp(q[b], 'i'), p[b]);
                if (j.search(r) != - 1) j = j.replace(r, j.match(r) [1]);
                t = new Date(j.replace(new RegExp('-', 'g'), '/'));
                if (t && !isNaN(t)) {
                    h = t.getDate();
                    n = t.getMonth() + 1;
                    i = t.getFullYear()
                }
            }
            t = false;
            if (h && !(false === n) && i) if ( + h > la( + n - 1, + i)) {
                h = la( + n - 1, + i);
                t = false
            } else t = new Date( + i, + n - 1, + h, 5, 0, 0);
            if (o) g(o, 'date-picker-dateval');
            if (t && !isNaN(t)) {
                t.setHours(5);
                this.date = new Date(t);
                this.outOfRange();
                if (t.getTime() == this.date.getTime() && this.canDateBeSelected(this.date)) {
                    this.dateSet = new Date(this.date);
                    if (o) f(o, 'date-picker-dateval')
                } else this.dateSet = new Date(t);
                this.returnFormattedDate(true);
                if (this.fullCreate) this.updateTable()
            } else {
                var u = new Date(i || (new Date).getFullYear(), !(false === n) ? n - 1 : (new Date).getMonth(), 1, 5, 0, 0);
                this.date = this.cursorDate ? new Date( + this.cursorDate.substr(0, 4), + this.cursorDate.substr(4, 2) - 1, + this.cursorDate.substr(6, 2), 5, 0, 0)  : new Date(u.getFullYear(), u.getMonth(), Math.min( + h || (new Date).getDate(), la(u.getMonth(), u.getFullYear())), 5, 0, 0);
                this.outOfRange();
                if (this.fullCreate) this.updateTable()
            }
        };
        t.prototype.setSelectIndex = function (a, b) {
            for (var c = a.options.length - 1; c >= 0; c--) if (a.options[c].value == b) {
                a.selectedIndex = c;
                return
            }
        };
        t.prototype.returnFormattedDate = function (b) {
            var c = this.staticPos ? false : document.getElementById('fd-but-' + this.id);
            if (this.dateSet) {
                var d,
                    e,
                    h,
                    i,
                    j = (l(this.dateSet.getDate()), l(this.dateSet.getMonth() + 1), this.dateSet.getFullYear(), false);
                b = !!b;
                for (d in this.formElements) {
                    e = document.getElementById(d);
                    if (!e) return;
                    if (!j) j = e;
                    h = this.formElements[d];
                    i = oa(this.dateSet, h, L);
                    if ('input' == e.tagName.toLowerCase()) {
                        e.value = i;
                        a(e).trigger('input')
                    } else this.setSelectIndex(e, i)
                }
                if (this.staticPos) {
                    this.noFocus = true;
                    this.updateTable();
                    this.noFocus = false
                } else if (c) f(c, 'date-picker-dateval');
                if (this.fullCreate) if (j.type && 'hidden' != j.type && !b) try {
                    c.focus()
                } catch (a) {
                }
                if (!b) this.callback('datereturned', this.createCbArgObj())
            } else if (c) g(c, 'date-picker-dateval')
        };
        t.prototype.disableDatePicker = function () {
            if (!this.disabled) {
                if (this.staticPos) {
                    this.removeOnFocusEvents();
                    this.removeOldFocus();
                    this.noFocus = true;
                    f(this.div, 'date-picker-disabled');
                    this.table.onmouseover = this.table.onclick = this.table.onmouseout = this.table.onmousedown = null;
                    n(document, 'mousedown', this.onmousedown);
                    n(document, 'mouseup', this.clearTimer)
                } else {
                    if (this.visible) this.hide();
                    var a = document.getElementById('fd-but-' + this.id);
                    if (a) {
                        f(a, 'date-picker-control-disabled');
                        q(a, 'disabled', true);
                        a.onkeydown = a.onclick = function () {
                            return false
                        };
                        r(a, - 1);
                        a.title = ''
                    }
                }
                var b = document.getElementById(this.id);
                b.disabled = true;
                clearTimeout(this.timer);
                this.disabled = true
            }
        };
        t.prototype.enableDatePicker = function () {
            if (this.disabled) {
                if (this.staticPos) {
                    this.removeOldFocus();
                    if (null != this.dateSet) this.date = this.dateSet;
                    this.noFocus = true;
                    this.updateTable();
                    g(this.div, 'date-picker-disabled');
                    this.disabled = false;
                    this.table.onmouseover = this.onmouseover;
                    this.table.onmouseout = this.onmouseout;
                    this.table.onclick = this.onclick;
                    this.table.onmousedown = this.onmousedown
                } else {
                    var a = document.getElementById('fd-but-' + this.id);
                    if (a) {
                        g(a, 'date-picker-control-disabled');
                        q(a, 'disabled', false);
                        this.addButtonEvents(a);
                        a.title = ia(5)
                    }
                }
                var b = document.getElementById(this.id);
                b.disabled = false;
                this.disabled = false
            }
        };
        t.prototype.disableTodayButton = function () {
            var a = new Date;
            g(this.butToday, 'fd-disabled');
            r(this.butToday, 0);
            if (this.outOfRange(a) || this.date.getDate() == a.getDate() && this.date.getMonth() == a.getMonth() && this.date.getFullYear() == a.getFullYear()) {
                f(this.butToday, 'fd-disabled');
                r(this.butToday, - 1)
            }
        };
        t.prototype.updateTableHeaders = function () {
            for (var a, b, c = this.showWeeks ? 8 : 7, d = this.showWeeks ? 1 : 0, h = d; h < c; h++) {
                a = (this.firstDayOfWeek + (h - d)) % 7;
                this.ths[h].title = ja(a, false);
                if (h > d) {
                    b = this.ths[h].getElementsByTagName('span') [0];
                    e(b);
                    b.appendChild(document.createTextNode(ja(a, true)));
                    b.title = this.ths[h].title;
                    b = null
                } else {
                    e(this.ths[h]);
                    this.ths[h].appendChild(document.createTextNode(ja(a, true)))
                }
                g(this.ths[h], 'date-picker-highlight');
                if (this.highlightDays[a]) f(this.ths[h], 'date-picker-highlight')
            }
            if (this.created) this.updateTable()
        };
        t.prototype.callback = function (a, b) {
            if (!a || !(a in this.callbacks)) return false;
            var c,
                d = false;
            for (c = 0; c < this.callbacks[a].length; c++) d = this.callbacks[a][c](b || this.id);
            return d
        };
        t.prototype.showHideButtons = function (a) {
            if (this.butPrevYear) {
                var b = a.getMonth(),
                    c = a.getFullYear();
                if (this.outOfRange(new Date(c - 1, b, la( + b, c - 1), 5, 0, 0))) {
                    f(this.butPrevYear, 'fd-disabled');
                    r(this.butPrevYear, - 1);
                    if (this.yearInc == - 1) this.stopTimer()
                } else {
                    g(this.butPrevYear, 'fd-disabled');
                    r(this.butPrevYear, 0)
                }
                if (this.outOfRange(new Date(c, + b - 1, la( + b - 1, c), 5, 0, 0))) {
                    f(this.butPrevMonth, 'fd-disabled');
                    r(this.butPrevMonth, - 1);
                    if (this.monthInc == - 1) this.stopTimer()
                } else {
                    g(this.butPrevMonth, 'fd-disabled');
                    r(this.butPrevMonth, 0)
                }
                if (this.outOfRange(new Date(c + 1, + b, 1, 5, 0, 0))) {
                    f(this.butNextYear, 'fd-disabled');
                    r(this.butNextYear, - 1);
                    if (1 == this.yearInc) this.stopTimer()
                } else {
                    g(this.butNextYear, 'fd-disabled');
                    r(this.butNextYear, 0)
                }
                if (this.outOfRange(new Date(c, + b + 1, 1, 5, 0, 0))) {
                    f(this.butNextMonth, 'fd-disabled');
                    r(this.butNextMonth, - 1);
                    if (1 == this.monthInc) this.stopTimer()
                } else {
                    g(this.butNextMonth, 'fd-disabled');
                    r(this.butNextMonth, 0)
                }
            }
        };
        var ba = {
                fullMonths: [
                    'January',
                    'February',
                    'March',
                    'April',
                    'May',
                    'June',
                    'July',
                    'August',
                    'September',
                    'October',
                    'November',
                    'December'
                ],
                monthAbbrs: [
                    'Jan',
                    'Feb',
                    'Mar',
                    'Apr',
                    'May',
                    'Jun',
                    'Jul',
                    'Aug',
                    'Sep',
                    'Oct',
                    'Nov',
                    'Dec'
                ],
                fullDays: [
                    'Monday',
                    'Tuesday',
                    'Wednesday',
                    'Thursday',
                    'Friday',
                    'Saturday',
                    'Sunday'
                ],
                dayAbbrs: [
                    'Mon',
                    'Tue',
                    'Wed',
                    'Thu',
                    'Fri',
                    'Sat',
                    'Sun'
                ],
                titles: [
                    'Previous month',
                    'Next month',
                    'Previous year',
                    'Next year',
                    'Today',
                    'Show Calendar',
                    'wk',
                    'Week [[%0%]] of [[%1%]]',
                    'Week',
                    'Select a date',
                    'Click & Drag to move',
                    'Display “[[%0%]]” first',
                    'Go to Today’s date',
                    'Disabled date :'
                ],
                rtl: false,
                firstDayOfWeek: 0,
                imported: false
            },
            ca = function () {
                var a,
                    b;
                for (a in z) for (b in z[a].formElements) if (!document.getElementById(b)) {
                    z[a].destroy();
                    z[a] = null;
                    delete z[a];
                    break
                }
            },
            da = function (a) {
                var b;
                for (b in z) if (z[b].created && (!a || a != z[b].id)) z[b].hide();
                else ;
            },
            ea = function (a) {
                if (a in z) {
                    if (!z[a].created || z[a].staticPos) return;
                    z[a].hide()
                }
            },
            fa = function (a, b) {
                if (!(a in z)) return false;
                z[a].clickActivated = !!!b;
                z[a].show(b);
                return true
            },
            ga = function (a) {
                a = a || window.event;
                if (!a.persisted) {
                    var c;
                    for (c in z) {
                        z[c].destroy();
                        z[c] = null;
                        delete z[c]
                    }
                    z = null;
                    n(window, 'unload', b.destroy)
                }
            },
            ha = function (a) {
                if (a && a in z) {
                    z[a].destroy();
                    z[a] = null;
                    delete z[a]
                }
            },
            ia = function (a, b) {
                b = b || [
                ];
                if (I.titles.length > a) {
                    var c = I.titles[a];
                    if (b && b.length) for (var d = 0; d < b.length; d++) c = c.replace('[[%' + d + '%]]', b[d]);
                    return c.replace(/[[%(\d)%]]/g, '')
                }
                return ''
            },
            ja = function (a, b) {
                var c = I[b ? 'dayAbbrs' : 'fullDays'];
                return c.length && c.length > a ? c[a] : ''
            },
            ka = function (a, b) {
                var c = I[b ? 'monthAbbrs' : 'fullMonths'];
                return c.length && c.length > a ? c[a] : ''
            },
            la = function (a, b) {
                a = (a + 12) % 12;
                return 0 == b % 4 && (0 != b % 100 || 0 == b % 400) && 1 == a ? 29 : [
                    31,
                    28,
                    31,
                    30,
                    31,
                    30,
                    31,
                    31,
                    30,
                    31,
                    30,
                    31
                ][a]
            },
            ma = function (a) {
                if (a in A) return A[a];
                var b = new Date(a, 0, 4),
                    c = new Date(a, 11, 28);
                b.setDate(b.getDate() - (6 + b.getDay()) % 7);
                c.setDate(c.getDate() + (7 - c.getDay()) % 7);
                A[a] = Math.round((c - b) / 604800000);
                return A[a]
            },
            na = function (a, b, c) {
                var d,
                    c = new Date(a, b, c, 0, 0, 0),
                    e = c.getDay();
                c.setDate(c.getDate() - (e + 6) % 7 + 3);
                d = c.valueOf();
                c.setMonth(0);
                c.setDate(4);
                return Math.round((d - c.valueOf()) / 604800000) + 1
            },
            oa = function (a, b, c) {
                if (!a || isNaN(a)) return b;
                var d,
                    e,
                    f = a.getDate(),
                    g = a.getDay(),
                    h = a.getMonth(),
                    i = a.getFullYear(),
                    j = c ? I : ba,
                    k = String(b).split(W),
                    k = aa(b, W),
                    m = [
                    ],
                    n = {
                        d: l(f),
                        D: j.dayAbbrs[0 == g ? 6 : g - 1],
                        l: j.fullDays[0 == g ? 6 : g - 1],
                        j: f,
                        N: 0 == g ? 7 : g,
                        w: g,
                        W: na(i, h, f),
                        M: j.monthAbbrs[h],
                        F: j.fullMonths[h],
                        m: l(h + 1),
                        n: h + 1,
                        t: la(h, i),
                        y: String(i).substr(2, 2),
                        Y: i,
                        S: [
                            'th',
                            'st',
                            'nd',
                            'rd'
                        ][f % 10 > 3 ? 0 : (f % 100 - f % 10 != 10) * f % 10]
                    },
                    o = k.length;
                for (e = 0; e < o; e++) {
                    d = k[e];
                    m.push(d in n ? n[d] : d)
                }
                return m.join('')
            },
            pa = function (a, b) {
                var c,
                    d,
                    e,
                    f,
                    g = false,
                    h = false,
                    i = false,
                    j = b.search(R) != - 1 ? 1 : 0,
                    k = b.search(S) != - 1 ? 1 : 0,
                    l = b.search(T) != - 1 ? 1 : 0,
                    m = (new Date, aa(b, W)),
                    a = '' + a,
                    n = m.length;
                a: for (c = 0; c < n; c++) {
                    d = m[c];
                    if ('' !== d) {
                        if (0 == a.length) break;
                        switch (d) {
                            case '/':
                            case '.':
                            case ' ':
                            case '-':
                            case ',':
                            case ':':
                                f = a.charAt(0);
                                if ('/' == f || '.' == f || ' ' == f || '-' == f || ',' == f || ':' == f) a = a.substr(1);
                                break;
                            case 'd':
                                if (a.search(/^(3[01]|[12][0-9]|0[1-9])/) != - 1) {
                                    g = a.substr(0, 2);
                                    a = a.substr(2);
                                    break
                                } else ;
                            case 'j':
                                if (a.search(/^(3[01]|[12][0-9]|[1-9])/) != - 1) {
                                    g = + a.match(/^(3[01]|[12][0-9]|[1-9])/) [0];
                                    a = a.substr(a.match(/^(3[01]|[12][0-9]|[1-9])/) [0].length);
                                    break
                                } else ;
                            case 'D':
                            case 'l':
                                e = ba.fullDays.concat(ba.dayAbbrs);
                                if (I.imported) e = e.concat(I.fullDays).concat(I.dayAbbrs);
                                for (var o = 0; o < e.length; o++) if (new RegExp('^' + e[o], 'i').test(a)) {
                                    a = a.substr(e[o].length);
                                    continue a
                                }
                                break;
                            case 'N':
                            case 'w':
                                if (a.search('N' == d ? /^([1-7])/ : /^([0-6])/) != - 1) a = a.substr(1);
                                break;
                            case 'S':
                                if (a.search(/^(st|nd|rd|th)/i) != - 1) a = a.substr(2);
                                break;
                            case 'W':
                                if (a.search(/^([1-9]|[1234[0-9]|5[0-3])/) != - 1) a = a.substr(a.match(/^([1-9]|[1234[0-9]|5[0-3])/) [0].length);
                                break;
                            case 'M':
                            case 'F':
                                e = ba.fullMonths.concat(ba.monthAbbrs);
                                if (I.imported) e = e.concat(I.fullMonths).concat(I.monthAbbrs);
                                for (var o = 0; o < e.length; o++) if (a.search(new RegExp('^' + e[o], 'i')) != - 1) {
                                    a = a.substr(e[o].length);
                                    h = (o + 12) % 12 + 1;
                                    continue a
                                }
                                return false;
                            case 'm':
                                e = /^(1[012]|0[1-9])/;
                                if (a.search(e) != - 1) {
                                    h = + a.substr(0, 2);
                                    a = a.substr(2);
                                    break
                                } else ;
                            case 'n':
                                e = /^(1[012]|[1-9])/;
                                if (a.search(e) != - 1) {
                                    h = + a.match(e) [0];
                                    a = a.substr(a.match(e) [0].length);
                                    break
                                } else ;
                            case 't':
                                if (a.search(/2[89]|3[01]/) != - 1) {
                                    a = a.substr(2);
                                    break
                                } else ;
                            case 'Y':
                                if (a.search(/^(\d{4})/) != - 1) {
                                    i = a.substr(0, 4);
                                    a = a.substr(4);
                                    if (a.length > 0) return false;
                                    break
                                }
                            case 'y':
                                if (a.search(/^(0[0-9]|[1-9][0-9])/) != - 1) {
                                    i = a.substr(0, 2);
                                    i = + i < 50 ? '20' + String(i)  : '19' + String(i);
                                    a = a.substr(2);
                                    if (a.length > 0) return false;
                                    break
                                }
                            default:
                                a = a.substr(d.length)
                        }
                    } else ;
                }
                if (j && false === g || k && false === h || l && false === i) return false;
                if (j && k && l && + g > la( + h - 1, + i)) return false;
                else return {
                    d: j ? + g : false,
                    m: k ? + h : false,
                    y: l ? + i : false
                }
            },
            qa = function (a) {
                var b;
                if (a.parentNode && 'label' == a.parentNode.tagName.toLowerCase()) b = a.parentNode;
                else for (var c = document.getElementsByTagName('label'), d = 0; d < c.length; d++) if (c[d]['htmlFor'] && c[d]['htmlFor'] == a.id || c[d].getAttribute('for') == a.id) {
                    b = c[d];
                    break
                }
                if (b && !b.id && a.id) b.id = a.id + '_label';
                return b
            },
            ra = function () {
                if ('object' == typeof window.fdLocale) I = {
                    titles: fdLocale.titles,
                    fullMonths: fdLocale.fullMonths,
                    monthAbbrs: fdLocale.monthAbbrs,
                    fullDays: fdLocale.fullDays,
                    dayAbbrs: fdLocale.dayAbbrs,
                    firstDayOfWeek: 'firstDayOfWeek' in fdLocale ? fdLocale.firstDayOfWeek : 0,
                    rtl: 'rtl' in fdLocale ? !!fdLocale.rtl : false,
                    imported: true
                };
                else if (!I) I = ba
            },
            sa = function () {
                ra();
                var a;
                for (a in z) if (z[a].created) z[a].updateTable();
                else ;
            },
            ta = function (a) {
                return !(!a || !a.tagName || !('input' == a.tagName.toLowerCase() && ('text' == a.type || 'hidden' == a.type) || 'select' == a.tagName.toLowerCase()))
            },
            ua = function (a) {
                ra();
                if (null === D) D = xa();
                if (a.formElements) {
                    a.id = a.id && a.id in a.formElements ? a.id : '';
                    a.enabledDates = false;
                    a.disabledDates = false;
                    var b,
                        c,
                        d,
                        e,
                        f,
                        g,
                        h,
                        i = {
                            d: 0,
                            m: 0,
                            y: 0
                        },
                        j = false,
                        k = 0,
                        m = 0;
                    for (e in a.formElements) {
                        f = document.getElementById(e);
                        if (!ta(f)) {
                            if (u) throw 'Element \'' + e + '\' is of the wrong type or does not exist within the DOM';
                            return false
                        }
                        if (a.formElements[e] && !a.formElements[e].match(V)) {
                            if (u) throw 'Element \'' + e + '\' has a date format that does not contain either a day (d|j), month (m|F|n) or year (y|Y) part: ' + a.formElements[e];
                            return false
                        }
                        if (!a.id) a.id = e;
                        f.defaultValue = 'select' == f.tagName ? f.selectedIndex || 0 : f.defaultValue;
                        b = {
                            value: a.formElements[e]
                        };
                        b.d = b.value.search(R) != - 1;
                        b.m = b.value.search(S) != - 1;
                        b.y = b.value.search(T) != - 1;
                        if (b.d) i.d++;
                        if (b.m) i.m++;
                        if (b.y) i.y++;
                        if ('select' == f.tagName.toLowerCase()) {
                            var n = f.options;
                            if (b.d && b.m && b.y) {
                                j = false;
                                a.enabledDates = {
                                };
                                a.disabledDates = {
                                };
                                for (h = 0; h < n.length; h++) {
                                    g = pa(n[h].value, b.value);
                                    if (g && g.y && !(false === g.m) && g.d) {
                                        d = g.y + '' + l(g.m) + l(g.d);
                                        if (!j) j = d;
                                        a.enabledDates[d] = 1;
                                        if (!k || + d < + k) k = d;
                                        if (!m || + d > + m) m = d
                                    }
                                }
                                if (!a.cursorDate && j) a.cursorDate = j;
                                a.disabledDates[k] = m
                            } else if (b.m && b.y) {
                                for (h = 0; h < n.length; h++) {
                                    g = pa(n[h].value, b.value);
                                    if (g.y && !(false === g.m)) {
                                        d = g.y + '' + l(g.m);
                                        if (!k || + d < + k) k = d;
                                        if (!m || + d > + m) m = d
                                    }
                                }
                                k += '01';
                                m += '' + la( + m.substr(4, 2) - 1, + m.substr(0, 4))
                            } else if (b.y) {
                                for (h = 0; h < n.length; h++) {
                                    g = pa(n[h].value, b.value);
                                    if (g.y) {
                                        if (!k || + g.y < + k) k = g.y;
                                        if (!m || + g.y > + m) m = g.y
                                    }
                                }
                                k += '0101';
                                m += '1231'
                            }
                        }
                    }
                    if (!(1 == i.d && 1 == i.m && 1 == i.y)) {
                        if (u) throw 'Could not find all of the required date parts within the date format for element: ' + f.id;
                        return false
                    }
                    a.rangeLow = s(a.rangeLow || false);
                    a.rangeHigh = s(a.rangeHigh || false);
                    a.cursorDate = s(a.cursorDate || false);
                    if (k && (!a.rangeLow || + a.rangeLow < + k)) a.rangeLow = k;
                    if (m && (!a.rangeHigh || + a.rangeHigh > + m)) a.rangeHigh = m;
                    c = {
                        formElements: a.formElements,
                        id: a.id,
                        staticPos: !!(a.staticPos || a.nopopup),
                        positioned: a.positioned && document.getElementById(a.positioned) ? a.positioned : '',
                        rangeLow: a.rangeLow && String(a.rangeLow).search(X) != - 1 ? a.rangeLow : '',
                        rangeHigh: a.rangeHigh && String(a.rangeHigh).search(X) != - 1 ? a.rangeHigh : '',
                        statusFormat: a.statusFormat || P,
                        noFadeEffect: !!a.staticPos ? true : !!a.noFadeEffect,
                        dragDisabled: J || !!a.staticPos ? true : !!a.dragDisabled,
                        bespokeTabIndex: a.bespokeTabindex && 'number' == typeof a.bespokeTabindex ? parseInt(a.bespokeTabindex, 10)  : 0,
                        bespokeTitles: a.bespokeTitles || B || {
                        },
                        finalOpacity: a.finalOpacity && 'number' == typeof a.finalOpacity && a.finalOpacity > 20 && a.finalOpacity <= 100 ? parseInt( + a.finalOpacity, 10)  : !!a.staticPos ? 100 : C,
                        hideInput: !!a.hideInput,
                        noToday: !!a.noTodayButton,
                        showWeeks: !!a.showWeeks,
                        fillGrid: !!a.fillGrid,
                        constrainSelection: 'constrainSelection' in a ? !!a.constrainSelection : true,
                        cursorDate: a.cursorDate && String(a.cursorDate).search(X) != - 1 ? a.cursorDate : '',
                        labelledBy: qa(f),
                        describedBy: a.describedBy && document.getElementById(a.describedBy) ? a.describedBy : w && document.getElementById(w) ? w : '',
                        callbacks: a.callbackFunctions ? a.callbackFunctions : {
                        },
                        highlightDays: a.highlightDays && a.highlightDays.length && 7 == a.highlightDays.length ? a.highlightDays : [
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            1
                        ],
                        disabledDays: a.disabledDays && a.disabledDays.length && 7 == a.disabledDays.length ? a.disabledDays : [
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0
                        ],
                        bespokeClass: a.bespokeClass ? ' ' + a.bespokeClass : ''
                    };
                    z[a.id] = new t(c);
                    if ('disabledDates' in a && !(false === a.disabledDates)) z[a.id].setDisabledDates(a.disabledDates);
                    if ('enabledDates' in a && !(false === a.enabledDates)) z[a.id].setEnabledDates(a.enabledDates);
                    z[a.id].callback('create', z[a.id].createCbArgObj())
                } else if (u) throw 'No form elements stipulated within initialisation parameters'
            },
            va = function (a) {
                return !a || !(a in z) ? false : z[a].visible
            },
            wa = function () {
                var a;
                for (a in z) if (z.hasOwnProperty(a)) z[a].changeHandler()
            },
            xa = function () {
                var a,
                    b = 'Webkit Moz ms O'.split(' '),
                    c = document.createElement('div'),
                    d = {
                        WebkitTransition: 'webkitTransitionEnd',
                        MozTransition: 'transitionend',
                        MSTransition: 'msTransitionEnd',
                        OTransition: 'oTransitionEnd',
                        transition: 'transitionEnd'
                    };
                for (a in d) if (void 0 !== c.style[a]) {
                    E = d[a];
                    break
                }
                if (!E) return false;
                if (c.style.animationName) return true;
                for (var e = 0; e < b.length; e++) if (void 0 !== c.style[b[e] + 'AnimationName']) return true;
                return false
            };
        m(window, 'unload', ga);
        m(window, 'load', function () {
            setTimeout(wa, 0)
        });
        if ($) f(document.documentElement, 'oldie');
        return {
            init: function (a) {
                c(a)
            },
            addEvent: function (a, b, c) {
                return m(a, b, c)
            },
            removeEvent: function (a, b, c) {
                return n(a, b, c)
            },
            stopEvent: function (a) {
                return o(a)
            },
            show: function (a) {
                return fa(a, false)
            },
            hide: function (a) {
                return ea(a)
            },
            createDatePicker: function (a) {
                ua(a)
            },
            destroyDatePicker: function (a) {
                ha(a)
            },
            cleanUp: function () {
                ca()
            },
            printFormattedDate: function (a, b, c) {
                return oa(a, b, c)
            },
            setDateFromInput: function (a) {
                if (!a || !(a in z)) return false;
                z[a].setDateFromInput()
            },
            setRangeLow: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setRangeLow(s(b))
            },
            setRangeHigh: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setRangeHigh(s(b))
            },
            setBespokeTitles: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setBespokeTitles(b)
            },
            addBespokeTitles: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].addBespokeTitles(b)
            },
            parseDateString: function (a, b) {
                return pa(a, b)
            },
            setGlobalOptions: function (a) {
                i(a)
            },
            setSelectedDate: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setSelectedDate(s(b))
            },
            dateValidForSelection: function (a, b) {
                if (!a || !(a in z)) return false;
                else return z[a].canDateBeSelected(b)
            },
            addDisabledDates: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].addDisabledDates(b)
            },
            setDisabledDates: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setDisabledDates(b)
            },
            addEnabledDates: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].addEnabledDates(b)
            },
            setEnabledDates: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setEnabledDates(b)
            },
            disable: function (a) {
                if (!a || !(a in z)) return false;
                z[a].disableDatePicker()
            },
            enable: function (a) {
                if (!a || !(a in z)) return false;
                z[a].enableDatePicker()
            },
            setCursorDate: function (a, b) {
                if (!a || !(a in z)) return false;
                z[a].setCursorDate(s(b))
            },
            getSelectedDate: function (a) {
                return !a || !(a in z) ? false : z[a].returnSelectedDate()
            },
            loadLanguage: function () {
                sa()
            },
            setDebug: function (a) {
                u = !!a
            },
            dateToYYYYMMDDStr: function (a) {
                return s(a)
            }
        }
    }();
    return b
});
define('uxui/app/modules/forms/EfDatepicker', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/Config',
    'uxui/vendor/datepicker/datepicker',
    'uxui/app/util/DOMUtil'
], function (a, b, c, d, e) {
    var f,
        g = '.ef_datepicker',
        h = 0;
    d.init(c.get('datepickerOptions') || {
    });
    f = function () {
        this.$el = null;
        this.ns = g + h++
    };
    f.prototype = new b;
    f.prototype.init = function (b) {
        var f = this;
        this.$el = a(b);
        this.$inputField = a(b).find('input');
        var g = {
        };
        g[this.$inputField.attr('id')] = c.get('datepickerOptions', 'format');
        var h = {
            formElements: g,
            lang: c.get('datepickerOptions', 'lang'),
            languagefilelocation: c.get('datepickerOptions', 'languagefilelocation'),
            callbackFunctions: {
                datereturned: [
                    function () {
                        f.$inputField.trigger('change')
                    }
                ]
            }
        };
        this.options = a.extend({
        }, h, e.jsondata(this.$el, 'config'));
        this.timeout = setTimeout(function () {
            d.createDatePicker(f.options);
            f.$el.find('.date-picker-control').addClass('is-hidden-print');
            d.setGlobalOptions({
                mousewheel: false,
                dateparsefallback: false
            })
        }, 500);
        return this
    };
    a(document).on('focus click', 'body > .date-picker', function (a) {
        a.stopImmediatePropagation()
    });
    f.prototype._destroy = f.prototype.destroy;
    f.prototype.destroy = function () {
        if (this.timeout) {
            clearTimeout(this.timeout);
            this.timeout = null
        }
        d.destroyDatePicker(this.$inputField.attr('id'));
        this.$inputField = null;
        this._destroy()
    };
    return f
});
define('uxui/app/modules/forms/WidgetInputRowExtendable', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.widget_input_row_extendable',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.$inputField = a(b).find('.widget_input_row_extendable--trigger');
        this.activeClassName = 'is-open';
        this.$inputField.on('click' + this.ns, this.bind(this.clickHandler));
        if (this.$inputField.is(':checked')) this.$el.addClass(this.activeClassName);
        return this
    };
    c.prototype.clickHandler = function (a) {
        if (this.$inputField.is(':checked')) this.$el.addClass(this.activeClassName);
        else this.$el.removeClass(this.activeClassName)
    };
    return c
});
define('uxui/app/modules/forms/EfFileInput', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    function c(a) {
        if (a.files) if (a.files.length) return a.files[0].name;
        else return false;
        else {
            var b = a.value;
            if (b) b = b.replace('C:\\fakepath\\', '');
            return b
        }
    }
    var d,
        e = '.ef_file_input',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++;
        this.nstemp = this.ns + '_temp'
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.$inputField = a(b).find('input');
        this.$inputField.on('change' + this.ns, this.bind(this.handleChange));
        this.$el.on('dragenter', this.bind(this.handleDragStart));
        return this
    };
    d.prototype.initVariables = function () {
        if (!this.$labelField) this.$labelField = this.$el.find('.ef_file_input--label--text')
    };
    d.prototype.handleChange = function (a) {
        var b = c(a.currentTarget);
        if (b) {
            this.initVariables();
            this.$labelField.html(b)
        }
    };
    d.prototype.handleDragStart = function (a) {
        this.dragTarget = a.target;
        this.$el.on('dragleave' + this.nstemp, this.bind(this.handleDragEnd));
        this.$el.on('drop' + this.nstemp, this.bind(this.handleDragEnd));
        this.$el.addClass('is-drag-active')
    };
    d.prototype.handleDragEnd = function (b) {
        if (b.target === this.dragTarget) {
            a(document).off(this.nstemp);
            this.$el.removeClass('is-drag-active')
        }
    };
    return d
});
define('uxui/app/modules/forms/InputEnableFormElement', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.input_enable_form_element',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++;
        this.nstemp = this.ns + '_temp'
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.$targetEle = a(this.$el.data('target'));
        this.$el.on('click' + this.ns, this.bind(this.clickHandler));
        if (this.$el.is(':checked')) this.$targetEle.attr('disabled', true);
        return this
    };
    c.prototype.clickHandler = function (a) {
        if (this.$el.is(':checked')) this.$targetEle.attr('disabled', false);
        else this.$targetEle.attr('disabled', true)
    };
    return c
});
define('uxui/app/modules/forms/PopInput', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode'
], function (a, b, c) {
    var d,
        e = '.PopInput',
        f = 0,
        g = '.js-pop_input--input',
        h = '.js-pop_input--button';
    d = function () {
        this.$el = null;
        this.ns = e + f++;
        this.nstemp = this.ns + '_temp'
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.on('change', g, this.bind(this.handleChange));
        this.on('focusin', g, this.bind(this.handleFocus));
        this.on('click', h, this.bind(this.handleButton));
        this.validateValue();
        this.active = false;
        return this
    };
    d.prototype.focus = function () {
        function b(a) {
            a.preventDefault();
            var d = c.get(0);
            d.select();
            c.off('mouseup touchend', b)
        }
        if (!this.active) {
            var c = this.$el.find(g);
            this.undoValue = c.val();
            this.$el.addClass('is-active');
            c.get(0).focus();
            c.on('mouseup touchend', b);
            var d = this.bind(this.handleOutside);
            a(document).on('focusin' + this.nstemp, d);
            a(document).on('click' + this.nstemp, d);
            c.on('keydown' + this.nstemp, this.bind(this.handleKeydown));
            this.active = true
        }
    };
    d.prototype.blur = function (b) {
        if (this.active) {
            var c = this.$el.find(g);
            this.$el.find(h);
            this.$el.removeClass('is-active');
            if (b) c.val(this.undoValue).trigger('change');
            a(document).off(this.nstemp);
            c.off(this.nstemp);
            this.active = false
        }
    };
    d.prototype.handleChange = function (a) {
        this.validateValue()
    };
    d.prototype.handleFocus = function (a) {
        this.focus()
    };
    d.prototype.handleButton = function (a) {
        a.preventDefault();
        a.stopPropagation();
        this.focus()
    };
    d.prototype.handleOutside = function (b) {
        var c = b.target,
            d = this.$el.find(h),
            e = a.contains(this.$el[0], c) || this.$el.is(c),
            f = a.contains(d[0], c) || d.is(c);
        if (!e || f) this.blur()
    };
    d.prototype.handleKeydown = function (a) {
        var b = this.$el.find(h);
        if (a.keyCode == c.ENTER) {
            a.preventDefault();
            this.blur();
            b.get(0).focus()
        }
        if (a.keyCode == c.ESCAPE) {
            a.preventDefault();
            this.blur(true);
            b.get(0).focus()
        }
    };
    d.prototype.validateValue = function () {
        var a = this.$el.find(g).val();
        if (a) {
            this.$el.find(h).text(a);
            this.$el.removeClass('is-empty')
        } else {
            this.$el.find(h).text('? ? ?');
            this.$el.addClass('is-empty')
        }
    };
    return d
});
define('uxui/app/modules/forms/CheckedInputContainer', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.CheckedInputContainer',
        e = 0,
        f = 'input[type="checkbox"], input[type="radio"]';
    c = function () {
        this.$el = null;
        this.ns = d + e++;
        this.nstemp = this.ns + '_temp'
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.on('change', f, this.bind(this.handleChange));
        this.on('click', this.bind(this.handleClick));
        this.validateValue();
        this.active = false;
        return this
    };
    c.prototype.handleChange = function (a) {
        this.validateValue()
    };
    c.prototype.handleClick = function (b) {
        if (!a(b.target).is(f)) {
            b.preventDefault();
            this.toggleValue()
        }
    };
    c.prototype.toggleValue = function () {
        var a = this.$el.find(f),
            b = a.prop('checked');
        a.prop('checked', !b);
        a.trigger('change')
    };
    c.prototype.validateValue = function () {
        var a = this.$el.find(f);
        if (a.prop('checked')) this.$el.addClass('is-checked');
        else this.$el.removeClass('is-checked')
    };
    return c
});
define('uxui/app/modules/forms/ToggleButtons', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.ToggleButtons',
        e = 0,
        f = 'input[type="radio"]';
    c = function () {
        this.$el = null;
        this.ns = d + e++;
        this.nstemp = this.ns + '_temp'
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.initVariables();
        this.bindUIActions();
        this.validateValues();
        this.active = false;
        return this
    };
    c.prototype.initVariables = function (a) {
        this.itemSelector = '.js-toggle_buttons--ele';
        this.$items = this.$el.find(this.itemSelector)
    };
    c.prototype.bindUIActions = function (a) {
        this.$items.on('click' + this.ns, this.bind(this.handleClick));
        this.on('change' + this.ns, f, this.bind(this.handleChange))
    };
    c.prototype.handleChange = function (a) {
        this.toggleValue(a)
    };
    c.prototype.handleClick = function (b) {
        if (!a(b.target).is(f)) {
            b.preventDefault();
            this.toggleValue(b)
        }
    };
    c.prototype.toggleValue = function (b, c) {
        this.$items.removeClass('is-checked');
        var d = a(b.target).closest(this.itemSelector);
        d.addClass('is-checked');
        var e = d.find(f);
        e.prop('checked', true)
    };
    c.prototype.validateValues = function () {
        this.$items.each(function () {
            var b = a(this).find(f);
            if (b.prop('checked')) a(this).addClass('is-checked');
            if (b.prop('disabled')) a(this).addClass('is-disabled')
        })
    };
    return c
});
define('uxui/app/modules/forms/TextAreaCharacterCounter', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.TextAreaCharacterCounter',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++;
        this.nstemp = this.ns + '_temp'
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.initVariables();
        this.$textarea.on('focus' + this.ns, this.bind(this.handleFocus));
        this.updateRemainingChars();
        if (this.$textarea.is(document.activeElement)) this.handleFocus();
        return this
    };
    c.prototype.initVariables = function () {
        this.$textarea = this.$el.find('.js-textarea');
        this.$remainingChars = this.$el.find('.js-text_area_character_counter--remaining_chars--text');
        this.maxChars = parseInt(this.$textarea.attr('maxlength'));
        this.isEventsBinded = false
    };
    c.prototype.bindUIActions = function () {
        this.$textarea.on('keyup' + this.nstemp, this.bind(this.keyupHandler));
        this.$textarea.on('blur' + this.nstemp, this.bind(this.handleBlur))
    };
    c.prototype.keyupHandler = function (a) {
        this.updateRemainingChars()
    };
    c.prototype.handleFocus = function (a) {
        if (!this.isEventsBinded) {
            this.bindUIActions();
            this.isEventsBinded = true
        }
    };
    c.prototype.handleBlur = function (a) {
        if (this.isEventsBinded) {
            this.$textarea.off(this.nstemp);
            this.isEventsBinded = false
        }
    };
    c.prototype.updateRemainingChars = function (a) {
        var b = this.$textarea.val().length,
            c = this.maxChars - b;
        this.$remainingChars.html(c)
    };
    return c
});
define('uxui/lib/animation/Scroll', [
    'jquery'
], function (a) {
    function b(b, d) {
        var e = a.extend({
            }, c, d),
            f = a(b).eq(0);
        if (f.length) {
            var g = a(document).scrollTop(),
                h = f.offset().top,
                i = a(window).height(),
                j = h - g,
                k = f.outerHeight();
            if (j + k > i) {
                g += j + k - i + e.margin;
                if (g > h) g = h;
                a('html, body').stop().animate({
                    scrollTop: g
                }, e.duration)
            } else if (j < 0) a('html, body').stop().animate({
                scrollTop: h
            }, e.duration)
        }
    }
    var c = {
        margin: 10,
        duration: 250
    };
    return {
        scrollInto: b
    }
});
define('uxui/app/modules/detail_page/Tooltip', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/Capabilities',
    'uxui/lib/animation/Scroll'
], function (a, b, c, d) {
    var e,
        f = '.detail_page_tooltip',
        g = 0,
        h = 'input:not([type="radio"]):not([type="checkbox"]), select, .link-item > a, textarea',
        i = 0;
    e = function () {
        this.$el = null;
        this.ns = f + g++;
        this.nstemp = this.ns + '_temp'
    };
    e.prototype = new b;
    e.prototype.init = function (b) {
        var d = this;
        this.$el = a(b);
        this.$icon = this.$el.find('.js-tooltip--icon');
        if (!this.$icon.length) this.$icon = this.$el;
        this.$icon.attr('tabindex', '0');
        this.$icon.on('mouseenter' + this.ns + ' focus' + this.ns, function (a) {
            d.show();
            d.$icon.on('mouseleave' + d.nstemp + ' blur' + d.nstemp, function (a) {
                d.hide()
            })
        });
        this.$icon.on('click' + this.ns, function (a) {
            a.preventDefault()
        });
        this.$icon.on(c.DRAGSTART + this.ns, function (b) {
            b.preventDefault();
            if (!d.isVisible) {
                d.show();
                a(document).on(c.DRAGSTART + d.nstemp, function (c) {
                    if (c.originalEvent !== b.originalEvent) if (!a.contains(d.$el, c.target) && !d.$el.is(c.target)) d.hide()
                })
            } else d.hide()
        });
        return this
    };
    e.prototype.show = function (a) {
        if (!this.isVisible) {
            this.isVisible = true;
            this.positionTooltip(a);
            this.getTooltipElement().addClass('is-visible');
            if (c.MOBILE) d.scrollInto(this.getTooltipElement().children());
            return true
        }
        return false
    };
    e.prototype.hide = function () {
        if (this.isVisible) {
            this.isVisible = false;
            this.getTooltipElement().removeClass('is-visible').css({
                top: '',
                left: ''
            });
            a(document).off(this.nstemp);
            a(this.$icon).off(this.nstemp);
            return true
        }
        return false
    };
    e.prototype.getTooltipElement = function () {
        if (!this.$tooltip) this.$tooltip = this.$el.siblings('.js-tooltip--content');
        return this.$tooltip
    };
    e.prototype.getRelatedElement = function () {
        return this.$el.parents('.form-elements > li').eq(0)
    };
    e.prototype.getRelatedInput = function () {
        return this.getRelatedElement().find(h)
    };
    e.prototype.positionTooltip = function (a) {
        var b = this.getTooltipElement(),
            c = b.closest('.detail_content, .detail_overlay--content, body, .styleguide-example');
        if (c.hasClass('detail_content')) var d = c.width();
        else var d = c.outerWidth();
        var e = c.offset(),
            f = b.children();
        f.css({
            left: ''
        });
        var g = b.offsetParent(),
            h = g.offset(),
            j = a ? this.getRelatedInput()  : this.$icon;
        if (!j.length) j = this.$icon;
        var k = j.offset(),
            l = {
                left: k.left - h.left,
                top: k.top - h.top
            };
        if (this.getRelatedElement().length) b.addClass('is-atlabel');
        else b.removeClass('is-atlabel');
        if (a) b.addClass('is-atinput');
        else b.removeClass('is-atinput');
        b.css({
            left: l.left + j.outerWidth() / 2,
            top: l.top + j.outerHeight() / 2
        });
        var m = b.position().left,
            n = f.outerWidth(true);
        if (m - n / 2 < i) f.css({
            left: - m + i
        });
        else if (m + n > d + e.left - i) f.css({
            left: d - m - n - i
        })
    };
    e.prototype.destroy = function () {
        this.getRelatedInput().off(this.ns);
        this.$icon.off(this.ns);
        this.$el = null;
        this.$tooltip = null;
        this.$icon = null
    };
    return e
});
define('uxui/app/modules/detail_page/Countdown', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.detail_page_countdown',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        var c = this;
        this.$el = a(b);
        this.currentTime = this.totalTime = parseInt(a(b).data('seconds'), 10);
        this.$el.find('.js-countdown-value').text(c.formatNumber(this.totalTime, 2));
        this.initCoundown();
        return this
    };
    c.prototype.countdownFinished = function () {
        this.destroy();
        if (this.$el) {
            this.$el.trigger('countdownFinished');
            for (var b = this.$el.data('disable').split(','), c = b.length - 1; c >= 0; c--) {
                var d = a(b[c]);
                d.prop('disabled', 'disabled')
            }
        }
    };
    c.prototype.initCoundown = function () {
        var a = this,
            b = this.$el.find('.js-countdown-bar-remaining'),
            c = this.$el.find('.js-countdown-value');
        this.interval = setInterval(function () {
            a.currentTime -= 1;
            if (a.currentTime <= 10) b.addClass('countdown--bar-red');
            b.css({
                width: a.currentTime / a.totalTime * 100 + '%'
            });
            c.text(a.formatNumber(a.currentTime, 2));
            if (0 === a.currentTime) a.countdownFinished()
        }, 1000)
    };
    c.prototype.formatNumber = function (a, b) {
        var c = b - a.toString().length + 1;
        return Array(Math.abs(c > 0 && c)).join('0') + a
    };
    c.prototype.destroy = function () {
        clearInterval(this.interval);
        this.interval = null
    };
    return c
});
define('uxui/app/modules/content/Collapsed', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/animation/HeightAnimationAutoscroll'
], function (a, b, c) {
    var d,
        e = '.Collapsed',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.$content = this.$el.find('.js-pane-collapsed--content');
        this.on('click', '.js-collapsed--trigger', this.bind(this.handleMenuTrigger));
        return this
    };
    d.prototype.handleMenuTrigger = function (a) {
        a.preventDefault();
        this.toggle()
    };
    d.prototype.open = function (a) {
        this.setState(true, a)
    };
    d.prototype.close = function (a) {
        this.setState(close, a)
    };
    d.prototype.toggle = function (a) {
        this.setState(!this.$el.hasClass('is-open'), a)
    };
    d.prototype.setState = function (a, b) {
        var d = new c(this.$el);
        if (a) {
            this.$el.addClass('is-open');
            this.$content.attr('aria-expanded', 'true');
            this.$content.attr('tabindex', '0')
        } else {
            this.$el.removeClass('is-open');
            this.$content.attr('aria-expanded', 'false');
            this.$content.attr('tabindex', '-1')
        }
        d.complete(b)
    };
    return d
});
define('uxui/lib/net/ImageLazyLoader', [
    'jquery'
], function () {
    var a,
        a = function (a, b) {
            var c = {
                rootElement: 'body',
                containerClass: null,
                firstEle: false
            };
            for (var d in a) if (a.hasOwnProperty(d)) c[d] = a[d];
            var e = $(c.rootElement),
                f = e.find('.js-lazy_load').length,
                b = b || function () {
                };
            loadAllImages = function () {
                var a = e.find('.js-lazy_load');
                a.each(function () {
                    loadImage($(this))
                })
            };
            allImagesLoaded = function () {
                b.apply()
            };
            loadImage = function (a) {
                var b,
                    d;
                if (c.containerClass) b = a.parents(c.containerClass);
                else b = a.parent();
                d = a.data('src');
                b.addClass('is-loading');
                var e = function (a) {
                    a.removeClass('js-lazy_load');
                    b.removeClass('is-loading');
                    f--;
                    if (c.firstEle) {
                        c.firstEle = false;
                        loadAllImages()
                    }
                    if (f <= 0) allImagesLoaded()
                };
                a.attr('src', d).load(function () {
                    e($(this))
                })
            };
            if (c.firstEle) loadImage(c.firstEle);
            else loadAllImages()
        };
    return a
});
define('uxui/app/modules/content/LazyLoader', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/net/ImageLazyLoader'
], function (a, b, c) {
    var d,
        e = '.LazyLoader',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        new c({
            rootElement: b
        }, this.imagesLoaded)
    };
    d.prototype.imagesLoaded = function () {
    };
    return d
});
define('uxui/app/modules/various/GuidedTour', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode',
    'uxui/app/util/DOMUtil'
], function (a, b, c, d) {
    var e,
        f = '.GuidedTour',
        g = 0,
        h = '#ffcc00';
    jQuery.extend(jQuery.easing, {
        easeInOutExpo: function (a, b, c, d, e) {
            if (0 == b) return c;
            if (b == e) return c + d;
            if ((b /= e / 2) < 1) return d / 2 * Math.pow(2, 10 * (b - 1)) + c;
            else return d / 2 * ( - Math.pow(2, - 10 * --b) + 2) + c
        }
    });
    e = function () {
        this.$el = null;
        this.ns = f + g++
    };
    e.prototype = new b;
    e.prototype.init = function (b) {
        this.$el = a(b);
        this.$items = this.$el.find('.js-guided_tour--item');
        this.$focus = this.$el.find('.js-guided_tour--focus');
        var c = document.createElement('canvas');
        this.ctx = c.getContext && c.getContext('2d');
        if (this.ctx) {
            this.$el.append(c);
            this.$el.addClass('has-canvas')
        }
        this.activate(true);
        return this
    };
    e.prototype.activate = function (b) {
        if (this.active != b) {
            this.active = b;
            if (b) {
                this.$el.fadeIn();
                a('html').addClass('is-guided_tour_active');
                this.selectItem(this.$items.eq(0));
                this.initInteraction()
            } else {
                a('html, body').css({
                    overflow: ''
                });
                this.$el.fadeOut();
                a('html').removeClass('is-guided_tour_active');
                this.selectItem(null);
                this.$el.off(this.ns);
                a(document).off(this.ns);
                a(window).off(this.ns)
            }
        }
    };
    e.prototype.initInteraction = function () {
        this.on('touchstart', this.bind(function (a) {
            if (this.$el.is(a.target)) a.preventDefault()
        }));
        this.on('click', 'a[href^="#"]', this.bind(function (b) {
            var c = a(b.currentTarget),
                d = c.attr('href'),
                e = this.$items.filter(d);
            if (e) {
                b.preventDefault();
                this.selectItem(e)
            }
        }));
        this.on('click', '.js-guided_tour--close', this.bind(function (a) {
            this.activate(false)
        }));
        this.on('click', '.js-guided_tour--finish', this.bind(function (a) {
            this.finish()
        }));
        this.on(document, 'focusin', this.bind(function (a) {
            if (this.$selectedItem && this.$selectedItem.length) {
                var b = this.$selectedItem[0];
                if (b) if (!b.contains(a.target) && b != a.target) {
                    a.stopPropagation();
                    d.focus(b)
                }
            }
        }));
        this.on(document, 'keydown', this.bind(function (a) {
            if (!(a.ctrlKey || a.metaKey || a.altKey)) {
                var b = this.$items.index(this.$selectedItem);
                switch (a.keyCode) {
                    case c.ESCAPE:
                        this.selectItem(this.$items.last());
                        break;
                    case c.RIGHT:
                        if (b + 1 < this.$items.length) this.selectItem(this.$items.eq(b + 1));
                        break;
                    case c.LEFT:
                        if (b > 0) this.selectItem(this.$items.eq(b - 1))
                }
            }
        })); this.on(window, 'resize', this.bind(function () {
            if (!this.ignoreResize) this.render(false)
        })); this.on(window, 'scroll', this.bind(function () {
            this.render(false)
        }))
    };
    e.prototype.selectItem = function (b) {
        function c() {
            e.$selectedItem = h;
            e.$selectedTarget = g;
            e.render({
                animate: true
            })
        }
        var e = this,
            f = a(b),
            g = this.$selectedTarget,
            h = this.$selectedItem;
        if (!f.is(h)) {
            this.$items.stop().fadeOut();
            if (g) {
                g.removeClass('is-guided_tour_selected');
                g.css('position', '')
            }
            h = f;
            if (0 !== h.length) {
                this.selectedOptions = d.jsondata(f, 'guided_tour');
                var i = !!this.selectedOptions.target;
                if (i) {
                    g = a(this.selectedOptions.target).eq(0);
                    if (!this.ctx) {
                        if ('static' == g.css('position')) g.css('position', 'relative');
                        g.addClass('is-guided_tour_selected')
                    }
                    a('html, body').css({
                        overflow: ''
                    })
                } else {
                    g = null;
                    a('html, body').css({
                        overflow: 'hidden'
                    })
                }
                this.ignoreResize = true;
                a(window).trigger('resize');
                this.ignoreResize = false;
                this.render({
                    nofocus: true,
                    selected: h,
                    target: g
                });
                h.stop().show();
                var j = - 1111;
                if (i) j = function () {
                    var b = h.find('.guided_tour--article'),
                        c = a(window).height(),
                        d = a(document).scrollTop(),
                        e = g.offset(),
                        f = b.offset(),
                        i = g.outerHeight(),
                        k = b.outerHeight(),
                        l = Math.min(e.top, f.top),
                        m = Math.max(e.top + i, f.top + k);
                    if (l < d) j = e.top - 50;
                    else if (m > d + c) j = m - c + 10;
                    return j
                }();
                if (j !== - 1111) {
                    a('html').stop().animate({
                        scrollTop: j
                    }, {
                        duration: 250,
                        complete: function () {
                            setTimeout(function () {
                                c()
                            }, 50)
                        }
                    });
                    a(' body').stop().animate({
                        scrollTop: j
                    }, {
                        duration: 200
                    })
                } else c();
                h.hide();
                h.stop().delay(i ? 600 : 300).fadeIn('fast', function () {
                    d.focus(this)
                })
            }
        }
    };
    e.prototype.render = function (b) {
        b = b || {
        };
        var c = this,
            d = !!b.animate,
            e = !b.nofocus,
            f = void 0 !== b.selected ? b.selected : this.$selectedItem,
            g = void 0 !== b.target ? b.target : this.$selectedTarget,
            h = g && g.length;
        if (d || h) {
            var i,
                j = a(window).width(),
                k = a(window).height(),
                l = a(document).scrollTop();
            if (this.ctx && e) {
                this.ctx.canvas.width = j;
                this.ctx.canvas.height = k
            }
            if (h) {
                var m = g.offset(),
                    n = g.outerWidth(),
                    o = g.outerHeight(),
                    p = m.left + n / 2 < j / 2 ? 'right' : 'left',
                    q = 'is-position-' + p,
                    r = m.left,
                    s = m.top;
                switch (this.selectedOptions.position) {
                    case 'left':
                    case 'right':
                        if ('right' == p) r += n;
                        break;
                    case 'top':
                        r += n / 2;
                        q = 'is-position-top-' + p;
                        break;
                    case 'bottom':
                        r += n / 2;
                        s += o;
                        q = 'is-position-bottom-' + p
                }
                f.removeClass('is-position-top-left is-position-top-right is-position-bottom-left is-position-bottom-right is-position-left is-position-right');
                f.addClass(q);
                i = {
                    left: m.left,
                    top: m.top - l,
                    width: n,
                    height: o
                }
            } else if (this.focusRect) i = {
                left: this.focusRect.left + this.focusRect.width / 2,
                top: this.focusRect.top + this.focusRect.height / 2,
                width: 0,
                height: 0
            };
            else i = {
                    left: j / 2,
                    top: k / 2,
                    width: 0,
                    height: 0
                };
            if (!this.focusRect || 0 === this.focusRect.width) {
                this.focusRect = {
                    left: i.left + i.width / 2,
                    top: i.top + i.height / 2,
                    width: 0,
                    height: 0
                };
                this.$focusRect = a(this.focusRect)
            }
            if (e) if (this.ctx) if (d) this.$focusRect.stop().animate(i, {
                duration: 700,
                easing: 'easeInOutExpo',
                progress: function () {
                    c.renderCanvasFocus(this)
                },
                complete: function () {
                    c.renderCanvasFocus(this)
                }
            });
            else {
                this.renderCanvasFocus(i);
                this.$focusRect.stop(true, true);
                this.focusRect = i;
                this.$focusRect = a(this.focusRect)
            } else this.$focus.css(i);
            var t = f.outerWidth(),
                u = f.outerHeight();
            s -= l;
            if (r < 10) r = 10;
            if (r + t > j - 10) r = j - 10 - t;
            if (s < 10) s = 10;
            if (s + u > k - 10) s = k - 10 - u;
            r = Math.round(r);
            s = Math.round(s);
            f.css({
                left: r,
                top: s
            })
        }
    };
    e.prototype.finish = function () {
        var b = this,
            c = a(window).width(),
            d = a(window).height();
        this.$focusRect.stop().animate({
            left: 0,
            top: 0,
            width: c,
            height: d
        }, {
            duration: 700,
            easing: 'easeInOutExpo',
            progress: function () {
                b.renderCanvasFocus(this)
            },
            complete: function () {
                b.renderCanvasFocus(this)
            }
        });
        setTimeout(function () {
            b.activate(false)
        }, 600)
    };
    e.prototype.renderCanvasFocus = function (a) {
        this.ctx.fillStyle = 'rgba(0,0,0,0.6)';
        this.ctx.strokeStyle = h;
        this.ctx.lineWidth = 1;
        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
        if (a.width && a.height) {
            this.ctx.clearRect(a.left, a.top, a.width, a.height);
            this.ctx.strokeRect(a.left + 0.5, a.top + 0.5, a.width - 1, a.height - 1)
        }
    };
    return e
});
define('uxui/app/modules/various/Carousel', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/net/ImageLazyLoader'
], function (a, b, c) {
    var d,
        e = '.Carousel',
        f = 0,
        g = {
            lang: 'de'
        };
    d = function () {
        this.$el = null;
        this.ns = e + f++
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.initVariables();
        this.bindUIActions();
        this.startLazyLoading();
        this.setAtts();
        this.updateLayout();
        this.updateCurrentView(this.currentStep);
        return this
    };
    d.prototype.setAtts = function () {
        this.$el.find('.carousel--list--item').each(function () {
            a(this).attr('aria-hidden', true)
        })
    };
    d.prototype.initVariables = function () {
        this.config = this.$el.data('config') || g;
        this.isAccelerated = Modernizr.csstransforms && Modernizr.csstransitions;
        this.$items = this.$el.find('.js-carousel--list--item');
        this.$list = this.$el.find('.js-carousel--list');
        this.numberOfSteps = this.$items.length;
        this.initialStep = this.currentStep = this.getInitialStep();
        this.firstMediaItem = false;
        this.unitWidth = this.$items.first().outerWidth();
        this.windowHeight = a(window).height();
        this.totalImages = this.$el.find('.js-lazy_load').length;
        this.preloader = null;
        this.fullheight = this.$el.hasClass('is-fullheight');
        this.changed = false;
        this.isIOS = navigator.userAgent.match(/(iPad|iPhone|iPod)/g)
    };
    d.prototype.getInitialStep = function () {
        return '' === location.hash.replace('#carousel', '') ? 1 : parseInt(location.hash.replace('#carousel', ''))
    };
    d.prototype.bindUIActions = function () {
        var b = this;
        this.$el.find('.js-carousel_step_link').on('keyup', function (a) {
            if (13 === event.keyCode) event.preventDefault()
        });
        this.$el.find('.js-carousel_step_link').on('click' + e, this.bind(this.clickHandler));
        a(window).resize(function () {
            b.updateLayout()
        });
        if (Modernizr.touchevents) this.bindTouchEvents()
    };
    d.prototype.startLazyLoading = function () {
        var a = this.$items.eq(this.currentStep - 1).find('.js-lazy_load');
        if (a.length) this.preloader = new c({
            firstEle: a,
            containerClass: '.js-carousel_step--media'
        }, this.imagesLoaded)
    };
    d.prototype.imagesLoaded = function () {
    };
    d.prototype.bindTouchEvents = function () {
        function a(d) {
            var h = d.originalEvent.touches[0];
            f = h.pageX;
            g = h.pageY;
            k = (new Date).getTime();
            j = (l.currentStep - 1) * l.unitWidth;
            l.$list.removeClass('is-animating');
            l.$list.on('touchmove' + e, b);
            l.$list.on('touchend' + e, c);
            l.$list.off('touchstart' + e, a)
        }
        function b(a) {
            var b,
                c = a.originalEvent.touches[0];
            if (Math.abs(g - c.pageY) > Math.abs(f - c.pageX)) {
                l.moveToNewStep(l.currentStep);
                return d()
            }
            a.preventDefault();
            h = c.pageX;
            i = h - f;
            b = i - j;
            if (1 === l.currentStep && f < h) b = i / 2 - j;
            else if (l.currentStep === l.numberOfSteps && f > h) b = i / 2 - j;
            l.$list.get(0).style.pointerEvents = 'none';
            if (l.isAccelerated) l.$list.css({
                transform: 'translate(' + b + 'px,0) translateZ(0)'
            });
            else l.$list.css({
                left: b + 'px'
            })
        }
        function c(a) {
            var b = ((new Date).getTime() - k, (new Date).getTime() - k);
            if (Math.abs(i) < l.unitWidth / 3 && b > 200 || Math.abs(i) < 20) l.moveToNewStep(l.currentStep);
            else if (1 === l.currentStep && f < h) l.moveToNewStep(l.currentStep);
            else if (l.currentStep === l.numberOfSteps && f > h) l.moveToNewStep(l.currentStep);
            else if (f < h) l.goToPrevSlide();
            else if (f > h) l.goToNextSlide();
            d()
        }
        function d() {
            l.$list.off('touchmove' + e, b);
            l.$list.off('touchend' + e, c);
            l.$list.on('touchstart' + e, a);
            l.$list.get(0).style.pointerEvents = ''
        }
        var f,
            g,
            h,
            i,
            j,
            k,
            l = this;
        this.$list.on('touchstart' + e, a)
    };
    d.prototype.goToNextSlide = function () {
        if (this.currentStep < this.numberOfSteps) {
            this.currentStep++;
            this.moveToNewStep(this.currentStep, true)
        }
    };
    d.prototype.goToPrevSlide = function () {
        if (this.currentStep > 1) {
            this.currentStep--;
            this.moveToNewStep(this.currentStep, true)
        }
    };
    d.prototype.updateLayout = function () {
        if (this.$el) {
            this.unitWidth = this.$items.first().outerWidth();
            this.windowHeight = a(window).height();
            this.moveToNewStep(this.currentStep)
        }
    };
    d.prototype.clickHandler = function (b) {
        this.changed = true;
        b.preventDefault();
        var c = a(b.target).attr('href'),
            d = a(c).index() + 1;
        this.moveToNewStep(d, true)
    };
    d.prototype.setVoiceOverFocus = function (a) {
        var b = 10,
            c = 10;
        a.blur();
        var d = 0,
            e = window.setInterval(function () {
                a.focus();
                d++;
                if (d >= c) window.clearInterval(e)
            }, b)
    };
    d.prototype.updateCurrentView = function (a) {
        this.$items.removeClass('is-current');
        this.$items.find('.js-carousel_step_link, .js-carousel_next_link, .next_step').attr('tabindex', - 1);
        var b = this.$items.eq(a - 1),
            c = b.find('.js-carousel_step'),
            d = c.closest('.js-carousel--list--item').attr('id');
        b.addClass('is-current');
        b.find('.js-carousel_step_link, .js-carousel_next_link, .next_step').attr('tabindex', 0);
        this.currentStep = a;
        var e;
        if (this.fullheight) e = c.outerHeight() + this.$list.offset().top < this.windowHeight ? this.windowHeight - this.$list.offset().top : c.outerHeight();
        else e = c.outerHeight();
        this.$list.css({
            height: e + 'px'
        });
        if (c.closest('.detail_overlay--content').length) {
            var f = c.closest('.detail_overlay--content'),
                g = Math.ceil(f.height()),
                h = f[0].scrollHeight,
                i = c.outerWidth(),
                j = this.unitWidth;
            if (g < h) if (i != j) j = i;
            var k = (a - this.initialStep) * j * - 1;
            if (this.isAccelerated) this.$list.removeClass('is-animating').css({
                transform: 'translateX(' + k + 'px) translateZ(0)'
            });
            else this.$list.removeClass('is-animating').css({
                left: k + 'px'
            })
        }
        this.$list.removeClass('animated');
        this.$el.trigger('pf:carousel:changed', {
            curViewIndex: a - 1,
            curViewID: '#' + d
        });
        this.$items.find('.js-carousel--list--item').attr('tabindex', - 1);
        this.$items.attr('tabindex', - 1);
        b.attr('tabindex', 0);
        b.attr('aria-hidden', false);
        if (true === this.changed) {
            if (this.isIOS) this.setVoiceOverFocus(b);
            b.focus()
        }
    };
    d.prototype.moveToNewStep = function (a, b) {
        this.$list.addClass('animated');
        var c = this.$items.eq(a - this.initialStep).attr('id');
        this.$el.trigger('pf:carousel:change', {
            goToIndex: a - 1,
            goToID: '#' + c
        });
        var d = this;
        b = 'undefined' !== typeof b ? b : false;
        var e = (a - this.initialStep) * this.unitWidth * - 1;
        if (this.isAccelerated) this.$list.addClass('is-animating').css({
            transform: 'translateX(' + e + 'px) translateZ(0)'
        });
        else this.$list.addClass('is-animating').css({
            left: e + 'px'
        });
        this.reloadAnimation(a);
        if (b) setTimeout(function () {
            d.updateCurrentView(a)
        }, 300)
    };
    d.prototype.reloadAnimation = function (a) {
        var b = this.$items.eq(a - 1),
            c = b.find('script');
        if (!c.attr('src')) c.attr('src', c.data('src'));
        if (window.HYPE) {
            for (var d in HYPE.documents) HYPE.documents[d].pauseTimelineNamed(0);
            var e = HYPE.documents[this.config.lang.toUpperCase() + '_step_' + a];
            if (e) {
                e.goToTimeInTimelineNamed(0);
                e.playTimelineNamed(0)
            }
        }
    };
    d.prototype.reloadNextGIF = function (a) {
        var b = this.$items.eq(a - 1).find('.js-carousel_step--media--img');
        b.attr('src', b.data('src'))
    };
    return d
});
define('uxui/app/modules/content/DynamiciFrameHeight', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.DynamiciFrameHeight',
        e = 0;
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        var c = this.$el.get(0).contentDocument || this.$el.get(0).contentWindow.document;
        if ('complete' == c.readyState) this.loadedHandler();
        else this.$el.on('load', this.bind(this.loadedHandler));
        return this
    };
    c.prototype.loadedHandler = function (a) {
        var b = this.$el.get(0).contentDocument.documentElement.scrollHeight;
        if (0 == b) b = this.$el.get(0).contentWindow.document.body.scrollHeight;
        this.$el.css({
            height: b + 15 + 'px'
        });
        this.$el.addClass('is-active')
    };
    return c
});
define('uxui/app/modules/detail_page/ListFilter', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/KeyCode',
    'uxui/app/util/DOMUtil'
], function (a, b, c, d) {
    var e,
        f = '.ListFilter',
        g = 0;
    e = function () {
        this.$el = null;
        this.ns = f + g++
    };
    e.prototype = new b;
    e.prototype.init = function (b) {
        this.$el = a(b);
        this.on('focus', this.bind(this.startInteraction));
        this.isEventsBinded = false;
        return this
    };
    e.prototype.startInteraction = function () {
        this.options = this.options || d.jsondata(this.$el, 'list_filter') || {
        };
        this.$parent = this.$el.parents('.js-text_input_row_narrow');
        if (!this.options.target || 0 === (this.$target = a(this.options.target)).length) throw new Error('Missing list filter target.');
        if (void 0 === this.$resetBtn) {
            this.$textInputNarrow = this.$el.parents('.js-text_input_row_narrow');
            this.$resetBtn = this.$textInputNarrow.find('.js-list_filter--reset_btn')
        }
        if (!this.isEventsBinded) this.bindUIEvents();
        this.$describedby = a(this.options.describedby);
        this.$items = this.$target.find('>li, >tr, >tbody>tr');
        this.invalidate()
    };
    e.prototype.bindUIEvents = function () {
        this.on('blur' + f, this.bind(this.endInteraction));
        this.on('change' + f, this.bind(this.invalidate));
        this.on('keyup' + f, this.bind(this.invalidate));
        this.on('keydown' + f, this.bind(function (a) {
            if (a.keyCode == c.ENTER) {
                a.preventDefault();
                this.$el.blur()
            } else this.invalidate(a)
        }));
        this.$resetBtn.on('click' + f, this.bind(this.clearField));
        this.isEventsBinded = true
    };
    e.prototype.endInteraction = function () {
        this.off(this.ns);
        this.$items = null;
        this.isEventsBinded = false;
        this.on('focus', this.bind(this.startInteraction))
    };
    e.prototype.invalidate = function () {
        clearTimeout(this.timeout);
        this.timeout = setTimeout(this.bind(this.validate), 100)
    };
    e.prototype.clearField = function () {
        this.$el.val('');
        this.$target.removeClass('has-no-results');
        this.hideDescribedby();
        this.$resetBtn.removeClass('is-active');
        this.$textInputNarrow.removeClass('text_input-has_value');
        this.$el.focus()
    };
    e.prototype.hideDescribedby = function () {
        if (this.$describedby.length) {
            this.$describedby.hide();
            this.$el.removeAttr('aria-describedby')
        }
    };
    e.prototype.validate = function () {
        var b = this.$el.val().toLowerCase(),
            c = this.$textInputNarrow.find('.js-list_filter--append_text');
        if (b != this.lastValue) {
            this.lastValue = b;
            var d = b.split(/\s+/);
            if (null != this.$items) {
                var e = this.$items.length;
                this.$items.css('display', '');
                this.$target.removeClass('has-no-results');
                this.hideDescribedby();
                if (b) {
                    this.$resetBtn.addClass('is-active');
                    this.$items.each(function () {
                        for (var b, c = a(this), f = c.text().toLowerCase(), g = 0; g < d.length; g++) {
                            b = d[g];
                            if (f.indexOf(b) < 0) {
                                c.css('display', 'none');
                                e--;
                                break
                            }
                        }
                    });
                    if (0 == e) {
                        this.$target.addClass('has-no-results');
                        if (this.$describedby.length) {
                            this.$describedby.show();
                            this.$el.attr('aria-describedby', this.options.describedby.substring(1))
                        }
                    }
                    this.$textInputNarrow.find('.js-list_filter--count').text(e + ' ').append(c.clone())
                } else {
                    this.$textInputNarrow.find('.js-list_filter--count').text('').append(c.clone());
                    this.$resetBtn.removeClass('is-active')
                }
            }
        }
    };
    return e
});
define('uxui/app/modules/content/Autofocus', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/app/util/DOMUtil'
], function (a, b, c) {
    var d,
        e = '.Aufofocus',
        f = 0;
    d = function () {
        this.$el = null;
        this.ns = e + f++
    };
    d.prototype = new b;
    d.prototype.init = function (b) {
        var d = a(b);
        this.$el = d;
        c.focus(this.$el);
        if ('keepfocus' == this.$el.data('autofocus')) this.on(document, 'focusin', this.bind(function (a) {
            var b = this.$el[0];
            if (b) if (!b.contains(a.target)) {
                a.stopPropagation();
                c.focus(b)
            }
        }))
    };
    return d
});
define('uxui/app/modules/content/DetailOverlay', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/browser/Accessibility',
    'uxui/lib/browser/KeyCode',
    'uxui/app/util/DOMUtil'
], function (a, b, c, d, e) {
    function f(a) {
        k.push(a)
    }
    function g(a) {
        for (var b = k.length - 1; b >= 0; b--) if (k[b] == a) return k.splice(b, 1);
        else k[b].closeOverlayHandler()
    }
    var h,
        i = '.DetailOverlay',
        j = 0,
        k = [
        ];
    h = function () {
        this.$el = null;
        this.ns = i + j++
    };
    h.prototype = new b;
    h.prototype.init = function (b) {
        this.$el = a(b);
        this.$triggerEl = null;
        this.releaseFocus = null;
        this.bindUIActions();
        return this
    };
    h.prototype.bindUIActions = function () {
        a(document).on('pf:overlay:open', this.bind(this.openOverlayHandler));
        a(document).on('pf:overlay:close', this.bind(this.closeOverlayHandler));
        a(document).on('focusin' + this.ns, this.bind(this.focusInHandler))
    };
    h.prototype.focusInHandler = function (b) {
        var c = this.$el[0];
        if (!c.contains(b.target) && c !== b.target) if (!a('#livechat').length && !a('#x-unblu-root-container').length && !a('#pfde').length) {
            b.stopPropagation();
            e.focus(c)
        }
    };
    h.prototype.openOverlayHandler = function (b, d) {
        if (!d) d = {
        };
        if (d.activeID && (!d.activeID || d.activeID === this.$el.attr('id'))) {
            this.$el.show();
            f(this);
            if (d.triggerElement) this.$triggerEl = a(d.triggerElement);
            var e = k[k.length - 2];
            if (e) {
                this.$el.css('z-index', parseInt(a(e.$el[0]).css('z-index')) + 1);
                if (e.releaseFocus) e.releaseFocus()
            }
            var g = '#' + this.$el[0].id + ', .js-detail_overlay-allow-focus';
            this.releaseFocus = c.keepFocus(g);
            var h = this.$el.find('#ef-error-message, #ef-info-message').first();
            if (!h.length) h = this.$el.find('h1, h2, h3').first();
            if (!h.length) h = this.$el;
            c.focusFirst(h);
            a(window).trigger('resize')
        }
    };
    h.prototype.closeOverlayHandler = function (a, b) {
        if (!b) b = {
        };
        if (b.activeID && (!b.activeID || b.activeID === this.$el.attr('id'))) {
            this.$el.hide();
            g(this);
            if (this.releaseFocus) {
                this.releaseFocus();
                this.releaseFocus = null
            }
            var d = k[k.length - 1];
            if (d) {
                var e = '#' + d.$el[0].id + ', .js-detail_overlay-allow-focus';
                d.$el.removeClass('has-lightbox');
                d.releaseFocus = c.keepFocus(e)
            }
            if (this.$triggerEl) this.$triggerEl.focus()
        }
    };
    return h
});
define('uxui/app/modules/various/ScrollSlider', [
    'jquery',
    'uxui/app/modules/BaseModule',
    'uxui/lib/animation/scrollToView'
], function (a, b, c) {
    function d() {
        this.$el = null;
        this.ns = e + f++
    }
    var d,
        e = '.ScrollSlider',
        f = 0;
    d.prototype = new b;
    var g = d.prototype.destroy;
    d.prototype.init = function (b) {
        this.$el = a(b);
        this.$scrollView = this.$el.find('.js-scrollslider--area');
        if (!this.$scrollView.length) this.$scrollView = this.$el;
        this.invalidate();
        this.on(window, 'resize', this.bind(this.invalidate));
        this.on(window, 'pf:tabs:change', this.bind(this.invalidate));
        this.$scrollView.on('scroll', this.bind(this.validateScroll));
        this.on('click', '.js-scrollslider--left', this.bind(this.scrollToLeft));
        this.on('click', '.js-scrollslider--right', this.bind(this.scrollToRight));
        this.on('click', 'a[href^="#"]', this.bind(this.scrollToAnchor));
        return this
    };
    d.prototype.destroy = function () {
        clearTimeout(this.delayedValidationTimeout);
        this.$scrollView = null;
        g.call(this)
    };
    d.prototype.invalidate = function () {
        this.validate();
        clearTimeout(this.delayedValidationTimeout);
        this.delayedValidationTimeout = setTimeout(this.bind(function () {
            this.delayedValidationTimeout = null;
            this.validate()
        }), 1000)
    };
    d.prototype.validate = function () {
        if (this.$el && this.$scrollView) {
            var a = this.$scrollView.get(0),
                b = this.hasScroll = a.scrollWidth > a.clientWidth;
            if (b) {
                this.$el.addClass('has-scroll');
                this.validateScroll()
            } else this.$el.removeClass('has-scroll has-leftscroll has-rightscroll')
        }
    };
    d.prototype.validateScroll = function () {
        if (this.hasScroll) {
            var a = this.$scrollView.get(0),
                b = a.scrollLeft,
                c = a.scrollWidth - a.clientWidth - 1;
            if (b <= 1) this.$el.removeClass('has-leftscroll');
            else this.$el.addClass('has-leftscroll');
            if (b >= c) this.$el.removeClass('has-rightscroll');
            else this.$el.addClass('has-rightscroll')
        }
    };
    d.prototype.scrollToAnchor = function (a) {
        a.preventDefault();
        var b = this.$el.find(a.currentTarget.hash.substr(0));
        if (b) {
            if (window.scrollY <= 50) window.scrollTo(0, 50);
            var d = b.closest('th'),
                e = d.prevAll('.visuallyhidden'),
                f = d.index();
            if (e.length > 0) f -= e.length;
            c(b);
            this.scrollBy( - 9999, true);
            if (f > 0) this.scrollBy(f)
        }
    };
    d.prototype.scrollBy = function (a, b) {
        var c,
            d = this.$scrollView.get(0),
            e = this.$el.data('scroll-page-width') || d.clientWidth,
            f = Math.round(d.scrollLeft + a * e),
            g = d.scrollWidth - d.clientWidth,
            h = d.scrollLeft + d.clientWidth / 2,
            i = Number.MAX_VALUE,
            j = this.$el.find('tbody > tr:first-child > *'),
            k = this.$el.find('thead > tr:first-child > *');
        if (k.length && j.length !== k.length) j = this.$el.find('thead > tr:first-child > *:not(.visuallyhidden)');
        var l = [
        ];
        if (j.length) {
            j.each(function () {
                var a = this.offsetLeft + this.offsetWidth / 2;
                l.push(a);
                var b = Math.abs(a - h);
                if (b < i) {
                    i = b;
                    c = this
                }
            });
            var m = j.index(c),
                n = Math.min(j.length - 1, Math.max(0, m + a));
            if (a > 1) n = Math.min(j.length - 1, Math.max(0, a));
            var o = l[n];
            f = d.scrollLeft + o - h
        }
        if (f < 0) f = 0;
        if (f > g) f = g;
        this.$scrollView.animate({
            scrollLeft: f
        }, {
            duration: b ? 0 : 300
        })
    };
    d.prototype.scrollToLeft = function (a) {
        if (a) a.preventDefault();
        this.scrollBy( - 1)
    };
    d.prototype.scrollToRight = function (a) {
        if (a) a.preventDefault();
        this.scrollBy(1)
    };
    return d
});
define('uxui/app/modules/various/FlyoutMask', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    var c,
        d = '.FlyoutMask',
        e = 0,
        f = '<span class="text_input_flyout_mask--mask-space"> </span>',
        g = '<span class="text_input_flyout_mask--mask-part"> </span>';
    c = function () {
        this.$el = null;
        this.ns = d + e++
    };
    c.prototype = new b;
    c.prototype.init = function (b) {
        this.$el = a(b);
        this.initVariables();
        this.initMask();
        this.bindUIActions();
        return this
    };
    c.prototype.initVariables = function () {
        this.$mask;
        this.ibans;
        this.val;
        this.$panel = this.$el.closest('.payment_panel');
        this.$flyout = this.$panel.find('.payment_panel--flyout');
        this.$flyoutInner = this.$flyout.find('.payment_panel--flyout--inner')
    };
    c.prototype.MaskFilled = function (a) {
        return '<span class="text_input_flyout_mask--mask-part text_input_flyout_mask--mask-filled">' + a + '</span>'
    };
    c.prototype.setMaxLength = function (a) {
        this.$input.attr('maxlength', parseInt(a) || 500)
    };
    c.prototype.setMinLength = function (a) {
        this.$input.attr('minlength', parseInt(a) || 0)
    };
    c.prototype.setMask = function (a) {
        this.$mask.html(a)
    };
    c.prototype.getConfig = function () {
        this.$input = this.$el.find('.text_input_flyout_mask--input');
        var b = this.$input.attr('id');
        this.config = a('#' + b).attr('data-config');
        if (void 0 != this.config && this.config && '' != this.config) try {
            this.config = a.parseJSON(this.config);
            this.ibans = this.config.ibans
        } catch (a) {
            throw new Error('FlyoutMask: Error when parsing config [' + this.config + ']: ' + a.message)
        }
    };
    c.prototype.initMask = function () {
        this.getConfig();
        this.$el.prepend('<div class="text_input_flyout_mask--mask"></div>');
        this.$mask = this.$el.find('.text_input_flyout_mask--mask');
        this.$flyout.css({
            'max-height': this.$flyoutInner.outerHeight() + 'px'
        })
    };
    c.prototype.bindUIActions = function () {
        this.$input.on('change' + d, this.bind(this.checkInput));
        this.$input.on('keyup' + d, this.bind(this.checkInput));
        this.$input.on('keydown' + d, this.bind(this.checkInput));
        this.$input.on('paste' + d, this.bind(this.onPaste))
    };
    c.prototype.onPaste = function () {
        function a(a) {
            a.$input.change()
        }
        setTimeout(a, 10, this)
    };
    c.prototype.formatInput = function (a, b) {
        if (void 0 != this.config && this.config) {
            var c = a.match(/^[a-zA-Z]{2}/),
                d = this.ibans[c[0]],
                e = Math.floor(d / 4);
            if (d % 4 == 0) e--;
            var h = e + d,
                i = '';
            if ('keyup' === b.type) a = a.replace(/[^0-9,a-z,A-Z]/g, '');
            a = a.replace(/(.{4})/g, '$1 ');
            if (a.length >= h) a = a.replace(/( )$/g, '');
            val = a;
            for (var j = a.split(''), k = 0; k < h; k++) if (void 0 != j[k]) i += this.MaskFilled(j[k]);
            else if (4 == k) i += f;
            else if ((k + 1) % 5 == 0) i += f;
            else i += g;
            this.setMaxLength(h);
            this.setMinLength(h);
            if (8 != b.which) this.$input.val(a);
            this.setMask(i)
        }
    };
    c.prototype.checkInput = function (a) {
        this.getConfig();
        var b = this.$input.val();
        if (b.length >= 4) if (b.match(/^[a-zA-Z]{2}[0-9]{2}/)) {
            var c = b.toUpperCase();
            c = c.replace(/ /g, '');
            this.formatInput(c, a)
        } else {
            this.setMask('');
            this.setMaxLength();
            this.setMinLength()
        } else {
            this.setMask('');
            this.setMaxLength();
            this.setMinLength()
        }
    };
    return c
});
define('uxui/app/modules/various/ResponsiveImage', [
    'jquery',
    'uxui/app/modules/BaseModule'
], function (a, b) {
    function c() {
        this.$el = null;
        this.ns = d + e++
    }
    var d = '.ResponsiveImage',
        e = 0;
    c.prototype = new b;
    c.prototype.init = function (b) {
        function d(a) {
            if (g) f.attr('src', a);
            else f.css('background-image', 'url("' + a + '")')
        }
        var e,
            f = this.$el = a(b),
            g = this.$el.is('img'),
            h = this.$el.data('sizes') || '',
            i = c._getMinimumWidth(this.$el);
        try {
            e = c.findBestImage(h, i);
            if (true) d(e);
            else {
                var j = c.findBestImage(h, 1),
                    k = new Image;
                k.onload = function () {
                    d(k.src);
                    if (j != e) {
                        var a = new Image;
                        a.onload = function () {
                            d(a.src)
                        };
                        a.src = e
                    }
                };
                k.src = j
            }
        } catch (a) {
        }
        return this
    };
    c._getMinimumWidth = function (a) {
        var b = a.is('img');
        if (b) return a.parent().width();
        var d = a.data('sizes') || '',
            e = a.outerWidth(),
            f = a.css('background-size');
        if ('cover' !== f && 'auto' !== f) return e;
        var g = a.outerHeight(),
            h = c.parseSizes(d) [0],
            i = Math.max(e / h.width, g / h.height);
        return h.width * i
    };
    c.parseSizes = function (a) {
        for (var b, c = /(\d+)x(\d+):(\S+)/g, d = a || '', e = [
        ]; b = c.exec(d); ) e.push({
            width: parseInt(b[1], 10),
            height: parseInt(b[2], 10),
            src: b[3]
        });
        e.sort(function (a, b) {
            return a.width - b.width
        });
        return e
    };
    var f = {
        returnInfo: false,
        minimalSize: 1,
        optimalSize: 1.5
    };
    c.findBestImage = function (b, d, e) {
        e = a.extend({
        }, f, e);
        if (!b) return false;
        if ('string' === typeof b) b = c.parseSizes(b);
        for (var g = d * e.minimalSize, h = d * e.optimalSize, i = b[0], j = Math.abs(b[0].width - h), k = 1; k < b.length; k++) {
            var l = b[k].width,
                m = Math.abs(l - h);
            if (m < j || i.width < g) {
                i = b[k];
                j = Math.abs(l - h)
            } else break
        }
        return e.returnInfo ? i : i.src
    };
    return c
});
define('uxui/ef1/modules', [
    'uxui/lib/util/contextTrigger',
    'uxui/app/modules/ModuleManager'
], function (a, b) {
    new Date;
    a.add('.js-skiplinks', function () {
        var a = this;
        require(['uxui/app/modules/nav/skipNav'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-site_header.has-submenu', function () {
        var a = this;
        require(['uxui/app/modules/nav/SiteHeaderWithSubmenu'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-languageselect', function () {
        var a = this;
        require(['uxui/app/modules/nav/LanguageSelect'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_slider', function () {
        var a = this;
        require(['uxui/app/modules/content/EfSlider'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_slider2', function () {
        var a = this;
        require(['uxui/app/modules/content/EfSlider2'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-tabs', function () {
        var a = this;
        require(['uxui/app/modules/content/tabs'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-article_video', function () {
        var a = this;
        require(['uxui/app/modules/content/ArticleVideo'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-collapsible', function () {
        var a = this;
        require(['uxui/app/modules/various/Collapsible'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-widget', function () {
        var a = this;
        require(['uxui/app/modules/widget/Widget'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_more_actions', function () {
        var a = this;
        require(['uxui/app/modules/content/EfMoreActions'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-widget_grid', function () {
        var a = this;
        require(['uxui/app/modules/layout/WidgetGrid'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-sticky', function () {
        var a = this;
        require(['uxui/app/modules/layout/sticky'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-dropdown_nav', function () {
        var a = this;
        require(['uxui/app/modules/nav/DropdownNav'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-sticky_footer', function () {
        var a = this;
        require(['uxui/app/modules/nav/StickyFooter'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-site_navigation', function () {
        var a = this;
        require(['uxui/app/modules/nav/SiteNavigation'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-autocomplete', function () {
        var a = this;
        require(['uxui/app/modules/forms/Autocomplete'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-text_input_row_narrow', function () {
        var a = this;
        require(['uxui/app/modules/forms/TextInputRowNarrow'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-input_number_keyboard', function () {
        var a = this;
        require(['uxui/app/modules/forms/InputNumberKeyboard'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_select', function () {
        var a = this;
        require(['uxui/app/modules/forms/EfSelect'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-select_input', function () {
        var a = this;
        require(['uxui/app/modules/forms/SelectInput'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-select_input_konto', function () {
        var a = this;
        require(['uxui/app/modules/forms/SelectInputKonto'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_datepicker', function () {
        var a = this;
        require(['uxui/app/modules/forms/EfDatepicker'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-widget_input_row_extendable', function () {
        var a = this;
        require(['uxui/app/modules/forms/WidgetInputRowExtendable'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-ef_file_input', function () {
        var a = this;
        require(['uxui/app/modules/forms/EfFileInput'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-input_enable_form_element', function () {
        var a = this;
        require(['uxui/app/modules/forms/InputEnableFormElement'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-pop_input', function () {
        var a = this;
        require(['uxui/app/modules/forms/PopInput'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-checked_input_container', function () {
        var a = this;
        require(['uxui/app/modules/forms/CheckedInputContainer'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-toggle_buttons', function () {
        var a = this;
        require(['uxui/app/modules/forms/ToggleButtons'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-text_area_character_counter', function () {
        var a = this;
        require(['uxui/app/modules/forms/TextAreaCharacterCounter'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-tooltip', function () {
        var a = this;
        require(['uxui/app/modules/detail_page/Tooltip'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-countdown', function () {
        var a = this;
        require(['uxui/app/modules/detail_page/Countdown'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-collapsed', function () {
        var a = this;
        require(['uxui/app/modules/content/Collapsed'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-lazy_load_container', function () {
        var a = this;
        require(['uxui/app/modules/content/LazyLoader'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-guided_tour', function () {
        var a = this;
        require(['uxui/app/modules/various/GuidedTour'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-carousel', function () {
        var a = this;
        require(['uxui/app/modules/various/Carousel'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-dynamic_iframe_height', function () {
        var a = this;
        require(['uxui/app/modules/content/DynamiciFrameHeight'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-list_filter', function () {
        var a = this;
        require(['uxui/app/modules/detail_page/ListFilter'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-autofocus', function () {
        var a = this;
        require(['uxui/app/modules/content/Autofocus'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-detail_overlay', function () {
        var a = this;
        require(['uxui/app/modules/content/DetailOverlay'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-scrollslider', function () {
        var a = this;
        require(['uxui/app/modules/various/ScrollSlider'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('.js-text_input_flyout_mask', function () {
        var a = this;
        require(['uxui/app/modules/various/FlyoutMask'], function (c) {
            b.connect(c, a)
        })
    });
    a.add('[data-sizes]', function () {
        var a = this;
        require(['uxui/app/modules/various/ResponsiveImage'], function (c) {
            b.connect(c, a)
        })
    });
    a.validate('body');
    return b
});
define('uxui/app/plugins/closable', [
    'jquery'
], function (a) {
    function b(b) {
        var c = a(b);
        if (false) {
            c.css({
                transform: 'scaleY(1.2) scaleX(1.2)',
                opacity: 0,
                transition: 'all 200ms ease-in'
            });
            setTimeout(function () {
                c.hide()
            }, 200)
        } else c.slideUp('fast', function () {
        })
    }
    a(document).on('click', '.js-closable--close', function (c) {
        b(a(this).parents('.js-closable'))
    });
    return b
});
$(document).on('focus.hiddencommand', '.js-hiddencommand--input', function (a) {
    $(this).parents('.js-hiddencommand').addClass('is-visible')
});
$(document).on('blur.hiddencommand', '.js-hiddencommand--input', function (a) {
    $(this).parents('.js-hiddencommand').removeClass('is-visible')
});
define('uxui/app/plugins/hiddenCommand', function () {
});
define('uxui/app/plugins/detailLoader', [
    'jquery',
    'uxui/lib/util/contextTrigger',
    'uxui/app/util/DOMUtil'
], function (a, b, c) {
    function d(b) {
        h = a('#detaildialog');
        i = a('#overviewpage');
        if (!b) b = {
        };
        if (b.overviewElement) i = a(b.overviewElement);
        if (b.detailElement) h = a(b.detailElement)
    }
    var e,
        f,
        g,
        h = a('#detaildialog'),
        i = a('#overviewpage'),
        j = false;
    a(document).on('pf:detail:open', function (b, e) {
        b.preventDefault();
        d(e);
        h.show();
        var f = h.find('#ef-error-message, #ef-info-message').first();
        if (!f.length) f = h.find('.detail_content--close_button').first();
        if (!f.length) f = h.find('h1, h2, h3').first();
        if (!f.length) f = h;
        c.focus(f);
        a('html, body').scrollTop(0);
        i.css({
            display: 'none',
            visibility: 'hidden',
            height: '0px',
            overflow: 'hidden',
            position: 'absolute',
            top: - 90000,
            left: - 90000,
            width: 60000
        });
        h.css({
            opacity: 0,
            transform: 'scale(0.95)',
            transition: 'none'
        });
        setTimeout(function () {
            h.css({
                opacity: 1,
                transform: 'none',
                transition: 'all 250ms ease-out'
            })
        }, 1);
        j = true
    });
    a(document).on('pf:detail:close', function (b, c) {
        b.preventDefault();
        d(c);
        h.hide();
        i.css({
            display: 'block',
            visibility: '',
            height: '',
            overflow: '',
            position: '',
            top: '',
            left: '',
            width: ''
        });
        if (e) e.focus();
        a('html, body').scrollTop(f);
        a(window).trigger('resize');
        j = false
    });
    a(document).on('pf:detail:loadstart', function (b) {
        var d = a(b.target);
        if (!j) {
            e = d;
            f = a(document).scrollTop()
        }
        var h = a('.js-page_loader');
        h.show().css({
            opacity: 0
        });
        c.focus(h);
        clearTimeout(g);
        g = setTimeout(function () {
            h.stop().animate({
                opacity: 1
            }, 500)
        }, 250)
    });
    a(document).on('pf:detail:loadend', function (b) {
        clearTimeout(g);
        a('.js-page_loader').stop().fadeOut('fast')
    });
    return true
});
define('uxui/app/plugins/link', [
    'jquery'
], function (a) {
    function b(b) {
        var c = a(b.currentTarget),
            d = c.data('href') || c.attr('href');
        if (d) document.location = d
    }
    a(document).on('click', '.js-link', b);
    return b
});
define('uxui/app/plugins/isScreenreader', [
    'jquery'
], function (a) {
    function b(b) {
        var c = a(b.currentTarget);
        a('body, html').scrollTop(c.offset().top - 50);
        c.addClass('had-focus')
    }
    a(document).on('focusin', '.is-screenreader', b)
});
define('uxui/app/plugins/anchorHighlight', [
    'jquery'
], function (a) {
    a(document).on('click', 'a[href^="#"]', function (b) {
        setTimeout(function () {
            if (!b.isDefaultPrevented()) {
                var c,
                    d,
                    e;
                try {
                    c = a(b.currentTarget);
                    d = c.attr('href');
                    e = a(d)
                } catch (a) {
                    return
                }
                if (e.length) {
                    var f = a('<div class="anchor_highlight"></div>');
                    a('body').append(f);
                    var g = e.offset(),
                        h = e.outerWidth(),
                        i = e.outerHeight();
                    f.css({
                        position: 'absolute',
                        zIndex: 100000,
                        pointerEvents: 'none',
                        top: g.top,
                        left: g.left,
                        width: h,
                        height: i
                    });
                    f.hide().fadeIn(200, function () {
                        f.fadeOut(1000, function () {
                            f.remove()
                        })
                    })
                }
            }
        }, 100)
    });
    return true
});
!function () {
    function a(a) {
        this.el = a;
        for (var b = a.className.replace(/^\s+|\s+$/g, '').split(/\s+/), c = 0; c < b.length; c++) d.call(this, b[c])
    }
    function b(a, b, c) {
        if (Object.defineProperty) Object.defineProperty(a, b, {
            get: c
        });
        else a.__defineGetter__(b, c)
    }
    if (!('undefined' === typeof window.Element || 'classList' in document.documentElement)) {
        var c = Array.prototype,
            d = c.push,
            e = c.splice,
            f = c.join;
        a.prototype = {
            add: function (a) {
                if (!this.contains(a)) {
                    d.call(this, a);
                    this.el.className = this.toString()
                }
            },
            contains: function (a) {
                return this.el.className.indexOf(a) != - 1
            },
            item: function (a) {
                return this[a] || null
            },
            remove: function (a) {
                if (this.contains(a)) {
                    for (var b = 0; b < this.length && this[b] != a; b++);
                    e.call(this, b, 1);
                    this.el.className = this.toString()
                }
            },
            toString: function () {
                return f.call(this, ' ')
            },
            toggle: function (a) {
                if (!this.contains(a)) this.add(a);
                else this.remove(a);
                return this.contains(a)
            }
        };
        window.DOMTokenList = a;
        b(Element.prototype, 'classList', function () {
            return new a(this)
        })
    }
}();
define('uxui/vendor/shim/classList', function () {
});
define('uxui/app/plugins/flyingFocus', [
    'jquery',
    'uxui/vendor/shim/classList'
], function (a) {
    function b(a) {
        var b = a.getBoundingClientRect(),
            c = document.documentElement,
            d = document.defaultView,
            e = document.body,
            f = c.clientTop || e.clientTop || 0,
            g = c.clientLeft || e.clientLeft || 0,
            h = d.pageYOffset || c.scrollTop || e.scrollTop,
            i = d.pageXOffset || c.scrollLeft || e.scrollLeft,
            j = b.top + h - f,
            k = b.left + i - g;
        return {
            top: j,
            left: k,
            width: b.width,
            height: b.height,
            bottom: j + b.height,
            right: k + b.width
        }
    }
    function c(c) {
        var d = a(c),
            e = d.attr('id'),
            f = a('label[for="' + e + '"]');
        d = d.add(f);
        var g = {
            top: 10000,
            left: 10000,
            bottom: - 10000,
            right: - 10000
        };
        d.each(function () {
            var a = b(this);
            g.top = Math.min(g.top, a.top);
            g.left = Math.min(g.left, a.left);
            g.bottom = Math.max(g.bottom, a.bottom);
            g.right = Math.max(g.right, a.right)
        });
        g.width = g.right - g.left;
        g.height = g.bottom - g.top;
        return g
    }
    function d(a, b, c) {
        if (a.addEventListener) a.addEventListener(b, c, false);
        else a.attachEvent('on' + b, c)
    }
    function e() {
        if (!q) {
            clearTimeout(o);
            clearTimeout(t);
            t = setTimeout(f, 10)
        }
    }
    function f() {
        m.classList.remove('flying-focus_visible');
        q = true;
        clearTimeout(u)
    }
    function g() {
        clearTimeout(t);
        clearTimeout(u);
        var a = q ? 0 : p / 1000;
        m.style.transitionDuration = m.style.WebkitTransitionDuration = a + 's';
        v = 0;
        u = setTimeout(h, 100);
        if (q) {
            m.classList.add('flying-focus_visible');
            q = false
        }
    }
    function h() {
        var a = i(n);
        if (a.top != s.top || a.left != s.left || a.width != s.width || a.height != s.height) {
            s = a;
            v = 0
        } else v++;
        if (v < 3) u = setTimeout(h, 100);
        else u = setTimeout(h, 1000)
    }
    function i(a) {
        if (!q) {
            var b = c(a);
            if (b.top != s.top || b.left != s.left || b.width != s.width || b.height != s.height) {
                m.style.left = b.left + 'px';
                m.style.top = b.top + 'px';
                m.style.width = b.width + 'px';
                m.style.height = b.height + 'px'
            }
            return b
        }
    }
    var j = '.flying-focus',
        k = true,
        l = false;
    if (!document.getElementById('flying-focus')) if (document.documentElement.addEventListener) {
        var m = document.createElement('flying-focus');
        m.id = 'flying-focus';
        d(m, 'mousedown', function (a) {
            a.preventDefault();
            document.activeElement.click()
        });
        d(m, 'touchstart', function (a) {
            a.preventDefault();
            document.activeElement.click()
        });
        a(function () {
            document.body.appendChild(m)
        });
        var n,
            o,
            p = 150,
            q = (!!navigator.userAgent.match(/gecko/i) && !navigator.userAgent.match(/webkit/i), true),
            r = 0,
            s = {
            };
        d(document.documentElement, 'keydown', function (a) {
            var b = a.which;
            if (9 === b || b > 36 && b < 41) r = new Date
        }, true);
        a(document).on('focusin' + j, function (a) {
            clearTimeout(t);
            o = setTimeout(function () {
                if (k) {
                    var b = a.target;
                    if ('flying-focus' !== b.id) {
                        var c = new Date;
                        if (!(q && c - r > 100)) {
                            g();
                            s = i(b);
                            n = b
                        }
                    }
                }
            }, 1)
        });
        a(document).on('focusout' + j, function (a) {
            e()
        });
        if (l) d(document.documentElement, 'mousedown touchstart', function (a) {
            if (a.detail) {
                e();
                k = false
            }
        });
        else {
            d(document.documentElement, 'mousedown', function (a) {
                if (a.detail) f()
            });
            d(document.documentElement, 'touchstart', function (a) {
                if (a.detail) f()
            })
        }
        d(window, 'resize', function () {
            i(n)
        });
        var t,
            u,
            v = 0;
        return {
        }
    }
});
define('uxui/ef1/plugins', [
    'uxui/app/plugins/closable',
    'uxui/app/plugins/hiddenCommand',
    'uxui/app/plugins/detailLoader',
    'uxui/app/plugins/link',
    'uxui/app/plugins/isScreenreader',
    'uxui/app/plugins/anchorHighlight',
    'uxui/app/plugins/flyingFocus'
], function (a) {
    return true
});
define('uxui/app/api', [
    'uxui/lib/util/contextTrigger'
], function (a) {
    function b(a) {
        for (var b = window, c = a instanceof Array ? a : a.split('.'), d = 0; d < c.length; d++) {
            b = b[c[d]];
            if (!b) return b
        }
        return b
    }
    function c(a) {
        for (var b = window, c = a instanceof Array ? a : a.split('.'), d = 0; d < c.length; d++) b = b[c[d]] = b[c[d]] || {
        };
        return b
    }
    function d(a, b) {
        var d = c(a);
        for (var e in b) d[e] = b[e]
    }
    function e(a, b) {
        var d = a.split('.'),
            e = d.pop(),
            f = c(d.join('.'));
        f[e] = b
    }
    e('pf.ui.getCollapsible', function (a) {
        var b = $(a).data('moduleInstance');
        return b
    });
    return {
        addCollection: function (a, b) {
            d(a, b)
        },
        addFunction: function (a, b) {
            e(a, b)
        },
        get: function (a) {
            b(a)
        },
        fn: function (a) {
            var c = b(a);
            if (!c);
            return c || function () {
            }
        }
    }
});
define('uxui/ef1', [
    'uxui/app/Config'
], function (a) {
    function b() {
        function a() {
            require(['jquery',
                'uxui/ef1/modules',
                'uxui/ef1/plugins',
                'uxui/app/api'], function (a) {
                var b = a(document);
                b.trigger('domloaded', b)
            })
        }
        var b = [
        ];
        require(b, a)
    }
    return {
        init: b
    }
});
require(['uxui/ef1'], function (a) {
    a.init()
});
define('main', function () {
});
